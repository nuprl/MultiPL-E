language: php
name: HumanEval_72_will_it_fly
results:
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return False;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return False;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return True;\n}\n\n$q = [3, 2, 3];\n$w = 5;\necho will_it_fly($q, $w) . PHP_EOL;\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    '
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    $mid = floor($len / 2);\n    $i = 0;\n    while\
    \ ($i < $mid) {\n        $sum += $q[$i] + $q[$len - 1 - $i];\n        if ($sum\
    \ > $w) {\n            return false;\n        }\n        $i++;\n    }\n    if\
    \ ($len % 2 == 1) {\n        $sum += $q[$mid];\n    }\n    return $sum <= $w;\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkuxce3ma.php:35\n\
    Stack trace:\n#0 /tmp/tmpkuxce3ma.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpkuxce3ma.php\
    \ on line 35\n"
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    if ($sum <= $w) {\n        $rev = array_reverse($q);\n\
    \        if ($q == $rev) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\n$q = [1,\
    \ 2];\n$w = 5;\necho will_it_fly($q, $w);\necho \"\\n\";\n\n$q = [3, 2, 3];\n\
    $w = 5;\necho will_it_fly($q, $w);\necho \"\\n\";\n\n$q = [3, 2, 3];\n$w = 6;\n\
    echo will_it_fly($q, $w);\necho \"\\n\";\n\n$q = [3];\n$w = 3;\necho will_it_fly($q,\
    \ $w);\necho \"\\n\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '



    1

    '
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    foreach ($q as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ <= $w) {\n        $rev = array_reverse($q);\n        if ($q == $rev) {\n   \
    \         return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $mid\
    \ = floor($len / 2);\n    $left = 0;\n    $right = $len - 1;\n    while ($left\
    \ < $mid) {\n        if ($q[$left] != $q[$right]) {\n            return false;\n\
    \        }\n        $left++;\n        $right--;\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\n$q = [3, 2,\
    \ 3];\n$w = 5;\necho will_it_fly($q, $w);\nfunction candidate(...$args) {\n  \
    \  return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    foreach ($q as $value) {\n        $sum += $value;\n    }\n    $rev\
    \ = array_reverse($q);\n    if ($sum <= $w && $q == $rev) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    $rev = array_reverse($q);\n    if ($sum <= $w && $q ==\
    \ $rev) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    if ($sum <= $w) {\n        $reverse = array_reverse($q);\n\
    \        if ($q == $reverse) {\n            return true;\n        }\n    }\n \
    \   return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    $isBalanced = $q == array_reverse($q);\n    return $sum\
    \ <= $w && $isBalanced;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    foreach ($q as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ <= $w) {\n        $arr = array_reverse($q);\n        if ($arr == $q) {\n   \
    \         return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    if\
    \ ($len == 1) {\n        return true;\n    }\n    $mid = floor($len / 2);\n  \
    \  $left = array_slice($q, 0, $mid);\n    $right = array_slice($q, $mid + 1);\n\
    \    $right = array_reverse($right);\n    if ($left == $right) {\n        return\
    \ true;\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    if ($sum <= $w) {\n        $q = implode($q);\n       \
    \ $q = str_split($q);\n        $q = array_reverse($q);\n        $q = implode($q);\n\
    \        $q = str_split($q);\n        if ($q == $q) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2u24yez0.php:32\n\
    Stack trace:\n#0 /tmp/tmp2u24yez0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp2u24yez0.php\
    \ on line 32\n"
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    $palindrome = array_reverse($q);\n    if ($sum <= $w &&\
    \ $q == $palindrome) {\n        return true;\n    }\n    return false;\n}\n\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    $rev = array_reverse($q);\n    if ($sum <= $w && $q ==\
    \ $rev) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    if ($sum <= $w && $q == array_reverse($q)) {\n       \
    \ return true;\n    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $left\
    \ = 0;\n    $right = $len - 1;\n    while ($left < $right) {\n        if ($q[$left]\
    \ != $q[$right]) {\n            return false;\n        }\n        $left++;\n \
    \       $right--;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n  $sum\
    \ = 0;\n  foreach ($q as $value) {\n    $sum += $value;\n  }\n  if ($sum <= $w)\
    \ {\n    $q = implode($q);\n    $q = str_split($q);\n    $q = array_reverse($q);\n\
    \    $q = implode($q);\n    if ($q == implode($q)) {\n      return true;\n   \
    \ }\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: implode(): Argument must be an array in /tmp/tmp32732bji.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp32732bji.php:33\n\
    Stack trace:\n#0 /tmp/tmp32732bji.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp32732bji.php\
    \ on line 33\n"
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    $i = 0;\n    $j = $len - 1;\n    while ($i\
    \ < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n      \
    \  }\n        $i++;\n        $j--;\n    }\n    foreach ($q as $v) {\n        $sum\
    \ += $v;\n    }\n    return $sum <= $w;\n}\n\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    for ($i = 0; $i < count($q); $i++) {\n        $sum += $q[$i];\n  \
    \  }\n    if ($sum <= $w) {\n        $reverse = array_reverse($q);\n        if\
    \ ($q == $reverse) {\n            return true;\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\necho will_it_fly([1,\
    \ 2], 5) . \"\\n\";\necho will_it_fly([3, 2, 3], 5) . \"\\n\";\necho will_it_fly([3,\
    \ 2, 3], 6) . \"\\n\";\necho will_it_fly([3], 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '



    1

    '
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    if(is_balanced($q)\
    \ && array_sum($q) <= $w) {\n        return true;\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_balanced()\
    \ in /tmp/tmpw4e2yi8b.php:12\nStack trace:\n#0 /tmp/tmpw4e2yi8b.php(19): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmpw4e2yi8b.php(23): candidate(Array, 9)\n#2 /tmp/tmpw4e2yi8b.php(31):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpw4e2yi8b.php on line 12\n"
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    foreach ($q as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ <= $w) {\n        $q = implode($q);\n        $q = str_split($q);\n        $q\
    \ = array_reverse($q);\n        $q = implode($q);\n        $q = str_split($q);\n\
    \        if ($q == $q) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5p69ug4d.php:35\n\
    Stack trace:\n#0 /tmp/tmp5p69ug4d.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5p69ug4d.php\
    \ on line 35\n"
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return False;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return False;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return True;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    $reverse = array_reverse($q);\n    if($sum <= $w && $q\
    \ == $reverse){\n        return true;\n    }\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    foreach ($q as $value) {\n        $sum += $value;\n    }\n    $reverse\
    \ = array_reverse($q);\n    if ($sum <= $w && $q == $reverse) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\n$q = [1, 2];\n\
    $w = 5;\necho will_it_fly($q, $w);\necho \"\\n\";\n$q = [3, 2, 3];\n$w = 5;\n\
    echo will_it_fly($q, $w);\necho \"\\n\";\n$q = [3, 2, 3];\n$w = 6;\necho will_it_fly($q,\
    \ $w);\necho \"\\n\";\n$q = [3];\n$w = 3;\necho will_it_fly($q, $w);\necho \"\\\
    n\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '



    1

    '
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nprint_r(will_it_fly([1, 2], 5));\nprint_r(will_it_fly([3,\
    \ 2, 3], 5));\nprint_r(will_it_fly([3, 2, 3], 8));\nprint_r(will_it_fly([3], 5));\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    $reverse = array_reverse($q);\n    $reverse = implode('',\
    \ $reverse);\n    $q = implode('', $q);\n    if ($sum <= $w && $q == $reverse)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    if ($sum <= $w && $q == array_reverse($q)) {\n       \
    \ return true;\n    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $i = 0;\n    $j = count($q) - 1;\n    while ($i < $j) {\n        if\
    \ ($q[$i] != $q[$j]) {\n            return false;\n        }\n        $i++;\n\
    \        $j--;\n    }\n    foreach ($q as $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum <= $w) {\n        return true;\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    foreach ($q as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ > $w) {\n        return false;\n    }\n    $q_reversed = array_reverse($q);\n\
    \    if ($q == $q_reversed) {\n        return true;\n    }\n    return false;\n\
    }\n\n$q = [1, 2];\n$w = 5;\necho will_it_fly($q, $w);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $left\
    \ = 0;\n    $right = $len - 1;\n    while ($left < $right) {\n        if ($q[$left]\
    \ != $q[$right]) {\n            return false;\n        }\n        $left++;\n \
    \       $right--;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    foreach ($q as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ <= $w) {\n        $q = implode($q);\n        $q = str_split($q);\n        $q\
    \ = array_reverse($q);\n        $q = implode($q);\n        $q = str_split($q);\n\
    \        if ($q == $q) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5p69ug4d.php:35\n\
    Stack trace:\n#0 /tmp/tmp5p69ug4d.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5p69ug4d.php\
    \ on line 35\n"
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n  $sum\
    \ = 0;\n  $palindrome = true;\n  $length = count($q);\n  for ($i = 0; $i < $length;\
    \ $i++) {\n    $sum += $q[$i];\n    if ($q[$i] != $q[$length - $i - 1]) {\n  \
    \    $palindrome = false;\n    }\n  }\n  return $sum <= $w && $palindrome;\n}\n\
    \nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    $half = floor($len / 2);\n    for ($i = 0;\
    \ $i < $half; $i++) {\n        $sum += $q[$i];\n        if ($sum > $w) {\n   \
    \         return false;\n        }\n    }\n    if ($len % 2 == 1) {\n        $sum\
    \ += $q[$half];\n        if ($sum > $w) {\n            return false;\n       \
    \ }\n    }\n    for ($i = $half; $i < $len; $i++) {\n        $sum += $q[$i];\n\
    \        if ($sum > $w) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_n5henb5.php:41\n\
    Stack trace:\n#0 /tmp/tmp_n5henb5.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp_n5henb5.php\
    \ on line 41\n"
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    for ($i = 0; $i < count($q); $i++) {\n        $sum += $q[$i];\n  \
    \  }\n    if ($sum <= $w) {\n        $is_palindrome = true;\n        for ($i =\
    \ 0; $i < count($q); $i++) {\n            if ($q[$i] != $q[count($q) - 1 - $i])\
    \ {\n                $is_palindrome = false;\n            }\n        }\n     \
    \   if ($is_palindrome) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    $rev = array_reverse($q);\n    if ($sum <= $w && $q ==\
    \ $rev) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    } else {\n\
    \        $mid = $len / 2;\n        for ($i = 0; $i < $mid; $i++) {\n         \
    \   if ($q[$i] != $q[$len - $i - 1]) {\n                return false;\n      \
    \      }\n        }\n        return true;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $palindrome\
    \ = true;\n    for ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len\
    \ - $i - 1]) {\n            $palindrome = false;\n            break;\n       \
    \ }\n    }\n    return $palindrome;\n}\n\nfunction candidate(...$args) {\n   \
    \ return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n  $sum\
    \ = 0;\n  $palindrome = true;\n  for ($i = 0; $i < count($q); $i++) {\n    $sum\
    \ += $q[$i];\n    if ($q[$i] != $q[count($q) - 1 - $i]) {\n      $palindrome =\
    \ false;\n    }\n  }\n  if ($sum <= $w && $palindrome) {\n    return true;\n \
    \ } else {\n    return false;\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    foreach ($q as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ <= $w) {\n        $q = implode($q);\n        $q = str_split($q);\n        $q_reverse\
    \ = array_reverse($q);\n        if ($q == $q_reverse) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $left\
    \ = 0;\n    $right = $len - 1;\n    while ($left < $right) {\n        if ($q[$left]\
    \ != $q[$right]) {\n            return false;\n        }\n        $left++;\n \
    \       $right--;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    for ($i = 0; $i < count($q); $i++) {\n        $sum += $q[$i];\n  \
    \  }\n    if ($sum <= $w) {\n        $palindrome = true;\n        for ($i = 0;\
    \ $i < count($q) / 2; $i++) {\n            if ($q[$i] != $q[count($q) - 1 - $i])\
    \ {\n                $palindrome = false;\n            }\n        }\n        if\
    \ ($palindrome) {\n            return true;\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    for ($i = 0; $i < count($q); $i++) {\n        $sum += $q[$i];\n  \
    \  }\n    if ($sum > $w) {\n        return false;\n    }\n    $q = implode(\"\"\
    , $q);\n    if ($q == strrev($q)) {\n        return true;\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\n$q = [1, 2, 3, 2, 1];\n$w = 5;\necho will_it_fly($q, $w);\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $q_length = count($q);\n    for ($i = 0; $i < $q_length; $i++) {\n\
    \        $sum += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n\
    \    }\n    $q_reverse = array_reverse($q);\n    if ($q == $q_reverse) {\n   \
    \     return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    if ($sum > $w) {\n        return false;\n    }\n    $q\
    \ = array_reverse($q);\n    if ($q == $q) {\n        return true;\n    }\n   \
    \ return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpunmbwslo.php:29\n\
    Stack trace:\n#0 /tmp/tmpunmbwslo.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpunmbwslo.php\
    \ on line 29\n"
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return False;\n    }\n    $left\
    \ = 0;\n    $right = $len - 1;\n    while ($left < $right) {\n        if ($q[$left]\
    \ != $q[$right]) {\n            return False;\n        }\n        $left++;\n \
    \       $right--;\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    $reverse = array_reverse($q);\n    if ($sum <= $w && $q\
    \ == $reverse) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $i = 0;\n    $j = count($q) - 1;\n    while ($i < $j) {\n        if\
    \ ($q[$i] != $q[$j]) {\n            return false;\n        }\n        $i++;\n\
    \        $j--;\n    }\n    foreach ($q as $item) {\n        $sum += $item;\n \
    \   }\n    return $sum <= $w;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $mid\
    \ = floor($len / 2);\n    for ($i = 0; $i < $mid; $i++) {\n        if ($q[$i]\
    \ != $q[$len - $i - 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $mid\
    \ = floor($len / 2);\n    for ($i = 0; $i < $mid; $i++) {\n        if ($q[$i]\
    \ != $q[$len - $i - 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    foreach ($q as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ <= $w) {\n        $palindrome = true;\n        $len = count($q);\n        for\
    \ ($i = 0; $i < $len / 2; $i++) {\n            if ($q[$i] != $q[$len - $i - 1])\
    \ {\n                $palindrome = false;\n                break;\n          \
    \  }\n        }\n        if ($palindrome) {\n            return true;\n      \
    \  }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    $half = floor($len / 2);\n    for ($i = 0;\
    \ $i < $half; $i++) {\n        $sum += $q[$i];\n        if ($sum > $w) {\n   \
    \         return false;\n        }\n    }\n    if ($len % 2 == 1) {\n        $sum\
    \ += $q[$half];\n        if ($sum > $w) {\n            return false;\n       \
    \ }\n    }\n    for ($i = $half + 1; $i < $len; $i++) {\n        $sum += $q[$i];\n\
    \        if ($sum > $w) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxucbotmt.php:42\n\
    Stack trace:\n#0 /tmp/tmpxucbotmt.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpxucbotmt.php\
    \ on line 42\n"
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $i = 0;\n    $j = count($q) - 1;\n    while ($i < $j) {\n        if\
    \ ($q[$i] != $q[$j]) {\n            return false;\n        }\n        $i++;\n\
    \        $j--;\n    }\n    foreach ($q as $item) {\n        $sum += $item;\n \
    \   }\n    return $sum <= $w;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $left\
    \ = 0;\n    $right = $len - 1;\n    while ($left < $right) {\n        if ($q[$left]\
    \ != $q[$right]) {\n            return false;\n        }\n        $left++;\n \
    \       $right--;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $is_palindrome = true;\n    $len = count($q);\n    for ($i = 0; $i\
    \ < $len; $i++) {\n        $sum += $q[$i];\n        if ($q[$i] != $q[$len - $i\
    \ - 1]) {\n            $is_palindrome = false;\n        }\n    }\n    return $sum\
    \ <= $w && $is_palindrome;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    for ($i = 0; $i < count($q); $i++) {\n        $sum += $q[$i];\n  \
    \  }\n    if ($sum > $w) {\n        return false;\n    }\n    $palindrome = true;\n\
    \    for ($i = 0; $i < count($q); $i++) {\n        if ($q[$i] != $q[count($q)\
    \ - $i - 1]) {\n            $palindrome = false;\n        }\n    }\n    if ($palindrome)\
    \ {\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $half = count($q) / 2;\n    $is_palindrome = true;\n    for ($i =\
    \ 0; $i < $half; $i++) {\n        $sum += $q[$i];\n        if ($q[$i] != $q[count($q)\
    \ - 1 - $i]) {\n            $is_palindrome = false;\n        }\n    }\n    return\
    \ $sum <= $w && $is_palindrome;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $length = count($q);\n    for ($i = 0; $i < $length; $i++) {\n   \
    \     $sum += $q[$i];\n    }\n    if ($sum <= $w) {\n        for ($i = 0; $i <\
    \ $length; $i++) {\n            if ($q[$i] != $q[$length - $i - 1]) {\n      \
    \          return false;\n            }\n        }\n        return true;\n   \
    \ }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $isPalindrome = true;\n    $length = count($q);\n    for ($i = 0;\
    \ $i < $length; $i++) {\n        $sum += $q[$i];\n        if ($q[$i] != $q[$length\
    \ - $i - 1]) {\n            $isPalindrome = false;\n        }\n    }\n    return\
    \ $sum <= $w && $isPalindrome;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    $q = implode($q);\n    $q = str_split($q);\n    $q = array_reverse($q);\n\
    \    $q = implode($q);\n    if ($sum <= $w && $q == implode($q)) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: implode(): Argument must be an array in /tmp/tmp9m9k_uda.php\
    \ on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9m9k_uda.php:29\n\
    Stack trace:\n#0 /tmp/tmp9m9k_uda.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9m9k_uda.php\
    \ on line 29\n"
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    if ($sum <= $w) {\n        $q = implode($q);\n       \
    \ $q = str_split($q);\n        $q = array_reverse($q);\n        $q = implode($q);\n\
    \        $q = str_split($q);\n        if ($q == $q) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2u24yez0.php:32\n\
    Stack trace:\n#0 /tmp/tmp2u24yez0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp2u24yez0.php\
    \ on line 32\n"
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $i = 0;\n    $j = count($q) - 1;\n    while ($i < $j) {\n        if\
    \ ($q[$i] != $q[$j]) {\n            return false;\n        }\n        $i++;\n\
    \        $j--;\n    }\n    foreach ($q as $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum <= $w) {\n        return true;\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $left\
    \ = 0;\n    $right = $len - 1;\n    while ($left < $right) {\n        if ($q[$left]\
    \ != $q[$right]) {\n            return false;\n        }\n        $left++;\n \
    \       $right--;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $left\
    \ = 0;\n    $right = $len - 1;\n    while ($left < $right) {\n        if ($q[$left]\
    \ != $q[$right]) {\n            return false;\n        }\n        $left++;\n \
    \       $right--;\n    }\n    return true;\n}\n\n$q = [1, 2, 3, 2, 1];\n$w = 5;\n\
    echo will_it_fly($q, $w);\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    if ($sum <= $w && $q == array_reverse($q)) {\n       \
    \ return true;\n    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $mid\
    \ = floor($len / 2);\n    for ($i = 0; $i < $mid; $i++) {\n        if ($q[$i]\
    \ != $q[$len - $i - 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $half\
    \ = floor($len / 2);\n    for ($i = 0; $i < $half; $i++) {\n        if ($q[$i]\
    \ != $q[$len - $i - 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    $half = floor($len / 2);\n    for ($i = 0;\
    \ $i < $half; $i++) {\n        $sum += $q[$i];\n        if ($sum > $w) {\n   \
    \         return false;\n        }\n    }\n    if ($len % 2 == 1) {\n        $sum\
    \ += $q[$half];\n        if ($sum > $w) {\n            return false;\n       \
    \ }\n    }\n    for ($i = $half + 1; $i < $len; $i++) {\n        $sum += $q[$i];\n\
    \        if ($sum > $w) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxucbotmt.php:42\n\
    Stack trace:\n#0 /tmp/tmpxucbotmt.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpxucbotmt.php\
    \ on line 42\n"
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    if ($sum <= $w && $q == array_reverse($q)) {\n       \
    \ return true;\n    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $i = 0;\n    $j = count($q) - 1;\n    while ($i < $j) {\n        if\
    \ ($q[$i] != $q[$j]) {\n            return false;\n        }\n        $i++;\n\
    \        $j--;\n    }\n    foreach ($q as $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum <= $w) {\n        return true;\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $left\
    \ = 0;\n    $right = $len - 1;\n    while ($left < $right) {\n        if ($q[$left]\
    \ != $q[$right]) {\n            return false;\n        }\n        $left++;\n \
    \       $right--;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $mid\
    \ = floor($len / 2);\n    for ($i = 0; $i < $mid; $i++) {\n        if ($q[$i]\
    \ != $q[$len - $i - 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\n$q = [1, 2];\n\
    $w = 5;\necho will_it_fly($q, $w);\necho \"\\n\";\n\n$q = [3, 2, 3];\n$w = 5;\n\
    echo will_it_fly($q, $w);\necho \"\\n\";\n\n$q = [3, 2, 3];\n$w = 6;\necho will_it_fly($q,\
    \ $w);\necho \"\\n\";\n\n$q = [3];\n$w = 3;\necho will_it_fly($q, $w);\necho \"\
    \\n\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '



    1

    '
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $left\
    \ = 0;\n    $right = $len - 1;\n    while ($left < $right) {\n        if ($q[$left]\
    \ != $q[$right]) {\n            return false;\n        }\n        $left++;\n \
    \       $right--;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    foreach ($q as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ > $w) {\n        return false;\n    }\n    $q = array_reverse($q);\n    if ($q\
    \ == $q) {\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkt238w85.php:32\n\
    Stack trace:\n#0 /tmp/tmpkt238w85.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkt238w85.php\
    \ on line 32\n"
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n\t$sum\
    \ = 0;\n\tforeach ($q as $value) {\n\t\t$sum += $value;\n\t}\n\tif ($sum <= $w)\
    \ {\n\t\tif ($q == array_reverse($q)) {\n\t\t\treturn True;\n\t\t}\n\t}\n\treturn\
    \ False;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    foreach ($q as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ > $w) {\n        return false;\n    }\n    $q_reverse = array_reverse($q);\n\
    \    if ($q == $q_reverse) {\n        return true;\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    if ($sum > $w) {\n        return false;\n    }\n    $q\
    \ = array_reverse($q);\n    if ($q == $q) {\n        return true;\n    }\n   \
    \ return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpunmbwslo.php:29\n\
    Stack trace:\n#0 /tmp/tmpunmbwslo.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpunmbwslo.php\
    \ on line 29\n"
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    $i = 0;\n    $j = $len - 1;\n    while ($i\
    \ < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n      \
    \  }\n        $i++;\n        $j--;\n    }\n    foreach ($q as $value) {\n    \
    \    $sum += $value;\n    }\n    if ($sum <= $w) {\n        return true;\n   \
    \ }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $palindrome = true;\n    for ($i = 0; $i < count($q); $i++) {\n  \
    \      $sum += $q[$i];\n        if ($q[$i] != $q[count($q) - 1 - $i]) {\n    \
    \        $palindrome = false;\n        }\n    }\n    if ($sum <= $w && $palindrome)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    if($sum <= $w && $q == array_reverse($q)){\n        return\
    \ true;\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $q = array_reverse($q);\n    foreach ($q as $value) {\n        $sum\
    \ += $value;\n        if ($sum > $w) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj5vhzsq6.php:29\n\
    Stack trace:\n#0 /tmp/tmpj5vhzsq6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpj5vhzsq6.php\
    \ on line 29\n"
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n\t$sum\
    \ = 0;\n\t$len = count($q);\n\t$i = 0;\n\twhile ($i < $len) {\n\t\t$sum += $q[$i];\n\
    \t\t$i++;\n\t}\n\tif ($sum <= $w) {\n\t\t$i = 0;\n\t\t$j = $len - 1;\n\t\twhile\
    \ ($i < $j) {\n\t\t\tif ($q[$i] != $q[$j]) {\n\t\t\t\treturn false;\n\t\t\t}\n\
    \t\t\t$i++;\n\t\t\t$j--;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n  $sum\
    \ = 0;\n  $len = count($q);\n  for ($i = 0; $i < $len; $i++) {\n    $sum += $q[$i];\n\
    \  }\n  if ($sum > $w) {\n    return false;\n  }\n  $mid = floor($len / 2);\n\
    \  for ($i = 0; $i < $mid; $i++) {\n    if ($q[$i] != $q[$len - $i - 1]) {\n \
    \     return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $mid\
    \ = floor($len / 2);\n    for ($i = 0; $i < $mid; $i++) {\n        if ($q[$i]\
    \ != $q[$len - $i - 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $half\
    \ = floor($len / 2);\n    for ($i = 0; $i < $half; $i++) {\n        if ($q[$i]\
    \ != $q[$len - $i - 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    $half = floor($len / 2);\n    for ($i = 0;\
    \ $i < $half; $i++) {\n        $sum += $q[$i];\n        if ($sum > $w) {\n   \
    \         return false;\n        }\n    }\n    if ($len % 2 == 1) {\n        $sum\
    \ += $q[$half];\n        if ($sum > $w) {\n            return false;\n       \
    \ }\n    }\n    for ($i = $half + 1; $i < $len; $i++) {\n        $sum += $q[$i];\n\
    \        if ($sum > $w) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxucbotmt.php:42\n\
    Stack trace:\n#0 /tmp/tmpxucbotmt.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpxucbotmt.php\
    \ on line 42\n"
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $left\
    \ = 0;\n    $right = $len - 1;\n    while ($left < $right) {\n        if ($q[$left]\
    \ != $q[$right]) {\n            return false;\n        }\n        $left++;\n \
    \       $right--;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $i = 0;\n    $j = count($q) - 1;\n    while ($i < $j) {\n        if\
    \ ($q[$i] != $q[$j]) {\n            return false;\n        }\n        $i++;\n\
    \        $j--;\n    }\n    foreach ($q as $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum <= $w) {\n        return true;\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n  $sum\
    \ = 0;\n  $len = count($q);\n  $mid = floor($len/2);\n  $is_palindrome = true;\n\
    \  for ($i = 0; $i < $mid; $i++) {\n    $sum += $q[$i];\n    if ($q[$i] != $q[$len\
    \ - $i - 1]) {\n      $is_palindrome = false;\n    }\n  }\n  if ($len % 2 == 1)\
    \ {\n    $sum += $q[$mid];\n  }\n  return $sum <= $w && $is_palindrome;\n}\n\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $half\
    \ = floor($len / 2);\n    for ($i = 0; $i < $half; $i++) {\n        if ($q[$i]\
    \ != $q[$len - $i - 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    foreach ($q as $item) {\n        $sum += $item;\n    }\n    if ($sum\
    \ > $w) {\n        return false;\n    }\n    $q_reverse = array_reverse($q);\n\
    \    if ($q == $q_reverse) {\n        return true;\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    if ($sum <= $w) {\n        $q = implode($q);\n       \
    \ $q = str_split($q);\n        $q = array_reverse($q);\n        $q = implode($q);\n\
    \        $q = str_split($q);\n        $q = implode($q);\n        if ($q == implode($q))\
    \ {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: implode(): Argument must be an array in /tmp/tmpbj3pw5f_.php\
    \ on line 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbj3pw5f_.php:32\n\
    Stack trace:\n#0 /tmp/tmpbj3pw5f_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpbj3pw5f_.php\
    \ on line 32\n"
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    if ($sum <= $w && $q == array_reverse($q)) {\n       \
    \ return true;\n    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\n$q = [1, 2, 3, 2, 1];\n$w = 5;\necho will_it_fly($q, $w);\n\
    \nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $first = 0;\n    $last = count($q) - 1;\n    while ($first < $last)\
    \ {\n        if ($q[$first] != $q[$last]) {\n            return false;\n     \
    \   }\n        $first++;\n        $last--;\n    }\n    foreach ($q as $value)\
    \ {\n        $sum += $value;\n    }\n    if ($sum <= $w) {\n        return true;\n\
    \    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    for ($i = 0; $i < count($q); $i++) {\n        $sum += $q[$i];\n  \
    \  }\n    if ($sum > $w) {\n        return false;\n    }\n    $q_rev = array_reverse($q);\n\
    \    if ($q == $q_rev) {\n        return true;\n    }\n    return false;\n}\n\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    $i = 0;\n    while ($i < $len) {\n        $sum\
    \ += $q[$i];\n        $i++;\n    }\n    if ($sum > $w) {\n        return False;\n\
    \    }\n    $i = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i]\
    \ != $q[$j]) {\n            return False;\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return True;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $mid\
    \ = floor($len / 2);\n    for ($i = 0; $i < $mid; $i++) {\n        if ($q[$i]\
    \ != $q[$len - $i - 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    $half = floor($len / 2);\n    for ($i = 0;\
    \ $i < $half; $i++) {\n        $sum += $q[$i];\n        if ($sum > $w) return\
    \ false;\n        if ($q[$i] != $q[$len - $i - 1]) return false;\n    }\n    if\
    \ ($len % 2 == 1) $sum += $q[$half];\n    return $sum <= $w;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\n$q = [1, 2, 3, 2, 1];\n$w = 5;\necho will_it_fly($q, $w)\
    \ ? \"True\" : \"False\";\necho \"\\n\";\n\n$q = [1, 2, 3, 2, 3];\n$w = 5;\necho\
    \ will_it_fly($q, $w) ? \"True\" : \"False\";\necho \"\\n\";\n\n$q = [1, 2, 3,\
    \ 2, 3];\n$w = 6;\necho will_it_fly($q, $w) ? \"True\" : \"False\";\necho \"\\\
    n\";\n\n$q = [3];\n$w = 3;\necho will_it_fly($q, $w) ? \"True\" : \"False\";\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'False

    False

    False

    True

    '
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n  $sum\
    \ = 0;\n  $len = count($q);\n  for ($i = 0; $i < $len; $i++) {\n    $sum += $q[$i];\n\
    \  }\n  if ($sum > $w) {\n    return false;\n  }\n  $mid = floor($len / 2);\n\
    \  for ($i = 0; $i < $mid; $i++) {\n    if ($q[$i] != $q[$len - $i - 1]) {\n \
    \     return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $arr = [];\n    foreach ($q as $v) {\n        $sum += $v;\n      \
    \  $arr[] = $v;\n    }\n    if ($sum > $w) {\n        return false;\n    }\n \
    \   $arr2 = array_reverse($arr);\n    if ($arr == $arr2) {\n        return true;\n\
    \    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    $mid = floor($len / 2);\n    for ($i = 0; $i\
    \ < $mid; $i++) {\n        $sum += $q[$i];\n        if ($sum > $w) {\n       \
    \     return false;\n        }\n    }\n    for ($i = $len - 1; $i >= $mid; $i--)\
    \ {\n        $sum += $q[$i];\n        if ($sum > $w) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n   \
    \ return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp27wlkknm.php:36\n\
    Stack trace:\n#0 /tmp/tmp27wlkknm.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp27wlkknm.php\
    \ on line 36\n"
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    if ($sum <= $w) {\n        $reverse = array_reverse($q);\n\
    \        if ($q == $reverse) {\n            return true;\n        }\n    }\n \
    \   return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $mid\
    \ = floor($len / 2);\n    for ($i = 0; $i < $mid; $i++) {\n        if ($q[$i]\
    \ != $q[$len - $i - 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $mid\
    \ = floor($len / 2);\n    for ($i = 0; $i < $mid; $i++) {\n        if ($q[$i]\
    \ != $q[$len - $i - 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\n$q = [1, 2, 3, 2, 1];\n$w = 5;\necho will_it_fly($q, $w);\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $is_palindrome = true;\n    $len = count($q);\n    for ($i = 0; $i\
    \ < $len; $i++) {\n        $sum += $q[$i];\n        if ($q[$i] != $q[$len - $i\
    \ - 1]) {\n            $is_palindrome = false;\n        }\n    }\n    return $sum\
    \ <= $w && $is_palindrome;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    $rev = array_reverse($q);\n    if ($sum <= $w && $q ==\
    \ $rev) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    for ($i = 0; $i < count($q); $i++) {\n        $sum += $q[$i];\n  \
    \  }\n    if ($sum > $w) {\n        return false;\n    }\n    $palindrome = true;\n\
    \    for ($i = 0; $i < count($q) / 2; $i++) {\n        if ($q[$i] != $q[count($q)\
    \ - 1 - $i]) {\n            $palindrome = false;\n        }\n    }\n    return\
    \ $palindrome;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n\t$sum\
    \ = 0;\n\tforeach ($q as $value) {\n\t\t$sum += $value;\n\t}\n\tif ($sum <= $w)\
    \ {\n\t\tif (is_palindrome($q)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_palindrome()\
    \ in /tmp/tmpgw8u9iw9.php:17\nStack trace:\n#0 /tmp/tmpgw8u9iw9.php(25): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmpgw8u9iw9.php(29): candidate(Array, 9)\n#2 /tmp/tmpgw8u9iw9.php(37):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpgw8u9iw9.php on line 17\n"
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\n$q = [1, 2];\n\
    $w = 5;\necho will_it_fly($q, $w);\necho \"\\n\";\n$q = [3, 2, 3];\n$w = 5;\n\
    echo will_it_fly($q, $w);\necho \"\\n\";\n$q = [3, 2, 3];\n$w = 6;\necho will_it_fly($q,\
    \ $w);\necho \"\\n\";\n$q = [3];\n$w = 3;\necho will_it_fly($q, $w);\necho \"\\\
    n\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '



    1

    '
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n  $sum\
    \ = 0;\n  foreach ($q as $value) {\n    $sum += $value;\n  }\n  if ($sum <= $w)\
    \ {\n    $reverse = array_reverse($q);\n    if ($q == $reverse) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $q = array_reverse($q);\n    foreach ($q as $value) {\n        $sum\
    \ += $value;\n        if ($sum > $w) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj5vhzsq6.php:29\n\
    Stack trace:\n#0 /tmp/tmpj5vhzsq6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpj5vhzsq6.php\
    \ on line 29\n"
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    $i = 0;\n    $j = $len - 1;\n    while($i <\
    \ $j) {\n        if($q[$i] != $q[$j]) {\n            return false;\n        }\n\
    \        $i++;\n        $j--;\n    }\n    foreach($q as $item) {\n        $sum\
    \ += $item;\n    }\n    if($sum <= $w) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    $mid = floor($len / 2);\n    for ($i = 0; $i\
    \ < $mid; $i++) {\n        $sum += $q[$i];\n        if ($sum > $w) {\n       \
    \     return false;\n        }\n    }\n    if ($len % 2 == 1) {\n        $sum\
    \ += $q[$mid];\n        if ($sum > $w) {\n            return false;\n        }\n\
    \    }\n    for ($i = $mid - 1; $i >= 0; $i--) {\n        $sum += $q[$len - $i\
    \ - 1];\n        if ($sum > $w) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps38koeyt.php:42\n\
    Stack trace:\n#0 /tmp/tmps38koeyt.php(49): test()\n#1 {main}\n  thrown in /tmp/tmps38koeyt.php\
    \ on line 42\n"
  timestamp: 1659730924
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    if ($sum > $w) {\n        return false;\n    }\n    $q\
    \ = implode($q);\n    $q = str_split($q);\n    $q = array_reverse($q);\n    $q\
    \ = implode($q);\n    $q = str_split($q);\n    $q = array_reverse($q);\n    $q\
    \ = implode($q);\n    if ($q == $sum) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsutltf4.php:34\n\
    Stack trace:\n#0 /tmp/tmpzsutltf4.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzsutltf4.php\
    \ on line 34\n"
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    $rev = array_reverse($q);\n    if($sum <= $w && $q ==\
    \ $rev){\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    $reverse = array_reverse($q);\n    if ($sum <= $w && $q\
    \ == $reverse) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $mid\
    \ = floor($len / 2);\n    for ($i = 0; $i < $mid; $i++) {\n        if ($q[$i]\
    \ != $q[$len - $i - 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $i = 0;\n    $j = count($q) - 1;\n    while ($i < $j) {\n        if\
    \ ($q[$i] != $q[$j]) {\n            return false;\n        }\n        $i++;\n\
    \        $j--;\n    }\n    foreach ($q as $item) {\n        $sum += $item;\n \
    \   }\n    return $sum <= $w;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\necho will_it_fly([1,\
    \ 2], 5) . \"\\n\";\necho will_it_fly([3, 2, 3], 6) . \"\\n\";\necho will_it_fly([3,\
    \ 2, 3], 5) . \"\\n\";\necho will_it_fly([3], 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '



    1

    '
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    if\
    \ ($len % 2 == 0) {\n        for ($i = 0; $i < $len / 2; $i++) {\n           \
    \ if ($q[$i] != $q[$len - $i - 1]) {\n                return false;\n        \
    \    }\n        }\n    } else {\n        for ($i = 0; $i < ($len - 1) / 2; $i++)\
    \ {\n            if ($q[$i] != $q[$len - $i - 1]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    $i = 0;\n    $j = $len - 1;\n    while ($i\
    \ < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n      \
    \  }\n        $i++;\n        $j--;\n    }\n    foreach ($q as $value) {\n    \
    \    $sum += $value;\n    }\n    if ($sum <= $w) {\n        return true;\n   \
    \ }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $half\
    \ = floor($len / 2);\n    $is_palindrome = true;\n    for ($i = 0; $i < $half;\
    \ $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n            $is_palindrome\
    \ = false;\n            break;\n        }\n    }\n    return $is_palindrome;\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $i = 0;\n    $j = count($q) - 1;\n    while ($i < $j) {\n        if\
    \ ($q[$i] != $q[$j]) {\n            return false;\n        }\n        $i++;\n\
    \        $j--;\n    }\n    foreach ($q as $e) {\n        $sum += $e;\n    }\n\
    \    return $sum <= $w;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $mid\
    \ = floor($len / 2);\n    for ($i = 0; $i < $mid; $i++) {\n        if ($q[$i]\
    \ != $q[$len - $i - 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = array_sum($q);\n    if ($sum > $w) {\n        return false;\n    }\n    $reverse\
    \ = array_reverse($q);\n    if ($q == $reverse) {\n        return true;\n    }\n\
    \    return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\n$q = [1, 2];\n\
    $w = 5;\necho will_it_fly($q, $w);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return False;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n  \
    \          return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    foreach ($q as $value) {\n        $sum += $value;\n    }\n    if ($sum\
    \ > $w) {\n        return false;\n    }\n    $reverse = array_reverse($q);\n \
    \   if ($q == $reverse) {\n        return true;\n    }\n    return false;\n}\n\
    \nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly([1, 2], 5) \n// False \n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// # it's balanced,\
    \ but 3+2+3 is more than the maximum possible weight.\n// # 3+2+3 is less than\
    \ the maximum possible weight, and it's balanced.\n// # 3 is less than the maximum\
    \ possible weight, and it's balanced.\nfunction will_it_fly($q, $w) {\n    $sum\
    \ = 0;\n    $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $mid\
    \ = floor($len / 2);\n    for ($i = 0; $i < $mid; $i++) {\n        if ($q[$i]\
    \ != $q[$len - $i - 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730924

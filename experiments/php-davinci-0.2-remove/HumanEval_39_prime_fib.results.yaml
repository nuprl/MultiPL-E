language: php
name: HumanEval_39_prime_fib
results:
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = array(1, 1);\n    $i\
    \ = 2;\n    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i\
    \ - 2];\n        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n  \
    \  return $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpoojsl3ji.php:10\nStack trace:\n#0 /tmp/tmpoojsl3ji.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpoojsl3ji.php(15): prime_fib(1)\n\
    #2 /tmp/tmpoojsl3ji.php(19): candidate(1)\n#3 /tmp/tmpoojsl3ji.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpoojsl3ji.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 2];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpomddream.php:8\nStack trace:\n#0 /tmp/tmpomddream.php(19): prime_fib(1)\n\
    #1 /tmp/tmpomddream.php(23): candidate(1)\n#2 /tmp/tmpomddream.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpomddream.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n  $fib = [1, 1];\n  $i = 2;\n  while\
    \ (count($fib) < $n) {\n    $fib[] = $fib[$i - 1] + $fib[$i - 2];\n    $i++;\n\
    \  }\n  $fib = array_filter($fib, function($num) {\n    return is_prime($num);\n\
    \  });\n  return $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpl_sqdcki.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmpl_sqdcki.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpl_sqdcki.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpl_sqdcki.php(21): candidate(1)\n#4 /tmp/tmpl_sqdcki.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpl_sqdcki.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($number) {\n  \
    \      return is_prime($number);\n    });\n    return $fib[$n - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpqnp33jlp.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmpqnp33jlp.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpqnp33jlp.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpqnp33jlp.php(21): candidate(1)\n#4 /tmp/tmpqnp33jlp.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpqnp33jlp.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 2];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpomddream.php:8\nStack trace:\n#0 /tmp/tmpomddream.php(19): prime_fib(1)\n\
    #1 /tmp/tmpomddream.php(23): candidate(1)\n#2 /tmp/tmpomddream.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpomddream.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpbd9b6kzy.php:10\nStack trace:\n#0 /tmp/tmpbd9b6kzy.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpbd9b6kzy.php(15): prime_fib(1)\n\
    #2 /tmp/tmpbd9b6kzy.php(19): candidate(1)\n#3 /tmp/tmpbd9b6kzy.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpbd9b6kzy.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpbd9b6kzy.php:10\nStack trace:\n#0 /tmp/tmpbd9b6kzy.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpbd9b6kzy.php(15): prime_fib(1)\n\
    #2 /tmp/tmpbd9b6kzy.php(19): candidate(1)\n#3 /tmp/tmpbd9b6kzy.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpbd9b6kzy.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpdjy1_w5h.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmpdjy1_w5h.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpdjy1_w5h.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpdjy1_w5h.php(21): candidate(1)\n#4 /tmp/tmpdjy1_w5h.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpdjy1_w5h.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [0, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($number) {\n  \
    \      return is_prime($number);\n    });\n    return $fib[$n - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpmyaptxba.php:11\nStack trace:\n#0 [internal function]: {closure}(0)\n\
    #1 /tmp/tmpmyaptxba.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpmyaptxba.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpmyaptxba.php(21): candidate(1)\n#4 /tmp/tmpmyaptxba.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmyaptxba.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = array(1, 1);\n    $i\
    \ = 2;\n    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i\
    \ - 2];\n        $i++;\n    }\n    $fib = array_filter($fib, \"is_prime\");\n\
    \    return $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmp3sn6edzg.php:10\nStack trace:\n#0 /tmp/tmp3sn6edzg.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmp3sn6edzg.php(15): prime_fib(1)\n\
    #2 /tmp/tmp3sn6edzg.php(19): candidate(1)\n#3 /tmp/tmp3sn6edzg.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmp3sn6edzg.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [0, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo84961th.php:18\n\
    Stack trace:\n#0 /tmp/tmpo84961th.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpo84961th.php\
    \ on line 18\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [0, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpcy3kcbcy.php:11\nStack trace:\n#0 [internal function]: {closure}(0)\n\
    #1 /tmp/tmpcy3kcbcy.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpcy3kcbcy.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpcy3kcbcy.php(21): candidate(1)\n#4 /tmp/tmpcy3kcbcy.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpcy3kcbcy.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1,1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i-1] + $fib[$i-2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n-1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpi7r7gu4z.php:10\nStack trace:\n#0 /tmp/tmpi7r7gu4z.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpi7r7gu4z.php(15): prime_fib(1)\n\
    #2 /tmp/tmpi7r7gu4z.php(19): candidate(1)\n#3 /tmp/tmpi7r7gu4z.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpi7r7gu4z.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp4iwbzhue.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmp4iwbzhue.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmp4iwbzhue.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmp4iwbzhue.php(21): candidate(1)\n#4 /tmp/tmp4iwbzhue.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp4iwbzhue.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp4iwbzhue.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmp4iwbzhue.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmp4iwbzhue.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmp4iwbzhue.php(21): candidate(1)\n#4 /tmp/tmp4iwbzhue.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp4iwbzhue.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [0, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpwybt22w3.php:10\nStack trace:\n#0 /tmp/tmpwybt22w3.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpwybt22w3.php(15): prime_fib(1)\n\
    #2 /tmp/tmpwybt22w3.php(19): candidate(1)\n#3 /tmp/tmpwybt22w3.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpwybt22w3.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n\t$fib = array(1, 2);\n\t$i = 2;\n\
    \twhile (count($fib) < $n) {\n\t\t$fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\t\t\
    $i++;\n\t}\n\t$fib = array_filter($fib, 'is_prime');\n\treturn $fib[$n - 1];\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmplnzl3_1b.php:10\nStack trace:\n#0 /tmp/tmplnzl3_1b.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmplnzl3_1b.php(15): prime_fib(1)\n\
    #2 /tmp/tmplnzl3_1b.php(19): candidate(1)\n#3 /tmp/tmplnzl3_1b.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmplnzl3_1b.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: -1
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   for ($i = 2; $i <= sqrt($num); $i++) {\n            if ($num % $i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    \    });\n    return $fib[$n - 1];\n}\n\necho prime_fib(3) . PHP_EOL;\necho prime_fib(5)\
    \ . PHP_EOL;\necho prime_fib(10) . PHP_EOL;\necho prime_fib(20) . PHP_EOL;\necho\
    \ prime_fib(30) . PHP_EOL;\necho prime_fib(100) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: '2

    5


    Warning: Undefined array key 9 in /tmp/tmppjhat9_x.php on line 18



    Warning: Undefined array key 19 in /tmp/tmppjhat9_x.php on line 18



    Warning: Undefined array key 29 in /tmp/tmppjhat9_x.php on line 18


    '
  timestamp: 1660028520
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = fib($n);\n    if (is_prime($fib))\
    \ {\n        return $fib;\n    } else {\n        return prime_fib($n+1);\n   \
    \ }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmp_iyhawvi.php:4\n\
    Stack trace:\n#0 /tmp/tmp_iyhawvi.php(13): prime_fib(1)\n#1 /tmp/tmp_iyhawvi.php(17):\
    \ candidate(1)\n#2 /tmp/tmp_iyhawvi.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp_iyhawvi.php\
    \ on line 4\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_hkzsaqm.php:18\n\
    Stack trace:\n#0 /tmp/tmp_hkzsaqm.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_hkzsaqm.php\
    \ on line 18\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n  $fib = [1, 1];\n  $i = 2;\n  while\
    \ (count($fib) < $n) {\n    $fib[] = $fib[$i - 1] + $fib[$i - 2];\n    $i++;\n\
    \  }\n  $fib = array_filter($fib, function($num) {\n    for ($i = 2; $i < $num;\
    \ $i++) {\n      if ($num % $i == 0) {\n        return false;\n      }\n    }\n\
    \    return true;\n  });\n  return $fib[$n - 1];\n}\n\necho prime_fib(10);\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 9 in /tmp/tmpkongwfih.php on line 18\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpkongwfih.php:27\nStack\
    \ trace:\n#0 /tmp/tmpkongwfih.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkongwfih.php\
    \ on line 27\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n  $fib = [0, 1];\n  $i = 2;\n  while\
    \ (count($fib) < $n) {\n    $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n    $i++;\n\
    \  }\n  return $fib[$n - 1];\n}\n\necho prime_fib(10);\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "34\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl878kzu9.php:19\n\
    Stack trace:\n#0 /tmp/tmpl878kzu9.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpl878kzu9.php\
    \ on line 19\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp4iwbzhue.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmp4iwbzhue.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmp4iwbzhue.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmp4iwbzhue.php(21): candidate(1)\n#4 /tmp/tmp4iwbzhue.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp4iwbzhue.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpdjy1_w5h.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmpdjy1_w5h.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpdjy1_w5h.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpdjy1_w5h.php(21): candidate(1)\n#4 /tmp/tmpdjy1_w5h.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpdjy1_w5h.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpbd9b6kzy.php:10\nStack trace:\n#0 /tmp/tmpbd9b6kzy.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpbd9b6kzy.php(15): prime_fib(1)\n\
    #2 /tmp/tmpbd9b6kzy.php(19): candidate(1)\n#3 /tmp/tmpbd9b6kzy.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpbd9b6kzy.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $a = 0;\n    $b = 1;\n    $c\
    \ = 1;\n    $i = 1;\n    while ($i < $n) {\n        $c = $a + $b;\n        $a\
    \ = $b;\n        $b = $c;\n        if (is_prime($c)) {\n            $i++;\n  \
    \      }\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsosqrsm1.php:24\n\
    Stack trace:\n#0 /tmp/tmpsosqrsm1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpsosqrsm1.php\
    \ on line 24\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmlm_hsfj.php:18\n\
    Stack trace:\n#0 /tmp/tmpmlm_hsfj.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpmlm_hsfj.php\
    \ on line 18\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 2];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpev02vk1h.php:10\nStack trace:\n#0 /tmp/tmpev02vk1h.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpev02vk1h.php(15): prime_fib(1)\n\
    #2 /tmp/tmpev02vk1h.php(19): candidate(1)\n#3 /tmp/tmpev02vk1h.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpev02vk1h.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib_numbers = [0, 1];\n   \
    \ $i = 2;\n    while (count($fib_numbers) < $n) {\n        $fib_numbers[] = $fib_numbers[$i\
    \ - 1] + $fib_numbers[$i - 2];\n        $i++;\n    }\n    $prime_fib_numbers =\
    \ [];\n    foreach ($fib_numbers as $fib_number) {\n        if (is_prime($fib_number))\
    \ {\n            $prime_fib_numbers[] = $fib_number;\n        }\n    }\n    return\
    \ $prime_fib_numbers[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp05f9zqy5.php:12\nStack trace:\n#0 /tmp/tmp05f9zqy5.php(20): prime_fib(1)\n\
    #1 /tmp/tmp05f9zqy5.php(24): candidate(1)\n#2 /tmp/tmp05f9zqy5.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmp05f9zqy5.php on line 12\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp4iwbzhue.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmp4iwbzhue.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmp4iwbzhue.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmp4iwbzhue.php(21): candidate(1)\n#4 /tmp/tmp4iwbzhue.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp4iwbzhue.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpbd9b6kzy.php:10\nStack trace:\n#0 /tmp/tmpbd9b6kzy.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpbd9b6kzy.php(15): prime_fib(1)\n\
    #2 /tmp/tmpbd9b6kzy.php(19): candidate(1)\n#3 /tmp/tmpbd9b6kzy.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpbd9b6kzy.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n\t$fib = fib($n);\n\tif (is_prime($fib))\
    \ {\n\t\treturn $fib;\n\t} else {\n\t\treturn prime_fib($n+1);\n\t}\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmphiue1hzi.php:4\n\
    Stack trace:\n#0 /tmp/tmphiue1hzi.php(13): prime_fib(1)\n#1 /tmp/tmphiue1hzi.php(17):\
    \ candidate(1)\n#2 /tmp/tmphiue1hzi.php(29): test()\n#3 {main}\n  thrown in /tmp/tmphiue1hzi.php\
    \ on line 4\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while ($i < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n    \
    \    $i++;\n    }\n    $fib = array_reverse($fib);\n    $i = 0;\n    while ($i\
    \ < count($fib)) {\n        if (is_prime($fib[$i])) {\n            return $fib[$i];\n\
    \        }\n        $i++;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp2h3b7ru8.php:13\nStack trace:\n#0 /tmp/tmp2h3b7ru8.php(21): prime_fib(1)\n\
    #1 /tmp/tmp2h3b7ru8.php(25): candidate(1)\n#2 /tmp/tmp2h3b7ru8.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2h3b7ru8.php on line 13\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n  $fib = [1, 1];\n  $i = 2;\n  while\
    \ ($i < $n) {\n    $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n    $i++;\n  }\n \
    \ $i = 0;\n  while ($i < $n) {\n    if (is_prime($fib[$i])) {\n      return $fib[$i];\n\
    \    }\n    $i++;\n  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp9i_ryewx.php:12\nStack trace:\n#0 /tmp/tmp9i_ryewx.php(20): prime_fib(1)\n\
    #1 /tmp/tmp9i_ryewx.php(24): candidate(1)\n#2 /tmp/tmp9i_ryewx.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmp9i_ryewx.php on line 12\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 2];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8iflq4wz.php:18\n\
    Stack trace:\n#0 /tmp/tmp8iflq4wz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8iflq4wz.php\
    \ on line 18\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 2];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpev02vk1h.php:10\nStack trace:\n#0 /tmp/tmpev02vk1h.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpev02vk1h.php(15): prime_fib(1)\n\
    #2 /tmp/tmpev02vk1h.php(19): candidate(1)\n#3 /tmp/tmpev02vk1h.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpev02vk1h.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmlm_hsfj.php:18\n\
    Stack trace:\n#0 /tmp/tmpmlm_hsfj.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpmlm_hsfj.php\
    \ on line 18\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while ($i < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n    \
    \    $i++;\n    }\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprmxzi3bu.php:18\n\
    Stack trace:\n#0 /tmp/tmprmxzi3bu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmprmxzi3bu.php\
    \ on line 18\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib_numbers = [1, 2];\n   \
    \ $i = 2;\n    while ($i <= $n) {\n        $fib_numbers[$i] = $fib_numbers[$i\
    \ - 1] + $fib_numbers[$i - 2];\n        $i++;\n    }\n    $fib_numbers = array_filter($fib_numbers,\
    \ function ($number) {\n        return is_prime($number);\n    });\n    return\
    \ $fib_numbers[$n];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpka1b01rg.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmpka1b01rg.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpka1b01rg.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpka1b01rg.php(21): candidate(1)\n#4 /tmp/tmpka1b01rg.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpka1b01rg.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n  $fib = [1, 1];\n  $i = 2;\n  while\
    \ (count($fib) < $n) {\n    $fib[] = $fib[$i - 1] + $fib[$i - 2];\n    $i++;\n\
    \  }\n  $fib = array_filter($fib, function($x) {\n    return is_prime($x);\n \
    \ });\n  return $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpd0lrdseo.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmpd0lrdseo.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpd0lrdseo.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpd0lrdseo.php(21): candidate(1)\n#4 /tmp/tmpd0lrdseo.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpd0lrdseo.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp4iwbzhue.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmp4iwbzhue.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmp4iwbzhue.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmp4iwbzhue.php(21): candidate(1)\n#4 /tmp/tmp4iwbzhue.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp4iwbzhue.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpbd9b6kzy.php:10\nStack trace:\n#0 /tmp/tmpbd9b6kzy.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpbd9b6kzy.php(15): prime_fib(1)\n\
    #2 /tmp/tmpbd9b6kzy.php(19): candidate(1)\n#3 /tmp/tmpbd9b6kzy.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpbd9b6kzy.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpbd9b6kzy.php:10\nStack trace:\n#0 /tmp/tmpbd9b6kzy.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpbd9b6kzy.php(15): prime_fib(1)\n\
    #2 /tmp/tmpbd9b6kzy.php(19): candidate(1)\n#3 /tmp/tmpbd9b6kzy.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpbd9b6kzy.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [0, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($number) {\n  \
    \      return is_prime($number);\n    });\n    return $fib[$n - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpmyaptxba.php:11\nStack trace:\n#0 [internal function]: {closure}(0)\n\
    #1 /tmp/tmpmyaptxba.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpmyaptxba.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpmyaptxba.php(21): candidate(1)\n#4 /tmp/tmpmyaptxba.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmyaptxba.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $i = 0;\n    $fib = 0;\n   \
    \ while ($i < $n) {\n        $fib = fibonacci($i);\n        if (is_prime($fib))\
    \ {\n            $i++;\n        }\n    }\n    return $fib;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fibonacci() in\
    \ /tmp/tmp45814yar.php:7\nStack trace:\n#0 /tmp/tmp45814yar.php(16): prime_fib(1)\n\
    #1 /tmp/tmp45814yar.php(20): candidate(1)\n#2 /tmp/tmp45814yar.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmp45814yar.php on line 7\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_hkzsaqm.php:18\n\
    Stack trace:\n#0 /tmp/tmp_hkzsaqm.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_hkzsaqm.php\
    \ on line 18\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = 0;\n    $i = 0;\n   \
    \ while ($i < $n) {\n        $fib = fib($i);\n        if (is_prime($fib)) {\n\
    \            $i++;\n        }\n    }\n    return $fib;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmp80h85er1.php:7\n\
    Stack trace:\n#0 /tmp/tmp80h85er1.php(16): prime_fib(1)\n#1 /tmp/tmp80h85er1.php(20):\
    \ candidate(1)\n#2 /tmp/tmp80h85er1.php(32): test()\n#3 {main}\n  thrown in /tmp/tmp80h85er1.php\
    \ on line 7\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpbd9b6kzy.php:10\nStack trace:\n#0 /tmp/tmpbd9b6kzy.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpbd9b6kzy.php(15): prime_fib(1)\n\
    #2 /tmp/tmpbd9b6kzy.php(19): candidate(1)\n#3 /tmp/tmpbd9b6kzy.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpbd9b6kzy.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpdjy1_w5h.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmpdjy1_w5h.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpdjy1_w5h.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpdjy1_w5h.php(21): candidate(1)\n#4 /tmp/tmpdjy1_w5h.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpdjy1_w5h.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($number) {\n  \
    \      return is_prime($number);\n    });\n    return $fib[$n - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpx5id5ry9.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmpx5id5ry9.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpx5id5ry9.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpx5id5ry9.php(21): candidate(1)\n#4 /tmp/tmpx5id5ry9.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpx5id5ry9.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [0, 1];\n    $i = 2;\n\
    \    while ($i <= $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n   \
    \     $i++;\n    }\n    $i = 0;\n    while ($i < $n) {\n        if (is_prime($fib[$i]))\
    \ {\n            $i++;\n        } else {\n            unset($fib[$i]);\n     \
    \   }\n    }\n    return end($fib);\n}\n\nfunction candidate(...$args) {\n   \
    \ return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpvl4t5nrl.php:12\nStack trace:\n#0 /tmp/tmpvl4t5nrl.php(22): prime_fib(1)\n\
    #1 /tmp/tmpvl4t5nrl.php(26): candidate(1)\n#2 /tmp/tmpvl4t5nrl.php(38): test()\n\
    #3 {main}\n  thrown in /tmp/tmpvl4t5nrl.php on line 12\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($number) {\n  \
    \      return is_prime($number);\n    });\n    return $fib[$n - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpqnp33jlp.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmpqnp33jlp.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpqnp33jlp.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpqnp33jlp.php(21): candidate(1)\n#4 /tmp/tmpqnp33jlp.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpqnp33jlp.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n\t$fib = [1, 1];\n\t$i = 2;\n\t\
    while (count($fib) < $n) {\n\t\t$fib[] = $fib[$i - 1] + $fib[$i - 2];\n\t\t$i++;\n\
    \t}\n\t$fib = array_filter($fib, 'is_prime');\n\treturn $fib[$n - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpqnokqlp2.php:10\nStack trace:\n#0 /tmp/tmpqnokqlp2.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpqnokqlp2.php(15): prime_fib(1)\n\
    #2 /tmp/tmpqnokqlp2.php(19): candidate(1)\n#3 /tmp/tmpqnokqlp2.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpqnokqlp2.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp4iwbzhue.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmp4iwbzhue.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmp4iwbzhue.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmp4iwbzhue.php(21): candidate(1)\n#4 /tmp/tmp4iwbzhue.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp4iwbzhue.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_hkzsaqm.php:18\n\
    Stack trace:\n#0 /tmp/tmp_hkzsaqm.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_hkzsaqm.php\
    \ on line 18\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpbd9b6kzy.php:10\nStack trace:\n#0 /tmp/tmpbd9b6kzy.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpbd9b6kzy.php(15): prime_fib(1)\n\
    #2 /tmp/tmpbd9b6kzy.php(19): candidate(1)\n#3 /tmp/tmpbd9b6kzy.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpbd9b6kzy.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = array(1, 1);\n    $i\
    \ = 2;\n    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i\
    \ - 2];\n        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n  \
    \  return $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpoojsl3ji.php:10\nStack trace:\n#0 /tmp/tmpoojsl3ji.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpoojsl3ji.php(15): prime_fib(1)\n\
    #2 /tmp/tmpoojsl3ji.php(19): candidate(1)\n#3 /tmp/tmpoojsl3ji.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpoojsl3ji.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = 0;\n    $i = 0;\n   \
    \ $j = 1;\n    $k = 0;\n    while ($k < $n) {\n        $fib = $i + $j;\n     \
    \   $i = $j;\n        $j = $fib;\n        if (is_prime($fib)) {\n            $k++;\n\
    \        }\n    }\n    return $fib;\n}\n\nfunction candidate(...$args) {\n   \
    \ return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpt1pju3t7.php:12\nStack trace:\n#0 /tmp/tmpt1pju3t7.php(20): prime_fib(1)\n\
    #1 /tmp/tmpt1pju3t7.php(24): candidate(1)\n#2 /tmp/tmpt1pju3t7.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmpt1pju3t7.php on line 12\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while ($i < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n      \
    \  $i++;\n    }\n    $fib = array_reverse($fib);\n    $i = 0;\n    while ($i <\
    \ count($fib)) {\n        if (is_prime($fib[$i])) {\n            return $fib[$i];\n\
    \        }\n        $i++;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpef26rv8x.php:13\nStack trace:\n#0 /tmp/tmpef26rv8x.php(21): prime_fib(1)\n\
    #1 /tmp/tmpef26rv8x.php(25): candidate(1)\n#2 /tmp/tmpef26rv8x.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmpef26rv8x.php on line 13\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = fibonacci($n);\n    $prime\
    \ = prime($fib);\n    if ($fib == $prime) {\n        return $prime;\n    } else\
    \ {\n        return prime_fib($n + 1);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fibonacci() in\
    \ /tmp/tmpz640qk7j.php:4\nStack trace:\n#0 /tmp/tmpz640qk7j.php(14): prime_fib(1)\n\
    #1 /tmp/tmpz640qk7j.php(18): candidate(1)\n#2 /tmp/tmpz640qk7j.php(30): test()\n\
    #3 {main}\n  thrown in /tmp/tmpz640qk7j.php on line 4\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 2];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpev02vk1h.php:10\nStack trace:\n#0 /tmp/tmpev02vk1h.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpev02vk1h.php(15): prime_fib(1)\n\
    #2 /tmp/tmpev02vk1h.php(19): candidate(1)\n#3 /tmp/tmpev02vk1h.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpev02vk1h.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [0, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpwybt22w3.php:10\nStack trace:\n#0 /tmp/tmpwybt22w3.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpwybt22w3.php(15): prime_fib(1)\n\
    #2 /tmp/tmpwybt22w3.php(19): candidate(1)\n#3 /tmp/tmpwybt22w3.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpwybt22w3.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while ($i < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n    \
    \    $i++;\n    }\n    $fib = array_filter($fib, function ($number) {\n      \
    \  return is_prime($number);\n    });\n    return $fib[$n - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmptsa3s0xd.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmptsa3s0xd.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmptsa3s0xd.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmptsa3s0xd.php(21): candidate(1)\n#4 /tmp/tmptsa3s0xd.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmptsa3s0xd.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n\t$fib = [1, 1];\n\t$i = 2;\n\t\
    while (true) {\n\t\t$fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\t\tif (is_prime($fib[$i]))\
    \ {\n\t\t\t$n--;\n\t\t\tif ($n == 0) {\n\t\t\t\treturn $fib[$i];\n\t\t\t}\n\t\t\
    }\n\t\t$i++;\n\t}\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpbqzldg3_.php:8\nStack trace:\n#0 /tmp/tmpbqzldg3_.php(19): prime_fib(1)\n\
    #1 /tmp/tmpbqzldg3_.php(23): candidate(1)\n#2 /tmp/tmpbqzldg3_.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpbqzldg3_.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = fib($n);\n    if (is_prime($fib))\
    \ {\n        return $fib;\n    } else {\n        return prime_fib($n + 1);\n \
    \   }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmp1umjfd6c.php:4\n\
    Stack trace:\n#0 /tmp/tmp1umjfd6c.php(13): prime_fib(1)\n#1 /tmp/tmp1umjfd6c.php(17):\
    \ candidate(1)\n#2 /tmp/tmp1umjfd6c.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp1umjfd6c.php\
    \ on line 4\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n  $fib = [1, 1];\n  $i = 2;\n  while\
    \ (true) {\n    $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n    if (is_prime($fib[$i]))\
    \ {\n      $n--;\n      if ($n == 0) {\n        return $fib[$i];\n      }\n  \
    \  }\n    $i++;\n  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmppwxrwc8j.php:8\nStack trace:\n#0 /tmp/tmppwxrwc8j.php(19): prime_fib(1)\n\
    #1 /tmp/tmppwxrwc8j.php(23): candidate(1)\n#2 /tmp/tmppwxrwc8j.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmppwxrwc8j.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($number) {\n  \
    \      for ($i = 2; $i <= sqrt($number); $i++) {\n            if ($number % $i\
    \ == 0) {\n                return false;\n            }\n        }\n        return\
    \ true;\n    });\n    return $fib[$n - 1];\n}\n\necho prime_fib(10);\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 9 in /tmp/tmp0d0cl4oz.php on line 18\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp0d0cl4oz.php:27\nStack\
    \ trace:\n#0 /tmp/tmp0d0cl4oz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0d0cl4oz.php\
    \ on line 27\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [0, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpwybt22w3.php:10\nStack trace:\n#0 /tmp/tmpwybt22w3.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpwybt22w3.php(15): prime_fib(1)\n\
    #2 /tmp/tmpwybt22w3.php(19): candidate(1)\n#3 /tmp/tmpwybt22w3.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpwybt22w3.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpbd9b6kzy.php:10\nStack trace:\n#0 /tmp/tmpbd9b6kzy.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpbd9b6kzy.php(15): prime_fib(1)\n\
    #2 /tmp/tmpbd9b6kzy.php(19): candidate(1)\n#3 /tmp/tmpbd9b6kzy.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpbd9b6kzy.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp4iwbzhue.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmp4iwbzhue.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmp4iwbzhue.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmp4iwbzhue.php(21): candidate(1)\n#4 /tmp/tmp4iwbzhue.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp4iwbzhue.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpdjy1_w5h.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmpdjy1_w5h.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpdjy1_w5h.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpdjy1_w5h.php(21): candidate(1)\n#4 /tmp/tmpdjy1_w5h.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpdjy1_w5h.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n  $fib = [1, 1];\n  $i = 2;\n  while\
    \ (true) {\n    $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n    if (is_prime($fib[$i]))\
    \ {\n      $n--;\n      if ($n == 0) {\n        return $fib[$i];\n      }\n  \
    \  }\n    $i++;\n  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmppwxrwc8j.php:8\nStack trace:\n#0 /tmp/tmppwxrwc8j.php(19): prime_fib(1)\n\
    #1 /tmp/tmppwxrwc8j.php(23): candidate(1)\n#2 /tmp/tmppwxrwc8j.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmppwxrwc8j.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpdjy1_w5h.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmpdjy1_w5h.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpdjy1_w5h.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpdjy1_w5h.php(21): candidate(1)\n#4 /tmp/tmpdjy1_w5h.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpdjy1_w5h.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpbd9b6kzy.php:10\nStack trace:\n#0 /tmp/tmpbd9b6kzy.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpbd9b6kzy.php(15): prime_fib(1)\n\
    #2 /tmp/tmpbd9b6kzy.php(19): candidate(1)\n#3 /tmp/tmpbd9b6kzy.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpbd9b6kzy.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpdjy1_w5h.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmpdjy1_w5h.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpdjy1_w5h.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpdjy1_w5h.php(21): candidate(1)\n#4 /tmp/tmpdjy1_w5h.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpdjy1_w5h.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [0, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpcy3kcbcy.php:11\nStack trace:\n#0 [internal function]: {closure}(0)\n\
    #1 /tmp/tmpcy3kcbcy.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpcy3kcbcy.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpcy3kcbcy.php(21): candidate(1)\n#4 /tmp/tmpcy3kcbcy.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpcy3kcbcy.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 2];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpev02vk1h.php:10\nStack trace:\n#0 /tmp/tmpev02vk1h.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpev02vk1h.php(15): prime_fib(1)\n\
    #2 /tmp/tmpev02vk1h.php(19): candidate(1)\n#3 /tmp/tmpev02vk1h.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpev02vk1h.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $i = 0;\n    $fib = 0;\n   \
    \ $fib_prev = 0;\n    $fib_prev_prev = 0;\n    while ($i < $n) {\n        if ($i\
    \ == 0) {\n            $fib = 1;\n        } elseif ($i == 1) {\n            $fib\
    \ = 2;\n        } else {\n            $fib = $fib_prev + $fib_prev_prev;\n   \
    \     }\n        if (is_prime($fib)) {\n            $i++;\n        }\n       \
    \ $fib_prev_prev = $fib_prev;\n        $fib_prev = $fib;\n    }\n    return $fib;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpnbeqr4a2.php:16\nStack trace:\n#0 /tmp/tmpnbeqr4a2.php(26): prime_fib(1)\n\
    #1 /tmp/tmpnbeqr4a2.php(30): candidate(1)\n#2 /tmp/tmpnbeqr4a2.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpnbeqr4a2.php on line 16\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = array(1, 1);\n    $i\
    \ = 2;\n    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0)\
    \ {\n                return $fib[$i];\n            }\n        }\n        $i++;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpzslqbsod.php:8\nStack trace:\n#0 /tmp/tmpzslqbsod.php(19): prime_fib(1)\n\
    #1 /tmp/tmpzslqbsod.php(23): candidate(1)\n#2 /tmp/tmpzslqbsod.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzslqbsod.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 2];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpbwsnqat5.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmpbwsnqat5.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpbwsnqat5.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpbwsnqat5.php(21): candidate(1)\n#4 /tmp/tmpbwsnqat5.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpbwsnqat5.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpbd9b6kzy.php:10\nStack trace:\n#0 /tmp/tmpbd9b6kzy.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpbd9b6kzy.php(15): prime_fib(1)\n\
    #2 /tmp/tmpbd9b6kzy.php(19): candidate(1)\n#3 /tmp/tmpbd9b6kzy.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpbd9b6kzy.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n\t$fib = [1, 1];\n\t$i = 2;\n\t\
    while (count($fib) < $n) {\n\t\t$fib[] = $fib[$i - 1] + $fib[$i - 2];\n\t\t$i++;\n\
    \t}\n\t$fib = array_filter($fib, function($num) {\n\t\treturn is_prime($num);\n\
    \t});\n\treturn $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpngmf_iem.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmpngmf_iem.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpngmf_iem.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpngmf_iem.php(21): candidate(1)\n#4 /tmp/tmpngmf_iem.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpngmf_iem.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp4iwbzhue.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmp4iwbzhue.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmp4iwbzhue.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmp4iwbzhue.php(21): candidate(1)\n#4 /tmp/tmp4iwbzhue.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp4iwbzhue.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [0, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpwybt22w3.php:10\nStack trace:\n#0 /tmp/tmpwybt22w3.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpwybt22w3.php(15): prime_fib(1)\n\
    #2 /tmp/tmpwybt22w3.php(19): candidate(1)\n#3 /tmp/tmpwybt22w3.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpwybt22w3.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 2];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpev02vk1h.php:10\nStack trace:\n#0 /tmp/tmpev02vk1h.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpev02vk1h.php(15): prime_fib(1)\n\
    #2 /tmp/tmpev02vk1h.php(19): candidate(1)\n#3 /tmp/tmpev02vk1h.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpev02vk1h.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while ($i < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n    \
    \    $i++;\n    }\n    $i = 0;\n    while ($i < $n) {\n        if (is_prime($fib[$i]))\
    \ {\n            return $fib[$i];\n        }\n        $i++;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpx5arzhej.php:12\nStack trace:\n#0 /tmp/tmpx5arzhej.php(20): prime_fib(1)\n\
    #1 /tmp/tmpx5arzhej.php(24): candidate(1)\n#2 /tmp/tmpx5arzhej.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmpx5arzhej.php on line 12\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [0, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpemk9iy2j.php:8\nStack trace:\n#0 /tmp/tmpemk9iy2j.php(19): prime_fib(1)\n\
    #1 /tmp/tmpemk9iy2j.php(23): candidate(1)\n#2 /tmp/tmpemk9iy2j.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpemk9iy2j.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = fib($n);\n    if (is_prime($fib))\
    \ {\n        return $fib;\n    } else {\n        return prime_fib($n + 1);\n \
    \   }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmp1umjfd6c.php:4\n\
    Stack trace:\n#0 /tmp/tmp1umjfd6c.php(13): prime_fib(1)\n#1 /tmp/tmp1umjfd6c.php(17):\
    \ candidate(1)\n#2 /tmp/tmp1umjfd6c.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp1umjfd6c.php\
    \ on line 4\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp4iwbzhue.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmp4iwbzhue.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmp4iwbzhue.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmp4iwbzhue.php(21): candidate(1)\n#4 /tmp/tmp4iwbzhue.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp4iwbzhue.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [0, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpwybt22w3.php:10\nStack trace:\n#0 /tmp/tmpwybt22w3.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpwybt22w3.php(15): prime_fib(1)\n\
    #2 /tmp/tmpwybt22w3.php(19): candidate(1)\n#3 /tmp/tmpwybt22w3.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpwybt22w3.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($x) {\n       \
    \ return is_prime($x);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp4g2q2i8j.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmp4g2q2i8j.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmp4g2q2i8j.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmp4g2q2i8j.php(21): candidate(1)\n#4 /tmp/tmp4g2q2i8j.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp4g2q2i8j.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = array(1, 1);\n    $i\
    \ = 2;\n    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i\
    \ - 2];\n        $i++;\n    }\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6b9vao4.php:18\n\
    Stack trace:\n#0 /tmp/tmpd6b9vao4.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpd6b9vao4.php\
    \ on line 18\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while ($i < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n    \
    \    $i++;\n    }\n    $prime_fib = [];\n    foreach ($fib as $number) {\n   \
    \     if (is_prime($number)) {\n            $prime_fib[] = $number;\n        }\n\
    \    }\n    return $prime_fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp08qee71e.php:12\nStack trace:\n#0 /tmp/tmp08qee71e.php(20): prime_fib(1)\n\
    #1 /tmp/tmp08qee71e.php(24): candidate(1)\n#2 /tmp/tmp08qee71e.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmp08qee71e.php on line 12\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpdjy1_w5h.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmpdjy1_w5h.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpdjy1_w5h.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpdjy1_w5h.php(21): candidate(1)\n#4 /tmp/tmpdjy1_w5h.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpdjy1_w5h.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 2];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpomddream.php:8\nStack trace:\n#0 /tmp/tmpomddream.php(19): prime_fib(1)\n\
    #1 /tmp/tmpomddream.php(23): candidate(1)\n#2 /tmp/tmpomddream.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpomddream.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp4iwbzhue.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmp4iwbzhue.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmp4iwbzhue.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmp4iwbzhue.php(21): candidate(1)\n#4 /tmp/tmp4iwbzhue.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp4iwbzhue.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmlm_hsfj.php:18\n\
    Stack trace:\n#0 /tmp/tmpmlm_hsfj.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpmlm_hsfj.php\
    \ on line 18\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 2];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpev02vk1h.php:10\nStack trace:\n#0 /tmp/tmpev02vk1h.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpev02vk1h.php(15): prime_fib(1)\n\
    #2 /tmp/tmpev02vk1h.php(19): candidate(1)\n#3 /tmp/tmpev02vk1h.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpev02vk1h.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n  $fib = [0, 1];\n  $i = 2;\n  while\
    \ (count($fib) < $n) {\n    $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n    $i++;\n\
    \  }\n  $fib = array_filter($fib, function($num) {\n    return is_prime($num);\n\
    \  });\n  return $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp2q9zylpj.php:11\nStack trace:\n#0 [internal function]: {closure}(0)\n\
    #1 /tmp/tmp2q9zylpj.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmp2q9zylpj.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmp2q9zylpj.php(21): candidate(1)\n#4 /tmp/tmp2q9zylpj.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp2q9zylpj.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmlm_hsfj.php:18\n\
    Stack trace:\n#0 /tmp/tmpmlm_hsfj.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpmlm_hsfj.php\
    \ on line 18\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n\t$fib = fib($n);\n\tif (is_prime($fib))\
    \ {\n\t\treturn $fib;\n\t} else {\n\t\treturn prime_fib($n + 1);\n\t}\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmpc863n76j.php:4\n\
    Stack trace:\n#0 /tmp/tmpc863n76j.php(13): prime_fib(1)\n#1 /tmp/tmpc863n76j.php(17):\
    \ candidate(1)\n#2 /tmp/tmpc863n76j.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpc863n76j.php\
    \ on line 4\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n  $fib = [1, 1];\n  $i = 1;\n  while\
    \ (count($fib) < $n) {\n    $i++;\n    $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \  }\n  $fib = array_filter($fib, 'is_prime');\n  return $fib[$n - 1];\n}\n\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmp1hpc2tkp.php:10\nStack trace:\n#0 /tmp/tmp1hpc2tkp.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmp1hpc2tkp.php(15): prime_fib(1)\n\
    #2 /tmp/tmp1hpc2tkp.php(19): candidate(1)\n#3 /tmp/tmp1hpc2tkp.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmp1hpc2tkp.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 2];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpev02vk1h.php:10\nStack trace:\n#0 /tmp/tmpev02vk1h.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpev02vk1h.php(15): prime_fib(1)\n\
    #2 /tmp/tmpev02vk1h.php(19): candidate(1)\n#3 /tmp/tmpev02vk1h.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpev02vk1h.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n\t$fib = [1, 1];\n\t$i = 2;\n\t\
    while (true) {\n\t\t$fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\t\tif (is_prime($fib[$i]))\
    \ {\n\t\t\t$n--;\n\t\t\tif ($n == 0) {\n\t\t\t\treturn $fib[$i];\n\t\t\t}\n\t\t\
    }\n\t\t$i++;\n\t}\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpbqzldg3_.php:8\nStack trace:\n#0 /tmp/tmpbqzldg3_.php(19): prime_fib(1)\n\
    #1 /tmp/tmpbqzldg3_.php(23): candidate(1)\n#2 /tmp/tmpbqzldg3_.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpbqzldg3_.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $i = 1;\n    $fib = 1;\n   \
    \ while ($i < $n) {\n        $fib += $fib - $i;\n        if (is_prime($fib)) {\n\
    \            $i++;\n        }\n    }\n    return $fib;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd62efrpw.php:20\n\
    Stack trace:\n#0 /tmp/tmpd62efrpw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpd62efrpw.php\
    \ on line 20\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [0, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($x) {\n       \
    \ return is_prime($x);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp67tx8h3n.php:11\nStack trace:\n#0 [internal function]: {closure}(0)\n\
    #1 /tmp/tmp67tx8h3n.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmp67tx8h3n.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmp67tx8h3n.php(21): candidate(1)\n#4 /tmp/tmp67tx8h3n.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp67tx8h3n.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_hkzsaqm.php:18\n\
    Stack trace:\n#0 /tmp/tmp_hkzsaqm.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_hkzsaqm.php\
    \ on line 18\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp4iwbzhue.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmp4iwbzhue.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmp4iwbzhue.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmp4iwbzhue.php(21): candidate(1)\n#4 /tmp/tmp4iwbzhue.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp4iwbzhue.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [0, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpemk9iy2j.php:8\nStack trace:\n#0 /tmp/tmpemk9iy2j.php(19): prime_fib(1)\n\
    #1 /tmp/tmpemk9iy2j.php(23): candidate(1)\n#2 /tmp/tmpemk9iy2j.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpemk9iy2j.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($number) {\n  \
    \      return is_prime($number);\n    });\n    return $fib[$n - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpqnp33jlp.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmpqnp33jlp.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpqnp33jlp.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpqnp33jlp.php(21): candidate(1)\n#4 /tmp/tmpqnp33jlp.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpqnp33jlp.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpbd9b6kzy.php:10\nStack trace:\n#0 /tmp/tmpbd9b6kzy.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpbd9b6kzy.php(15): prime_fib(1)\n\
    #2 /tmp/tmpbd9b6kzy.php(19): candidate(1)\n#3 /tmp/tmpbd9b6kzy.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpbd9b6kzy.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n\t$fib = [1, 1];\n\t$i = 2;\n\t\
    while (count($fib) < $n) {\n\t\t$fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\t\t\
    $i++;\n\t}\n\t$fib = array_filter($fib, function($num) {\n\t\tif ($num == 1) return\
    \ false;\n\t\tfor ($i = 2; $i <= sqrt($num); $i++) {\n\t\t\tif ($num % $i == 0)\
    \ return false;\n\t\t}\n\t\treturn true;\n\t});\n\treturn end($fib);\n}\n\necho\
    \ prime_fib(10);\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "13\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7j40cn_7.php:26\n\
    Stack trace:\n#0 /tmp/tmp7j40cn_7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7j40cn_7.php\
    \ on line 26\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [0, 1];\n    $i = 1;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i] + $fib[$i - 1];\n \
    \       $i++;\n    }\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxptqopf.php:18\n\
    Stack trace:\n#0 /tmp/tmpyxptqopf.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpyxptqopf.php\
    \ on line 18\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpbd9b6kzy.php:10\nStack trace:\n#0 /tmp/tmpbd9b6kzy.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpbd9b6kzy.php(15): prime_fib(1)\n\
    #2 /tmp/tmpbd9b6kzy.php(19): candidate(1)\n#3 /tmp/tmpbd9b6kzy.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpbd9b6kzy.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpbd9b6kzy.php:10\nStack trace:\n#0 /tmp/tmpbd9b6kzy.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpbd9b6kzy.php(15): prime_fib(1)\n\
    #2 /tmp/tmpbd9b6kzy.php(19): candidate(1)\n#3 /tmp/tmpbd9b6kzy.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpbd9b6kzy.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = fib($n);\n    if (is_prime($fib))\
    \ {\n        return $fib;\n    } else {\n        return prime_fib($n + 1);\n \
    \   }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmp1umjfd6c.php:4\n\
    Stack trace:\n#0 /tmp/tmp1umjfd6c.php(13): prime_fib(1)\n#1 /tmp/tmp1umjfd6c.php(17):\
    \ candidate(1)\n#2 /tmp/tmp1umjfd6c.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp1umjfd6c.php\
    \ on line 4\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($x) {\n       \
    \ return is_prime($x);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp4g2q2i8j.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmp4g2q2i8j.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmp4g2q2i8j.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmp4g2q2i8j.php(21): candidate(1)\n#4 /tmp/tmp4g2q2i8j.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp4g2q2i8j.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmlm_hsfj.php:18\n\
    Stack trace:\n#0 /tmp/tmpmlm_hsfj.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpmlm_hsfj.php\
    \ on line 18\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n  $fib = [1, 1];\n  $i = 2;\n  while\
    \ (count($fib) < $n) {\n    $fib[] = $fib[$i - 1] + $fib[$i - 2];\n    $i++;\n\
    \  }\n  $fib = array_filter($fib, 'is_prime');\n  return $fib[$n - 1];\n}\n\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpe5fydlne.php:10\nStack trace:\n#0 /tmp/tmpe5fydlne.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpe5fydlne.php(15): prime_fib(1)\n\
    #2 /tmp/tmpe5fydlne.php(19): candidate(1)\n#3 /tmp/tmpe5fydlne.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpe5fydlne.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($number) {\n  \
    \      return is_prime($number);\n    });\n    return $fib[$n - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpqnp33jlp.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmpqnp33jlp.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpqnp33jlp.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpqnp33jlp.php(21): candidate(1)\n#4 /tmp/tmpqnp33jlp.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpqnp33jlp.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n\t$fib = [1, 1];\n\t$i = 2;\n\t\
    while (count($fib) < $n) {\n\t\t$fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\t\t\
    $i++;\n\t}\n\t$fib = array_filter($fib, function($num) {\n\t\treturn is_prime($num);\n\
    \t});\n\treturn $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpmnz9x2i6.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmpmnz9x2i6.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpmnz9x2i6.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpmnz9x2i6.php(21): candidate(1)\n#4 /tmp/tmpmnz9x2i6.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmnz9x2i6.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [0, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpwybt22w3.php:10\nStack trace:\n#0 /tmp/tmpwybt22w3.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpwybt22w3.php(15): prime_fib(1)\n\
    #2 /tmp/tmpwybt22w3.php(19): candidate(1)\n#3 /tmp/tmpwybt22w3.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpwybt22w3.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($n) {\n       \
    \ return is_prime($n);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp_mecc7od.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmp_mecc7od.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmp_mecc7od.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmp_mecc7od.php(21): candidate(1)\n#4 /tmp/tmp_mecc7od.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp_mecc7od.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while ($i < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n      \
    \  $i++;\n    }\n    $fib = array_reverse($fib);\n    $prime_fib = [];\n    foreach\
    \ ($fib as $number) {\n        if (is_prime($number)) {\n            $prime_fib[]\
    \ = $number;\n        }\n    }\n    return $prime_fib[$n - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp55h5j3g2.php:13\nStack trace:\n#0 /tmp/tmp55h5j3g2.php(21): prime_fib(1)\n\
    #1 /tmp/tmp55h5j3g2.php(25): candidate(1)\n#2 /tmp/tmp55h5j3g2.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmp55h5j3g2.php on line 13\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [0, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpemk9iy2j.php:8\nStack trace:\n#0 /tmp/tmpemk9iy2j.php(19): prime_fib(1)\n\
    #1 /tmp/tmpemk9iy2j.php(23): candidate(1)\n#2 /tmp/tmpemk9iy2j.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpemk9iy2j.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while ($i < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n    \
    \    $i++;\n    }\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprmxzi3bu.php:18\n\
    Stack trace:\n#0 /tmp/tmprmxzi3bu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmprmxzi3bu.php\
    \ on line 18\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = fib($n);\n    if (is_prime($fib))\
    \ {\n        return $fib;\n    } else {\n        return prime_fib($n + 1);\n \
    \   }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmp1umjfd6c.php:4\n\
    Stack trace:\n#0 /tmp/tmp1umjfd6c.php(13): prime_fib(1)\n#1 /tmp/tmp1umjfd6c.php(17):\
    \ candidate(1)\n#2 /tmp/tmp1umjfd6c.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp1umjfd6c.php\
    \ on line 4\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp4iwbzhue.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmp4iwbzhue.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmp4iwbzhue.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmp4iwbzhue.php(21): candidate(1)\n#4 /tmp/tmp4iwbzhue.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp4iwbzhue.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n\t$fib = [1, 1];\n\t$i = 2;\n\t\
    while (count($fib) < $n) {\n\t\t$fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\t\t\
    $i++;\n\t}\n\t$fib = array_filter($fib, 'is_prime');\n\treturn $fib[$n - 1];\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmp98djuc50.php:10\nStack trace:\n#0 /tmp/tmp98djuc50.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmp98djuc50.php(15): prime_fib(1)\n\
    #2 /tmp/tmp98djuc50.php(19): candidate(1)\n#3 /tmp/tmp98djuc50.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmp98djuc50.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    return $fib[$n - 1];\n}\n\necho prime_fib(1) . \"\\\
    n\";\necho prime_fib(2) . \"\\n\";\necho prime_fib(3) . \"\\n\";\necho prime_fib(4)\
    \ . \"\\n\";\necho prime_fib(5) . \"\\n\";\necho prime_fib(6) . \"\\n\";\necho\
    \ prime_fib(7) . \"\\n\";\necho prime_fib(8) . \"\\n\";\necho prime_fib(9) . \"\
    \\n\";\necho prime_fib(10) . \"\\n\";\necho prime_fib(11) . \"\\n\";\necho prime_fib(12)\
    \ . \"\\n\";\necho prime_fib(13) . \"\\n\";\necho prime_fib(14) . \"\\n\";\necho\
    \ prime_fib(15) . \"\\n\";\necho prime_fib(16) . \"\\n\";\necho prime_fib(17)\
    \ . \"\\n\";\necho prime_fib(18) . \"\\n\";\necho prime_fib(19) . \"\\n\";\necho\
    \ prime_fib(20) . \"\\n\";\necho prime_fib(21) . \"\\n\";\necho prime_fib(22)\
    \ . \"\\n\";\necho prime_fib(23) . \"\\n\";\necho prime_fib(24) . \"\\n\";\necho\
    \ prime_fib(25) . \"\\n\";\necho prime_fib(26) . \"\\n\";\necho prime_fib(27)\
    \ . \"\\n\";\necho prime_fib(28) . \"\\n\";\necho prime_fib(29) . \"\\n\";\necho\
    \ prime_fib(30) . \"\\n\";\necho prime_fib(31) . \"\\n\";\necho prime_fib(32)\
    \ . \"\\n\";\necho prime_fib(33) . \"\\n\nfunction candidate(...$args) {\n   \
    \ return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "Test", expecting "," or ";"
    in /tmp/tmp4zxqy3zy.php on line 51

    '
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n  $fib = [1, 1];\n  $i = 2;\n  while\
    \ (count($fib) < $n) {\n    $fib[] = $fib[$i - 1] + $fib[$i - 2];\n    $i++;\n\
    \  }\n  return $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg0kalmrg.php:18\n\
    Stack trace:\n#0 /tmp/tmpg0kalmrg.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpg0kalmrg.php\
    \ on line 18\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = array(0, 1);\n    $i\
    \ = 2;\n    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i\
    \ - 2];\n        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n  \
    \  return $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpg85nijby.php:10\nStack trace:\n#0 /tmp/tmpg85nijby.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpg85nijby.php(15): prime_fib(1)\n\
    #2 /tmp/tmpg85nijby.php(19): candidate(1)\n#3 /tmp/tmpg85nijby.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpg85nijby.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   if ($num == 1) {\n            return false;\n        }\n        for ($i =\
    \ 2; $i < $num; $i++) {\n            if ($num % $i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    });\n    return\
    \ $fib[$n - 1];\n}\n\necho prime_fib(1) . \"\\n\";\necho prime_fib(2) . \"\\n\"\
    ;\necho prime_fib(3) . \"\\n\";\necho prime_fib(4) . \"\\n\";\necho prime_fib(5)\
    \ . \"\\n\";\necho prime_fib(6) . \"\\n\";\necho prime_fib(7) . \"\\n\";\necho\
    \ prime_fib(8) . \"\\n\";\necho prime_fib(9) . \"\\n\";\necho prime_fib(10) .\
    \ \"\\n\";\necho prime_fib(11) . \"\\n\";\necho prime_fib(12) . \"\\n\";\necho\
    \ prime_fib(13) . \"\\n\";\necho prime_fib(14) . \"\\n\";\necho prime_fib(15)\
    \ . \"\\n\";\necho prime_fib(16) . \"\\n\";\necho prime_fib(17) . \"\\n\";\necho\
    \ prime_fib(18) . \"\\n\";\necho prime_fib(19) . \"\\n\";\necho prime_fib(20)\
    \ . \"\\n\";\necho prime_fib(21) . \"\\n\";\necho prime_fib(22) . \"\\n\";\necho\
    \ prime_fib(23) . \"\\n\";\necho prime_fib(24) . \"\\n\";\necho prime_fib(25)\
    \ . \"\\n\";\necho prime_fib(26) . \"\\n\";\necho prime_fib(27)\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmpvd8s7sdh.php on line 51

    '
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 2];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function($num) {\n      \
    \  return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmppiop0xar.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmppiop0xar.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmppiop0xar.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmppiop0xar.php(21): candidate(1)\n#4 /tmp/tmppiop0xar.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmppiop0xar.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp4iwbzhue.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmp4iwbzhue.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmp4iwbzhue.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmp4iwbzhue.php(21): candidate(1)\n#4 /tmp/tmp4iwbzhue.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp4iwbzhue.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp4iwbzhue.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmp4iwbzhue.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmp4iwbzhue.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmp4iwbzhue.php(21): candidate(1)\n#4 /tmp/tmp4iwbzhue.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp4iwbzhue.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = fib($n);\n    if (is_prime($fib))\
    \ {\n        return $fib;\n    } else {\n        return prime_fib($n + 1);\n \
    \   }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmp1umjfd6c.php:4\n\
    Stack trace:\n#0 /tmp/tmp1umjfd6c.php(13): prime_fib(1)\n#1 /tmp/tmp1umjfd6c.php(17):\
    \ candidate(1)\n#2 /tmp/tmp1umjfd6c.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp1umjfd6c.php\
    \ on line 4\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [0, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n === 0) {\n\
    \                return $fib[$i];\n            }\n        }\n        $i++;\n \
    \   }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpl8a2_pyn.php:8\nStack trace:\n#0 /tmp/tmpl8a2_pyn.php(19): prime_fib(1)\n\
    #1 /tmp/tmpl8a2_pyn.php(23): candidate(1)\n#2 /tmp/tmpl8a2_pyn.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpl8a2_pyn.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpyb4ju182.php:10\nStack trace:\n#0 /tmp/tmpyb4ju182.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpyb4ju182.php(15): prime_fib(1)\n\
    #2 /tmp/tmpyb4ju182.php(19): candidate(1)\n#3 /tmp/tmpyb4ju182.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpyb4ju182.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [0, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($num) {\n     \
    \   return is_prime($num);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpcy3kcbcy.php:11\nStack trace:\n#0 [internal function]: {closure}(0)\n\
    #1 /tmp/tmpcy3kcbcy.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpcy3kcbcy.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmpcy3kcbcy.php(21): candidate(1)\n#4 /tmp/tmpcy3kcbcy.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpcy3kcbcy.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, function ($x) {\n       \
    \ return is_prime($x);\n    });\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp4g2q2i8j.php:11\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmp4g2q2i8j.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmp4g2q2i8j.php(17):\
    \ prime_fib(1)\n#3 /tmp/tmp4g2q2i8j.php(21): candidate(1)\n#4 /tmp/tmp4g2q2i8j.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp4g2q2i8j.php on line 11\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    $fib = array_filter($fib, 'is_prime');\n    return\
    \ $fib[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpbd9b6kzy.php:10\nStack trace:\n#0 /tmp/tmpbd9b6kzy.php(10):\
    \ array_filter(Array, 'is_prime')\n#1 /tmp/tmpbd9b6kzy.php(15): prime_fib(1)\n\
    #2 /tmp/tmpbd9b6kzy.php(19): candidate(1)\n#3 /tmp/tmpbd9b6kzy.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmpbd9b6kzy.php on line 10\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [0, 1];\n    $i = 2;\n\
    \    while (count($fib) < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n\
    \        $i++;\n    }\n    return $fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo84961th.php:18\n\
    Stack trace:\n#0 /tmp/tmpo84961th.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpo84961th.php\
    \ on line 18\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $prime_fib\
    \ = [];\n    $i = 2;\n    while (count($prime_fib) < $n) {\n        $fib[$i] =\
    \ $fib[$i - 1] + $fib[$i - 2];\n        if (is_prime($fib[$i])) {\n          \
    \  $prime_fib[] = $fib[$i];\n        }\n        $i++;\n    }\n    return $prime_fib[$n\
    \ - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpw3aq1kg8.php:9\nStack trace:\n#0 /tmp/tmpw3aq1kg8.php(18): prime_fib(1)\n\
    #1 /tmp/tmpw3aq1kg8.php(22): candidate(1)\n#2 /tmp/tmpw3aq1kg8.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpw3aq1kg8.php on line 9\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\nfunction prime_fib($n) {\n    $fib = [1, 1];\n    $i = 2;\n\
    \    while (true) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n       \
    \ if (is_prime($fib[$i])) {\n            $n--;\n            if ($n == 0) {\n \
    \               return $fib[$i];\n            }\n        }\n        $i++;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0k000h80.php:8\nStack trace:\n#0 /tmp/tmp0k000h80.php(19): prime_fib(1)\n\
    #1 /tmp/tmp0k000h80.php(23): candidate(1)\n#2 /tmp/tmp0k000h80.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0k000h80.php on line 8\n"
  timestamp: 1660028515

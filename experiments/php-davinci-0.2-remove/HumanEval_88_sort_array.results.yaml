language: php
name: HumanEval_88_sort_array
results:
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $first = $array[0];\n    $last = $array[count($array) - 1];\n    $sum\
    \ = $first + $last;\n    if ($sum % 2 == 0) {\n        rsort($array);\n    } else\
    \ {\n        sort($array);\n    }\n    return $array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $first = $array[0];\n  $last = end($array);\n  $sum = $first + $last;\n\
    \  if ($sum % 2 == 0) {\n    rsort($array);\n  } else {\n    sort($array);\n \
    \ }\n  return $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730926
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4,\
    \ 5, 6, 7];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8];\n\
    print_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(sort\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyqkhq4i_.php on line 53

    '
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\n$array = [1, 3, 2,\
    \ 4, 5];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6];\nprint_r(sort_array($array));\n\
    \n$array = [1, 3, 2, 4, 5, 6];\nprint_r(sort_array($array));\n\n$array = [1, 2,\
    \ 3, 4, 5, 6, 7];\nprint_r(sort_array($array));\n\n$array = [1, 3, 2, 4, 5, 6,\
    \ 7];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8];\nprint_r(sort_array($array));\n\
    \n$array = [1, 3, 2, 4, 5, 6, 7, 8];\nprint_r(sort_array($array));\n\n$array =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\n$array = [1, 3,\
    \ 2, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n$array = [1, 3, 2, 4, 5,\
    \ 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n$array = [1, 3, 2, 4, 5,\
    \ 6, 7, 8, 9, 10, 11];\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4]\
    \ => 1\n)\nArray\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n\
    \    [4] => 1\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3]\
    \ => 4\n    [4] => 5\n    [5] => 6\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n\
    \    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\nArray\n(\n    [0]\
    \ => 7\n    [1] => 6\n    [2] => 5\n    [3] => 4\n    [4] => 3\n    [5] => 2\n\
    \    [6] => 1\n)\nArray\n(\n    [0] => 7\n    [1] => 6\n    [2] => 5\n    [3]\
    \ => 4\n    [4] => 3\n    [5] => 2\n    [6] => 1\n)\nArray\n(\n    [0] => 1\n\
    \    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6]\
    \ => 7\n    [7] => 8\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n\
    \    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n)\nArray\n\
    (\n    [0] => 9\n    [1] => 8\n    [2] => 7\n    [3] => 6\n    [4] => 5\n    [5]\
    \ => 4\n    [6] => 3\n    [7] => 2\n    [8] => 1\n)\nArray\n(\n    [0] => 9\n\
    \    [1] => 8\n    [2] => 7\n    [3] => 6\n    [4] => 5\n    [5] => 4\n    [6]\
    \ => 3\n    [7] => 2\n    [8] => 1\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n\
    \    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7]\
    \ => 8\n    [8] => 9\n    [9] => 10\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n\
    \    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7]\
    \ => 8\n    [8] => 9\n    [9] => 10\n)\nArray\n(\n    [0] => 11\n    [1] => 10\n\
    \    [2] => 9\n    [3] => 8\n    [4] => 7\n    [5] => 6\n    [6] => 5\n    [7]\
    \ => 4\n    [8] => 3\n    [9] => 2\n    [10] => 1\n)\n"
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4,\
    \ 5, 6, 7];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8];\n\
    print_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(sort\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyqkhq4i_.php on line 53

    '
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nvar_dump(sort_array([1, 2, 3, 4, 5])); // [1, 3, 5, 4, 2]\nvar_dump(sort_array([1,\
    \ 2, 3, 4, 5, 6])); // [1, 3, 5, 6, 4, 2]\nvar_dump(sort_array([1, 2, 3, 4, 5,\
    \ 6, 7])); // [1, 3, 5, 7, 6, 4, 2]\nvar_dump(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8])); // [1, 3, 5, 7, 2, 4, 6, 8]\nvar_dump(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9])); // [1, 3, 5, 7, 9, 8, 6, 4, 2]\nvar_dump(sort_array([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10])); // [1, 3, 5, 7, 9, 10, 8, 6, 4, 2]\nvar_dump(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])); // [1, 3, 5, 7, 9, 11, 10, 8, 6, 4, 2]\n\
    var_dump(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])); // [1, 3, 5, 7,\
    \ 9, 11, 12, 10, 8, 6, 4, 2]\nvar_dump(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13])); // [1, 3, 5, 7, 9, 11, 13, 12, 10, 8, 6, 4, 2]\nvar_dump(sort_array([1,\
    \ 2, 3, 4, 5\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwh79viiu.php on line 28

    '
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 === 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5])); // [1,\
    \ 3, 5, 4, 2]\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1, 2,\
    \ 3, 4, 5, 6])); // [5, 3, 1, 2, 4, 6]\necho \"</pre>\";\n\necho \"<pre>\";\n\
    print_r(sort_array([1, 2, 3, 4, 5, 6, 7])); // [1, 3, 5, 7, 6, 4, 2]\necho \"\
    </pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8])); //\
    \ [5, 3, 1, 2, 4, 6, 8, 7]\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9])); // [1, 3, 5, 7, 9, 8, 6, 4, 2]\necho \"</pre>\";\n\
    \necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [5,\
    \ 3, 1, 2, 4, 6, 8, 10, 9, 7]\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])); // [1, 3, 5, 7, 9, 11, 10, 8, 6, 4, 2]\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12])); // [5,\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n\
    \    [4] => 1\n)\n</pre><pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] =>\
    \ 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\n</pre><pre>Array\n(\n    [0]\
    \ => 7\n    [1] => 6\n    [2] => 5\n    [3] => 4\n    [4] => 3\n    [5] => 2\n\
    \    [6] => 1\n)\n</pre><pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] =>\
    \ 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n)\n\
    </pre><pre>Array\n(\n    [0] => 9\n    [1] => 8\n    [2] => 7\n    [3] => 6\n\
    \    [4] => 5\n    [5] => 4\n    [6] => 3\n    [7] => 2\n    [8] => 1\n)\n</pre><pre>Array\n\
    (\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5]\
    \ => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n</pre><pre>Array\n\
    (\n    [0] => 11\n    [1] => 10\n    [2] => 9\n    [3] => 8\n    [4] => 7\n  \
    \  [5] => 6\n    [6] => 5\n    [7] => 4\n    [8] => 3\n    [9] => 2\n    [10]\
    \ => 1\n)\n</pre><pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n   \
    \ [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] =>\
    \ 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n)\n"
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $first = $array[0];\n    $last = $array[count($array) - 1];\n    $sum\
    \ = $first + $last;\n    if ($sum % 2 == 0) {\n        rsort($array);\n    } else\
    \ {\n        sort($array);\n    }\n    return $array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4,\
    \ 5, 6, 7];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8];\n\
    print_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(sort\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyqkhq4i_.php on line 53

    '
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5])); // [1, 3,\
    \ 5, 4, 2]\necho \"</pre>\";\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4,\
    \ 5, 6])); // [5, 3, 1, 2, 4, 6]\necho \"</pre>\";\necho \"<pre>\";\nprint_r(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7])); // [1, 3, 5, 7, 6, 4, 2]\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8])); // [5, 3, 1, 2, 4, 6, 8, 7]\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9])); // [1, 3, 5, 7, 9, 8, 6, 4, 2]\necho \"</pre>\";\necho \"<pre>\";\nprint_r(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [5, 3, 1, 2, 4, 6, 8, 10, 9, 7]\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\
    \ // [1, 3, 5, 7, 9, 11, 10, 8, 6, 4, 2]\necho \"</pre>\";\necho \"<pre>\";\n\
    print_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])); // [5, 3, 1, 2,\
    \ 4,\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n\
    \    [4] => 1\n)\n</pre><pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] =>\
    \ 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\n</pre><pre>Array\n(\n    [0]\
    \ => 7\n    [1] => 6\n    [2] => 5\n    [3] => 4\n    [4] => 3\n    [5] => 2\n\
    \    [6] => 1\n)\n</pre><pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] =>\
    \ 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n)\n\
    </pre><pre>Array\n(\n    [0] => 9\n    [1] => 8\n    [2] => 7\n    [3] => 6\n\
    \    [4] => 5\n    [5] => 4\n    [6] => 3\n    [7] => 2\n    [8] => 1\n)\n</pre><pre>Array\n\
    (\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5]\
    \ => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n</pre><pre>Array\n\
    (\n    [0] => 11\n    [1] => 10\n    [2] => 9\n    [3] => 8\n    [4] => 7\n  \
    \  [5] => 6\n    [6] => 5\n    [7] => 4\n    [8] => 3\n    [9] => 2\n    [10]\
    \ => 1\n)\n</pre><pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n   \
    \ [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] =>\
    \ 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n)\n"
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $first = $array[0];\n  $last = end($array);\n  $sum = $first + $last;\n\
    \  if ($sum % 2 == 0) {\n    rsort($array);\n  } else {\n    sort($array);\n \
    \ }\n  return $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 === 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nprint_r(sort_array([1, 2, 3, 4, 5]));\nprint_r(sort_array([1, 2, 3, 4, 5, 6]));\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4]\
    \ => 1\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n\
    \    [4] => 5\n    [5] => 6\n)\n"
  timestamp: 1659730926
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4,\
    \ 5, 6, 7];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8];\n\
    print_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(sort\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyqkhq4i_.php on line 53

    '
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 === 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4]\
    \ => 1\n)\n"
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nvar_dump(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6];\nvar_dump(sort_array($array));\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "array(5) {\n  [0]=>\n  int(5)\n  [1]=>\n  int(4)\n  [2]=>\n  int(3)\n \
    \ [3]=>\n  int(2)\n  [4]=>\n  int(1)\n}\narray(6) {\n  [0]=>\n  int(1)\n  [1]=>\n\
    \  int(2)\n  [2]=>\n  int(3)\n  [3]=>\n  int(4)\n  [4]=>\n  int(5)\n  [5]=>\n\
    \  int(6)\n}\n"
  timestamp: 1659730926
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4,\
    \ 5, 6, 7];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8];\n\
    print_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(sort\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyqkhq4i_.php on line 53

    '
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  if(array_sum($array) % 2 == 0) {\n    rsort($array);\n  } else {\n    sort($array);\n\
    \  }\n  return $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7coyc45.php:25\n\
    Stack trace:\n#0 /tmp/tmpp7coyc45.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpp7coyc45.php\
    \ on line 25\n"
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 3, 2, 4, 5];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5,\
    \ 6];\nprint_r(sort_array($array));\n\n$array = [1, 3, 2, 4, 5, 6];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7];\nprint_r(sort_array($array));\n\n$array = [1,\
    \ 3, 2, 4, 5, 6, 7];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5,\
    \ 6, 7, 8];\nprint_r(sort_array($array));\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8];\n\
    print_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\
    \n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n$array =\
    \ [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n$array = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n$array = [1,\
    \ 3, 2, 4, 5, 6, 7, 8, 9, 10, 11];\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4]\
    \ => 1\n)\nArray\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n\
    \    [4] => 1\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3]\
    \ => 4\n    [4] => 5\n    [5] => 6\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n\
    \    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\nArray\n(\n    [0]\
    \ => 7\n    [1] => 6\n    [2] => 5\n    [3] => 4\n    [4] => 3\n    [5] => 2\n\
    \    [6] => 1\n)\nArray\n(\n    [0] => 7\n    [1] => 6\n    [2] => 5\n    [3]\
    \ => 4\n    [4] => 3\n    [5] => 2\n    [6] => 1\n)\nArray\n(\n    [0] => 1\n\
    \    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6]\
    \ => 7\n    [7] => 8\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n\
    \    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n)\nArray\n\
    (\n    [0] => 9\n    [1] => 8\n    [2] => 7\n    [3] => 6\n    [4] => 5\n    [5]\
    \ => 4\n    [6] => 3\n    [7] => 2\n    [8] => 1\n)\nArray\n(\n    [0] => 9\n\
    \    [1] => 8\n    [2] => 7\n    [3] => 6\n    [4] => 5\n    [5] => 4\n    [6]\
    \ => 3\n    [7] => 2\n    [8] => 1\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n\
    \    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7]\
    \ => 8\n    [8] => 9\n    [9] => 10\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n\
    \    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7]\
    \ => 8\n    [8] => 9\n    [9] => 10\n)\nArray\n(\n    [0] => 11\n    [1] => 10\n\
    \    [2] => 9\n    [3] => 8\n    [4] => 7\n    [5] => 6\n    [6] => 5\n    [7]\
    \ => 4\n    [8] => 3\n    [9] => 2\n    [10] => 1\n)\n"
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4]\
    \ => 1\n)\n"
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $first = $array[0];\n    $last = $array[count($array) - 1];\n    $sum\
    \ = $first + $last;\n    if ($sum % 2 == 0) {\n        rsort($array);\n    } else\
    \ {\n        sort($array);\n    }\n    return $array;\n}\n\n$array = [1, 2, 3,\
    \ 4, 5];\nprint_r(sort_array($array));\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4]\
    \ => 1\n)\n"
  timestamp: 1659730926
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $first = $array[0];\n  $last = $array[count($array) - 1];\n  $sum = $first\
    \ + $last;\n  if ($sum % 2 == 0) {\n    rsort($array);\n  } else {\n    sort($array);\n\
    \  }\n  return $array;\n}\n\n$array = [1, 2, 3, 4, 5];\necho \"Given array: \"\
    ;\nprint_r($array);\necho \"<br>\";\necho \"Sorted array: \";\nprint_r(sort_array($array));\n\
    echo \"<br>\";\necho \"<br>\";\n\n$array = [1, 2, 3, 4, 5, 6];\necho \"Given array:\
    \ \";\nprint_r($array);\necho \"<br>\";\necho \"Sorted array: \";\nprint_r(sort_array($array));\n\
    echo \"<br>\";\necho \"<br>\";\n\n$array = [1, 2, 3, 4, 5, 6, 7];\necho \"Given\
    \ array: \";\nprint_r($array);\necho \"<br>\";\necho \"Sorted array: \";\nprint_r(sort_array($array));\n\
    echo \"<br>\";\necho \"<br>\";\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8];\necho \"\
    Given array: \";\nprint_r($array);\necho \"<br>\";\necho \"Sorted array: \";\n\
    print_r(sort_array($array));\necho \"<br>\";\necho \"<br>\";\n\n$array = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9];\necho \"Given array: \";\nprint_r($array);\necho \"<br>\"\
    ;\necho \"Sorted array: \";\nprint_r(sort_array($array));\necho \"<br>\";\necho\
    \ \"<br>\";\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho \"Given array:\
    \ \";\nprint_r($array);\necho \"<br>\";\necho \"Sorted array: \";\nprint_r(sort_array($array));\n\
    echo \"<br\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpux03fu72.php on line 77

    '
  timestamp: 1659730926
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\necho '<pre>';\nprint_r(sort_array([1, 2, 3, 4, 5]));\necho '</pre>';\n\
    \necho '<pre>';\nprint_r(sort_array([1, 2, 3, 4, 5, 6]));\necho '</pre>';\n\n\
    echo '<pre>';\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7]));\necho '</pre>';\n\n\
    echo '<pre>';\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8]));\necho '</pre>';\n\
    \necho '<pre>';\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9]));\necho '</pre>';\n\
    \necho '<pre>';\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\necho '</pre>';\n\
    \necho '<pre>';\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\necho\
    \ '</pre>';\n\necho '<pre>';\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12]));\necho '</pre>';\n\necho '<pre>';\nprint_r(sort_array([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13]));\necho '</pre>';\n\necho '<pre>';\nprint_r(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]));\necho '</pre>';\n\necho '<pre>';\n\
    print_\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp6nswh9xg.php on line 60

    '
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \necho sort_array([1, 2, 3, 4, 5]);\necho sort_array([1, 2, 3, 4, 5, 6]);\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ArrayArray
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3,\
    \ 4, 5, 6];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7];\n\
    print_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n$array =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(sort\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_hltq9su.php on line 53

    '
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($arr));\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730926
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3,\
    \ 4, 5, 6];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7];\n\
    print_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n$array =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(sort\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_hltq9su.php on line 53

    '
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 === 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730926
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3,\
    \ 4, 5, 6];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7];\n\
    print_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n$array =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(sort\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_hltq9su.php on line 53

    '
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5])); // [1,\
    \ 3, 5, 4, 2]\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1, 2,\
    \ 3, 4, 5, 6])); // [1, 3, 5, 6, 4, 2]\necho \"</pre>\";\n\necho \"<pre>\";\n\
    print_r(sort_array([1, 2, 3, 4, 5, 6, 7])); // [1, 3, 5, 7, 6, 4, 2]\necho \"\
    </pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8])); //\
    \ [1, 3, 5, 7, 8, 6, 4, 2]\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9])); // [1, 3, 5, 7, 9, 8, 6, 4, 2]\necho \"</pre>\";\n\
    \necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); // [1,\
    \ 3, 5, 7, 9, 10, 8, 6, 4, 2]\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])); // [1, 3, 5, 7, 9, 11, 10, 8, 6, 4, 2]\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12])); // [1,\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n\
    \    [4] => 1\n)\n</pre><pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] =>\
    \ 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\n</pre><pre>Array\n(\n    [0]\
    \ => 7\n    [1] => 6\n    [2] => 5\n    [3] => 4\n    [4] => 3\n    [5] => 2\n\
    \    [6] => 1\n)\n</pre><pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] =>\
    \ 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n)\n\
    </pre><pre>Array\n(\n    [0] => 9\n    [1] => 8\n    [2] => 7\n    [3] => 6\n\
    \    [4] => 5\n    [5] => 4\n    [6] => 3\n    [7] => 2\n    [8] => 1\n)\n</pre><pre>Array\n\
    (\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5]\
    \ => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n</pre><pre>Array\n\
    (\n    [0] => 11\n    [1] => 10\n    [2] => 9\n    [3] => 8\n    [4] => 7\n  \
    \  [5] => 6\n    [6] => 5\n    [7] => 4\n    [8] => 3\n    [9] => 2\n    [10]\
    \ => 1\n)\n</pre><pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n   \
    \ [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] =>\
    \ 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n)\n"
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $odd = [];\n  $even = [];\n  $result = [];\n  for ($i = 0; $i < count($array);\
    \ $i++) {\n    if ($array[$i] % 2 == 0) {\n      $even[] = $array[$i];\n    }\
    \ else {\n      $odd[] = $array[$i];\n    }\n  }\n  rsort($even);\n  sort($odd);\n\
    \  for ($i = 0; $i < count($array); $i++) {\n    if ($array[$i] % 2 == 0) {\n\
    \      $result[] = array_shift($even);\n    } else {\n      $result[] = array_shift($odd);\n\
    \    }\n  }\n  return $result;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 8\n    [2] => 3\n    [3] => 6\n    [4]\
    \ => 5\n    [5] => 4\n    [6] => 7\n    [7] => 2\n    [8] => 9\n)\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpftuqcoob.php:40\nStack trace:\n\
    #0 /tmp/tmpftuqcoob.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpftuqcoob.php\
    \ on line 40\n"
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5])); // [1,\
    \ 3, 5, 4, 2]\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([5, 3,\
    \ 2, 8, 1, 4])); // [1, 3, 5, 8, 4, 2]\necho \"</pre>\";\n\necho \"<pre>\";\n\
    print_r(sort_array([5, 3, 1, 8, 0])); // [1, 3, 5, 8, 0]\necho \"</pre>\";\n\n\
    echo \"<pre>\";\nprint_r(sort_array([])); // []\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n\
    \    [4] => 1\n)\n</pre><pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] =>\
    \ 3\n    [3] => 4\n    [4] => 5\n    [5] => 8\n)\n</pre><pre>Array\n(\n    [0]\
    \ => 0\n    [1] => 1\n    [2] => 3\n    [3] => 5\n    [4] => 8\n)\n</pre><pre>Array\n\
    (\n)\n</pre>"
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3,\
    \ 4, 5, 6];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7];\n\
    print_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n$array =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(sort\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_hltq9su.php on line 53

    '
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5]));\necho \"\
    </pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6]));\necho \"\
    </pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7]));\necho\
    \ \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8]));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9]));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10]));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\necho \"</pre>\";\n\necho \"<pre>\";\n\
    print_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14]));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp7e3qkvxo.php on line 60

    '
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 === 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    echo \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5]));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6]));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7]));\necho \"</pre>\";\n\
    echo \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8]));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9]));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(sort_array([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]));\necho\
    \ \"</pre>\";\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8,\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp58qqua9a.php on line 49

    '
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4,\
    \ 5, 6, 7];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8];\n\
    print_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(sort\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyqkhq4i_.php on line 53

    '
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4]\
    \ => 1\n)\n"
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4]\
    \ => 1\n)\n"
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 === 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4,\
    \ 5, 6, 7];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8];\n\
    print_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(sort\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyqkhq4i_.php on line 53

    '
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 === 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $result = [];\n    $sum = $array[0] + $array[count($array) - 1];\n  \
    \  if ($sum % 2 == 0) {\n        rsort($array);\n    } else {\n        sort($array);\n\
    \    }\n    return $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4]\
    \ => 1\n)\n"
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $first = $array[0];\n    $last = $array[count($array) - 1];\n    $sum\
    \ = $first + $last;\n    if ($sum % 2 == 0) {\n        rsort($array);\n    } else\
    \ {\n        sort($array);\n    }\n    return $array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5]));\necho \"\
    </pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6]));\necho \"\
    </pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7]));\necho\
    \ \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8]));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9]));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10]));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\necho \"</pre>\";\n\necho \"<pre>\";\n\
    print_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14]));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp7e3qkvxo.php on line 60

    '
  timestamp: 1659730926
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nprint_r(sort_array([1, 2, 3, 4, 5]));\nprint_r(sort_array([1, 2, 3, 4, 5, 6]));\n\
    print_r(sort_array([1, 2, 3, 4, 5, 6, 7]));\nprint_r(sort_array([1, 2, 3, 4, 5,\
    \ 6, 7, 8]));\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nprint_r(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]));\nprint_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\n\
    print_r(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nprint_r(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]));\nprint_r(sort_array([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\nprint_r(sort_array([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]));\nprint_r(sort_array([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]));\nprint_r(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpkj32bqp3.php on line 32

    '
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4]\
    \ => 1\n)\n"
  timestamp: 1659730926
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4,\
    \ 5, 6, 7];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8];\n\
    print_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(sort\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyqkhq4i_.php on line 53

    '
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \necho sort_array([1,2,3,4,5]) . PHP_EOL;\necho sort_array([1,2,3,4,5,6]) . PHP_EOL;\n\
    echo sort_array([1,2,3,4,5,6,7]) . PHP_EOL;\necho sort_array([1,2,3,4,5,6,7,8])\
    \ . PHP_EOL;\necho sort_array([1,2,3,4,5,6,7,8,9]) . PHP_EOL;\necho sort_array([1,2,3,4,5,6,7,8,9,10])\
    \ . PHP_EOL;\necho sort_array([1,2,3,4,5,6,7,8,9,10,11]) . PHP_EOL;\necho sort_array([1,2,3,4,5,6,7,8,9,10,11,12])\
    \ . PHP_EOL;\necho sort_array([1,2,3,4,5,6,7,8,9,10,11,12,13]) . PHP_EOL;\necho\
    \ sort_array([1,2,3,4,5,6,7,8,9,10,11,12,13,14]) . PHP_EOL;\necho sort_array([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])\
    \ . PHP_EOL;\necho sort_array([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]) . PHP_EOL;\n\
    echo sort_array([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]) . PHP_EOL;\necho\
    \ sort_array([1,\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpkmls0jpf.php on line 32

    '
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $first = $array[0];\n    $last = $array[count($array) - 1];\n    $sum\
    \ = $first + $last;\n    if ($sum % 2 == 0) {\n        rsort($array);\n    } else\
    \ {\n        sort($array);\n    }\n    return $array;\n}\n\n$array = [1, 2, 3,\
    \ 4, 5];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7];\nprint_r(sort_array($array));\n\n$array = [1,\
    \ 2, 3, 4, 5, 6, 7, 8];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(sort_array($array));\n\n$array = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpog1c5j26.php on line 54

    '
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 3, 2, 4, 5];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5,\
    \ 6];\nprint_r(sort_array($array));\n\n$array = [1, 3, 2, 4, 5, 6];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7];\nprint_r(sort_array($array));\n\n$array = [1,\
    \ 3, 2, 4, 5, 6, 7];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5,\
    \ 6, 7, 8];\nprint_r(sort_array($array));\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8];\n\
    print_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\
    \n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n$array =\
    \ [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n$array = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n$array = [1,\
    \ 3, 2, 4, 5, 6, 7, 8, 9, 10, 11];\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4]\
    \ => 1\n)\nArray\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n\
    \    [4] => 1\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3]\
    \ => 4\n    [4] => 5\n    [5] => 6\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n\
    \    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\nArray\n(\n    [0]\
    \ => 7\n    [1] => 6\n    [2] => 5\n    [3] => 4\n    [4] => 3\n    [5] => 2\n\
    \    [6] => 1\n)\nArray\n(\n    [0] => 7\n    [1] => 6\n    [2] => 5\n    [3]\
    \ => 4\n    [4] => 3\n    [5] => 2\n    [6] => 1\n)\nArray\n(\n    [0] => 1\n\
    \    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6]\
    \ => 7\n    [7] => 8\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n\
    \    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n)\nArray\n\
    (\n    [0] => 9\n    [1] => 8\n    [2] => 7\n    [3] => 6\n    [4] => 5\n    [5]\
    \ => 4\n    [6] => 3\n    [7] => 2\n    [8] => 1\n)\nArray\n(\n    [0] => 9\n\
    \    [1] => 8\n    [2] => 7\n    [3] => 6\n    [4] => 5\n    [5] => 4\n    [6]\
    \ => 3\n    [7] => 2\n    [8] => 1\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n\
    \    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7]\
    \ => 8\n    [8] => 9\n    [9] => 10\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n\
    \    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7]\
    \ => 8\n    [8] => 9\n    [9] => 10\n)\nArray\n(\n    [0] => 11\n    [1] => 10\n\
    \    [2] => 9\n    [3] => 8\n    [4] => 7\n    [5] => 6\n    [6] => 5\n    [7]\
    \ => 4\n    [8] => 3\n    [9] => 2\n    [10] => 1\n)\n"
  timestamp: 1659730926
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4,\
    \ 5, 6, 7];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8];\n\
    print_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(sort\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyqkhq4i_.php on line 53

    '
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\necho \"sort_array([1, 2, 3, 4, 5]) -> \";\nvar_dump(sort_array([1,\
    \ 2, 3, 4, 5]));\necho \"sort_array([1, 3, 2, 4, 5]) -> \";\nvar_dump(sort_array([1,\
    \ 3, 2, 4, 5]));\necho \"sort_array([1, 2, 3, 4, 5, 6]) -> \";\nvar_dump(sort_array([1,\
    \ 2, 3, 4, 5, 6]));\necho \"sort_array([1, 3, 2, 4, 5, 6]) -> \";\nvar_dump(sort_array([1,\
    \ 3, 2, 4, 5, 6]));\necho \"sort_array([1, 2, 3, 4, 5, 6, 7]) -> \";\nvar_dump(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7]));\necho \"sort_array([1, 3, 2, 4, 5, 6, 7]) -> \";\nvar_dump(sort_array([1,\
    \ 3, 2, 4, 5, 6, 7]));\necho \"sort_array([1, 2, 3, 4, 5, 6, 7, 8]) -> \";\nvar_dump(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8]));\necho \"sort_array([1, 3, 2, 4, 5, 6, 7, 8]) -> \";\n\
    var_dump(sort_array([1, 3, 2, 4, 5, 6, 7, 8]));\necho \"sort_array([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9]) -> \";\nvar_dump(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\
    echo \"sort_array([1, 3, 2, 4, 5, 6, 7, 8, 9]) ->\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpo2lyr_6s.php on line 42

    '
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 === 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $odd = [];\n    $even = [];\n    $result = [];\n    $sum = $array[0]\
    \ + $array[count($array) - 1];\n    if ($sum % 2 === 0) {\n        for ($i = 0;\
    \ $i < count($array); $i++) {\n            if ($array[$i] % 2 === 0) {\n     \
    \           $even[] = $array[$i];\n            } else {\n                $odd[]\
    \ = $array[$i];\n            }\n        }\n        sort($even);\n        sort($odd);\n\
    \        for ($i = 0; $i < count($array); $i++) {\n            if ($array[$i]\
    \ % 2 === 0) {\n                $result[] = array_shift($even);\n            }\
    \ else {\n                $result[] = array_shift($odd);\n            }\n    \
    \    }\n    } else {\n        for ($i = 0; $i < count($array); $i++) {\n     \
    \       if ($array[$i] % 2 === 0) {\n                $even[] = $array[$i];\n \
    \           } else {\n                $odd[] = $array[$i];\n            }\n  \
    \      }\n        rsort($even);\n        rsort($odd);\n        for ($i = 0; $i\
    \ < count($array); $i++) {\n            if ($array[$i] % 2 === 0) {\n        \
    \        $result[] = array_shift($even);\n            } else {\n             \
    \   $result[] = array_shift($odd);\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpsfwjerin.php:60\nStack trace:\n\
    #0 /tmp/tmpsfwjerin.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpsfwjerin.php\
    \ on line 60\n"
  timestamp: 1659730926
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4,\
    \ 5, 6, 7];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8];\n\
    print_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(sort\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyqkhq4i_.php on line 53

    '
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $first = $array[0];\n  $last = end($array);\n  $sum = $first + $last;\n\
    \  if ($sum % 2 == 0) {\n    rsort($array);\n  } else {\n    sort($array);\n \
    \ }\n  return $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4,\
    \ 5, 6, 7];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8];\n\
    print_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(sort\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyqkhq4i_.php on line 53

    '
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $first = $array[0];\n    $last = end($array);\n    $sum = $first + $last;\n\
    \    if ($sum % 2 == 0) {\n        rsort($array);\n    } else {\n        sort($array);\n\
    \    }\n    return $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $first = $array[0];\n  $last = $array[count($array) - 1];\n  $sum = $first\
    \ + $last;\n  if ($sum % 2 == 0) {\n    rsort($array);\n  } else {\n    sort($array);\n\
    \  }\n  return $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4,\
    \ 5, 6, 7];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8];\n\
    print_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(sort\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyqkhq4i_.php on line 53

    '
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $first = $array[0];\n    $last = $array[count($array) - 1];\n    $sum\
    \ = $first + $last;\n    if ($sum % 2 == 0) {\n        rsort($array);\n    } else\
    \ {\n        sort($array);\n    }\n    return $array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \necho \"sort_array([1,2,3,4,5]) = \";\nvar_dump(sort_array([1,2,3,4,5]));\necho\
    \ \"sort_array([1,2,3,4,5,6]) = \";\nvar_dump(sort_array([1,2,3,4,5,6]));\necho\
    \ \"sort_array([1,2,3,4,5,6,7]) = \";\nvar_dump(sort_array([1,2,3,4,5,6,7]));\n\
    echo \"sort_array([1,2,3,4,5,6,7,8]) = \";\nvar_dump(sort_array([1,2,3,4,5,6,7,8]));\n\
    echo \"sort_array([1,2,3,4,5,6,7,8,9]) = \";\nvar_dump(sort_array([1,2,3,4,5,6,7,8,9]));\n\
    echo \"sort_array([1,2,3,4,5,6,7,8,9,10]) = \";\nvar_dump(sort_array([1,2,3,4,5,6,7,8,9,10]));\n\
    echo \"sort_array([1,2,3,4,5,6,7,8,9,10,11]) = \";\nvar_dump(sort_array([1,2,3,4,5,6,7,8,9,10,11]));\n\
    echo \"sort_array([1,2,3,4,5,6,7,8,9,10,11,12]) = \";\nvar_dump(sort_array([1,2,3,4,5,6,7,8,9,10,11,12]));\n\
    echo \"sort_array([1,2,3,4,5,6\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmptq_4jbfo.php on line 40

    '
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\necho '<pre>';\nprint_r(sort_array($array));\n\
    echo '</pre>';\n\n$array = [1, 2, 3, 4, 5, 6];\necho '<pre>';\nprint_r(sort_array($array));\n\
    echo '</pre>';\n\n$array = [1, 2, 3, 4, 5, 6, 7];\necho '<pre>';\nprint_r(sort_array($array));\n\
    echo '</pre>';\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8];\necho '<pre>';\nprint_r(sort_array($array));\n\
    echo '</pre>';\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\necho '<pre>';\nprint_r(sort_array($array));\n\
    echo '</pre>';\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho '<pre>';\nprint_r(sort_array($array));\n\
    echo '</pre>';\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\necho '<pre>';\n\
    print_r(sort_array($array));\necho '</pre>';\n\n$array = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12];\necho '<pre>';\nprint_r(sort_array($array));\necho '</pre>';\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\necho '<pre>';\nprint_r(sort_array($array));\n\
    echo '</pre>';\n\n$array = [1, 2,\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxdjfbtcy.php on line 64

    '
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $first = $array[0];\n  $last = $array[count($array) - 1];\n  $sum = $first\
    \ + $last;\n  if ($sum % 2 == 0) {\n    rsort($array);\n  } else {\n    sort($array);\n\
    \  }\n  return $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    if(array_sum($array) % 2 == 0) {\n        rsort($array);\n    } else\
    \ {\n        sort($array);\n    }\n    return $array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxw1lnqq1.php:25\n\
    Stack trace:\n#0 /tmp/tmpxw1lnqq1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxw1lnqq1.php\
    \ on line 25\n"
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4]\
    \ => 1\n)\n"
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $first = $array[0];\n  $last = $array[count($array) - 1];\n  $sum = $first\
    \ + $last;\n  if ($sum % 2 === 0) {\n    rsort($array);\n  } else {\n    sort($array);\n\
    \  }\n  return $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\necho \"<pre>\";\nprint_r(sort_array([1, 2, 3, 4, 5])); // [1,\
    \ 3, 5, 4, 2]\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(sort_array([5, 3,\
    \ 2, 8, 1, 4])); // [1, 3, 5, 8, 4, 2]\necho \"</pre>\";\n\necho \"<pre>\";\n\
    print_r(sort_array([5, 3, 1, 8, 0])); // [1, 3, 5, 8, 0]\necho \"</pre>\";\n\n\
    echo \"<pre>\";\nprint_r(sort_array([])); // []\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n\
    \    [4] => 1\n)\n</pre><pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] =>\
    \ 3\n    [3] => 4\n    [4] => 5\n    [5] => 8\n)\n</pre><pre>Array\n(\n    [0]\
    \ => 0\n    [1] => 1\n    [2] => 3\n    [3] => 5\n    [4] => 8\n)\n</pre><pre>Array\n\
    (\n)\n</pre>"
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 3, 2, 4, 5];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5,\
    \ 6];\nprint_r(sort_array($array));\n\n$array = [1, 3, 2, 4, 5, 6];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7];\nprint_r(sort_array($array));\n\n$array = [1,\
    \ 3, 2, 4, 5, 6, 7];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5,\
    \ 6, 7, 8];\nprint_r(sort_array($array));\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8];\n\
    print_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\
    \n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n$array =\
    \ [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n$array = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n$array = [1,\
    \ 3, 2, 4, 5, 6, 7, 8, 9, 10, 11];\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4]\
    \ => 1\n)\nArray\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n\
    \    [4] => 1\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3]\
    \ => 4\n    [4] => 5\n    [5] => 6\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n\
    \    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\nArray\n(\n    [0]\
    \ => 7\n    [1] => 6\n    [2] => 5\n    [3] => 4\n    [4] => 3\n    [5] => 2\n\
    \    [6] => 1\n)\nArray\n(\n    [0] => 7\n    [1] => 6\n    [2] => 5\n    [3]\
    \ => 4\n    [4] => 3\n    [5] => 2\n    [6] => 1\n)\nArray\n(\n    [0] => 1\n\
    \    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6]\
    \ => 7\n    [7] => 8\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n\
    \    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n)\nArray\n\
    (\n    [0] => 9\n    [1] => 8\n    [2] => 7\n    [3] => 6\n    [4] => 5\n    [5]\
    \ => 4\n    [6] => 3\n    [7] => 2\n    [8] => 1\n)\nArray\n(\n    [0] => 9\n\
    \    [1] => 8\n    [2] => 7\n    [3] => 6\n    [4] => 5\n    [5] => 4\n    [6]\
    \ => 3\n    [7] => 2\n    [8] => 1\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n\
    \    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7]\
    \ => 8\n    [8] => 9\n    [9] => 10\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n\
    \    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7]\
    \ => 8\n    [8] => 9\n    [9] => 10\n)\nArray\n(\n    [0] => 11\n    [1] => 10\n\
    \    [2] => 9\n    [3] => 8\n    [4] => 7\n    [5] => 6\n    [6] => 5\n    [7]\
    \ => 4\n    [8] => 3\n    [9] => 2\n    [10] => 1\n)\n"
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \necho sort_array([1, 2, 3, 4, 5]);\necho sort_array([1, 2, 3, 4, 5, 6]);\necho\
    \ sort_array([1, 2, 3, 4, 5, 6, 7]);\necho sort_array([1, 2, 3, 4, 5, 6, 7, 8]);\n\
    echo sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9]);\necho sort_array([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]);\necho sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]);\necho\
    \ sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);\necho sort_array([1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]);\necho sort_array([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14]);\necho sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15]);\necho sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16]);\necho sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17]);\necho sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17, 18]);\necho sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19]);\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArray
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\n\n$array\
    \ = [1, 2, 3, 4, 5, 6];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4,\
    \ 5, 6, 7];\nprint_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8];\n\
    print_r(sort_array($array));\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(sort_array($array));\n\n\
    $array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(sort_array($array));\n\
    \n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(sort\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyqkhq4i_.php on line 53

    '
  timestamp: 1659730925
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 === 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array)); // [5,\
    \ 3, 1, 2, 4]\n\n$array = [1, 2, 3, 4, 5, 6];\nprint_r(sort_array($array)); //\
    \ [6, 4, 2, 1, 3, 5]\n\n$array = [1, 2, 3, 4, 5, 6, 7];\nprint_r(sort_array($array));\
    \ // [7, 5, 3, 1, 2, 4, 6]\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8];\nprint_r(sort_array($array));\
    \ // [8, 6, 4, 2, 1, 3, 5, 7]\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(sort_array($array));\
    \ // [9, 7, 5, 3, 1, 2, 4, 6, 8]\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    print_r(sort_array($array)); // [10, 8, 6, 4, 2, 1, 3, 5, 7, 9]\n\n$array = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(sort_array($array)); // [11, 9, 7,\
    \ 5, 3, 1, 2, 4, 6, 8, 10]\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\
    print_r(sort_array($array)); // [12, 10, 8, 6, 4, 2, 1, 3, 5, 7, 9, 11]\n\n$array\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpywz1yhva.php on line 43

    '
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$array = [1, 2, 3, 4, 5];\nprint_r(sort_array($array));\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4]\
    \ => 1\n)\n"
  timestamp: 1659730926
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\nfunction sort_array($array)\
    \ {\n  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730925

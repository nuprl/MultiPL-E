name: HumanEval_68_pluck
language: php
prompt: "<?php\n// \"Given an array representing a branch of a tree that has non-negative\
  \ integer nodes\n// your task is to pluck one of the nodes and return it.\n// The\
  \ plucked node should be the node with the smallest even value.\n// If multiple\
  \ nodes with the same smallest even value are found return the node that has smallest\
  \ index.\n// The plucked node should be returned in a list, [ smalest_value, its\
  \ index ],\n// If there are no even values or the given array is empty, return [].\n\
  // Example 1:\n// Explanation: 2 has the smallest even value, and 2 has the smallest\
  \ index.\n// Example 2:\n// Explanation: 2 has the smallest even value, and 2 has\
  \ the smallest index.\n// Example 3:\n// Example 4:\n// Explanation: 0 is the smallest\
  \ value, but  there are two zeros,\n// so we will choose the first zero, which has\
  \ the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0\
  \ <= node.value\nfunction pluck($arr) {\n"
tests: "function candidate(...$args) {\n    return pluck(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(4, 2, 3)) !== array(2, 1)) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
  \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
  \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
  \ 0, 3, 0, 4, 2)) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(array(1, 2, 3, 0, 5, 3)) !== array(0, 3)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(5, 4, 8, 4, 8)) !== array(4, 1)) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 6, 7, 1)) !== array(6,\
  \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9,\
  \ 7, 1)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $min = PHP_INT_MAX;\n    $min_index = PHP_INT_MAX;\n    $min_index_arr\
    \ = [];\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] % 2\
    \ == 0 && $arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index\
    \ = $i;\n        }\n    }\n    if ($min == PHP_INT_MAX) {\n        return [];\n\
    \    }\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] == $min)\
    \ {\n            $min_index_arr[] = $i;\n        }\n    }\n    $min_index = min($min_index_arr);\n\
    \    return [$min, $min_index];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    print_r(pluck($arr));", "    $evens = [];\n    $evens_indexes = [];\n    foreach\
    \ ($arr as $index => $value) {\n        if ($value % 2 == 0) {\n            $evens[]\
    \ = $value;\n            $evens_indexes[] = $index;\n        }\n    }\n    if\
    \ (empty($evens)) {\n        return [];\n    }\n    $min_even = min($evens);\n\
    \    $min_even_index = array_search($min_even, $evens);\n    return [$min_even,\
    \ $evens_indexes[$min_even_index]];\n}\n", "    $even = [];\n    $odd = [];\n\
    \    foreach ($arr as $key => $value) {\n        if ($value % 2 == 0) {\n    \
    \        $even[] = $value;\n        } else {\n            $odd[] = $value;\n \
    \       }\n    }\n    if (count($even) > 0) {\n        $min = min($even);\n  \
    \      $key = array_search($min, $arr);\n        return [$min, $key];\n    } else\
    \ {\n        return [];\n    }\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\n$arr = [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,\
    \ 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,\
    \ 46, 47, 48, 49, 50];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,", "    $min = PHP_INT_MAX;\n\
    \    $minIndex = PHP_INT_MAX;\n    foreach ($arr as $i => $val) {\n        if\
    \ ($val % 2 === 0 && $val < $min) {\n            $min = $val;\n            $minIndex\
    \ = $i;\n        }\n    }\n    return $min === PHP_INT_MAX ? [] : [$min, $minIndex];\n\
    }\n\n$tests = [\n    [[], []],\n    [[1], []],\n    [[1, 2], [2, 1]],\n    [[1,\
    \ 2, 3], [2, 1]],\n    [[1, 2, 3, 4], [2, 1]],\n    [[1, 2, 3, 4, 5], [2, 1]],\n\
    \    [[1, 2, 3, 4, 5, 6], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7], [2, 1]],\n   \
    \ [[1, 2, 3, 4, 5, 6, 7, 8], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9], [2, 1]],\n\
    \    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [2, 1]],\n\
    \    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [2, 1]],\n    [[1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13", "    $evens = [];\n    foreach ($arr as $key => $value) {\n       \
    \ if ($value % 2 == 0) {\n            $evens[] = [$value, $key];\n        }\n\
    \    }\n    if (count($evens) == 0) {\n        return [];\n    }\n    usort($evens,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $a[1]\
    \ - $b[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $evens[0];\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n$arr = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,\
    \ 28, 29, 30];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\
    \ 36, 37, 38, 39, 40];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,\
    \ 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\n$arr =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17", "    $evens = [];\n\
    \    foreach ($arr as $i => $v) {\n        if ($v % 2 == 0) {\n            $evens[]\
    \ = [$v, $i];\n        }\n    }\n    if (empty($evens)) {\n        return [];\n\
    \    }\n    usort($evens, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n\
    \            return $a[1] - $b[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $evens[0];\n}\n", "    $evens = [];\n    $indexes = [];\n\
    \    foreach ($arr as $index => $value) {\n        if ($value % 2 == 0) {\n  \
    \          $evens[] = $value;\n            $indexes[] = $index;\n        }\n \
    \   }\n    if (empty($evens)) {\n        return [];\n    }\n    $min = min($evens);\n\
    \    $minIndex = array_search($min, $evens);\n    return [$min, $indexes[$minIndex]];\n\
    }\n", "    $even = [];\n    $odd = [];\n    $result = [];\n    foreach ($arr as\
    \ $key => $value) {\n        if ($value % 2 == 0) {\n            $even[] = $value;\n\
    \        } else {\n            $odd[] = $value;\n        }\n    }\n    if (count($even)\
    \ == 0) {\n        return $result;\n    }\n    $min = min($even);\n    foreach\
    \ ($arr as $key => $value) {\n        if ($value == $min) {\n            $result[]\
    \ = $value;\n            $result[] = $key;\n            return $result;\n    \
    \    }\n    }\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));",
  "    $min = PHP_INT_MAX;\n    $minIndex = -1;\n    foreach ($arr as $index => $value)\
    \ {\n        if ($value % 2 == 0 && $value < $min) {\n            $min = $value;\n\
    \            $minIndex = $index;\n        }\n    }\n    if ($minIndex == -1) {\n\
    \        return [];\n    }\n    return [$min, $minIndex];\n}\n\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [];\nprint_r(pluck($arr));",
  "    $evens = [];\n    $indexes = [];\n    foreach ($arr as $index => $value) {\n\
    \        if ($value % 2 == 0) {\n            $evens[] = $value;\n            $indexes[]\
    \ = $index;\n        }\n    }\n    if (empty($evens)) {\n        return [];\n\
    \    }\n    $min = min($evens);\n    $minIndex = array_search($min, $evens);\n\
    \    return [$min, $indexes[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,\
    \ 43, 44, 45, 46, 47, 48, 49, 50];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28", "    $even\
    \ = [];\n    $odd = [];\n    foreach ($arr as $key => $value) {\n        if ($value\
    \ % 2 == 0) {\n            $even[] = $value;\n        } else {\n            $odd[]\
    \ = $value;\n        }\n    }\n    if (count($even) == 0) {\n        return [];\n\
    \    }\n    $min = min($even);\n    $min_key = array_search($min, $arr);\n   \
    \ return [$min, $min_key];\n}\n\n$arr = [2, 1, 3, 4, 0, 5];\nprint_r(pluck($arr));",
  "    $evens = [];\n    $indexes = [];\n    foreach ($arr as $i => $value) {\n  \
    \      if ($value % 2 == 0) {\n            $evens[] = $value;\n            $indexes[]\
    \ = $i;\n        }\n    }\n    if (count($evens) == 0) {\n        return [];\n\
    \    }\n    $min = min($evens);\n    $minIndex = array_search($min, $evens);\n\
    \    return [$min, $indexes[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\nprint_r(pluck($arr));\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n$arr = [1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\nprint_r(pluck($arr));\n\
    $arr = [];\nprint_r(pluck($arr));", "    $evens = [];\n    foreach ($arr as $key\
    \ => $value) {\n        if ($value % 2 == 0) {\n            $evens[] = [$value,\
    \ $key];\n        }\n    }\n    if (empty($evens)) {\n        return [];\n   \
    \ }\n    $min = $evens[0];\n    foreach ($evens as $even) {\n        if ($even[0]\
    \ < $min[0]) {\n            $min = $even;\n        }\n    }\n    return $min;\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\
    \ 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n$arr =\
    \ [1,", "    $evens = [];\n    $indexes = [];\n    foreach ($arr as $key => $value)\
    \ {\n        if ($value % 2 == 0) {\n            $evens[] = $value;\n        \
    \    $indexes[] = $key;\n        }\n    }\n    if (empty($evens)) {\n        return\
    \ [];\n    }\n    $min = min($evens);\n    $minIndex = array_search($min, $evens);\n\
    \    return [$min, $indexes[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\
    \ 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,\
    \ 44, 45, 46, 47, 48, 49, 50];", "    $evens = [];\n    $indexes = [];\n    foreach\
    \ ($arr as $i => $v) {\n        if ($v % 2 == 0) {\n            $evens[] = $v;\n\
    \            $indexes[] = $i;\n        }\n    }\n    if (count($evens) == 0) {\n\
    \        return [];\n    }\n    $min = min($evens);\n    $minIndex = min($indexes);\n\
    \    return [$min, $minIndex];\n}\n\n$arr = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19,\
    \ 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57,\
    \ 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95,\
    \ 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127,\
    \ 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159,\
    \ 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191,\
    \ 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223,\
    \ 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255,\
    \ 257, 259, 261, 263, 265, 267, 269, 271, 273, 275, 277, 279, 281, 283, 285, 287,\
    \ 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 313, 315, 317, 319,\
    \ 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351,\
    \ 353, 355, 357, 359, 361, 363, 365, 367, 369, 371, 373, 375, 377, 379, 381, 383,\
    \ 385,", "    $min = PHP_INT_MAX;\n    $index = -1;\n    foreach ($arr as $i =>\
    \ $v) {\n        if ($v % 2 == 0 && $v < $min) {\n            $min = $v;\n   \
    \         $index = $i;\n        }\n    }\n    return $index == -1 ? [] : [$min,\
    \ $index];\n}\n", "    $even = [];\n    $index = [];\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        if ($arr[$i] % 2 == 0) {\n            $even[] = $arr[$i];\n\
    \            $index[] = $i;\n        }\n    }\n    if (count($even) == 0) {\n\
    \        return [];\n    }\n    $min = min($even);\n    $minIndex = array_search($min,\
    \ $even);\n    return [$min, $index[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10];\nprint_r(pluck($arr));", "    $even = [];\n    $odd = [];\n\
    \    foreach ($arr as $key => $value) {\n        if ($value % 2 == 0) {\n    \
    \        $even[] = $value;\n        } else {\n            $odd[] = $value;\n \
    \       }\n    }\n    if (count($even) == 0) {\n        return [];\n    }\n  \
    \  $min = min($even);\n    $minKey = array_search($min, $arr);\n    return [$min,\
    \ $minKey];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));",
  "    $evens = [];\n    $indexes = [];\n    for ($i = 0; $i < count($arr); $i++)\
    \ {\n        if ($arr[$i] % 2 == 0) {\n            $evens[] = $arr[$i];\n    \
    \        $indexes[] = $i;\n        }\n    }\n    if (count($evens) == 0) {\n \
    \       return [];\n    }\n    $min = min($evens);\n    $minIndex = array_search($min,\
    \ $evens);\n    return [$min, $indexes[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\
    \ 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32", "    $min =\
    \ PHP_INT_MAX;\n    $index = -1;\n    foreach ($arr as $key => $value) {\n   \
    \     if ($value % 2 == 0 && $value < $min) {\n            $min = $value;\n  \
    \          $index = $key;\n        }\n    }\n    if ($index == -1) {\n       \
    \ return [];\n    }\n    return [$min, $index];\n}\n\n$arr = [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10];\necho implode(', ', pluck($arr));\necho \"\\n\";\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\necho implode(',\
    \ ', pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\n\
    echo implode(', ', pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,\
    \ 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\necho implode(', ', pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\
    \ 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\necho implode(',\
    \ ', pluck($arr));\necho \"\\n\";", "    $evens = [];\n    $evens_indexes = [];\n\
    \    foreach ($arr as $i => $v) {\n        if ($v % 2 == 0) {\n            $evens[]\
    \ = $v;\n            $evens_indexes[] = $i;\n        }\n    }\n    if (empty($evens))\
    \ {\n        return [];\n    }\n    $min_even = min($evens);\n    $min_even_index\
    \ = array_search($min_even, $evens);\n    return [$min_even, $evens_indexes[$min_even_index]];\n\
    }\n\n$tests = [\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [2, 1]],\n    [[1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [2, 1]],\n  \
    \  [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23, 24, 25, 26, 27, 28, 29, 30], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], [2, 1]],\n    [[1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,\
    \ 45, 46, 47, 48, 49, 50], [2, 1]],\n    [[1, 2, 3, 4, 5, 6", "    if (empty($arr))\
    \ {\n        return [];\n    }\n    $evens = [];\n    foreach ($arr as $key =>\
    \ $value) {\n        if ($value % 2 == 0) {\n            $evens[$key] = $value;\n\
    \        }\n    }\n    if (empty($evens)) {\n        return [];\n    }\n    asort($evens);\n\
    \    $keys = array_keys($evens);\n    return [$evens[$keys[0]], $keys[0]];\n}\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\necho \"\\n\"\
    ;\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,\
    \ 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\
    \ 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];", "    $evens =\
    \ [];\n    $indexes = [];\n    foreach ($arr as $i => $val) {\n        if ($val\
    \ % 2 == 0) {\n            $evens[] = $val;\n            $indexes[] = $i;\n  \
    \      }\n    }\n    if (empty($evens)) {\n        return [];\n    }\n    $min\
    \ = min($evens);\n    $minIndex = array_search($min, $evens);\n    return [$min,\
    \ $indexes[$minIndex]];\n}\n\n$arr1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr2\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n\
    $arr3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\n$arr4 = [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\n$arr5 = [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,\
    \ 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,\
    \ 46, 47, 48, 49, 50];\n$arr6 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25", "    $evens = [];\n    $indexes\
    \ = [];\n    foreach ($arr as $key => $value) {\n        if ($value % 2 == 0)\
    \ {\n            $evens[] = $value;\n            $indexes[] = $key;\n        }\n\
    \    }\n    if (count($evens) == 0) {\n        return [];\n    }\n    $min = min($evens);\n\
    \    $minIndex = array_search($min, $evens);\n    return [$min, $indexes[$minIndex]];\n\
    }\n", "    $evens = [];\n    foreach ($arr as $index => $value) {\n        if\
    \ ($value % 2 === 0) {\n            $evens[] = [$value, $index];\n        }\n\
    \    }\n    if (empty($evens)) {\n        return [];\n    }\n    usort($evens,\
    \ function ($a, $b) {\n        if ($a[0] === $b[0]) {\n            return $a[1]\
    \ - $b[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $evens[0];\n\
    }\n\n$tests = [\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [2, 1]],\n    [[1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12], [2, 1]],\n    [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0]],\n    [[1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [2, 1]],\n\
    \    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], [2, 1]],\n    [[1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12,", "    $min = null;\n    $minIndex = null;\n    foreach\
    \ ($arr as $index => $value) {\n        if ($value % 2 === 0) {\n            if\
    \ ($min === null || $value < $min) {\n                $min = $value;\n       \
    \         $minIndex = $index;\n            }\n        }\n    }\n    if ($min ===\
    \ null) {\n        return [];\n    }\n    return [$min, $minIndex];\n}\n\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\
    \ 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8,", "    $evens = [];\n    $indexes = [];\n    foreach\
    \ ($arr as $key => $value) {\n        if ($value % 2 == 0) {\n            $evens[]\
    \ = $value;\n            $indexes[] = $key;\n        }\n    }\n    if (empty($evens))\
    \ {\n        return [];\n    }\n    $min = min($evens);\n    $minIndex = array_search($min,\
    \ $evens);\n    return [$min, $indexes[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,\
    \ 43, 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,\
    \ 44, 45, 46, 47, 48,", "    $min = PHP_INT_MAX;\n    $minIndex = PHP_INT_MAX;\n\
    \    $minIndexes = [];\n    foreach ($arr as $index => $value) {\n        if ($value\
    \ % 2 === 0 && $value < $min) {\n            $min = $value;\n            $minIndex\
    \ = $index;\n            $minIndexes = [$index];\n        } elseif ($value % 2\
    \ === 0 && $value === $min) {\n            $minIndexes[] = $index;\n        }\n\
    \    }\n    if ($min === PHP_INT_MAX) {\n        return [];\n    }\n    return\
    \ [$min, min($minIndexes)];\n}\n\n$tests = [\n    [\n        'input' => [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10],\n        'expected' => [2, 1],\n    ],\n    [\n  \
    \      'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n        'expected' =>\
    \ [2, 1],\n    ],\n    [\n        'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12],\n        'expected' => [2, 1],\n    ],\n    [\n        'input' => [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],\n        'expected' => [2, 1],\n    ],\n\
    \    [\n        'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],\n\
    \        'expected' => [2, 1],\n    ],\n    [\n        'input' => [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n        'expected' => [2, 1],\n   \
    \ ],\n    [\n        'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16],\n        'expected' => [2", "    $evens = [];\n    $indexes = [];\n\
    \    foreach ($arr as $i => $item) {\n        if ($item % 2 === 0) {\n       \
    \     $evens[] = $item;\n            $indexes[] = $i;\n        }\n    }\n    if\
    \ (empty($evens)) {\n        return [];\n    }\n    $min = min($evens);\n    $minIndex\
    \ = array_search($min, $evens);\n    return [$min, $indexes[$minIndex]];\n}\n\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,\
    \ 43, 44, 45, 46, 47, 48,", "    $evens = [];\n    foreach ($arr as $key => $value)\
    \ {\n        if ($value % 2 == 0) {\n            $evens[] = [$value, $key];\n\
    \        }\n    }\n    if (count($evens) == 0) {\n        return [];\n    }\n\
    \    $min = $evens[0];\n    foreach ($evens as $even) {\n        if ($even[0]\
    \ < $min[0]) {\n            $min = $even;\n        }\n    }\n    return $min;\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [1, 3, 5, 7, 9];\n$arr =\
    \ [2, 2, 2, 2, 2];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,\
    \ 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,\
    \ 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,\
    \ 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,\
    \ 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108,\
    \ 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,\
    \ 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140,\
    \ 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156,\
    \ 157, 158, 159, 160", "    $evens = [];\n    $indexes = [];\n    foreach ($arr\
    \ as $i => $v) {\n        if ($v % 2 == 0) {\n            $evens[] = $v;\n   \
    \         $indexes[] = $i;\n        }\n    }\n    if (empty($evens)) {\n     \
    \   return [];\n    }\n    $min = min($evens);\n    $minIndex = array_search($min,\
    \ $evens);\n    return [$min, $indexes[$minIndex]];\n}\n\n$arr = [1, 3, 5, 7,\
    \ 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47,\
    \ 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85,\
    \ 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119,\
    \ 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151,\
    \ 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183,\
    \ 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215,\
    \ 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247,\
    \ 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 273, 275, 277, 279,\
    \ 281, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311,\
    \ 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343,\
    \ 345, 347, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 369, 371, 373, 375,\
    \ 377, 379,", "    $evens = [];\n    foreach ($arr as $i => $v) {\n        if\
    \ ($v % 2 == 0) {\n            $evens[] = [$v, $i];\n        }\n    }\n    if\
    \ (empty($evens)) {\n        return [];\n    }\n    usort($evens, function ($a,\
    \ $b) {\n        if ($a[0] == $b[0]) {\n            return $a[1] - $b[1];\n  \
    \      }\n        return $a[0] - $b[0];\n    });\n    return $evens[0];\n}\n",
  "    $even = [];\n    $odd = [];\n    $result = [];\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        if ($arr[$i] % 2 == 0) {\n            $even[] = $arr[$i];\n\
    \        } else {\n            $odd[] = $arr[$i];\n        }\n    }\n    if (count($even)\
    \ > 0) {\n        $min = min($even);\n        $result[] = $min;\n        $result[]\
    \ = array_search($min, $arr);\n    } else if (count($odd) > 0) {\n        $min\
    \ = min($odd);\n        $result[] = $min;\n        $result[] = array_search($min,\
    \ $arr);\n    }\n    return $result;\n}\n\n$arr = [2, 1, 2, 1, 2, 1, 2, 1, 2,\
    \ 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,\
    \ 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,\
    \ 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,\
    \ 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,\
    \ 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,\
    \ 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,", "    $even = [];\n\
    \    $index = [];\n    $result = [];\n    foreach ($arr as $key => $value) {\n\
    \        if ($value % 2 == 0) {\n            $even[] = $value;\n            $index[]\
    \ = $key;\n        }\n    }\n    if (count($even) == 0) {\n        return [];\n\
    \    }\n    $min = min($even);\n    $key = array_search($min, $even);\n    $result[]\
    \ = $min;\n    $result[] = $index[$key];\n    return $result;\n}\n\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr1 = [1, 3, 5, 7, 9];\n$arr2 = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n$arr3 = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,\
    \ 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\
    \ 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\
    \ 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,\
    \ 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,\
    \ 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131,\
    \ 132, 133, 134, 135, 136, 137, 138, 139, 140,", "    $evens = [];\n    foreach\
    \ ($arr as $key => $value) {\n        if ($value % 2 == 0) {\n            $evens[]\
    \ = $value;\n        }\n    }\n    if (count($evens) == 0) {\n        return [];\n\
    \    }\n    $min = min($evens);\n    $index = array_search($min, $arr);\n    return\
    \ [$min, $index];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\
    \ 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1,", "    $evens = [];\n    $indexes = [];\n    foreach\
    \ ($arr as $key => $value) {\n        if ($value % 2 == 0) {\n            $evens[]\
    \ = $value;\n            $indexes[] = $key;\n        }\n    }\n    if (count($evens)\
    \ == 0) {\n        return [];\n    }\n    $min = min($evens);\n    $min_index\
    \ = array_search($min, $evens);\n    return [$min, $indexes[$min_index]];\n}\n",
  "    $evens = [];\n    foreach ($arr as $key => $value) {\n        if ($value %\
    \ 2 == 0) {\n            $evens[] = $value;\n        }\n    }\n    if (empty($evens))\
    \ {\n        return [];\n    }\n    $min = min($evens);\n    $index = array_search($min,\
    \ $arr);\n    return [$min, $index];\n}\n", "    $even = [];\n    $odd = [];\n\
    \    foreach ($arr as $key => $value) {\n        if ($value % 2 == 0) {\n    \
    \        $even[] = $value;\n        } else {\n            $odd[] = $value;\n \
    \       }\n    }\n    if (count($even) == 0) {\n        return [];\n    }\n  \
    \  $min = min($even);\n    $index = array_search($min, $arr);\n    return [$min,\
    \ $index];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(pluck($arr));\n\n$arr =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(pluck($arr));\n\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(pluck($arr));\n\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(pluck($arr));\n\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\nprint_r(pl",
  "    $evens = array_filter($arr, function($v) { return $v % 2 == 0; });\n    if\
    \ (count($evens) == 0) return [];\n    $min = min($evens);\n    $index = array_search($min,\
    \ $arr);\n    return [$min, $index];\n}\n", "    $evens = [];\n    $indexes =\
    \ [];\n    foreach ($arr as $key => $value) {\n        if ($value % 2 == 0) {\n\
    \            $evens[] = $value;\n            $indexes[] = $key;\n        }\n \
    \   }\n    if (empty($evens)) {\n        return [];\n    }\n    $min = min($evens);\n\
    \    $minIndex = array_search($min, $evens);\n    return [$min, $indexes[$minIndex]];\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\n$arr =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0];\nprint_r(pluck($arr));\n\n$arr = [];\nprint_r(pluck($arr));", "  \
    \  $min = PHP_INT_MAX;\n    $index = -1;\n    foreach ($arr as $i => $v) {\n \
    \       if ($v % 2 == 0 && $v < $min) {\n            $min = $v;\n            $index\
    \ = $i;\n        }\n    }\n    return $index == -1 ? [] : [$min, $index];\n}\n",
  "    $min = PHP_INT_MAX;\n    $minIndex = PHP_INT_MAX;\n    $minIndexes = [];\n\
    \    foreach ($arr as $i => $v) {\n        if ($v % 2 === 0 && $v < $min) {\n\
    \            $min = $v;\n            $minIndex = $i;\n            $minIndexes\
    \ = [$i];\n        } elseif ($v % 2 === 0 && $v === $min) {\n            $minIndexes[]\
    \ = $i;\n        }\n    }\n    if ($min === PHP_INT_MAX) {\n        return [];\n\
    \    }\n    $minIndex = min($minIndexes);\n    return [$min, $minIndex];\n}\n\n\
    $tests = [\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [2, 1]],\n    [[1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [2, 1]],\n    [[1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 2], [2,\
    \ 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20, 2, 2, 2], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20, 2, 2, 2, 2], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 2, 2, 2, 2], [2, 1]],\n  \
    \  [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,", "    $evens = [];\n\
    \    $indexes = [];\n    foreach ($arr as $key => $value) {\n        if ($value\
    \ % 2 == 0) {\n            $evens[] = $value;\n            $indexes[] = $key;\n\
    \        }\n    }\n    if (count($evens) == 0) {\n        return [];\n    }\n\
    \    $min = min($evens);\n    $minIndex = array_search($min, $evens);\n    return\
    \ [$min, $indexes[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    print_r(pluck($arr));", "    $evens = [];\n    $indexes = [];\n    foreach ($arr\
    \ as $key => $value) {\n        if ($value % 2 == 0) {\n            $evens[] =\
    \ $value;\n            $indexes[] = $key;\n        }\n    }\n    if (empty($evens))\
    \ {\n        return [];\n    }\n    $min = min($evens);\n    $minIndex = array_search($min,\
    \ $evens);\n    return [$min, $indexes[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10];\n$arr = [1, 3, 5, 7, 9];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\
    \ 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,\
    \ 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85,\
    \ 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,\
    \ 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\
    \ 62, 63, 64, 65, 66, 67, 68", "    $min = null;\n    $minIndex = null;\n    foreach\
    \ ($arr as $i => $v) {\n        if ($v % 2 == 0) {\n            if ($min === null\
    \ || $v < $min) {\n                $min = $v;\n                $minIndex = $i;\n\
    \            }\n        }\n    }\n    if ($min === null) {\n        return [];\n\
    \    }\n    return [$min, $minIndex];\n}\n", "    $evens = [];\n    $evens_indexes\
    \ = [];\n    foreach ($arr as $index => $value) {\n        if ($value % 2 == 0)\
    \ {\n            $evens[] = $value;\n            $evens_indexes[] = $index;\n\
    \        }\n    }\n    if (empty($evens)) {\n        return [];\n    }\n    $min_even\
    \ = min($evens);\n    $min_even_index = array_search($min_even, $evens);\n   \
    \ return [$min_even, $evens_indexes[$min_even_index]];\n}\n\n$tests = [\n    [\n\
    \        'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        'expected' => [2,\
    \ 1],\n    ],\n    [\n        'input' => [1, 3, 5, 7, 9],\n        'expected'\
    \ => [],\n    ],\n    [\n        'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20],\n        'expected' => [2, 1],\n    ],\n\
    \    [\n        'input' => [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0],\n        'expected' => [0, 0],\n    ],\n    [\n        'input' =>\
    \ [],\n        'expected' => [],\n    ],\n];\n\nforeach ($tests as $test) {\n\
    \    $result = pluck($test['input']);\n    if ($result !== $test['expected'])\
    \ {\n        echo \"For input {$test['input']} expected {$test['expected']} but\
    \ got {$result}\\n\";\n    }\n}", "    $evens = [];\n    $evens_indexes = [];\n\
    \    foreach ($arr as $index => $value) {\n        if ($value % 2 == 0) {\n  \
    \          $evens[] = $value;\n            $evens_indexes[] = $index;\n      \
    \  }\n    }\n    if (empty($evens)) return [];\n    $min_even = min($evens);\n\
    \    $min_even_index = array_search($min_even, $evens);\n    return [$min_even,\
    \ $evens_indexes[$min_even_index]];\n}\n\n$tests = [\n    [[1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30],\
    \ [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,\
    \ 38, 39, 40], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,\
    \ 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [2, 1]],\n\
    \    [[1, 2, 3, 4, 5, 6, 7, 8, 9", "    $evens = [];\n    foreach ($arr as $i\
    \ => $v) {\n        if ($v % 2 == 0) {\n            $evens[] = [$v, $i];\n   \
    \     }\n    }\n    if (empty($evens)) {\n        return [];\n    }\n    usort($evens,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $a[1]\
    \ <=> $b[1];\n        }\n        return $a[0] <=> $b[0];\n    });\n    return\
    \ $evens[0];\n}\n\n$tests = [\n    [[], []],\n    [[1], []],\n    [[2], [2, 0]],\n\
    \    [[1, 2], [2, 1]],\n    [[1, 2, 3], [2, 1]],\n    [[1, 2, 3, 4], [2, 1]],\n\
    \    [[1, 2, 3, 4, 5], [2, 1]],\n    [[1, 2, 3, 4, 5, 6], [2, 1]],\n    [[1, 2,\
    \ 3, 4, 5, 6, 7], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8], [2, 1]],\n    [[1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [2,\
    \ 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [2, 1]],\n    [[1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], [2,\
    \ 1]],\n    [[1, 2, 3, 4", "    $even = [];\n    $odd = [];\n    foreach ($arr\
    \ as $key => $value) {\n        if ($value % 2 == 0) {\n            $even[] =\
    \ $value;\n        } else {\n            $odd[] = $value;\n        }\n    }\n\
    \    if (count($even) > 0) {\n        $min = min($even);\n        $key = array_search($min,\
    \ $arr);\n        return [$min, $key];\n    } else {\n        return [];\n   \
    \ }\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\necho\
    \ \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 0];\n\
    print_r(pluck($arr));\necho \"\\n\";\n$arr = [0, 1, 2, 3, 4", "    $min = PHP_INT_MAX;\n\
    \    $index = -1;\n    foreach ($arr as $i => $v) {\n        if ($v % 2 == 0 &&\
    \ $v < $min) {\n            $min = $v;\n            $index = $i;\n        }\n\
    \    }\n    return $index == -1 ? [] : [$min, $index];\n}\n\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n$arr = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11];\nprint_r(pluck($arr));\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12];\nprint_r(pluck($arr));\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13];\nprint_r(pluck($arr));\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14];\nprint_r(pluck($arr));\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15];\nprint_r(pluck($arr));\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(pluck($arr));\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\nprint_r(pluck($arr));\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\nprint_r(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14", "    $evens = [];\n  \
    \  foreach ($arr as $k => $v) {\n        if ($v % 2 == 0) {\n            $evens[]\
    \ = [$v, $k];\n        }\n    }\n    if (empty($evens)) {\n        return [];\n\
    \    }\n    usort($evens, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n\
    \            return $a[1] - $b[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $evens[0];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    print_r(pluck($arr));\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(pluck($arr));\n$arr =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(pluck($arr));\n$arr =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(pluck($arr));\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\nprint_r(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13", "    $evens = [];\n    $indexes\
    \ = [];\n    foreach ($arr as $i => $v) {\n        if ($v % 2 == 0) {\n      \
    \      $evens[] = $v;\n            $indexes[] = $i;\n        }\n    }\n    if\
    \ (count($evens) == 0) {\n        return [];\n    }\n    $min = min($evens);\n\
    \    $min_index = array_search($min, $evens);\n    return [$min, $indexes[$min_index]];\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\n$arr =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\
    \ 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n", "  \
    \  $even = [];\n    $odd = [];\n    $result = [];\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        if ($arr[$i] % 2 == 0) {\n            $even[] = $arr[$i];\n\
    \        } else {\n            $odd[] = $arr[$i];\n        }\n    }\n    if (count($even)\
    \ > 0) {\n        $min = min($even);\n        $result[] = $min;\n        $result[]\
    \ = array_search($min, $arr);\n    }\n    return $result;\n}\n\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\
    \ 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,", "    $evens = [];\n    $indexes\
    \ = [];\n    foreach ($arr as $key => $value) {\n        if ($value % 2 == 0)\
    \ {\n            $evens[] = $value;\n            $indexes[] = $key;\n        }\n\
    \    }\n    if (empty($evens)) {\n        return [];\n    }\n    $min = min($evens);\n\
    \    $min_index = array_search($min, $evens);\n    return [$min, $indexes[$min_index]];\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));", "    $even\
    \ = [];\n    $odd = [];\n    foreach ($arr as $key => $value) {\n        if ($value\
    \ % 2 == 0) {\n            $even[] = $value;\n        } else {\n            $odd[]\
    \ = $value;\n        }\n    }\n    if (count($even) == 0) {\n        return [];\n\
    \    }\n    $min = min($even);\n    $index = array_search($min, $arr);\n    return\
    \ [$min, $index];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\
    \ 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\
    \ 48, 49, 50];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31", "    $evens = [];\n\
    \    $evens_indexes = [];\n    foreach ($arr as $index => $value) {\n        if\
    \ ($value % 2 == 0) {\n            $evens[] = $value;\n            $evens_indexes[]\
    \ = $index;\n        }\n    }\n    if (count($evens) == 0) {\n        return [];\n\
    \    }\n    $min_even = min($evens);\n    $min_even_index = array_search($min_even,\
    \ $evens);\n    return [$min_even, $evens_indexes[$min_even_index]];\n}\n", " \
    \   $evens = [];\n    $indexes = [];\n    foreach ($arr as $key => $value) {\n\
    \        if ($value % 2 == 0) {\n            $evens[] = $value;\n            $indexes[]\
    \ = $key;\n        }\n    }\n    if (count($evens) == 0) {\n        return [];\n\
    \    }\n    $min = min($evens);\n    $minIndex = array_search($min, $evens);\n\
    \    return [$min, $indexes[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\
    \ 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n\n$", " \
    \   $min = PHP_INT_MAX;\n    $minIndex = PHP_INT_MAX;\n    $minIndexes = [];\n\
    \    foreach ($arr as $i => $v) {\n        if ($v % 2 === 0 && $v < $min) {\n\
    \            $min = $v;\n            $minIndex = $i;\n            $minIndexes\
    \ = [$i];\n        } elseif ($v % 2 === 0 && $v === $min) {\n            $minIndexes[]\
    \ = $i;\n        }\n    }\n    if ($min === PHP_INT_MAX) {\n        return [];\n\
    \    }\n    $minIndex = min($minIndexes);\n    return [$min, $minIndex];\n}\n\n\
    $tests = [\n    [[], []],\n    [[1], []],\n    [[1, 2], [2, 1]],\n    [[1, 2,\
    \ 3], [2, 1]],\n    [[1, 2, 3, 4], [2, 1]],\n    [[1, 2, 3, 4, 5], [2, 1]],\n\
    \    [[1, 2, 3, 4, 5, 6], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7], [2, 1]],\n   \
    \ [[1, 2, 3, 4, 5, 6, 7, 8], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9], [2, 1]],\n\
    \    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [2, 1]],\n\
    \    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [2, 1]],\n    [[1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], [2,", "    $min = PHP_INT_MAX;\n    $min_index\
    \ = PHP_INT_MAX;\n    $min_found = false;\n    foreach ($arr as $index => $value)\
    \ {\n        if ($value % 2 == 0) {\n            if ($value < $min) {\n      \
    \          $min = $value;\n                $min_index = $index;\n            \
    \    $min_found = true;\n            } elseif ($value == $min) {\n           \
    \     if ($index < $min_index) {\n                    $min_index = $index;\n \
    \               }\n            }\n        }\n    }\n    if ($min_found) {\n  \
    \      return [$min, $min_index];\n    } else {\n        return [];\n    }\n}\n",
  "    $evens = [];\n    $indexes = [];\n    foreach ($arr as $key => $value) {\n\
    \        if ($value % 2 == 0) {\n            $evens[] = $value;\n            $indexes[]\
    \ = $key;\n        }\n    }\n    if (count($evens) == 0) {\n        return [];\n\
    \    }\n    $min = min($evens);\n    $minIndex = array_search($min, $evens);\n\
    \    return [$min, $indexes[$minIndex]];\n}\n", "    $min = PHP_INT_MAX;\n   \
    \ $minIndex = PHP_INT_MAX;\n    $minIndexes = [];\n    foreach ($arr as $index\
    \ => $value) {\n        if ($value % 2 === 0 && $value < $min) {\n           \
    \ $min = $value;\n            $minIndex = $index;\n            $minIndexes = [$index];\n\
    \        } elseif ($value % 2 === 0 && $value === $min) {\n            $minIndexes[]\
    \ = $index;\n        }\n    }\n    if ($min === PHP_INT_MAX) {\n        return\
    \ [];\n    }\n    return [$min, min($minIndexes)];\n}\n\n$arr = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,\
    \ 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,\
    \ 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,\
    \ 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,\
    \ 92, 93, 94, 95, 96, 97, 98, 99, 100];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\
    \ 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,\
    \ 49, 50, 51, 52, 53, 54, 55, 56, 57,", "  $min = PHP_INT_MAX;\n  $min_index =\
    \ PHP_INT_MAX;\n  $min_index_arr = [];\n  foreach ($arr as $index => $value) {\n\
    \    if ($value % 2 == 0) {\n      if ($value < $min) {\n        $min = $value;\n\
    \        $min_index = $index;\n        $min_index_arr = [$min, $min_index];\n\
    \      } elseif ($value == $min) {\n        if ($index < $min_index) {\n     \
    \     $min_index = $index;\n          $min_index_arr = [$min, $min_index];\n \
    \       }\n      }\n    }\n  }\n  return $min_index_arr;\n}\n", "    $even = [];\n\
    \    $index = [];\n    foreach ($arr as $key => $value) {\n        if ($value\
    \ % 2 == 0) {\n            $even[] = $value;\n            $index[] = $key;\n \
    \       }\n    }\n    if (empty($even)) {\n        return [];\n    }\n    $min\
    \ = min($even);\n    $key = array_search($min, $even);\n    return [$min, $index[$key]];\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\n\
    $arr = [0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\
    \ 39, 40];\nprint_r(pluck($arr));", "    $evens = [];\n    foreach ($arr as $key\
    \ => $value) {\n        if ($value % 2 == 0) {\n            $evens[] = $value;\n\
    \        }\n    }\n    if (empty($evens)) {\n        return [];\n    }\n    $min\
    \ = min($evens);\n    $minIndex = array_search($min, $arr);\n    return [$min,\
    \ $minIndex];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\
    \ 32, 33, 34, 35, 36, 37, 38, 39, 40];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\
    \ 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,\
    \ 49, 50];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,\
    \ 37, 38, 39,", "    if (empty($arr)) {\n        return [];\n    }\n    $evens\
    \ = [];\n    foreach ($arr as $key => $value) {\n        if ($value % 2 == 0)\
    \ {\n            $evens[$key] = $value;\n        }\n    }\n    if (empty($evens))\
    \ {\n        return [];\n    }\n    asort($evens);\n    $smallest = array_shift($evens);\n\
    \    $index = array_search($smallest, $arr);\n    return [$smallest, $index];\n\
    }\n", "    $evens = [];\n    $evensIndex = [];\n    foreach ($arr as $index =>\
    \ $value) {\n        if ($value % 2 == 0) {\n            $evens[] = $value;\n\
    \            $evensIndex[] = $index;\n        }\n    }\n    if (count($evens)\
    \ == 0) {\n        return [];\n    }\n    $min = min($evens);\n    $minIndex =\
    \ array_search($min, $evens);\n    return [$min, $evensIndex[$minIndex]];\n}\n\
    \n$input = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$output = pluck($input);\nprint_r($output);\n\
    \n$input = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20];\n$output = pluck($input);\nprint_r($output);\n\n$input = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30];\n$output = pluck($input);\nprint_r($output);\n\n$input\
    \ = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0];\n$output = pluck($input);\nprint_r($output);\n\n$input = [1,\
    \ 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29];\n$output = pluck($input);\n\
    print_r($output);\n\n$input = [];\n$output = pluck($input);\nprint_r($output);",
  "    $evens = [];\n    $indexes = [];\n    foreach ($arr as $key => $value) {\n\
    \        if ($value % 2 == 0) {\n            $evens[] = $value;\n            $indexes[]\
    \ = $key;\n        }\n    }\n    if (empty($evens)) {\n        return [];\n  \
    \  }\n    $min = min($evens);\n    $min_index = array_search($min, $evens);\n\
    \    return [$min, $indexes[$min_index]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\nprint_r(pluck($arr));\n\n$arr = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n\
    print_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\
    \n$arr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0];\nprint_r(pluck($arr));\n\n$arr = [];\nprint_r(pluck($arr));",
  "    $evens = [];\n    foreach ($arr as $i => $v) {\n        if ($v % 2 == 0) {\n\
    \            $evens[] = [$v, $i];\n        }\n    }\n    if (empty($evens)) {\n\
    \        return [];\n    }\n    usort($evens, function ($a, $b) {\n        if\
    \ ($a[0] == $b[0]) {\n            return $a[1] - $b[1];\n        }\n        return\
    \ $a[0] - $b[0];\n    });\n    return $evens[0];\n}\n\n$tests = [\n    [[1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\
    \ [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [2, 1]],\n    [[1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13", " \
    \   $even = [];\n    $index = [];\n    $result = [];\n    foreach ($arr as $key\
    \ => $value) {\n        if ($value % 2 == 0) {\n            $even[] = $value;\n\
    \            $index[] = $key;\n        }\n    }\n    if (empty($even)) {\n   \
    \     return [];\n    }\n    $min = min($even);\n    $minIndex = array_search($min,\
    \ $even);\n    $result[] = $min;\n    $result[] = $index[$minIndex];\n    return\
    \ $result;\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr1 = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n$arr2 = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30];\n$arr3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\
    \ 32, 33, 34, 35, 36, 37, 38, 39, 40];\n$arr4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\
    \ 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,\
    \ 49, 50];\n$arr5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20", "    $evens = [];\n    $indexes = [];\n    foreach ($arr as $i\
    \ => $val) {\n        if ($val % 2 == 0) {\n            $evens[] = $val;\n   \
    \         $indexes[] = $i;\n        }\n    }\n    if (empty($evens)) {\n     \
    \   return [];\n    }\n    $min = min($evens);\n    $min_index = array_search($min,\
    \ $evens);\n    return [$min, $indexes[$min_index]];\n}\n", "    $min = PHP_INT_MAX;\n\
    \    $min_index = -1;\n    foreach ($arr as $index => $value) {\n        if ($value\
    \ % 2 == 0 && $value < $min) {\n            $min = $value;\n            $min_index\
    \ = $index;\n        }\n    }\n    if ($min_index == -1) {\n        return [];\n\
    \    }\n    return [$min, $min_index];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\n$arr = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,\
    \ 43, 44, 45, 46, 47, 48, 49, 50];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\
    \ 31, 32, 33, 34, 35, 36,", "    $evens = [];\n    $evens_indexes = [];\n    $min_even\
    \ = PHP_INT_MAX;\n    $min_even_index = PHP_INT_MAX;\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        if ($arr[$i] % 2 == 0) {\n            $evens[] = $arr[$i];\n\
    \            $evens_indexes[] = $i;\n        }\n    }\n    if (count($evens) ==\
    \ 0) {\n        return [];\n    }\n    for ($i = 0; $i < count($evens); $i++)\
    \ {\n        if ($evens[$i] < $min_even) {\n            $min_even = $evens[$i];\n\
    \            $min_even_index = $evens_indexes[$i];\n        }\n    }\n    return\
    \ [$min_even, $min_even_index];\n}\n\n$arr = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\
    \ 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49,\
    \ 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,\
    \ 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87,\
    \ 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105,\
    \ 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121,\
    \ 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,\
    \ 138, 139, 140, 141, 142", "    $min = PHP_INT_MAX;\n    $min_index = PHP_INT_MAX;\n\
    \    $min_index_arr = [];\n    foreach ($arr as $index => $value) {\n        if\
    \ ($value % 2 == 0) {\n            if ($value < $min) {\n                $min\
    \ = $value;\n                $min_index = $index;\n                $min_index_arr\
    \ = [$min, $min_index];\n            } elseif ($value == $min) {\n           \
    \     if ($index < $min_index) {\n                    $min_index = $index;\n \
    \                   $min_index_arr = [$min, $min_index];\n                }\n\
    \            }\n        }\n    }\n    return $min_index_arr;\n}\n\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho implode(', ', pluck($arr));\necho PHP_EOL;\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n\
    echo implode(', ', pluck($arr));\necho PHP_EOL;\n$arr = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,\
    \ 28, 29, 30];\necho implode(', ', pluck($arr));\necho PHP_EOL;\n$arr = [0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0];\necho implode(', ', pluck($arr));\necho PHP_EOL;\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25",
  "    $evens = [];\n    $evens_indexes = [];\n    foreach ($arr as $index => $value)\
    \ {\n        if ($value % 2 == 0) {\n            $evens[] = $value;\n        \
    \    $evens_indexes[] = $index;\n        }\n    }\n    if (count($evens) == 0)\
    \ {\n        return [];\n    }\n    $min_even = min($evens);\n    $min_even_index\
    \ = array_search($min_even, $evens);\n    return [$min_even, $evens_indexes[$min_even_index]];\n\
    }\n", "    $evens = [];\n    $indexes = [];\n    foreach ($arr as $key => $value)\
    \ {\n        if ($value % 2 == 0) {\n            $evens[] = $value;\n        \
    \    $indexes[] = $key;\n        }\n    }\n    if (count($evens) == 0) {\n   \
    \     return [];\n    }\n    $min = min($evens);\n    $index = array_search($min,\
    \ $evens);\n    return [$min, $indexes[$index]];\n}\n\n$arr = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\
    \ 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,", " \
    \   $evens = [];\n    $evens_indexes = [];\n    $evens_indexes_values = [];\n\
    \    foreach ($arr as $key => $value) {\n        if ($value % 2 == 0) {\n    \
    \        $evens[] = $value;\n            $evens_indexes[] = $key;\n          \
    \  $evens_indexes_values[$key] = $value;\n        }\n    }\n    if (count($evens)\
    \ == 0) {\n        return [];\n    }\n    $min = min($evens);\n    $min_index\
    \ = array_search($min, $evens_indexes_values);\n    return [$min, $min_index];\n\
    }\n", "    $even = [];\n    $index = [];\n    for ($i = 0; $i < count($arr); $i++)\
    \ {\n        if ($arr[$i] % 2 == 0) {\n            $even[] = $arr[$i];\n     \
    \       $index[] = $i;\n        }\n    }\n    if (count($even) == 0) {\n     \
    \   return [];\n    }\n    $min = min($even);\n    $min_index = array_search($min,\
    \ $even);\n    return [$min, $index[$min_index]];\n}\n\n$arr = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\
    \ 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\
    \ 36", "    $evens = [];\n    $indexes = [];\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        if ($arr[$i] % 2 == 0) {\n            $evens[] = $arr[$i];\n\
    \            $indexes[] = $i;\n        }\n    }\n    if (count($evens) == 0) {\n\
    \        return [];\n    }\n    $min = min($evens);\n    $minIndex = array_search($min,\
    \ $evens);\n    return [$min, $indexes[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));", "    $min = PHP_INT_MAX;\n    $minIndex\
    \ = -1;\n    foreach ($arr as $index => $value) {\n        if ($value % 2 == 0\
    \ && $value < $min) {\n            $min = $value;\n            $minIndex = $index;\n\
    \        }\n    }\n    if ($minIndex == -1) {\n        return [];\n    }\n   \
    \ return [$min, $minIndex];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar_dump(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n\
    var_dump(pluck($arr));\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nvar_dump(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\
    \ 40];\nvar_dump(pluck($arr));\n$arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\
    \ 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\nvar_dump(pluck($arr));\n$arr = [0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,",
  "    $evens = [];\n    $indexes = [];\n    foreach ($arr as $i => $val) {\n    \
    \    if ($val % 2 == 0) {\n            $evens[] = $val;\n            $indexes[]\
    \ = $i;\n        }\n    }\n    if (empty($evens)) {\n        return [];\n    }\n\
    \    $min = min($evens);\n    $min_index = array_search($min, $evens);\n    return\
    \ [$min, $indexes[$min_index]];\n}\n\n$tests = [\n    [[1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [2, 1]],\n\
    \    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\
    \ 40], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\
    \ 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [2, 1]],\n    [[1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,", "    $min = PHP_INT_MAX;\n\
    \    $minIndex = PHP_INT_MAX;\n    $minValue = PHP_INT_MAX;\n    foreach ($arr\
    \ as $index => $value) {\n        if ($value % 2 === 0 && $value < $min) {\n \
    \           $min = $value;\n            $minIndex = $index;\n            $minValue\
    \ = $value;\n        }\n    }\n    if ($min === PHP_INT_MAX) {\n        return\
    \ [];\n    }\n    return [$minValue, $minIndex];\n}\n\n$arr = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,\
    \ 43, 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,\
    \ 44, 45,", "    $smallest = PHP_INT_MAX;\n    $smallestIndex = PHP_INT_MAX;\n\
    \    $smallestEven = PHP_INT_MAX;\n    $smallestEvenIndex = PHP_INT_MAX;\n   \
    \ foreach ($arr as $index => $value) {\n        if ($value < $smallest) {\n  \
    \          $smallest = $value;\n            $smallestIndex = $index;\n       \
    \ }\n        if ($value % 2 === 0 && $value < $smallestEven) {\n            $smallestEven\
    \ = $value;\n            $smallestEvenIndex = $index;\n        }\n    }\n    if\
    \ ($smallestEven === PHP_INT_MAX) {\n        return [];\n    }\n    return [$smallestEven,\
    \ $smallestEvenIndex];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(pluck($arr));\n\n$arr =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(pluck($arr));\n\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(pluck($arr));\n\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(pluck($arr));\n\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,", "    $min = PHP_INT_MAX;\n\
    \    $min_idx = PHP_INT_MAX;\n    $idx = 0;\n    foreach ($arr as $val) {\n  \
    \      if ($val % 2 == 0 && $val < $min) {\n            $min = $val;\n       \
    \     $min_idx = $idx;\n        }\n        $idx++;\n    }\n    if ($min == PHP_INT_MAX)\
    \ {\n        return [];\n    }\n    return [$min, $min_idx];\n}\n\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\
    \ 40];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,\
    \ 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\n$arr = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27", "    $min = PHP_INT_MAX;\n    $minIndex = PHP_INT_MAX;\n    $minValue\
    \ = PHP_INT_MAX;\n    foreach ($arr as $index => $value) {\n        if ($value\
    \ % 2 === 0 && $value < $min) {\n            $min = $value;\n            $minIndex\
    \ = $index;\n            $minValue = $value;\n        }\n    }\n    if ($min ===\
    \ PHP_INT_MAX) {\n        return [];\n    }\n    return [$minValue, $minIndex];\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    $arr =", "    $evens = [];\n    $evens_indexes = [];\n    foreach ($arr as $index\
    \ => $value) {\n        if ($value % 2 == 0) {\n            $evens[] = $value;\n\
    \            $evens_indexes[] = $index;\n        }\n    }\n    if (count($evens)\
    \ == 0) {\n        return [];\n    }\n    $min_even = min($evens);\n    $min_even_index\
    \ = array_search($min_even, $evens);\n    return [$min_even, $evens_indexes[$min_even_index]];\n\
    }\n\n$arr = [2, 1, 3, 4, 5, 6, 7, 8, 9, 10];\nvar_dump(pluck($arr));\n$arr = [2,\
    \ 1, 3, 4, 5, 6, 7, 8, 9, 10, 2];\nvar_dump(pluck($arr));\n$arr = [2, 1, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 2, 2];\nvar_dump(pluck($arr));\n$arr = [2, 1, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 2, 2, 2];\nvar_dump(pluck($arr));\n$arr = [0, 1, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 2, 2, 2];\nvar_dump(pluck($arr));\n$arr = [0, 1, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 2, 2, 2, 0];\nvar_dump(pluck($arr));\n$arr = [0, 1, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 2, 2, 2, 0, 0];\nvar_dump(pluck($arr));\n$arr = [0, 1, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 2, 2, 2, 0, 0, 0];\nvar_dump(pluck($arr));\n$arr = [0, 1, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 2, 2, 2, 0,", "    $evens = [];\n    $evens_indexes = [];\n\
    \    $evens_indexes_values = [];\n    foreach ($arr as $index => $value) {\n \
    \       if ($value % 2 == 0) {\n            $evens[] = $value;\n            $evens_indexes[]\
    \ = $index;\n            $evens_indexes_values[$index] = $value;\n        }\n\
    \    }\n    if (empty($evens)) {\n        return [];\n    }\n    $min_even = min($evens);\n\
    \    $min_even_index = array_search($min_even, $evens_indexes_values);\n    return\
    \ [$min_even, $min_even_index];\n}\n", "  $evens = [];\n  $evens_index = [];\n\
    \  foreach ($arr as $key => $value) {\n    if ($value % 2 == 0) {\n      $evens[]\
    \ = $value;\n      $evens_index[] = $key;\n    }\n  }\n  if (count($evens) ==\
    \ 0) {\n    return [];\n  }\n  $min_even = min($evens);\n  $min_even_index = array_search($min_even,\
    \ $evens);\n  return [$min_even, $evens_index[$min_even_index]];\n}\n\n$arr1 =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr2 = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19];\n\
    $arr3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n\
    $arr4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\nprint_r(pluck($arr1));\n\
    print_r(pluck($arr2));\nprint_r(pluck($arr3));\nprint_r(pluck($arr4));", "   \
    \ $evens = [];\n    foreach ($arr as $k => $v) {\n        if ($v % 2 == 0) {\n\
    \            $evens[$k] = $v;\n        }\n    }\n    if (empty($evens)) {\n  \
    \      return [];\n    }\n    asort($evens);\n    $keys = array_keys($evens);\n\
    \    return [$evens[$keys[0]], $keys[0]];\n}\n", "    $min = PHP_INT_MAX;\n  \
    \  $index = -1;\n    $count = 0;\n    foreach ($arr as $value) {\n        if ($value\
    \ % 2 == 0 && $value < $min) {\n            $min = $value;\n            $index\
    \ = $count;\n        }\n        $count++;\n    }\n    if ($index == -1) {\n  \
    \      return [];\n    }\n    return [$min, $index];\n}\n\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,\
    \ 43, 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,\
    \ 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,", "    $evens = [];\n  \
    \  foreach ($arr as $i => $v) {\n        if ($v % 2 == 0) {\n            $evens[]\
    \ = [$v, $i];\n        }\n    }\n    if (empty($evens)) {\n        return [];\n\
    \    }\n    usort($evens, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n\
    \            return $a[1] - $b[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $evens[0];\n}\n\n$tests = [\n    [[], []],\n    [[1], []],\n\
    \    [[1, 2], [2, 1]],\n    [[1, 2, 3], [2, 1]],\n    [[1, 2, 3, 4], [2, 1]],\n\
    \    [[1, 2, 3, 4, 5], [2, 1]],\n    [[1, 2, 3, 4, 5, 6], [2, 1]],\n    [[1, 2,\
    \ 3, 4, 5, 6, 7], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8], [2, 1]],\n    [[1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [2,\
    \ 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [2, 1]],\n    [[1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], [2,\
    \ 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10,", "    $min = PHP_INT_MAX;\n    $index\
    \ = -1;\n    foreach ($arr as $key => $value) {\n        if ($value % 2 == 0 &&\
    \ $value < $min) {\n            $min = $value;\n            $index = $key;\n \
    \       }\n    }\n    if ($index == -1) {\n        return [];\n    }\n    return\
    \ [$min, $index];\n}\n", "    $evens = [];\n    foreach ($arr as $k => $v) {\n\
    \        if ($v % 2 == 0) {\n            $evens[$k] = $v;\n        }\n    }\n\
    \    if (empty($evens)) {\n        return [];\n    }\n    asort($evens);\n   \
    \ $min = array_shift($evens);\n    $min_k = array_search($min, $arr);\n    return\
    \ [$min, $min_k];\n}\n", "    $evens = [];\n    $evens_indexes = [];\n    foreach\
    \ ($arr as $index => $value) {\n        if ($value % 2 == 0) {\n            $evens[]\
    \ = $value;\n            $evens_indexes[] = $index;\n        }\n    }\n    if\
    \ (empty($evens)) {\n        return [];\n    }\n    $min_even = min($evens);\n\
    \    $min_even_index = array_search($min_even, $evens);\n    return [$min_even,\
    \ $evens_indexes[$min_even_index]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    echo implode(', ', pluck($arr));\necho \"\\n\";\n\n$arr = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\necho implode(', ', pluck($arr));\n\
    echo \"\\n\";\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\necho implode(', ',\
    \ pluck($arr));\necho \"\\n\";\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\
    \ 32, 33, 34, 35, 36, 37, 38, 39, 40];\necho implode(', ', pluck($arr));\necho\
    \ \"\\n\";\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34", "    $evens\
    \ = [];\n    $evens_indexes = [];\n    foreach ($arr as $index => $value) {\n\
    \        if ($value % 2 == 0) {\n            $evens[] = $value;\n            $evens_indexes[]\
    \ = $index;\n        }\n    }\n    if (count($evens) == 0) {\n        return [];\n\
    \    }\n    $min_even = min($evens);\n    $min_even_index = array_search($min_even,\
    \ $evens);\n    return [$min_even, $evens_indexes[$min_even_index]];\n}\n", " \
    \   $min = PHP_INT_MAX;\n    $index = -1;\n    foreach ($arr as $i => $val) {\n\
    \        if ($val % 2 == 0 && $val < $min) {\n            $min = $val;\n     \
    \       $index = $i;\n        }\n    }\n    return $index == -1 ? [] : [$min,\
    \ $index];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n\
    print_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\
    \n$arr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0];\nprint_r(pluck($arr));\n\n$arr = [];\nprint_r(pluck($arr));",
  "    $even = [];\n    $odd = [];\n    $result = [];\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        if ($arr[$i] % 2 == 0) {\n            $even[] = $arr[$i];\n\
    \        } else {\n            $odd[] = $arr[$i];\n        }\n    }\n    if (count($even)\
    \ == 0) {\n        return [];\n    }\n    $min = min($even);\n    $index = array_search($min,\
    \ $arr);\n    $result[] = $min;\n    $result[] = $index;\n    return $result;\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n$arr = [1,\
    \ 3, 5, 7, 9];\nprint_r(pluck($arr));\n$arr = [2, 4, 6, 8, 10];\nprint_r(pluck($arr));\n\
    $arr = [0, 0, 0, 0, 0];\nprint_r(pluck($arr));", "    $even = [];\n    $index\
    \ = [];\n    foreach ($arr as $key => $value) {\n        if ($value % 2 == 0)\
    \ {\n            $even[] = $value;\n            $index[] = $key;\n        }\n\
    \    }\n    if (count($even) == 0) {\n        return [];\n    }\n    $min = min($even);\n\
    \    $key = array_search($min, $even);\n    return [$min, $index[$key]];\n}\n",
  "    $evens = [];\n    foreach ($arr as $i => $v) {\n        if ($v % 2 == 0) {\n\
    \            $evens[] = [$v, $i];\n        }\n    }\n    if (empty($evens)) {\n\
    \        return [];\n    }\n    usort($evens, function ($a, $b) {\n        if\
    \ ($a[0] == $b[0]) {\n            return $a[1] - $b[1];\n        }\n        return\
    \ $a[0] - $b[0];\n    });\n    return $evens[0];\n}\n\n$arr = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\
    \ 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18,", "    $even = [];\n    $odd = [];\n   \
    \ $result = [];\n    foreach ($arr as $key => $value) {\n        if ($value %\
    \ 2 == 0) {\n            $even[] = $value;\n        } else {\n            $odd[]\
    \ = $value;\n        }\n    }\n    if (count($even) == 0) {\n        return [];\n\
    \    }\n    $min = min($even);\n    foreach ($arr as $key => $value) {\n     \
    \   if ($value == $min) {\n            $result[] = $value;\n            $result[]\
    \ = $key;\n            return $result;\n        }\n    }\n}\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n$arr = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\
    \ 40, 41, 42, 43, 44, 45, 46", "    $evens = [];\n    $evens_indexes = [];\n \
    \   foreach ($arr as $key => $value) {\n        if ($value % 2 == 0) {\n     \
    \       $evens[] = $value;\n            $evens_indexes[] = $key;\n        }\n\
    \    }\n    if (count($evens) == 0) {\n        return [];\n    }\n    $min = min($evens);\n\
    \    $min_index = array_search($min, $evens);\n    return [$min, $evens_indexes[$min_index]];\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [1, 3, 5, 7, 9];\n$arr =\
    \ [2, 4, 6, 8, 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,\
    \ 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,\
    \ 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,\
    \ 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,\
    \ 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108,\
    \ 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,\
    \ 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140,\
    \ 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156",
  "    $evens = [];\n    $indexes = [];\n    foreach ($arr as $key => $value) {\n\
    \        if ($value % 2 == 0) {\n            $evens[] = $value;\n            $indexes[]\
    \ = $key;\n        }\n    }\n    if (count($evens) == 0) {\n        return [];\n\
    \    }\n    $min = min($evens);\n    $minIndex = array_search($min, $evens);\n\
    \    return [$min, $indexes[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\nprint_r(pluck($arr));\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\
    \ 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n$arr = [1,",
  "    $evens = [];\n    foreach ($arr as $index => $value) {\n        if ($value\
    \ % 2 === 0) {\n            $evens[] = [$value, $index];\n        }\n    }\n \
    \   if (empty($evens)) {\n        return [];\n    }\n    usort($evens, function\
    \ ($a, $b) {\n        if ($a[0] === $b[0]) {\n            return $a[1] - $b[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $evens[0];\n}\n\
    \n$tests = [\n    [\n        'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n   \
    \     'expected' => [2, 1],\n    ],\n    [\n        'input' => [1, 3, 5, 7, 9],\n\
    \        'expected' => [],\n    ],\n    [\n        'input' => [0, 1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10],\n        'expected' => [0, 0],\n    ],\n    [\n        'input'\
    \ => [0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        'expected' => [0, 0],\n \
    \   ],\n    [\n        'input' => [],\n        'expected' => [],\n    ],\n];\n\
    \nforeach ($tests as $test) {\n    extract($test);\n    $result = pluck($input);\n\
    \    if ($result !== $expected) {\n        echo \"For input {$input} expected\
    \ {$expected} but got {$result}\\n\";\n    }\n}", "    $evens = [];\n    $indexes\
    \ = [];\n    foreach ($arr as $key => $value) {\n        if ($value % 2 == 0)\
    \ {\n            $evens[] = $value;\n            $indexes[] = $key;\n        }\n\
    \    }\n    if (empty($evens)) {\n        return [];\n    }\n    $min = min($evens);\n\
    \    $minIndex = array_search($min, $evens);\n    return [$min, $indexes[$minIndex]];\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\n$arr =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30, 31];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28,", "    $min = PHP_INT_MAX;\n    $min_index = -1;\n    foreach ($arr\
    \ as $index => $value) {\n        if ($value % 2 == 0 && $value < $min) {\n  \
    \          $min = $value;\n            $min_index = $index;\n        }\n    }\n\
    \    if ($min_index == -1) {\n        return [];\n    }\n    return [$min, $min_index];\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\n$arr =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,\
    \ 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57", "    $evens = [];\n\
    \    foreach ($arr as $i => $val) {\n        if ($val % 2 == 0) {\n          \
    \  $evens[] = [$val, $i];\n        }\n    }\n    if (empty($evens)) {\n      \
    \  return [];\n    }\n    usort($evens, function ($a, $b) {\n        if ($a[0]\
    \ == $b[0]) {\n            return $a[1] - $b[1];\n        }\n        return $a[0]\
    \ - $b[0];\n    });\n    return $evens[0];\n}\n\n$tests = [\n    [\n        'input'\
    \ => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        'expected' => [2, 1],\n    ],\n\
    \    [\n        'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n        'expected'\
    \ => [2, 1],\n    ],\n    [\n        'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12],\n        'expected' => [2, 1],\n    ],\n    [\n        'input' => [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],\n        'expected' => [2, 1],\n  \
    \  ],\n    [\n        'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],\n\
    \        'expected' => [2, 1],\n    ],\n    [\n        'input' => [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n        'expected' => [2, 1],\n   \
    \ ],\n    [\n        'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16],\n        'expected' => [2, 1],\n    ],\n    [\n        'input' => [1",
  "    $evens = [];\n    $indexes = [];\n    foreach ($arr as $key => $value) {\n\
    \        if ($value % 2 == 0) {\n            $evens[] = $value;\n            $indexes[]\
    \ = $key;\n        }\n    }\n    if (empty($evens)) {\n        return [];\n  \
    \  }\n    $min = min($evens);\n    $minIndex = array_search($min, $evens);\n \
    \   return [$min, $indexes[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0,", "    $even = [];\n    $index = [];\n    foreach ($arr as $key =>\
    \ $value) {\n        if ($value % 2 == 0) {\n            $even[] = $value;\n \
    \           $index[] = $key;\n        }\n    }\n    if (empty($even)) {\n    \
    \    return [];\n    }\n    $min = min($even);\n    $key = array_search($min,\
    \ $even);\n    return [$min, $index[$key]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,\
    \ 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,\
    \ 45, 46, 47, 48, 49, 50, 51, 52, 53,", "    $evens = [];\n    $indexes = [];\n\
    \    foreach ($arr as $index => $value) {\n        if ($value % 2 == 0) {\n  \
    \          $evens[] = $value;\n            $indexes[] = $index;\n        }\n \
    \   }\n    if (empty($evens)) {\n        return [];\n    }\n    $min = min($evens);\n\
    \    $minIndex = array_search($min, $evens);\n    return [$min, $indexes[$minIndex]];\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho implode(', ', pluck($arr))\
    \ . PHP_EOL;\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20];\necho implode(', ', pluck($arr)) . PHP_EOL;\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30];\necho implode(', ', pluck($arr)) . PHP_EOL;\n$arr = [0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23, 24, 25, 26, 27, 28, 29, 30];\necho implode(', ', pluck($arr)) . PHP_EOL;",
  "    $evens = [];\n    $indexes = [];\n    foreach ($arr as $i => $value) {\n  \
    \      if ($value % 2 == 0) {\n            $evens[] = $value;\n            $indexes[]\
    \ = $i;\n        }\n    }\n    if (empty($evens)) {\n        return [];\n    }\n\
    \    $min = min($evens);\n    $minIndex = array_search($min, $evens);\n    return\
    \ [$min, $indexes[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    var_dump(pluck($arr));\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nvar_dump(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nvar_dump(pluck($arr));\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nvar_dump(pluck($arr));\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nvar_dump(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nvar_dump(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nvar_dump(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\nvar_dump(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\nvar_dump(pluck($",
  "    $min = PHP_INT_MAX;\n    $minIndex = PHP_INT_MAX;\n    $index = 0;\n    foreach\
    \ ($arr as $value) {\n        if ($value % 2 == 0 && $value < $min) {\n      \
    \      $min = $value;\n            $minIndex = $index;\n        }\n        $index++;\n\
    \    }\n    if ($min == PHP_INT_MAX) {\n        return [];\n    }\n    return\
    \ [$min, $minIndex];\n}\n", "    $evens = [];\n    $evens_indexes = [];\n    $result\
    \ = [];\n    foreach ($arr as $key => $value) {\n        if ($value % 2 == 0)\
    \ {\n            $evens[] = $value;\n            $evens_indexes[] = $key;\n  \
    \      }\n    }\n    if (empty($evens)) {\n        return $result;\n    }\n  \
    \  $min_even = min($evens);\n    $min_even_index = array_search($min_even, $evens);\n\
    \    $result[] = $min_even;\n    $result[] = $evens_indexes[$min_even_index];\n\
    \    return $result;\n}\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30", "    $evens = [];\n\
    \    $index = 0;\n    foreach ($arr as $value) {\n        if ($value % 2 == 0)\
    \ {\n            $evens[] = [$value, $index];\n        }\n        $index++;\n\
    \    }\n    if (count($evens) == 0) {\n        return [];\n    }\n    $min = $evens[0];\n\
    \    foreach ($evens as $even) {\n        if ($even[0] < $min[0]) {\n        \
    \    $min = $even;\n        }\n    }\n    return $min;\n}\n\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10];\nvar_dump(pluck($arr));\n$arr = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nvar_dump(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nvar_dump(pluck($arr));\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\nvar_dump(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\
    \ 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\nvar_dump(", "    $min = PHP_INT_MAX;\n\
    \    $minIndex = -1;\n    foreach ($arr as $i => $val) {\n        if ($val % 2\
    \ === 0 && $val < $min) {\n            $min = $val;\n            $minIndex = $i;\n\
    \        }\n    }\n    return $minIndex === -1 ? [] : [$min, $minIndex];\n}\n",
  "    $evens = [];\n    $indexes = [];\n    foreach ($arr as $key => $value) {\n\
    \        if ($value % 2 == 0) {\n            $evens[] = $value;\n            $indexes[]\
    \ = $key;\n        }\n    }\n    if (empty($evens)) {\n        return [];\n  \
    \  }\n    $min = min($evens);\n    $index = array_search($min, $evens);\n    return\
    \ [$min, $indexes[$index]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n\
    print_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\
    \n$arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr\
    \ = [0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr\
    \ = [];\nprint_r(pluck($arr));", "    $even = [];\n    $odd = [];\n    foreach\
    \ ($arr as $key => $value) {\n        if ($value % 2 == 0) {\n            $even[]\
    \ = $value;\n        } else {\n            $odd[] = $value;\n        }\n    }\n\
    \    if (empty($even)) {\n        return [];\n    }\n    $min = min($even);\n\
    \    $index = array_search($min, $arr);\n    return [$min, $index];\n}\n\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\
    \ 30];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,\
    \ 38, 39, 40];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\
    \ 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32,", "    $evens = array_filter($arr, function($n)\
    \ {\n        return $n % 2 == 0;\n    });\n    if (empty($evens)) {\n        return\
    \ [];\n    }\n    $min = min($evens);\n    $index = array_search($min, $arr);\n\
    \    return [$min, $index];\n}\n\n$tests = [\n    [\n        'input' => [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10],\n        'expected' => [2, 1],\n    ],\n    [\n  \
    \      'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20],\n        'expected' => [2, 1],\n    ],\n    [\n        'input'\
    \ => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23, 24, 25, 26, 27, 28, 29, 30],\n        'expected' => [2, 1],\n    ],\n\
    \    [\n        'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,\
    \ 35, 36, 37, 38, 39, 40],\n        'expected' => [2, 1],\n    ],\n    [\n   \
    \     'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,\
    \ 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50],\n        'expected' =>\
    \ [2, 1],\n    ],\n    [", "    $even = [];\n    $index = [];\n    foreach ($arr\
    \ as $key => $value) {\n        if ($value % 2 == 0) {\n            $even[] =\
    \ $value;\n            $index[] = $key;\n        }\n    }\n    if (count($even)\
    \ == 0) {\n        return [];\n    }\n    $min = min($even);\n    $key = array_search($min,\
    \ $even);\n    return [$min, $index[$key]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\
    \ 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,\
    \ 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck", "    $even = [];\n    $odd = [];\n\
    \    $result = [];\n    foreach ($arr as $key => $value) {\n        if ($value\
    \ % 2 == 0) {\n            $even[] = $value;\n        } else {\n            $odd[]\
    \ = $value;\n        }\n    }\n    if (count($even) == 0) {\n        return [];\n\
    \    }\n    $minEven = min($even);\n    $minEvenKey = array_search($minEven, $arr);\n\
    \    $result[] = $minEven;\n    $result[] = $minEvenKey;\n    return $result;\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\n$arr =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\
    \ 40, 41, 42, 43, 44, 45, 46, 47, 48", "    $evens = [];\n    $evens_indexes =\
    \ [];\n    $evens_values = [];\n    $evens_values_indexes = [];\n    foreach ($arr\
    \ as $index => $value) {\n        if ($value % 2 == 0) {\n            $evens[]\
    \ = $value;\n            $evens_indexes[] = $index;\n        }\n    }\n    if\
    \ (count($evens) == 0) {\n        return [];\n    }\n    $evens_values = array_unique($evens);\n\
    \    foreach ($evens_values as $value) {\n        $evens_values_indexes[] = array_keys($evens,\
    \ $value)[0];\n    }\n    $min_value = min($evens_values);\n    $min_value_index\
    \ = $evens_values_indexes[array_search($min_value, $evens_values)];\n    $min_index\
    \ = $evens_indexes[$min_value_index];\n    return [$min_value, $min_index];\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\necho \"\\\
    n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,\
    \ 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,", "    $evens = [];\n    $evens_indexes\
    \ = [];\n    foreach ($arr as $index => $value) {\n        if ($value % 2 == 0)\
    \ {\n            $evens[] = $value;\n            $evens_indexes[] = $index;\n\
    \        }\n    }\n    if (count($evens) == 0) {\n        return [];\n    }\n\
    \    $min_even = min($evens);\n    $min_even_index = array_search($min_even, $evens);\n\
    \    return [$min_even, $evens_indexes[$min_even_index]];\n}\n\n$tests = [\n \
    \   [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [2, 1]],\n    [[1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30], [2, 1]],\n    [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [0,\
    \ 0]],\n    [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,\
    \ 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,\
    \ 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67", "    $even = [];\n    $odd = [];\n\
    \    $result = [];\n    foreach ($arr as $key => $value) {\n        if ($value\
    \ % 2 == 0) {\n            $even[] = $value;\n        } else {\n            $odd[]\
    \ = $value;\n        }\n    }\n    if (count($even) > 0) {\n        $result[]\
    \ = min($even);\n        $result[] = array_search(min($even), $arr);\n    }\n\
    \    return $result;\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));",
  "    $min = PHP_INT_MAX;\n    $min_index = PHP_INT_MAX;\n    $min_index_arr = [];\n\
    \    $min_index_arr_index = 0;\n    foreach ($arr as $index => $value) {\n   \
    \     if ($value % 2 == 0) {\n            if ($value < $min) {\n             \
    \   $min = $value;\n                $min_index = $index;\n                $min_index_arr\
    \ = [];\n                $min_index_arr_index = 0;\n            }\n          \
    \  if ($value == $min) {\n                $min_index_arr[$min_index_arr_index++]\
    \ = $index;\n            }\n        }\n    }\n    if ($min == PHP_INT_MAX) {\n\
    \        return [];\n    }\n    $min_index = $min_index_arr[0];\n    foreach ($min_index_arr\
    \ as $index) {\n        if ($index < $min_index) {\n            $min_index = $index;\n\
    \        }\n    }\n    return [$min, $min_index];\n}\n\n$arr = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10];\nvar_dump(pluck($arr));\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nvar_dump(pluck($arr));\n$arr =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23, 24, 25, 26, 27, 28, 29, 30];\nvar_dump(pluck($arr));\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];", "   \
    \ $evens = [];\n    $evens_indexes = [];\n    foreach ($arr as $index => $value)\
    \ {\n        if ($value % 2 == 0) {\n            $evens[] = $value;\n        \
    \    $evens_indexes[] = $index;\n        }\n    }\n    if (count($evens) == 0)\
    \ {\n        return [];\n    }\n    $min_even = min($evens);\n    $min_even_index\
    \ = array_search($min_even, $evens);\n    return [$min_even, $evens_indexes[$min_even_index]];\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [1, 3, 5, 7, 9];\n$arr =\
    \ [2, 4, 6, 8, 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,\
    \ 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,\
    \ 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,\
    \ 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,\
    \ 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108,\
    \ 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,\
    \ 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140,\
    \ 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151", "    $min = PHP_INT_MAX;\n\
    \    $minIndex = -1;\n    foreach ($arr as $index => $value) {\n        if ($value\
    \ % 2 == 0 && $value < $min) {\n            $min = $value;\n            $minIndex\
    \ = $index;\n        }\n    }\n    if ($minIndex == -1) {\n        return [];\n\
    \    }\n    return [$min, $minIndex];\n}\n\n$arr = [1,2,3,4,5,6,7,8,9,10];\nprint_r(pluck($arr));\n\
    $arr = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20];\nprint_r(pluck($arr));\n\
    $arr = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30];\n\
    print_r(pluck($arr));\n$arr = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40];\n\
    print_r(pluck($arr));\n$arr = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50];\n\
    print_r(pluck($arr));\n$arr = [1,2,3,4,5,6,7,8,9,10,11,12,13,", "    if (empty($arr))\
    \ {\n        return [];\n    }\n    $evens = [];\n    $odds = [];\n    foreach\
    \ ($arr as $key => $value) {\n        if ($value % 2 == 0) {\n            $evens[$key]\
    \ = $value;\n        } else {\n            $odds[$key] = $value;\n        }\n\
    \    }\n    if (empty($evens)) {\n        return [];\n    }\n    asort($evens);\n\
    \    $min = array_shift($evens);\n    $key = array_search($min, $arr);\n    return\
    \ [$min, $key];\n}\n", "    $even = [];\n    $index = [];\n    foreach ($arr as\
    \ $key => $value) {\n        if ($value % 2 == 0) {\n            $even[] = $value;\n\
    \            $index[] = $key;\n        }\n    }\n    if (empty($even)) {\n   \
    \     return [];\n    }\n    $min = min($even);\n    $key = array_search($min,\
    \ $even);\n    return [$min, $index[$key]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10];\nprint_r(pluck($arr));", "    $even = [];\n    $odd = [];\n    foreach\
    \ ($arr as $key => $value) {\n        if ($value % 2 == 0) {\n            $even[]\
    \ = $value;\n        } else {\n            $odd[] = $value;\n        }\n    }\n\
    \    if (count($even) == 0) {\n        return [];\n    }\n    $min = min($even);\n\
    \    $minIndex = array_search($min, $arr);\n    return [$min, $minIndex];\n}\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(pluck($arr));\n\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(pluck($arr));\n\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\nprint_r",
  "    $min = PHP_INT_MAX;\n    $min_index = PHP_INT_MAX;\n    $min_value = PHP_INT_MAX;\n\
    \    foreach ($arr as $index => $value) {\n        if ($value % 2 == 0 && $value\
    \ < $min) {\n            $min = $value;\n            $min_index = $index;\n  \
    \          $min_value = $value;\n        }\n    }\n    if ($min == PHP_INT_MAX)\
    \ {\n        return [];\n    }\n    return [$min_value, $min_index];\n}\n\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\n\
    $arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\
    \ 39, 40];\nprint_r(pluck($arr));\n$arr = [0, 1, 2, 3, 4, 5", "    $even = [];\n\
    \    $evenIndex = [];\n    for ($i = 0; $i < count($arr); $i++) {\n        if\
    \ ($arr[$i] % 2 == 0) {\n            $even[] = $arr[$i];\n            $evenIndex[]\
    \ = $i;\n        }\n    }\n    if (count($even) == 0) {\n        return [];\n\
    \    }\n    $min = min($even);\n    $minIndex = array_search($min, $even);\n \
    \   return [$min, $evenIndex[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,\
    \ 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n\n$arr = [0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,", "    $min = PHP_INT_MAX;\n    $minIndex =\
    \ PHP_INT_MAX;\n    $minFound = false;\n    foreach ($arr as $i => $v) {\n   \
    \     if ($v % 2 === 0) {\n            if ($v < $min) {\n                $min\
    \ = $v;\n                $minIndex = $i;\n                $minFound = true;\n\
    \            } elseif ($v === $min) {\n                if ($i < $minIndex) {\n\
    \                    $minIndex = $i;\n                }\n            }\n     \
    \   }\n    }\n    if ($minFound) {\n        return [$min, $minIndex];\n    }\n\
    \    return [];\n}\n\n$tests = [\n    [\n        'input' => [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10],\n        'expected' => [2, 1],\n    ],\n    [\n        'input'\
    \ => [1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        'expected' => [2, 1],\n    ],\n\
    \    [\n        'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 2],\n        'expected'\
    \ => [2, 10],\n    ],\n    [\n        'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 0],\n        'expected' => [0, 10],\n    ],\n    [\n        'input' => [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 0, 0],\n        'expected' => [0, 10],\n    ],\n  \
    \  [\n        'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0],\n        'expected'\
    \ => [0, 10],\n    ],\n    [\n        'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 0, 0, 0, 0],\n        'expected' => [0, 10],\n    ],\n    [\n        'input'\
    \ => [1", "    $even = [];\n    foreach ($arr as $key => $value) {\n        if\
    \ ($value % 2 == 0) {\n            $even[] = $value;\n        }\n    }\n    if\
    \ (empty($even)) {\n        return [];\n    }\n    $min = min($even);\n    $index\
    \ = array_search($min, $arr);\n    return [$min, $index];\n}\n\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));", "    $even = [];\n    $index\
    \ = [];\n    foreach ($arr as $key => $value) {\n        if ($value % 2 == 0)\
    \ {\n            $even[] = $value;\n            $index[] = $key;\n        }\n\
    \    }\n    if (empty($even)) {\n        return [];\n    }\n    $min = min($even);\n\
    \    $key = array_search($min, $even);\n    return [$min, $index[$key]];\n}\n",
  "    $evens = [];\n    $evens_indexes = [];\n    $result = [];\n    foreach ($arr\
    \ as $key => $value) {\n        if ($value % 2 == 0) {\n            $evens[] =\
    \ $value;\n            $evens_indexes[] = $key;\n        }\n    }\n    if (empty($evens))\
    \ {\n        return $result;\n    }\n    $min = min($evens);\n    $min_index =\
    \ array_search($min, $evens);\n    $result[] = $min;\n    $result[] = $evens_indexes[$min_index];\n\
    \    return $result;\n}\n", "    $evens = [];\n    foreach ($arr as $i => $v)\
    \ {\n        if ($v % 2 == 0) {\n            $evens[] = [$v, $i];\n        }\n\
    \    }\n    if (empty($evens)) {\n        return [];\n    }\n    usort($evens,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $a[1]\
    \ - $b[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $evens[0];\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\n$arr =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39", "    $evens\
    \ = [];\n    foreach ($arr as $i => $val) {\n        if ($val % 2 == 0) {\n  \
    \          $evens[] = $val;\n        }\n    }\n    if (empty($evens)) {\n    \
    \    return [];\n    }\n    $min = min($evens);\n    $min_index = array_search($min,\
    \ $arr);\n    return [$min, $min_index];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,\
    \ 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,\
    \ 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,\
    \ 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59", "    $even = [];\n\
    \    $index = [];\n    foreach ($arr as $key => $value) {\n        if ($value\
    \ % 2 == 0) {\n            $even[] = $value;\n            $index[] = $key;\n \
    \       }\n    }\n    if (empty($even)) {\n        return [];\n    }\n    $min\
    \ = min($even);\n    $key = array_search($min, $even);\n    return [$min, $index[$key]];\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\n$arr =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0];\nprint_r(pluck($arr));\n\n$arr = [];\nprint_r(pluck($arr));", "  \
    \  $evens = [];\n    $evens_indexes = [];\n    $min_even = PHP_INT_MAX;\n    $min_even_index\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i]\
    \ % 2 == 0) {\n            $evens[] = $arr[$i];\n            $evens_indexes[]\
    \ = $i;\n        }\n    }\n    if (count($evens) == 0) {\n        return [];\n\
    \    }\n    for ($i = 0; $i < count($evens); $i++) {\n        if ($evens[$i] <\
    \ $min_even) {\n            $min_even = $evens[$i];\n            $min_even_index\
    \ = $evens_indexes[$i];\n        }\n    }\n    return [$min_even, $min_even_index];\n\
    }\n", "    $even = [];\n    $odd = [];\n    foreach ($arr as $key => $value) {\n\
    \        if ($value % 2 == 0) {\n            $even[] = $value;\n        } else\
    \ {\n            $odd[] = $value;\n        }\n    }\n    if (count($even) == 0)\
    \ {\n        return [];\n    }\n    $min = min($even);\n    $result = [];\n  \
    \  foreach ($arr as $key => $value) {\n        if ($value == $min) {\n       \
    \     $result[] = $key;\n        }\n    }\n    return [$min, min($result)];\n\
    }\n\n$arr = [2, 1, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));", "    $evens\
    \ = [];\n    $indexes = [];\n    foreach ($arr as $i => $v) {\n        if ($v\
    \ % 2 == 0) {\n            $evens[] = $v;\n            $indexes[] = $i;\n    \
    \    }\n    }\n    if (empty($evens)) {\n        return [];\n    }\n    $min =\
    \ min($evens);\n    $minIndex = array_search($min, $evens);\n    return [$min,\
    \ $indexes[$minIndex]];\n}\n\n$tests = [\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\
    \ [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [2, 1]],\n    [[0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0], [0, 0]],\n    [[], []],\n    [[1, 3, 5, 7, 9, 11, 13, 15, 17, 19,\
    \ 21, 23, 25, 27, 29], []],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,\
    \ 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\
    \ 52, 53, 54, 55, 56, 57, 58, 59,", "    $evens = [];\n    $indexes = [];\n  \
    \  foreach ($arr as $index => $value) {\n        if ($value % 2 == 0) {\n    \
    \        $evens[] = $value;\n            $indexes[] = $index;\n        }\n   \
    \ }\n    if (count($evens) == 0) {\n        return [];\n    }\n    $min = min($evens);\n\
    \    $minIndex = array_search($min, $evens);\n    return [$min, $indexes[$minIndex]];\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar_dump(pluck($arr));\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nvar_dump(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nvar_dump(pluck($arr));\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50];\nvar_dump(pluck($arr));\n$arr = [0, 1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48", "    $evens = [];\n    $indexes = [];\n    foreach\
    \ ($arr as $i => $value) {\n        if ($value % 2 == 0) {\n            $evens[]\
    \ = $value;\n            $indexes[] = $i;\n        }\n    }\n    if (empty($evens))\
    \ {\n        return [];\n    }\n    $min = min($evens);\n    $minIndex = array_search($min,\
    \ $evens);\n    return [$min, $indexes[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\
    \ 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n$arr =\
    \ [1, 2, 3", "    $evens = [];\n    foreach ($arr as $key => $value) {\n     \
    \   if ($value % 2 == 0) {\n            $evens[] = $value;\n        }\n    }\n\
    \    if (empty($evens)) {\n        return [];\n    }\n    $min = min($evens);\n\
    \    $index = array_search($min, $arr);\n    return [$min, $index];\n}\n\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [];\nprint_r(pluck($arr));",
  "    $min = PHP_INT_MAX;\n    $min_index = PHP_INT_MAX;\n    foreach ($arr as $index\
    \ => $value) {\n        if ($value % 2 == 0 && $value < $min) {\n            $min\
    \ = $value;\n            $min_index = $index;\n        }\n    }\n    if ($min\
    \ == PHP_INT_MAX) {\n        return [];\n    }\n    return [$min, $min_index];\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n$arr = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,\
    \ 28, 29, 30];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\
    \ 36, 37, 38, 39, 40];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,\
    \ 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\n$arr =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,", "    $evens = [];\n  \
    \  foreach ($arr as $i => $v) {\n        if ($v % 2 == 0) {\n            $evens[]\
    \ = [$v, $i];\n        }\n    }\n    if (empty($evens)) {\n        return [];\n\
    \    }\n    usort($evens, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n\
    \            return $a[1] - $b[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $evens[0];\n}\n\n$tests = [\n    [[1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10], [2, 1]],\n    [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1], []],\n    [[1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10], [2, 1]],\n    [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0]],\n\
    \    [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 0]],\n    [[0, 1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9], [0, 0]],\n    [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 0]],\n    [[0, 1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], [0, 0]],\n    [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0,\
    \ 0]],\n    [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 0]],\n    [[0, 1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9], [0, 0]],\n    [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 0]],\n    [[0,\
    \ 1, 2, 3, 4, 5, 6,", "    $even = [];\n    $index = [];\n    foreach ($arr as\
    \ $key => $value) {\n        if ($value % 2 == 0) {\n            $even[] = $value;\n\
    \            $index[] = $key;\n        }\n    }\n    if (empty($even)) {\n   \
    \     return [];\n    }\n    $min = min($even);\n    $key = array_search($min,\
    \ $even);\n    return [$min, $index[$key]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10];\n$arr = [1, 3, 5, 7, 9];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\
    \ 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,\
    \ 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,\
    \ 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86,\
    \ 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,\
    \ 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,\
    \ 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73", "    $min = PHP_INT_MAX;\n    $index\
    \ = -1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] % 2\
    \ == 0 && $arr[$i] < $min) {\n            $min = $arr[$i];\n            $index\
    \ = $i;\n        }\n    }\n    if ($index == -1) {\n        return [];\n    }\n\
    \    return [$min, $index];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\
    \ 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr",
  "    $evens = [];\n    $index = 0;\n    foreach ($arr as $key => $value) {\n   \
    \     if ($value % 2 == 0) {\n            $evens[$key] = $value;\n        }\n\
    \    }\n    if (empty($evens)) {\n        return [];\n    }\n    $min = min($evens);\n\
    \    foreach ($evens as $key => $value) {\n        if ($value == $min) {\n   \
    \         $index = $key;\n            break;\n        }\n    }\n    return [$min,\
    \ $index];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n\
    print_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\
    \ 40];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\
    \ 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\n\
    print", "    $min = PHP_INT_MAX;\n    $minIndex = PHP_INT_MAX;\n    $minFound\
    \ = false;\n    foreach ($arr as $index => $value) {\n        if ($value % 2 ==\
    \ 0) {\n            if ($value < $min) {\n                $min = $value;\n   \
    \             $minIndex = $index;\n                $minFound = true;\n       \
    \     } elseif ($value == $min) {\n                if ($index < $minIndex) {\n\
    \                    $minIndex = $index;\n                }\n            }\n \
    \       }\n    }\n    if ($minFound) {\n        return [$min, $minIndex];\n  \
    \  }\n    return [];\n}", "    $min = PHP_INT_MAX;\n    $min_index = PHP_INT_MAX;\n\
    \    $min_found = false;\n    foreach ($arr as $index => $value) {\n        if\
    \ ($value % 2 == 0) {\n            if ($value < $min) {\n                $min\
    \ = $value;\n                $min_index = $index;\n                $min_found\
    \ = true;\n            } elseif ($value == $min) {\n                if ($index\
    \ < $min_index) {\n                    $min_index = $index;\n                }\n\
    \            }\n        }\n    }\n    if ($min_found) {\n        return [$min,\
    \ $min_index];\n    } else {\n        return [];\n    }\n}\n\n$arr1 = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10];\n$arr2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20];\n$arr3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\n$arr4\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\n\
    $arr5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\
    \ 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\n$arr6 =", "    if (empty($arr))\
    \ {\n        return [];\n    }\n    $evens = [];\n    $evens_index = [];\n   \
    \ foreach ($arr as $key => $value) {\n        if ($value % 2 == 0) {\n       \
    \     $evens[] = $value;\n            $evens_index[] = $key;\n        }\n    }\n\
    \    if (empty($evens)) {\n        return [];\n    }\n    $min = min($evens);\n\
    \    $min_index = array_search($min, $evens);\n    return [$min, $evens_index[$min_index]];\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n$arr = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,\
    \ 28, 29, 30];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\
    \ 36, 37, 38, 39, 40];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,\
    \ 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\n$arr =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16", "    $evens = array_filter($arr,\
    \ function($val) {\n        return $val % 2 == 0;\n    });\n    if (empty($evens))\
    \ {\n        return [];\n    }\n    $min = min($evens);\n    $index = array_search($min,\
    \ $arr);\n    return [$min, $index];\n}\n\n$tests = [\n    [[1, 2, 3, 4, 5, 6],\
    \ [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [2, 1]],\n    [[1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [2, 1]],\n    [[1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], [2, 1]],\n    [[1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,\
    \ 45, 46, 47, 48, 49, 50], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,", "    $min\
    \ = PHP_INT_MAX;\n    $minIndex = PHP_INT_MAX;\n    $minEven = PHP_INT_MAX;\n\
    \    $minEvenIndex = PHP_INT_MAX;\n    foreach ($arr as $index => $value) {\n\
    \        if ($value < $min) {\n            $min = $value;\n            $minIndex\
    \ = $index;\n        }\n        if ($value % 2 === 0 && $value < $minEven) {\n\
    \            $minEven = $value;\n            $minEvenIndex = $index;\n       \
    \ }\n    }\n    if ($minEven === PHP_INT_MAX) {\n        return [];\n    }\n \
    \   return [$minEven, $minEvenIndex];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,\
    \ 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36", "    $evens\
    \ = [];\n    $indexes = [];\n    foreach ($arr as $key => $value) {\n        if\
    \ ($value % 2 == 0) {\n            $evens[] = $value;\n            $indexes[]\
    \ = $key;\n        }\n    }\n    if (count($evens) == 0) {\n        return [];\n\
    \    }\n    $min = min($evens);\n    $minIndex = array_search($min, $evens);\n\
    \    return [$min, $indexes[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,\
    \ 43, 44, 45, 46, 47, 48, 49, 50];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,", "    $evens =\
    \ [];\n    $indexes = [];\n    foreach ($arr as $index => $value) {\n        if\
    \ ($value % 2 == 0) {\n            $evens[] = $value;\n            $indexes[]\
    \ = $index;\n        }\n    }\n    if (empty($evens)) {\n        return [];\n\
    \    }\n    $min = min($evens);\n    $minIndex = array_search($min, $evens);\n\
    \    return [$min, $indexes[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\
    \ 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,\
    \ 44, 45, 46, 47, 48, 49, 50];", "    $evens = [];\n    $index = 0;\n    foreach\
    \ ($arr as $value) {\n        if ($value % 2 == 0) {\n            $evens[] = $value;\n\
    \        }\n        $index++;\n    }\n    if (empty($evens)) {\n        return\
    \ [];\n    }\n    $min = min($evens);\n    $index = 0;\n    foreach ($arr as $value)\
    \ {\n        if ($value == $min) {\n            return [$min, $index];\n     \
    \   }\n        $index++;\n    }\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    print_r(pluck($arr));", "    $min = PHP_INT_MAX;\n    $minIndex = PHP_INT_MAX;\n\
    \    $minIndexes = [];\n    foreach ($arr as $i => $v) {\n        if ($v % 2 ==\
    \ 0 && $v < $min) {\n            $min = $v;\n            $minIndex = $i;\n   \
    \         $minIndexes = [$i];\n        } elseif ($v % 2 == 0 && $v == $min) {\n\
    \            $minIndexes[] = $i;\n        }\n    }\n    if ($min == PHP_INT_MAX)\
    \ {\n        return [];\n    }\n    $minIndex = min($minIndexes);\n    return\
    \ [$min, $minIndex];\n}\n\n$tests = [\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [2,\
    \ 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [2, 1]],\n    [[1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], [2,\
    \ 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\
    \ 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,", "    $evens = [];\n    $indexes =\
    \ [];\n    foreach ($arr as $i => $v) {\n        if ($v % 2 == 0) {\n        \
    \    $evens[] = $v;\n            $indexes[] = $i;\n        }\n    }\n    if (empty($evens))\
    \ {\n        return [];\n    }\n    $min = min($evens);\n    $min_index = array_search($min,\
    \ $evens);\n    return [$min, $indexes[$min_index]];\n}\n", "    $min = PHP_INT_MAX;\n\
    \    $index = -1;\n    $i = 0;\n    foreach ($arr as $item) {\n        if ($item\
    \ % 2 == 0 && $item < $min) {\n            $min = $item;\n            $index =\
    \ $i;\n        }\n        $i++;\n    }\n    if ($index == -1) {\n        return\
    \ [];\n    }\n    return [$min, $index];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,\
    \ 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,\
    \ 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,\
    \ 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,", "    $evens = [];\n    $indexes\
    \ = [];\n    foreach ($arr as $i => $v) {\n        if ($v % 2 == 0) {\n      \
    \      $evens[] = $v;\n            $indexes[] = $i;\n        }\n    }\n    if\
    \ (empty($evens)) {\n        return [];\n    }\n    $min = min($evens);\n    $minIndex\
    \ = array_search($min, $evens);\n    return [$min, $indexes[$minIndex]];\n}\n",
  "    $min = PHP_INT_MAX;\n    $index = -1;\n    foreach ($arr as $i => $v) {\n \
    \       if ($v % 2 == 0 && $v < $min) {\n            $min = $v;\n            $index\
    \ = $i;\n        }\n    }\n    return $index == -1 ? [] : [$min, $index];\n}\n\
    \n$tests = [];\n$tests[] = ['input' => [], 'expect' => []];\n$tests[] = ['input'\
    \ => [1], 'expect' => []];\n$tests[] = ['input' => [1, 2], 'expect' => [2, 1]];\n\
    $tests[] = ['input' => [1, 2, 3], 'expect' => [2, 1]];\n$tests[] = ['input' =>\
    \ [1, 2, 3, 4], 'expect' => [2, 1]];\n$tests[] = ['input' => [1, 2, 3, 4, 5],\
    \ 'expect' => [2, 1]];\n$tests[] = ['input' => [1, 2, 3, 4, 5, 6], 'expect' =>\
    \ [2, 1]];\n$tests[] = ['input' => [1, 2, 3, 4, 5, 6, 7], 'expect' => [2, 1]];\n\
    $tests[] = ['input' => [1, 2, 3, 4, 5, 6, 7, 8], 'expect' => [2, 1]];\n$tests[]\
    \ = ['input' => [1, 2, 3, 4, 5, 6, 7, 8, 9], 'expect' => [2, 1]];\n$tests[] =\
    \ ['input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 'expect' => [2, 1]];\n$tests[]\
    \ = ['input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 'expect' => [2, 1]];\n$tests[]\
    \ = ['input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], 'expect", "    $even\
    \ = [];\n    $index = [];\n    foreach ($arr as $key => $value) {\n        if\
    \ ($value % 2 == 0) {\n            $even[] = $value;\n            $index[] = $key;\n\
    \        }\n    }\n    if (empty($even)) {\n        return [];\n    }\n    $min\
    \ = min($even);\n    $minIndex = array_search($min, $even);\n    return [$min,\
    \ $index[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\
    \ 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck($",
  "    $evens = [];\n    $indexes = [];\n    foreach ($arr as $index => $value) {\n\
    \        if ($value % 2 == 0) {\n            $evens[] = $value;\n            $indexes[]\
    \ = $index;\n        }\n    }\n    if (empty($evens)) {\n        return [];\n\
    \    }\n    $min = min($evens);\n    $minIndex = array_search($min, $evens);\n\
    \    return [$min, $indexes[$minIndex]];\n}\n\n$arr = [2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10];\nprint_r(pluck($arr));\n\n$arr = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(pluck($arr));\n\
    \n$arr = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(pluck($arr));\n\n$arr\
    \ = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(pluck($arr));", "   \
    \ $smallest = PHP_INT_MAX;\n    $smallest_index = PHP_INT_MAX;\n    $smallest_even\
    \ = PHP_INT_MAX;\n    $smallest_even_index = PHP_INT_MAX;\n    $result = [];\n\
    \    foreach ($arr as $index => $value) {\n        if ($value < $smallest) {\n\
    \            $smallest = $value;\n            $smallest_index = $index;\n    \
    \    }\n        if ($value % 2 == 0 && $value < $smallest_even) {\n          \
    \  $smallest_even = $value;\n            $smallest_even_index = $index;\n    \
    \    }\n    }\n    if ($smallest_even != PHP_INT_MAX) {\n        $result = [$smallest_even,\
    \ $smallest_even_index];\n    }\n    return $result;\n}\n\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18", "  \
    \  $min = PHP_INT_MAX;\n    $minIndex = PHP_INT_MAX;\n    $minEven = PHP_INT_MAX;\n\
    \    $minEvenIndex = PHP_INT_MAX;\n    for ($i = 0; $i < count($arr); $i++) {\n\
    \        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $minIndex\
    \ = $i;\n        }\n        if ($arr[$i] % 2 == 0 && $arr[$i] < $minEven) {\n\
    \            $minEven = $arr[$i];\n            $minEvenIndex = $i;\n        }\n\
    \    }\n    if ($minEven == PHP_INT_MAX) {\n        return [];\n    }\n    return\
    \ [$minEven, $minEvenIndex];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(pluck($arr));\n\n$arr =\
    \ [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\nprint_r(pluck($arr));\n\n$arr = [1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r", "    $evens = [];\n    $indexes\
    \ = [];\n    foreach ($arr as $key => $value) {\n        if ($value % 2 == 0)\
    \ {\n            $evens[] = $value;\n            $indexes[] = $key;\n        }\n\
    \    }\n    if (empty($evens)) {\n        return [];\n    }\n    $min = min($evens);\n\
    \    $minIndex = array_search($min, $evens);\n    return [$min, $indexes[$minIndex]];\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));", "    $evens\
    \ = array_filter($arr, function($v) {\n        return $v % 2 == 0;\n    });\n\
    \    if (empty($evens)) {\n        return [];\n    }\n    $min = min($evens);\n\
    \    $index = array_search($min, $arr);\n    return [$min, $index];\n}\n\n$tests\
    \ = [\n    [[2, 1, 2, 0, 3, 4, 2]],\n    [[2, 1, 2, 0, 3, 4, 2, 2]],\n    [[]],\n\
    \    [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1", "    $evens = [];\n    $indexes = [];\n    foreach\
    \ ($arr as $index => $value) {\n        if ($value % 2 == 0) {\n            $evens[]\
    \ = $value;\n            $indexes[] = $index;\n        }\n    }\n    if (empty($evens))\
    \ {\n        return [];\n    }\n    $min = min($evens);\n    $minIndex = array_search($min,\
    \ $evens);\n    return [$min, $indexes[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\n$arr = [1, 3, 5, 7, 9, 11, 13,\
    \ 15, 17, 19];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\n$arr = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,\
    \ 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30,", "    $min = PHP_INT_MAX;\n    $minIndex = PHP_INT_MAX;\n\
    \    $minValue = PHP_INT_MAX;\n    foreach ($arr as $index => $value) {\n    \
    \    if ($value % 2 === 0 && $value < $min) {\n            $min = $value;\n  \
    \          $minIndex = $index;\n            $minValue = $value;\n        }\n \
    \   }\n    if ($min === PHP_INT_MAX) {\n        return [];\n    }\n    return\
    \ [$minValue, $minIndex];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n\
    print_r(pluck($arr));\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\
    \ 40];\nprint_r(pluck($arr));\n$arr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0];\nprint_r(pluck($arr));\n$arr = [];\nprint_r(pluck($arr));", "    $even_nums\
    \ = [];\n    $even_nums_index = [];\n    $min_even_num = null;\n    $min_even_num_index\
    \ = null;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] %\
    \ 2 == 0) {\n            $even_nums[] = $arr[$i];\n            $even_nums_index[]\
    \ = $i;\n        }\n    }\n    if (count($even_nums) == 0) {\n        return [];\n\
    \    }\n    $min_even_num = min($even_nums);\n    $min_even_num_index = array_search($min_even_num,\
    \ $even_nums);\n    return [$min_even_num, $even_nums_index[$min_even_num_index]];\n\
    }\n", "    $even = [];\n    $index = [];\n    $result = [];\n    for ($i = 0;\
    \ $i < count($arr); $i++) {\n        if ($arr[$i] % 2 == 0) {\n            array_push($even,\
    \ $arr[$i]);\n            array_push($index, $i);\n        }\n    }\n    if (count($even)\
    \ == 0) {\n        return [];\n    }\n    $min = min($even);\n    $key = array_search($min,\
    \ $even);\n    array_push($result, $min);\n    array_push($result, $index[$key]);\n\
    \    return $result;\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));",
  "    $min = PHP_INT_MAX;\n    $min_index = PHP_INT_MAX;\n    $min_index_count =\
    \ 0;\n    foreach ($arr as $index => $value) {\n        if ($value % 2 == 0) {\n\
    \            if ($value < $min) {\n                $min = $value;\n          \
    \      $min_index = $index;\n                $min_index_count = 1;\n         \
    \   } else if ($value == $min) {\n                $min_index_count++;\n      \
    \          if ($index < $min_index) {\n                    $min_index = $index;\n\
    \                }\n            }\n        }\n    }\n    if ($min_index_count\
    \ == 0) {\n        return [];\n    }\n    return [$min, $min_index];\n}\n\n$arr\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$res = pluck($arr);\nprint_r($res);", " \
    \   $evens = [];\n    foreach ($arr as $key => $value) {\n        if ($value %\
    \ 2 == 0) {\n            $evens[] = $value;\n        }\n    }\n    if (empty($evens))\
    \ {\n        return [];\n    }\n    $smallest = min($evens);\n    $index = array_search($smallest,\
    \ $arr);\n    return [$smallest, $index];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\nprint_r(pluck($arr));\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n$arr = [0, 0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,\
    \ 27, 28, 29, 30];\nprint_r(pluck($arr));", "    $min = PHP_INT_MAX;\n    $index\
    \ = -1;\n    foreach ($arr as $key => $value) {\n        if ($value % 2 == 0 &&\
    \ $value < $min) {\n            $min = $value;\n            $index = $key;\n \
    \       }\n    }\n    if ($index == -1) {\n        return [];\n    }\n    return\
    \ [$min, $index];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar_dump(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n\
    var_dump(pluck($arr));\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nvar_dump(pluck($arr));\n\
    $arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nvar_dump(pluck($arr));\n$arr =\
    \ [];\nvar_dump(pluck($arr));", "    $evens = [];\n    $indexes = [];\n    foreach\
    \ ($arr as $index => $value) {\n        if ($value % 2 == 0) {\n            $evens[]\
    \ = $value;\n            $indexes[] = $index;\n        }\n    }\n    if (empty($evens))\
    \ {\n        return [];\n    }\n    $min = min($evens);\n    $minIndex = array_search($min,\
    \ $evens);\n    return [$min, $indexes[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\
    \ 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\necho \"\\n\";\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,\
    \ 44, 45, 46, 47, 48, 49, 50];", "    $evens = [];\n    $indexes = [];\n    foreach\
    \ ($arr as $i => $v) {\n        if ($v % 2 == 0) {\n            $evens[] = $v;\n\
    \            $indexes[] = $i;\n        }\n    }\n    if (empty($evens)) {\n  \
    \      return [];\n    }\n    $min = min($evens);\n    $minIndex = array_search($min,\
    \ $evens);\n    return [$min, $indexes[$minIndex]];\n}\n\n$tests = [\n    [[],\
    \ []],\n    [[1], []],\n    [[1, 2], [2, 1]],\n    [[1, 2, 3], [2, 1]],\n    [[1,\
    \ 2, 3, 4], [2, 1]],\n    [[1, 2, 3, 4, 5], [2, 1]],\n    [[1, 2, 3, 4, 5, 6],\
    \ [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8],\
    \ [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9], [2, 1]],\n    [[1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [2, 1]],\n\
    \    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [2, 1]],\n    [[1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15], [2, 1]],\n    [[", "    $even = [];\n    $index = [];\n    foreach\
    \ ($arr as $key => $value) {\n        if ($value % 2 == 0) {\n            $even[]\
    \ = $value;\n            $index[] = $key;\n        }\n    }\n    if (empty($even))\
    \ {\n        return [];\n    }\n    $min = min($even);\n    $min_index = array_search($min,\
    \ $even);\n    return [$min, $index[$min_index]];\n}\n\n$arr = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n$arr =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23, 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n$arr = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\
    \ 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n$arr =\
    \ [1, 2, 3, 4, 5, 6", "    $evens = [];\n    $evens_indexes = [];\n    $evens_indexes_values\
    \ = [];\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] % 2\
    \ == 0) {\n            $evens[] = $arr[$i];\n            $evens_indexes[] = $i;\n\
    \            $evens_indexes_values[$i] = $arr[$i];\n        }\n    }\n    if (count($evens)\
    \ == 0) {\n        return [];\n    }\n    $min = min($evens);\n    $min_index\
    \ = array_search($min, $evens_indexes_values);\n    return [$min, $min_index];\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr2 = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n$arr3 = [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,\
    \ 27, 28, 29, 30];\n$arr4 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,\
    \ 35, 36, 37, 38, 39, 40];\n$arr5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,\
    \ 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];", " \
    \   $min = PHP_INT_MAX;\n    $minIndex = PHP_INT_MAX;\n    $minFound = false;\n\
    \    foreach ($arr as $index => $value) {\n        if ($value % 2 == 0) {\n  \
    \          if ($value < $min) {\n                $min = $value;\n            \
    \    $minIndex = $index;\n                $minFound = true;\n            } elseif\
    \ ($value == $min) {\n                if ($index < $minIndex) {\n            \
    \        $minIndex = $index;\n                }\n            }\n        }\n  \
    \  }\n    if ($minFound) {\n        return [$min, $minIndex];\n    }\n    return\
    \ [];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr = [1, 3, 5, 7, 9, 11];\n\
    $arr = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2];\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\
    \ 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,\
    \ 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,\
    \ 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86,\
    \ 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104,\
    \ 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120,\
    \ 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136,\
    \ 137, 138,", "    $min = PHP_INT_MAX;\n    $minIndex = PHP_INT_MAX;\n    $minFound\
    \ = false;\n    foreach ($arr as $index => $value) {\n        if ($value % 2 ===\
    \ 0) {\n            if ($value < $min) {\n                $min = $value;\n   \
    \             $minIndex = $index;\n                $minFound = true;\n       \
    \     } elseif ($value === $min) {\n                if ($index < $minIndex) {\n\
    \                    $minIndex = $index;\n                }\n            }\n \
    \       }\n    }\n    if ($minFound) {\n        return [$min, $minIndex];\n  \
    \  }\n    return [];\n}\n", "    $evens = [];\n    $evens_indexes = [];\n    foreach\
    \ ($arr as $index => $value) {\n        if ($value % 2 == 0) {\n            $evens[]\
    \ = $value;\n            $evens_indexes[] = $index;\n        }\n    }\n    if\
    \ (empty($evens)) {\n        return [];\n    }\n    $min_even = min($evens);\n\
    \    $min_even_index = array_search($min_even, $evens);\n    return [$min_even,\
    \ $evens_indexes[$min_even_index]];\n}\n\n$arr = [1,2,3,4,5,6,7,8,9,10];\n$arr\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100];\n\
    $arr = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65",
  "    $evens = [];\n    $index = [];\n    foreach ($arr as $key => $value) {\n  \
    \      if ($value % 2 == 0) {\n            $evens[] = $value;\n            $index[]\
    \ = $key;\n        }\n    }\n    if (empty($evens)) {\n        return [];\n  \
    \  }\n    $min = min($evens);\n    $minIndex = array_search($min, $evens);\n \
    \   return [$min, $index[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10];\nprint_r(pluck($arr));", "    $evens = [];\n    $indexes = [];\n    foreach\
    \ ($arr as $key => $value) {\n        if ($value % 2 == 0) {\n            $evens[]\
    \ = $value;\n            $indexes[] = $key;\n        }\n    }\n    if (empty($evens))\
    \ {\n        return [];\n    }\n    $min = min($evens);\n    $minIndex = array_search($min,\
    \ $evens);\n    return [$min, $indexes[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));", "    $result = [];\n    $even =\
    \ [];\n    $index = [];\n    foreach ($arr as $key => $value) {\n        if ($value\
    \ % 2 == 0) {\n            $even[] = $value;\n            $index[] = $key;\n \
    \       }\n    }\n    if (empty($even)) {\n        return $result;\n    }\n  \
    \  $result[] = min($even);\n    $result[] = $index[array_search(min($even), $even)];\n\
    \    return $result;\n}\n", "    $evens = [];\n    foreach ($arr as $key => $value)\
    \ {\n        if ($value % 2 == 0) {\n            $evens[] = [$value, $key];\n\
    \        }\n    }\n    if (empty($evens)) {\n        return [];\n    }\n    usort($evens,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $a[1]\
    \ - $b[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $evens[0];\n\
    }\n", "    $min = PHP_INT_MAX;\n    $minIndex = PHP_INT_MAX;\n    $minEven = PHP_INT_MAX;\n\
    \    $minEvenIndex = PHP_INT_MAX;\n    foreach ($arr as $index => $value) {\n\
    \        if ($value < $min) {\n            $min = $value;\n            $minIndex\
    \ = $index;\n        }\n        if ($value % 2 === 0 && $value < $minEven) {\n\
    \            $minEven = $value;\n            $minEvenIndex = $index;\n       \
    \ }\n    }\n    if ($minEven === PHP_INT_MAX) {\n        return [];\n    }\n \
    \   return [$minEven, $minEvenIndex];\n}\n\n$tests = [\n    [\n        'input'\
    \ => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        'expected' => [2, 1],\n    ],\n\
    \    [\n        'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n        'expected'\
    \ => [2, 1],\n    ],\n    [\n        'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12],\n        'expected' => [2, 1],\n    ],\n    [\n        'input' => [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],\n        'expected' => [2, 1],\n  \
    \  ],\n    [\n        'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],\n\
    \        'expected' => [2, 1],\n    ],\n    [\n        'input' => [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n        'expected' => [2, 1],\n   \
    \ ],\n    [\n        'input' => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16", "    $evens = [];\n    $indexes = [];\n    foreach ($arr as $key =>\
    \ $value) {\n        if ($value % 2 == 0) {\n            $evens[] = $value;\n\
    \            $indexes[] = $key;\n        }\n    }\n    if (empty($evens)) {\n\
    \        return [];\n    }\n    $min = min($evens);\n    $min_index = array_search($min,\
    \ $evens);\n    return [$min, $indexes[$min_index]];\n}\n\n$arr = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\n$arr = [1, 3, 5, 7, 9, 11, 13,\
    \ 15, 17, 19];\nprint_r(pluck($arr));\n\n$arr = [2, 4, 6, 8, 10, 12, 14, 16, 18,\
    \ 20];\nprint_r(pluck($arr));\n\n$arr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\nprint_r(pluck($arr));",
  "    $evens = [];\n    $indexes = [];\n    foreach ($arr as $index => $value) {\n\
    \        if ($value % 2 == 0) {\n            $evens[] = $value;\n            $indexes[]\
    \ = $index;\n        }\n    }\n    if (count($evens) == 0) {\n        return [];\n\
    \    }\n    $min = min($evens);\n    $minIndex = array_search($min, $evens);\n\
    \    return [$min, $indexes[$minIndex]];\n}\n", "    $smallest = PHP_INT_MAX;\n\
    \    $index = -1;\n    foreach ($arr as $i => $v) {\n        if ($v % 2 == 0 &&\
    \ $v < $smallest) {\n            $smallest = $v;\n            $index = $i;\n \
    \       }\n    }\n    return $index == -1 ? [] : [$smallest, $index];\n}\n", " \
    \   if (empty($arr)) {\n        return [];\n    }\n    $evens = [];\n    foreach\
    \ ($arr as $i => $v) {\n        if ($v % 2 === 0) {\n            $evens[] = [$v,\
    \ $i];\n        }\n    }\n    if (empty($evens)) {\n        return [];\n    }\n\
    \    usort($evens, function ($a, $b) {\n        if ($a[0] === $b[0]) {\n     \
    \       return $a[1] - $b[1];\n        }\n        return $a[0] - $b[0];\n    });\n\
    \    return $evens[0];\n}\n", "    $evens = [];\n    foreach ($arr as $index =>\
    \ $value) {\n        if ($value % 2 === 0) {\n            $evens[] = [$value,\
    \ $index];\n        }\n    }\n    if (empty($evens)) {\n        return [];\n \
    \   }\n    usort($evens, function ($a, $b) {\n        if ($a[0] === $b[0]) {\n\
    \            return $a[1] - $b[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $evens[0];\n}\n\n$tests = [\n    [[1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [2, 1]],\n    [[1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [2,\
    \ 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], [2, 1]],\n\
    \    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [2, 1]],\n\
    \    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], [2, 1]],\n\
    \    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13", "    $min = PHP_INT_MAX;\n\
    \    $min_idx = PHP_INT_MAX;\n    $idx = 0;\n    foreach ($arr as $val) {\n  \
    \      if ($val % 2 == 0 && $val < $min) {\n            $min = $val;\n       \
    \     $min_idx = $idx;\n        }\n        $idx++;\n    }\n    if ($min == PHP_INT_MAX)\
    \ {\n        return [];\n    }\n    return [$min, $min_idx];\n}\n", "    $evens\
    \ = [];\n    $index = [];\n    foreach ($arr as $key => $value) {\n        if\
    \ ($value % 2 == 0) {\n            $evens[] = $value;\n            $index[] =\
    \ $key;\n        }\n    }\n    if (empty($evens)) {\n        return [];\n    }\n\
    \    $min = min($evens);\n    $minIndex = array_search($min, $evens);\n    return\
    \ [$min, $index[$minIndex]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));",
  "    $evens = [];\n    $indexes = [];\n    foreach ($arr as $key => $value) {\n\
    \        if ($value % 2 == 0) {\n            $evens[] = $value;\n            $indexes[]\
    \ = $key;\n        }\n    }\n    if (empty($evens)) {\n        return [];\n  \
    \  }\n    $min = min($evens);\n    $min_index = array_search($min, $evens);\n\
    \    return [$min, $indexes[$min_index]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\nprint_r(pluck($arr));\n\n$arr = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19];\n\
    print_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,\
    \ 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\
    \ 48, 49, 50];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,",
  "    $evens = [];\n    $index = [];\n    foreach ($arr as $key => $value) {\n  \
    \      if ($value % 2 == 0) {\n            $evens[] = $value;\n            $index[]\
    \ = $key;\n        }\n    }\n    if (empty($evens)) {\n        return [];\n  \
    \  }\n    $min = min($evens);\n    $key = array_search($min, $evens);\n    return\
    \ [$min, $index[$key]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19];\nprint_r(pluck($arr));\n\n$arr =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\
    \n$arr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\nprint_r(pluck($arr));",
  "    $evens = [];\n    $indexes = [];\n    foreach ($arr as $i => $v) {\n      \
    \  if ($v % 2 == 0) {\n            $evens[] = $v;\n            $indexes[] = $i;\n\
    \        }\n    }\n    if (empty($evens)) {\n        return [];\n    }\n    $min\
    \ = min($evens);\n    $minIndex = array_search($min, $evens);\n    return [$min,\
    \ $indexes[$minIndex]];\n}\n\n$tests = [\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\
    \ [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20], [2, 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [2, 1]],\n    [[1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], [2,\
    \ 1]],\n    [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\
    \ 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [2, 1]],\n    [[1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,", "    $evens = [];\n    $indexes\
    \ = [];\n    foreach ($arr as $key => $value) {\n        if ($value % 2 == 0)\
    \ {\n            $evens[] = $value;\n            $indexes[] = $key;\n        }\n\
    \    }\n    if (count($evens) == 0) {\n        return [];\n    }\n    $min = min($evens);\n\
    \    $minIndex = array_search($min, $evens);\n    return [$min, $indexes[$minIndex]];\n\
    }\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pluck($arr));\necho PHP_EOL;\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n\
    print_r(pluck($arr));\necho PHP_EOL;\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\n\
    print_r(pluck($arr));\necho PHP_EOL;\n$arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\
    \ 30];\nprint_r(pluck($arr));\necho PHP_EOL;", "    $evens = [];\n    $evens_indexes\
    \ = [];\n    foreach ($arr as $index => $value) {\n        if ($value % 2 == 0)\
    \ {\n            $evens[] = $value;\n            $evens_indexes[] = $index;\n\
    \        }\n    }\n    if (empty($evens)) {\n        return [];\n    }\n    $min_even\
    \ = min($evens);\n    $min_even_index = array_search($min_even, $evens);\n   \
    \ return [$min_even, $evens_indexes[$min_even_index]];\n}\n\n$arr1 = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10];\n$arr2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20];\n$arr3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\n$arr4\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\n\
    $arr5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\
    \ 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\n$arr6 = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14,", "    $evens = [];\n    $indexes = [];\n    foreach\
    \ ($arr as $key => $value) {\n        if ($value % 2 == 0) {\n            $evens[]\
    \ = $value;\n            $indexes[] = $key;\n        }\n    }\n    if (count($evens)\
    \ == 0) {\n        return [];\n    }\n    $min = min($evens);\n    $minIndex =\
    \ array_search($min, $evens);\n    return [$min, $indexes[$minIndex]];\n}\n\n\
    $arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho implode(', ', pluck($arr));\necho\
    \ \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20];\necho implode(', ', pluck($arr));\necho \"\\n\";\n$arr = [0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\necho implode(', ', pluck($arr));\n\
    echo \"\\n\";\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\
    \ 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,\
    \ 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,\
    \ 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92,\
    \ 93, 94, 95, 96, 97, 98, 99, 100];\necho implode(', ', pluck($arr", "    $evens\
    \ = [];\n    $indexes = [];\n    foreach ($arr as $key => $value) {\n        if\
    \ ($value % 2 == 0) {\n            $evens[] = $value;\n            $indexes[]\
    \ = $key;\n        }\n    }\n    if (count($evens) == 0) {\n        return [];\n\
    \    }\n    $min = min($evens);\n    $min_index = array_search($min, $evens);\n\
    \    return [$min, $indexes[$min_index]];\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(pluck($arr));\n\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30];\nprint_r(pluck($arr));\n\n$arr = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\nprint_r(pluck($arr));\n\
    \n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\
    \ 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\nprint_r(pluck($arr));\n", "  \
    \  $evens = [];\n    $indexes = [];\n    foreach ($arr as $index => $value) {\n\
    \        if ($value % 2 == 0) {\n            $evens[] = $value;\n            $indexes[]\
    \ = $index;\n        }\n    }\n    if (empty($evens)) {\n        return [];\n\
    \    }\n    $min = min($evens);\n    $minIndex = array_search($min, $evens);\n\
    \    return [$min, $indexes[$minIndex]];\n}\n\n$tests = [];\n$tests[] = ['input'\
    \ => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 'expected' => [2, 1]];\n$tests[] = ['input'\
    \ => [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'expected' => []];\n$tests[] = ['input' =>\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], 'expected'\
    \ => [2, 1]];\n$tests[] = ['input' => [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'expected'\
    \ => [0, 0]];\n$tests[] = ['input' => [], 'expected' => []];\n\nforeach ($tests\
    \ as $index => $test) {\n    $result = pluck($test['input']);\n    if ($test['expected']\
    \ != $result) {\n        echo 'Test fail at test' . ($index + 1) . PHP_EOL;\n\
    \        exit;\n    }\n}\n\necho 'Test good!' . PHP_EOL;"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

language: php
name: HumanEval_104_unique_digits
results:
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $num_arr\
    \ = str_split($num);\n            $is_even = false;\n            foreach ($num_arr\
    \ as $digit) {\n                if ($digit % 2 == 0) {\n                    $is_even\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (!$is_even) {\n                $result[] = $num;\n            }\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,\
    \ 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\
    \ 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,\
    \ 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,\
    \ 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    \    [4] => 31\n    [5] => 33\n    [6] => 35\n    [7] => 37\n    [8] => 39\n \
    \   [9] => 51\n    [10] => 53\n    [11] => 55\n    [12] => 57\n    [13] => 59\n\
    \    [14] => 71\n    [15] => 73\n    [16] => 75\n    [17] => 77\n    [18] => 79\n\
    \    [19] => 91\n    [20] => 93\n    [21] => 95\n    [22] => 97\n    [23] => 99\n\
    )\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $str = strval($num);\n\
    \            $is_even = false;\n            for ($i = 0; $i < strlen($str); $i++)\
    \ {\n                if ($str[$i] % 2 == 0) {\n                    $is_even =\
    \ true;\n                    break;\n                }\n            }\n      \
    \      if (!$is_even) {\n                $result[] = $num;\n            }\n  \
    \      }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729992
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $res = [];\n    foreach ($x as $num) {\n        if (has_even_digit($num))\
    \ {\n            continue;\n        }\n        $res[] = $num;\n    }\n    sort($res);\n\
    \    return $res;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmpypxk4zs2.php:9\nStack trace:\n#0 /tmp/tmpypxk4zs2.php(19): unique_digits(Array)\n\
    #1 /tmp/tmpypxk4zs2.php(23): candidate(Array)\n#2 /tmp/tmpypxk4zs2.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmpypxk4zs2.php on line 9\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $digits = str_split($num);\n\
    \        $is_unique = true;\n        foreach ($digits as $digit) {\n         \
    \   if ($digit % 2 == 0) {\n                $is_unique = false;\n            \
    \    break;\n            }\n        }\n        if ($is_unique) {\n           \
    \ $result[] = $num;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $digits = str_split($num);\n\
    \        $odd = true;\n        foreach ($digits as $digit) {\n            if ($digit\
    \ % 2 == 0) {\n                $odd = false;\n                break;\n       \
    \     }\n        }\n        if ($odd) {\n            $result[] = $num;\n     \
    \   }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $digits = str_split($num);\n\
    \    $is_unique = true;\n    foreach ($digits as $digit) {\n      if ($digit %\
    \ 2 == 0) {\n        $is_unique = false;\n        break;\n      }\n    }\n   \
    \ if ($is_unique) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n \
    \ return $result;\n}\n\n$x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$result = unique_digits($x);\n\
    print_r($result);\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n    [3] => 7\n    [4]\
    \ => 9\n)\n"
  timestamp: 1659729992
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $number) {\n    if (strpos($number, '2')\
    \ === false && strpos($number, '4') === false && strpos($number, '6') === false\
    \ && strpos($number, '8') === false) {\n      $result[] = $number;\n    }\n  }\n\
    \  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgam7i99a.php:23\n\
    Stack trace:\n#0 /tmp/tmpgam7i99a.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgam7i99a.php\
    \ on line 23\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $num = strval($num);\n   \
    \ $is_unique = true;\n    for ($i = 0; $i < strlen($num); $i++) {\n      if ($num[$i]\
    \ % 2 == 0) {\n        $is_unique = false;\n        break;\n      }\n    }\n \
    \   if ($is_unique) {\n      $result[] = intval($num);\n    }\n  }\n  sort($result);\n\
    \  return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729992
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $num = (string)$num;\n   \
    \ $isEven = false;\n    for ($i = 0; $i < strlen($num); $i++) {\n      if ($num[$i]\
    \ % 2 === 0) {\n        $isEven = true;\n        break;\n      }\n    }\n    if\
    \ (!$isEven) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\n$x = [12, 345, 2, 6, 7896];\nprint_r(unique_digits($x));\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqf6iiy2.php:32\n\
    Stack trace:\n#0 /tmp/tmpsqf6iiy2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsqf6iiy2.php\
    \ on line 32\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen(strval($num))\
    \ == 1) {\n            $result[] = $num;\n        } else {\n            $digits\
    \ = str_split(strval($num));\n            $hasEven = false;\n            foreach\
    \ ($digits as $digit) {\n                if ($digit % 2 == 0) {\n            \
    \        $hasEven = true;\n                    break;\n                }\n   \
    \         }\n            if (!$hasEven) {\n                $result[] = $num;\n\
    \            }\n        }\n    }\n    sort($result);\n    return $result;\n}\n\
    \n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729992
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $value) {\n        if (strlen($value)\
    \ == 1) {\n            $result[] = $value;\n        } else {\n            $flag\
    \ = true;\n            for ($i = 0; $i < strlen($value); $i++) {\n           \
    \     if ($value[$i] % 2 == 0) {\n                    $flag = false;\n       \
    \             break;\n                }\n            }\n            if ($flag)\
    \ {\n                $result[] = $value;\n            }\n        }\n    }\n  \
    \  sort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4aximdtj.php:33\n\
    Stack trace:\n#0 /tmp/tmp4aximdtj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4aximdtj.php\
    \ on line 33\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $unique_digits = [];\n  foreach ($x as $num) {\n    $num_string = strval($num);\n\
    \    $has_even_digit = false;\n    for ($i = 0; $i < strlen($num_string); $i++)\
    \ {\n      if ($num_string[$i] % 2 == 0) {\n        $has_even_digit = true;\n\
    \        break;\n      }\n    }\n    if (!$has_even_digit) {\n      $unique_digits[]\
    \ = $num;\n    }\n  }\n  sort($unique_digits);\n  return $unique_digits;\n}\n\n\
    $x = [12, 345, 2, 6, 7896];\nprint_r(unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Array

    (

    )

    '
  timestamp: 1659729992
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strpos($num, '2') ===\
    \ false && strpos($num, '4') === false && strpos($num, '6') === false && strpos($num,\
    \ '8') === false) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqkhc0zk7.php:23\n\
    Stack trace:\n#0 /tmp/tmpqkhc0zk7.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpqkhc0zk7.php\
    \ on line 23\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $str = strval($num);\n\
    \        $isEven = false;\n        for ($i = 0; $i < strlen($str); $i++) {\n \
    \           if ($str[$i] % 2 == 0) {\n                $isEven = true;\n      \
    \          break;\n            }\n        }\n        if (!$isEven) {\n       \
    \     $result[] = $num;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $str = strval($num);\n\
    \        $is_unique = true;\n        for ($i = 0; $i < strlen($str); $i++) {\n\
    \            if ($str[$i] % 2 == 0) {\n                $is_unique = false;\n \
    \               break;\n            }\n        }\n        if ($is_unique) {\n\
    \            $result[] = $num;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $str = strval($num);\n   \
    \ $hasEven = false;\n    for ($i = 0; $i < strlen($str); $i++) {\n      if ($str[$i]\
    \ % 2 == 0) {\n        $hasEven = true;\n        break;\n      }\n    }\n    if\
    \ (!$hasEven) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $arr = [];\n    foreach ($x as $num) {\n        $str = strval($num);\n\
    \        $is_unique = true;\n        for ($i = 0; $i < strlen($str); $i++) {\n\
    \            if ($str[$i] % 2 == 0) {\n                $is_unique = false;\n \
    \               break;\n            }\n        }\n        if ($is_unique) {\n\
    \            $arr[] = $num;\n        }\n    }\n    sort($arr);\n    return $arr;\n\
    }\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $digits = str_split($num);\n\
    \    $is_unique = true;\n    foreach ($digits as $digit) {\n      if ($digit %\
    \ 2 == 0) {\n        $is_unique = false;\n        break;\n      }\n    }\n   \
    \ if ($is_unique) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $digits = str_split($num);\n\
    \    $is_unique = true;\n    foreach ($digits as $digit) {\n      if ($digit %\
    \ 2 == 0) {\n        $is_unique = false;\n        break;\n      }\n    }\n   \
    \ if ($is_unique) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $num_arr\
    \ = str_split($num);\n            $even_flag = false;\n            foreach ($num_arr\
    \ as $digit) {\n                if ($digit % 2 == 0) {\n                    $even_flag\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (!$even_flag) {\n                $result[] = $num;\n            }\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,\
    \ 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\
    \ 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,\
    \ 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,\
    \ 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    \    [4] => 31\n    [5] => 33\n    [6] => 35\n    [7] => 37\n    [8] => 39\n \
    \   [9] => 51\n    [10] => 53\n    [11] => 55\n    [12] => 57\n    [13] => 59\n\
    \    [14] => 71\n    [15] => 73\n    [16] => 75\n    [17] => 77\n    [18] => 79\n\
    \    [19] => 91\n    [20] => 93\n    [21] => 95\n    [22] => 97\n    [23] => 99\n\
    )\n"
  timestamp: 1659729992
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strpos($num, '2')\
    \ === false && strpos($num, '4') === false && strpos($num, '6') === false && strpos($num,\
    \ '8') === false) {\n            $result[] = $num;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\n$x = [12, 11, 14, 15, 7, 2];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 7\n    [1] => 11\n    [2] => 15\n)\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp63w13jij.php:25\nStack trace:\n\
    #0 /tmp/tmp63w13jij.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp63w13jij.php\
    \ on line 25\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $number) {\n        if (strlen(strval($number))\
    \ == 1) {\n            $result[] = $number;\n        } else {\n            $hasEvenDigit\
    \ = false;\n            $numberString = strval($number);\n            for ($i\
    \ = 0; $i < strlen($numberString); $i++) {\n                if ($numberString[$i]\
    \ % 2 == 0) {\n                    $hasEvenDigit = true;\n                   \
    \ break;\n                }\n            }\n            if (!$hasEvenDigit) {\n\
    \                $result[] = $number;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,\
    \ 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\
    \ 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\
    \ 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,\
    \ 100];\n\n$result = unique_digits($x);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    \    [4] => 31\n    [5] => 33\n    [6] => 35\n    [7] => 37\n    [8] => 39\n \
    \   [9] => 51\n    [10] => 53\n    [11] => 55\n    [12] => 57\n    [13] => 59\n\
    \    [14] => 71\n    [15] => 73\n    [16] => 75\n    [17] => 77\n    [18] => 79\n\
    \    [19] => 91\n    [20] => 93\n    [21] => 95\n    [22] => 97\n    [23] => 99\n\
    )\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $str = strval($num);\n\
    \        $hasEven = false;\n        for ($i = 0; $i < strlen($str); $i++) {\n\
    \            if ($str[$i] % 2 == 0) {\n                $hasEven = true;\n    \
    \            break;\n            }\n        }\n        if (!$hasEven) {\n    \
    \        $result[] = $num;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\n$x = [12,345,2,6,7896];\n$result = unique_digits($x);\nprint_r($result);\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Array

    (

    )

    '
  timestamp: 1659729992
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $arr = [];\n  foreach ($x as $value) {\n    $str = strval($value);\n  \
    \  if (strpos($str, '2') === false && strpos($str, '4') === false && strpos($str,\
    \ '6') === false && strpos($str, '8') === false) {\n      $arr[] = $value;\n \
    \   }\n  }\n  sort($arr);\n  return $arr;\n}\n\necho '<pre>';\nprint_r(unique_digits([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\necho '</pre>';\n\necho '<pre>';\nprint_r(unique_digits([12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20]));\necho '</pre>';\n\necho '<pre>';\nprint_r(unique_digits([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\necho '</pre>';\n\
    \necho '<pre>';\nprint_r(unique_digits([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]));\necho\
    \ '</pre>';\n\necho '<pre>';\nprint_r(unique_digits([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\
    \ 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]));\necho '</pre>';\n\necho '<pre>';\n\
    print_r(unique_digits([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20, 21, 22, 23, 24, 25\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpa8wmtebd.php on line 40

    '
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $digits = str_split($num);\n\
    \        $is_odd = true;\n        foreach ($digits as $digit) {\n            if\
    \ ($digit % 2 == 0) {\n                $is_odd = false;\n                break;\n\
    \            }\n        }\n        if ($is_odd) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $num_str = strval($num);\n\
    \        $even_found = false;\n        for ($i = 0; $i < strlen($num_str); $i++)\
    \ {\n            if ($num_str[$i] % 2 == 0) {\n                $even_found = true;\n\
    \                break;\n            }\n        }\n        if (!$even_found) {\n\
    \            $result[] = $num;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\n$x = [12, 34, 11, 9, 8];\nprint_r(unique_digits($x));\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 9\n    [1] => 11\n)\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen(strval($num))\
    \ == 1) {\n            array_push($result, $num);\n        } else {\n        \
    \    $str = strval($num);\n            $flag = true;\n            for ($i = 0;\
    \ $i < strlen($str); $i++) {\n                if ($str[$i] % 2 == 0) {\n     \
    \               $flag = false;\n                    break;\n                }\n\
    \            }\n            if ($flag) {\n                array_push($result,\
    \ $num);\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $digits = str_split($num);\n\
    \        $is_unique = true;\n        foreach ($digits as $digit) {\n         \
    \   if ($digit % 2 == 0) {\n                $is_unique = false;\n            \
    \    break;\n            }\n        }\n        if ($is_unique) {\n           \
    \ $result[] = $num;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $digits = str_split($num);\n\
    \        $has_even = false;\n        foreach ($digits as $digit) {\n         \
    \   if ($digit % 2 == 0) {\n                $has_even = true;\n              \
    \  break;\n            }\n        }\n        if (!$has_even) {\n            $result[]\
    \ = $num;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\n$x\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n    [3] => 7\n    [4]\
    \ => 9\n)\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $value) {\n    $digits = str_split($value);\n\
    \    $is_unique = true;\n    foreach ($digits as $digit) {\n      if ($digit %\
    \ 2 == 0) {\n        $is_unique = false;\n        break;\n      }\n    }\n   \
    \ if ($is_unique) {\n      $result[] = $value;\n    }\n  }\n  sort($result);\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $value) {\n        if (strlen($value)\
    \ == 1) {\n            $result[] = $value;\n        } else {\n            $arr\
    \ = str_split($value);\n            $flag = true;\n            foreach ($arr as\
    \ $digit) {\n                if ($digit % 2 == 0) {\n                    $flag\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         if ($flag) {\n                $result[] = $value;\n            }\n \
    \       }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10];\nprint_r(unique_digits($x));\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strlen(strval($num)) ==\
    \ 1) {\n      $result[] = $num;\n    } else {\n      $digits = str_split(strval($num));\n\
    \      $is_unique = true;\n      foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 == 0) {\n          $is_unique = false;\n          break;\n        }\n  \
    \    }\n      if ($is_unique) {\n        $result[] = $num;\n      }\n    }\n \
    \ }\n  sort($result);\n  return $result;\n}\n\n$x = [2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n    [4]\
    \ => 6\n    [5] => 7\n    [6] => 8\n    [7] => 9\n    [8] => 11\n    [9] => 13\n\
    \    [10] => 15\n    [11] => 17\n    [12] => 19\n)\n"
  timestamp: 1659729992
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ===\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $digits =\
    \ str_split($num);\n            $has_even = false;\n            foreach ($digits\
    \ as $digit) {\n                if ($digit % 2 === 0) {\n                    $has_even\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (!$has_even) {\n                $result[] = $num;\n            }\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10];\nprint_r(unique_digits($x));\n\n$x = [12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\n$x = [12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\
    \ 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\nprint_r(unique_digits($x));\n\
    \n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\
    \ 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,\
    \ 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,\
    \ 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86,\
    \ 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\nprint_r(unique_digits\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpo34_q7kj.php on line 40

    '
  timestamp: 1659729992
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $num = strval($num);\n\
    \        $has_even = false;\n        for ($i = 0; $i < strlen($num); $i++) {\n\
    \            if ($num[$i] % 2 == 0) {\n                $has_even = true;\n   \
    \             break;\n            }\n        }\n        if (!$has_even) {\n  \
    \          $result[] = $num;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\n$x = [12, 345, 2, 6, 7896];\nprint_r(unique_digits($x));\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmb6axl4o.php:32\n\
    Stack trace:\n#0 /tmp/tmpmb6axl4o.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmb6axl4o.php\
    \ on line 32\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $is_even = false;\n\
    \        $digits = str_split($num);\n        foreach ($digits as $digit) {\n \
    \           if ($digit % 2 == 0) {\n                $is_even = true;\n       \
    \         break;\n            }\n        }\n        if (!$is_even) {\n       \
    \     $result[] = $num;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $str = strval($num);\n\
    \        $hasEven = false;\n        for ($i = 0; $i < strlen($str); $i++) {\n\
    \            if ($str[$i] % 2 == 0) {\n                $hasEven = true;\n    \
    \            break;\n            }\n        }\n        if (!$hasEven) {\n    \
    \        $result[] = $num;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $digits =\
    \ str_split($num);\n            $has_even = false;\n            foreach ($digits\
    \ as $digit) {\n                if ($digit % 2 == 0) {\n                    $has_even\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (!$has_even) {\n                $result[] = $num;\n            }\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [12, 1,\
    \ 21, 4, 5, 6, 7, 8, 9, 10];\nprint_r(unique_digits($x));\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 5\n    [3] => 6\n    [4]\
    \ => 7\n    [5] => 8\n    [6] => 9\n)\n"
  timestamp: 1659729992
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen(strval($num))\
    \ == 1) {\n            $result[] = $num;\n        } else {\n            $digits\
    \ = str_split(strval($num));\n            $has_even = false;\n            foreach\
    \ ($digits as $digit) {\n                if ($digit % 2 == 0) {\n            \
    \        $has_even = true;\n                    break;\n                }\n  \
    \          }\n            if (!$has_even) {\n                $result[] = $num;\n\
    \            }\n        }\n    }\n    sort($result);\n    return $result;\n}\n\
    \n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\necho implode(', ', unique_digits($x));\n\
    echo \"\\n\";\n\n$x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho implode(', ', unique_digits($x));\n\
    echo \"\\n\";\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30];\necho implode(', ', unique_digits($x));\necho \"\\n\";\n\
    \n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\
    \ 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,\
    \ 49, 50];\necho implode(', ', unique_digits($x));\necho \"\\n\";\n\n$x = [12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\
    \ 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,\
    \ 51, 52, 53, 54, 55, 56, 57, 58, 59, 60\nfunction candidate(...$args) {\n   \
    \ return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwlus_24s.php on line 46

    '
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $num_arr\
    \ = str_split($num);\n            $is_even = false;\n            foreach ($num_arr\
    \ as $digit) {\n                if ($digit % 2 == 0) {\n                    $is_even\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (!$is_even) {\n                $result[] = $num;\n            }\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [12, 1,\
    \ 2, 3, 4, 11, 13];\necho implode(', ', unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1, 2, 3, 4, 11, 13
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strpos($num, '2') ===\
    \ false && strpos($num, '4') === false && strpos($num, '6') === false && strpos($num,\
    \ '8') === false) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqkhc0zk7.php:23\n\
    Stack trace:\n#0 /tmp/tmpqkhc0zk7.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpqkhc0zk7.php\
    \ on line 23\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strlen($num) == 1) {\n\
    \      $result[] = $num;\n    } else {\n      $num_arr = str_split($num);\n  \
    \    $is_even = false;\n      foreach ($num_arr as $digit) {\n        if ($digit\
    \ % 2 == 0) {\n          $is_even = true;\n          break;\n        }\n     \
    \ }\n      if (!$is_even) {\n        $result[] = $num;\n      }\n    }\n  }\n\
    \  sort($result);\n  return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20];\nprint_r(unique_digits($x));\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strpos($num, '2') ===\
    \ false &&\n        strpos($num, '4') === false &&\n        strpos($num, '6')\
    \ === false &&\n        strpos($num, '8') === false) {\n      $result[] = $num;\n\
    \    }\n  }\n  sort($result);\n  return $result;\n}\n\n$x = [12, 11, 14, 13, 15,\
    \ 16, 17, 18, 19];\nprint_r(unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 11\n    [1] => 13\n    [2] => 15\n    [3] => 17\n\
    \    [4] => 19\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ax8x1yu.php:28\n\
    Stack trace:\n#0 /tmp/tmp_ax8x1yu.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_ax8x1yu.php\
    \ on line 28\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (has_even_digit($num))\
    \ {\n            continue;\n        }\n        $result[] = $num;\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmp_ugc2o9r.php:9\nStack trace:\n#0 /tmp/tmp_ugc2o9r.php(19): unique_digits(Array)\n\
    #1 /tmp/tmp_ugc2o9r.php(23): candidate(Array)\n#2 /tmp/tmp_ugc2o9r.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_ugc2o9r.php on line 9\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $str = strval($num);\n   \
    \ $isUnique = true;\n    for ($i = 0; $i < strlen($str); $i++) {\n      if ($str[$i]\
    \ % 2 == 0) {\n        $isUnique = false;\n        break;\n      }\n    }\n  \
    \  if ($isUnique) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n \
    \ return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strlen($num) == 1) {\n\
    \      $result[] = $num;\n    } else {\n      $digits = str_split($num);\n   \
    \   $is_unique = true;\n      foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 == 0) {\n          $is_unique = false;\n          break;\n        }\n  \
    \    }\n      if ($is_unique) {\n        $result[] = $num;\n      }\n    }\n \
    \ }\n  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $digits = str_split($num);\n\
    \        $has_even = false;\n        foreach ($digits as $digit) {\n         \
    \   if ($digit % 2 == 0) {\n                $has_even = true;\n              \
    \  break;\n            }\n        }\n        if (!$has_even) {\n            $result[]\
    \ = $num;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen(strval($num))\
    \ == 1) {\n            $result[] = $num;\n        } else {\n            $digits\
    \ = str_split(strval($num));\n            $is_odd = true;\n            foreach\
    \ ($digits as $digit) {\n                if ($digit % 2 == 0) {\n            \
    \        $is_odd = false;\n                    break;\n                }\n   \
    \         }\n            if ($is_odd) {\n                $result[] = $num;\n \
    \           }\n        }\n    }\n    sort($result);\n    return $result;\n}\n\n\
    $x = [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\
    \ 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,\
    \ 49, 50];\nprint_r(unique_digits($x));\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    \    [4] => 31\n    [5] => 33\n    [6] => 35\n    [7] => 37\n    [8] => 39\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $number) {\n        if (strlen($number)\
    \ == 1) {\n            array_push($result, $number);\n        } else {\n     \
    \       $digits = str_split($number);\n            $is_unique = true;\n      \
    \      foreach ($digits as $digit) {\n                if ($digit % 2 == 0) {\n\
    \                    $is_unique = false;\n                    break;\n       \
    \         }\n            }\n            if ($is_unique) {\n                array_push($result,\
    \ $number);\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\n$x = [12, 1, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nvar_dump(unique_digits($x));\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "array(11) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n\
    \  [3]=>\n  int(4)\n  [4]=>\n  int(5)\n  [5]=>\n  int(6)\n  [6]=>\n  int(7)\n\
    \  [7]=>\n  int(8)\n  [8]=>\n  int(9)\n  [9]=>\n  int(11)\n  [10]=>\n  int(13)\n\
    }\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $number) {\n        $digits = str_split($number);\n\
    \        if (in_array(0, $digits) || in_array(2, $digits) || in_array(4, $digits)\
    \ || in_array(6, $digits) || in_array(8, $digits)) {\n            continue;\n\
    \        } else {\n            $result[] = $number;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $number) {\n    if (strpos($number, '2')\
    \ === false && strpos($number, '4') === false && strpos($number, '6') === false\
    \ && strpos($number, '8') === false) {\n      $result[] = $number;\n    }\n  }\n\
    \  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgam7i99a.php:23\n\
    Stack trace:\n#0 /tmp/tmpgam7i99a.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgam7i99a.php\
    \ on line 23\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strlen(strval($num)) ==\
    \ 1) {\n      $result[] = $num;\n    } else {\n      $digits = str_split(strval($num));\n\
    \      $is_unique = true;\n      foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 == 0) {\n          $is_unique = false;\n          break;\n        }\n  \
    \    }\n      if ($is_unique) {\n        $result[] = $num;\n      }\n    }\n \
    \ }\n  sort($result);\n  return $result;\n}\n\n$x = [12, 1, 21, 4, 6, 7];\nprint_r(unique_digits($x));\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 6\n    [3] => 7\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $value) {\n        $str = (string)$value;\n\
    \        $str = str_split($str);\n        $isEven = false;\n        foreach ($str\
    \ as $digit) {\n            if ($digit % 2 == 0) {\n                $isEven =\
    \ true;\n                break;\n            }\n        }\n        if (!$isEven)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $str = strval($num);\n\
    \        $has_even = false;\n        for ($i = 0; $i < strlen($str); $i++) {\n\
    \            if ($str[$i] % 2 == 0) {\n                $has_even = true;\n   \
    \             break;\n            }\n        }\n        if (!$has_even) {\n  \
    \          $result[] = $num;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (is_odd($num)) {\n    \
    \  $result[] = $num;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_odd() in /tmp/tmptzl11ule.php:9\n\
    Stack trace:\n#0 /tmp/tmptzl11ule.php(17): unique_digits(Array)\n#1 /tmp/tmptzl11ule.php(21):\
    \ candidate(Array)\n#2 /tmp/tmptzl11ule.php(27): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmptzl11ule.php on line 9\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $arr = [];\n    foreach ($x as $num) {\n        $str = strval($num);\n\
    \        $even = false;\n        for ($i = 0; $i < strlen($str); $i++) {\n   \
    \         if ($str[$i] % 2 == 0) {\n                $even = true;\n          \
    \      break;\n            }\n        }\n        if (!$even) {\n            $arr[]\
    \ = $num;\n        }\n    }\n    sort($arr);\n    return $arr;\n}\n\n$x = [12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $num_str = strval($num);\n\
    \    $is_unique = true;\n    for ($i = 0; $i < strlen($num_str); $i++) {\n   \
    \   if ($num_str[$i] % 2 == 0) {\n        $is_unique = false;\n        break;\n\
    \      }\n    }\n    if ($is_unique) {\n      $result[] = $num;\n    }\n  }\n\
    \  sort($result);\n  return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20];\nprint_r(unique_digits($x));\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $str = strval($num);\n\
    \            $is_even = false;\n            for ($i = 0; $i < strlen($str); $i++)\
    \ {\n                if ($str[$i] % 2 == 0) {\n                    $is_even =\
    \ true;\n                    break;\n                }\n            }\n      \
    \      if (!$is_even) {\n                $result[] = $num;\n            }\n  \
    \      }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [12, 1, 21,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 4\n    [3] => 5\n    [4]\
    \ => 6\n    [5] => 7\n    [6] => 8\n    [7] => 9\n)\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strlen($num) === 1) {\n\
    \      $result[] = $num;\n    } else {\n      $num = str_split($num);\n      $is_unique\
    \ = true;\n      foreach ($num as $digit) {\n        if ($digit % 2 === 0) {\n\
    \          $is_unique = false;\n          break;\n        }\n      }\n      if\
    \ ($is_unique) {\n        $result[] = implode($num);\n      }\n    }\n  }\n  return\
    \ $result;\n}\n\n$x = [12, 1, 13, 4, 15, 6];\nprint_r(unique_digits($x));\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 13\n    [2] => 4\n    [3] => 15\n  \
    \  [4] => 6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa4vh54c0.php:35\n\
    Stack trace:\n#0 /tmp/tmpa4vh54c0.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpa4vh54c0.php\
    \ on line 35\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $num = str_split($num);\n\
    \            $is_even = false;\n            foreach ($num as $digit) {\n     \
    \           if ($digit % 2 == 0) {\n                    $is_even = true;\n   \
    \                 break;\n                }\n            }\n            if (!$is_even)\
    \ {\n                $result[] = implode('', $num);\n            }\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxijwbbo.php:34\n\
    Stack trace:\n#0 /tmp/tmphxijwbbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmphxijwbbo.php\
    \ on line 34\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $num_str = strval($num);\n\
    \        $has_even = false;\n        for ($i = 0; $i < strlen($num_str); $i++)\
    \ {\n            if ($num_str[$i] % 2 == 0) {\n                $has_even = true;\n\
    \                break;\n            }\n        }\n        if (!$has_even) {\n\
    \            $result[] = $num;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $str = strval($num);\n\
    \        $hasEven = false;\n        for ($i = 0; $i < strlen($str); $i++) {\n\
    \            if ($str[$i] % 2 == 0) {\n                $hasEven = true;\n    \
    \            break;\n            }\n        }\n        if (!$hasEven) {\n    \
    \        $result[] = $num;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $arr = str_split($num);\n\
    \            $is_even = false;\n            foreach ($arr as $digit) {\n     \
    \           if ($digit % 2 == 0) {\n                    $is_even = true;\n   \
    \                 break;\n                }\n            }\n            if (!$is_even)\
    \ {\n                $result[] = $num;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $arr = [];\n  foreach ($x as $num) {\n    $str = strval($num);\n    $has_even\
    \ = false;\n    for ($i = 0; $i < strlen($str); $i++) {\n      if ($str[$i] %\
    \ 2 == 0) {\n        $has_even = true;\n        break;\n      }\n    }\n    if\
    \ (!$has_even) {\n      $arr[] = $num;\n    }\n  }\n  sort($arr);\n  return $arr;\n\
    }\n\n$x = [12,345,2,6,7896];\nprint_r(unique_digits($x));\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Array

    (

    )

    '
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $number) {\n        if (strlen(strval($number))\
    \ == 1) {\n            $result[] = $number;\n        } else {\n            $digits\
    \ = str_split(strval($number));\n            $is_even = false;\n            foreach\
    \ ($digits as $digit) {\n                if ($digit % 2 == 0) {\n            \
    \        $is_even = true;\n                    break;\n                }\n   \
    \         }\n            if (!$is_even) {\n                $result[] = $number;\n\
    \            }\n        }\n    }\n    sort($result);\n    return $result;\n}\n\
    \n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $num = (string)$num;\n   \
    \ $is_unique = true;\n    for ($i = 0; $i < strlen($num); $i++) {\n      if ($num[$i]\
    \ % 2 === 0) {\n        $is_unique = false;\n        break;\n      }\n    }\n\
    \    if ($is_unique) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n\
    \  return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4lz5w7g.php:32\n\
    Stack trace:\n#0 /tmp/tmpq4lz5w7g.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpq4lz5w7g.php\
    \ on line 32\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ===\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $num_arr\
    \ = str_split($num);\n            $is_even = false;\n            foreach ($num_arr\
    \ as $digit) {\n                if ($digit % 2 === 0) {\n                    $is_even\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (!$is_even) {\n                $result[] = $num;\n            }\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $str = strval($num);\n   \
    \ $hasEven = false;\n    for ($i = 0; $i < strlen($str); $i++) {\n      if ($str[$i]\
    \ % 2 == 0) {\n        $hasEven = true;\n        break;\n      }\n    }\n    if\
    \ (!$hasEven) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $str = strval($num);\n\
    \        $has_even = false;\n        for ($i = 0; $i < strlen($str); $i++) {\n\
    \            if ($str[$i] % 2 == 0) {\n                $has_even = true;\n   \
    \             break;\n            }\n        }\n        if (!$has_even) {\n  \
    \          $result[] = $num;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $str = strval($num);\n\
    \            $flag = true;\n            for ($i = 0; $i < strlen($str); $i++)\
    \ {\n                if ($str[$i] % 2 == 0) {\n                    $flag = false;\n\
    \                    break;\n                }\n            }\n            if\
    \ ($flag) {\n                $result[] = $num;\n            }\n        }\n   \
    \ }\n    sort($result);\n    return $result;\n}\n\n$x = [12, 345, 2, 6, 7896];\n\
    print_r(unique_digits($x));\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 6\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $num = (string)$num;\n\
    \        $is_unique = true;\n        for ($i = 0; $i < strlen($num); $i++) {\n\
    \            if ($num[$i] % 2 == 0) {\n                $is_unique = false;\n \
    \               break;\n            }\n        }\n        if ($is_unique) {\n\
    \            $result[] = (int)$num;\n        }\n    }\n    sort($result);\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $digits = str_split($num);\n\
    \    $is_unique = true;\n    foreach ($digits as $digit) {\n      if ($digit %\
    \ 2 == 0) {\n        $is_unique = false;\n        break;\n      }\n    }\n   \
    \ if ($is_unique) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n \
    \ return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $arr = [];\n  foreach ($x as $num) {\n    $str = strval($num);\n    if\
    \ (strpos($str, '2') === false && strpos($str, '4') === false && strpos($str,\
    \ '6') === false && strpos($str, '8') === false) {\n      $arr[] = $num;\n   \
    \ }\n  }\n  sort($arr);\n  return $arr;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20];\nprint_r(unique_digits($x));\n\nfunction candidate(...$args) {\n  \
    \  return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq8jv1sm_.php:27\n\
    Stack trace:\n#0 /tmp/tmpq8jv1sm_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpq8jv1sm_.php\
    \ on line 27\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $digits = str_split($num);\n\
    \    $hasEven = false;\n    foreach ($digits as $digit) {\n      if ($digit %\
    \ 2 == 0) {\n        $hasEven = true;\n        break;\n      }\n    }\n    if\
    \ (!$hasEven) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $str = strval($num);\n\
    \        $hasEven = false;\n        for ($i = 0; $i < strlen($str); $i++) {\n\
    \            if ($str[$i] % 2 == 0) {\n                $hasEven = true;\n    \
    \            break;\n            }\n        }\n        if (!$hasEven) {\n    \
    \        $result[] = $num;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\n$x = [12,345,2,6,7896];\nprint_r(unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Array

    (

    )

    '
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $digits = str_split($num);\n\
    \        $is_unique = true;\n        foreach ($digits as $digit) {\n         \
    \   if ($digit % 2 == 0) {\n                $is_unique = false;\n            \
    \    break;\n            }\n        }\n        if ($is_unique) {\n           \
    \ $result[] = $num;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $digits = str_split($num);\n\
    \        if (!in_array(0, $digits) && !in_array(2, $digits) && !in_array(4, $digits)\
    \ && !in_array(6, $digits) && !in_array(8, $digits)) {\n            $result[]\
    \ = $num;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $num = strval($num);\n\
    \        $is_odd = true;\n        for ($i = 0; $i < strlen($num); $i++) {\n  \
    \          if ($num[$i] % 2 == 0) {\n                $is_odd = false;\n      \
    \          break;\n            }\n        }\n        if ($is_odd) {\n        \
    \    $result[] = intval($num);\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\n$x = [12, 345, 2, 6, 7896];\nprint_r(unique_digits($x));\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Array

    (

    )

    '
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $digits =\
    \ str_split($num);\n            $is_unique = true;\n            foreach ($digits\
    \ as $digit) {\n                if ($digit % 2 == 0) {\n                    $is_unique\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         if ($is_unique) {\n                $result[] = $num;\n            }\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20];\n$result = unique_digits($x);\nprint_r($result);\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strlen(strval($num)) ===\
    \ 1) {\n      $result[] = $num;\n    } else {\n      $digits = str_split(strval($num));\n\
    \      $hasEven = false;\n      foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 === 0) {\n          $hasEven = true;\n          break;\n        }\n    \
    \  }\n      if (!$hasEven) {\n        $result[] = $num;\n      }\n    }\n  }\n\
    \  sort($result);\n  return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20];\nprint_r(unique_digits($x));\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $number) {\n        $string = (string)$number;\n\
    \        $hasEven = false;\n        for ($i = 0; $i < strlen($string); $i++) {\n\
    \            if ($string[$i] % 2 == 0) {\n                $hasEven = true;\n \
    \               break;\n            }\n        }\n        if (!$hasEven) {\n \
    \           $result[] = $number;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $value) {\n    if (strlen($value) == 1)\
    \ {\n      $result[] = $value;\n    } else {\n      $digits = str_split($value);\n\
    \      $is_even = false;\n      foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 == 0) {\n          $is_even = true;\n          break;\n        }\n     \
    \ }\n      if (!$is_even) {\n        $result[] = $value;\n      }\n    }\n  }\n\
    \  sort($result);\n  return $result;\n}\n\n$x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    echo implode(', ', unique_digits($x));\necho \"\\n\";\n\n$x = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\necho implode(', ',\
    \ unique_digits($x));\necho \"\\n\";\n\n$x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\n\
    echo implode(', ', unique_digits($x));\necho \"\\n\";\n\n$x = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40];\necho implode(',\
    \ ', unique_digits($x));\necho \"\\n\";\n\n$x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp3ooma1iy.php on line 46

    '
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $str = strval($num);\n   \
    \ $has_even = false;\n    for ($i = 0; $i < strlen($str); $i++) {\n      if ($str[$i]\
    \ % 2 == 0) {\n        $has_even = true;\n        break;\n      }\n    }\n   \
    \ if (!$has_even) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n \
    \ return $result;\n}\n\n$x = [12, 345, 2, 6, 7896];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Array

    (

    )

    '
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen(strval($num))\
    \ === 1) {\n            $result[] = $num;\n        } else {\n            $num_arr\
    \ = str_split(strval($num));\n            $odd = true;\n            foreach ($num_arr\
    \ as $digit) {\n                if ($digit % 2 === 0) {\n                    $odd\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         if ($odd) {\n                $result[] = $num;\n            }\n    \
    \    }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $number) {\n    $number = strval($number);\n\
    \    $hasEvenDigit = false;\n    for ($i = 0; $i < strlen($number); $i++) {\n\
    \      if ($number[$i] % 2 === 0) {\n        $hasEvenDigit = true;\n        break;\n\
    \      }\n    }\n    if (!$hasEvenDigit) {\n      $result[] = intval($number);\n\
    \    }\n  }\n  sort($result);\n  return $result;\n}\n\necho implode(', ', unique_digits([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\necho \"\\n\";\necho implode(',\
    \ ', unique_digits([12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]));\n\
    echo \"\\n\";\necho implode(', ', unique_digits([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]));\necho \"\\\
    n\";\necho implode(', ', unique_digits([]));\necho \"\\n\";\necho implode(', ',\
    \ unique_digits([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,\
    \ 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,\
    \ 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,\
    \ 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90,\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9obd96xv.php on line 34

    '
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $digits = str_split($num);\n\
    \    if (!in_array(0, $digits) && !in_array(2, $digits) && !in_array(4, $digits)\
    \ && !in_array(6, $digits) && !in_array(8, $digits)) {\n      $result[] = $num;\n\
    \    }\n  }\n  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (has_even_digit($num))\
    \ {\n      continue;\n    }\n    $result[] = $num;\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmpxhvi0xp9.php:9\nStack trace:\n#0 /tmp/tmpxhvi0xp9.php(19): unique_digits(Array)\n\
    #1 /tmp/tmpxhvi0xp9.php(23): candidate(Array)\n#2 /tmp/tmpxhvi0xp9.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxhvi0xp9.php on line 9\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $value) {\n    $is_even = false;\n    $digits\
    \ = str_split($value);\n    foreach ($digits as $digit) {\n      if ($digit %\
    \ 2 == 0) {\n        $is_even = true;\n        break;\n      }\n    }\n    if\
    \ (!$is_even) {\n      $result[] = $value;\n    }\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            array_push($result, $num);\n        } else {\n           \
    \ $even = false;\n            for ($i = 0; $i < strlen($num); $i++) {\n      \
    \          if ($num[$i] % 2 == 0) {\n                    $even = true;\n     \
    \               break;\n                }\n            }\n            if (!$even)\
    \ {\n                array_push($result, $num);\n            }\n        }\n  \
    \  }\n    sort($result);\n    return $result;\n}\n\n$x = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10];\necho implode(', ', unique_digits($x)) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1, 2, 3, 4, 5, 6, 7, 8, 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp6qw0sqkw.php:35\nStack trace:\n#0 /tmp/tmp6qw0sqkw.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6qw0sqkw.php on line 35\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $digits = str_split($num);\n\
    \    $hasEven = false;\n    foreach ($digits as $digit) {\n      if ($digit %\
    \ 2 == 0) {\n        $hasEven = true;\n        break;\n      }\n    }\n    if\
    \ (!$hasEven) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen(strval($num))\
    \ == 1) {\n            $result[] = $num;\n        } else {\n            $num_str\
    \ = strval($num);\n            $is_even = false;\n            for ($i = 0; $i\
    \ < strlen($num_str); $i++) {\n                if ($num_str[$i] % 2 == 0) {\n\
    \                    $is_even = true;\n                    break;\n          \
    \      }\n            }\n            if (!$is_even) {\n                $result[]\
    \ = $num;\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $num = strval($num);\n   \
    \ $hasEven = false;\n    for ($i = 0; $i < strlen($num); $i++) {\n      if ($num[$i]\
    \ % 2 == 0) {\n        $hasEven = true;\n        break;\n      }\n    }\n    if\
    \ (!$hasEven) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8zu87or9.php:33\n\
    Stack trace:\n#0 /tmp/tmp8zu87or9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8zu87or9.php\
    \ on line 33\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $number) {\n        if (strlen($number)\
    \ == 1) {\n            $result[] = $number;\n        } else {\n            $has_even\
    \ = false;\n            for ($i = 0; $i < strlen($number); $i++) {\n         \
    \       if ($number[$i] % 2 == 0) {\n                    $has_even = true;\n \
    \                   break;\n                }\n            }\n            if (!$has_even)\
    \ {\n                $result[] = $number;\n            }\n        }\n    }\n \
    \   sort($result);\n    return $result;\n}\n\n$x = [12, 1, 13, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11];\nprint_r(unique_digits($x));\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp0xg81ls9.php:36\nStack trace:\n\
    #0 /tmp/tmp0xg81ls9.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0xg81ls9.php\
    \ on line 36\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $number) {\n        if (strlen(strval($number))\
    \ == 1) {\n            $result[] = $number;\n        } else {\n            $digits\
    \ = str_split(strval($number));\n            $is_unique = true;\n            foreach\
    \ ($digits as $digit) {\n                if ($digit % 2 == 0) {\n            \
    \        $is_unique = false;\n                    break;\n                }\n\
    \            }\n            if ($is_unique) {\n                $result[] = $number;\n\
    \            }\n        }\n    }\n    sort($result);\n    return $result;\n}\n\
    \n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\
    \ 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,\
    \ 49, 50];\nprint_r(unique_digits($x));\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    \    [4] => 31\n    [5] => 33\n    [6] => 35\n    [7] => 37\n    [8] => 39\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $num = (string)$num;\n\
    \        $has_even = false;\n        for ($i = 0; $i < strlen($num); $i++) {\n\
    \            if ($num[$i] % 2 == 0) {\n                $has_even = true;\n   \
    \             break;\n            }\n        }\n        if (!$has_even) {\n  \
    \          $result[] = (int)$num;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\n$x = [12, 345, 2, 6, 7896];\nprint_r(unique_digits($x));\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Array

    (

    )

    '
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $arr = [];\n    foreach ($x as $num) {\n        if (strlen($num) == 1)\
    \ {\n            $arr[] = $num;\n        } else {\n            $str = str_split($num);\n\
    \            $count = 0;\n            foreach ($str as $digit) {\n           \
    \     if ($digit % 2 == 0) {\n                    $count++;\n                }\n\
    \            }\n            if ($count == 0) {\n                $arr[] = $num;\n\
    \            }\n        }\n    }\n    sort($arr);\n    return $arr;\n}\n\n$x =\
    \ [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\
    \ 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\
    \ 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,\
    \ 99, 100];\n\nprint_r(unique_digits($x));\nfunction candidate(...$args) {\n \
    \   return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n    [4]\
    \ => 6\n    [5] => 7\n    [6] => 8\n    [7] => 9\n    [8] => 11\n    [9] => 13\n\
    \    [10] => 15\n    [11] => 17\n    [12] => 19\n    [13] => 31\n    [14] => 33\n\
    \    [15] => 35\n    [16] => 37\n    [17] => 39\n    [18] => 51\n    [19] => 53\n\
    \    [20] => 55\n    [21] => 57\n    [22] => 59\n    [23] => 71\n    [24] => 73\n\
    \    [25] => 75\n    [26] => 77\n    [27] => 79\n    [28] => 91\n    [29] => 93\n\
    \    [30] => 95\n    [31] => 97\n    [32] => 99\n)\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $arr = [];\n  foreach ($x as $num) {\n    $str = strval($num);\n    if\
    \ (strpos($str, '2') === false && strpos($str, '4') === false && strpos($str,\
    \ '6') === false && strpos($str, '8') === false) {\n      $arr[] = $num;\n   \
    \ }\n  }\n  sort($arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu3y0uffg.php:24\n\
    Stack trace:\n#0 /tmp/tmpu3y0uffg.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpu3y0uffg.php\
    \ on line 24\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strlen($num) === 1) {\n\
    \      $result[] = $num;\n    } else {\n      $digits = str_split($num);\n   \
    \   $odd = true;\n      foreach ($digits as $digit) {\n        if ($digit % 2\
    \ === 0) {\n          $odd = false;\n          break;\n        }\n      }\n  \
    \    if ($odd) {\n        $result[] = $num;\n      }\n    }\n  }\n  sort($result);\n\
    \  return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,\
    \ 43, 44, 45, 46, 47, 48, 49, 50];\n$result = unique_digits($x);\nprint_r($result);\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    \    [4] => 31\n    [5] => 33\n    [6] => 35\n    [7] => 37\n    [8] => 39\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            array_push($result, $num);\n        } else {\n           \
    \ $num_arr = str_split($num);\n            $is_even = false;\n            foreach\
    \ ($num_arr as $digit) {\n                if ($digit % 2 == 0) {\n           \
    \         $is_even = true;\n                    break;\n                }\n  \
    \          }\n            if (!$is_even) {\n                array_push($result,\
    \ $num);\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $value) {\n        $digits = str_split($value);\n\
    \        $is_even = false;\n        foreach ($digits as $digit) {\n          \
    \  if ($digit % 2 == 0) {\n                $is_even = true;\n                break;\n\
    \            }\n        }\n        if (!$is_even) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $digits = str_split($num);\n\
    \    $is_unique = true;\n    foreach ($digits as $digit) {\n      if ($digit %\
    \ 2 == 0) {\n        $is_unique = false;\n        break;\n      }\n    }\n   \
    \ if ($is_unique) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $digits = str_split($num);\n\
    \    $is_unique = true;\n    foreach ($digits as $digit) {\n      if ($digit %\
    \ 2 == 0) {\n        $is_unique = false;\n        break;\n      }\n    }\n   \
    \ if ($is_unique) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n \
    \ return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen(strval($num))\
    \ == 1) {\n            array_push($result, $num);\n        } else {\n        \
    \    $num_str = strval($num);\n            $is_unique = true;\n            for\
    \ ($i = 0; $i < strlen($num_str); $i++) {\n                if ($num_str[$i] %\
    \ 2 == 0) {\n                    $is_unique = false;\n                    break;\n\
    \                }\n            }\n            if ($is_unique) {\n           \
    \     array_push($result, $num);\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\n$x = [12, 1, 21, 4, 6, 3];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 4\n    [3] => 6\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $str = strval($num);\n   \
    \ $has_even = false;\n    for ($i = 0; $i < strlen($str); $i++) {\n      if ($str[$i]\
    \ % 2 == 0) {\n        $has_even = true;\n        break;\n      }\n    }\n   \
    \ if (!$has_even) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n \
    \ return $result;\n}\n\n$x = [12, 345, 2, 6, 7896];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Array

    (

    )

    '
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $num_str = strval($num);\n\
    \    $is_unique = true;\n    for ($i = 0; $i < strlen($num_str); $i++) {\n   \
    \   if ($num_str[$i] % 2 == 0) {\n        $is_unique = false;\n        break;\n\
    \      }\n    }\n    if ($is_unique) {\n      $result[] = $num;\n    }\n  }\n\
    \  sort($result);\n  return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20];\nprint_r(unique_digits($x));\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $num_arr\
    \ = str_split($num);\n            $is_even = false;\n            foreach ($num_arr\
    \ as $digit) {\n                if ($digit % 2 == 0) {\n                    $is_even\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (!$is_even) {\n                $result[] = $num;\n            }\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [12, 1,\
    \ 2, 3, 51, 6, 17, 8, 9, 10];\nprint_r(unique_digits($x));\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 6\n    [4]\
    \ => 8\n    [5] => 9\n    [6] => 17\n    [7] => 51\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen(strval($num))\
    \ == 1) {\n            array_push($result, $num);\n        } else {\n        \
    \    $digits = str_split(strval($num));\n            $is_unique = true;\n    \
    \        foreach ($digits as $digit) {\n                if ($digit % 2 == 0) {\n\
    \                    $is_unique = false;\n                    break;\n       \
    \         }\n            }\n            if ($is_unique) {\n                array_push($result,\
    \ $num);\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\n$x = [12, 1, 13, 4, 15, 6];\nprint_r(unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 6\n    [3] => 13\n   \
    \ [4] => 15\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $value) {\n        $digits = str_split($value);\n\
    \        $is_unique = true;\n        foreach ($digits as $digit) {\n         \
    \   if ($digit % 2 == 0) {\n                $is_unique = false;\n            \
    \    break;\n            }\n        }\n        if ($is_unique) {\n           \
    \ $result[] = $value;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\necho implode(', ', unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 13, 15, 17, 19
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $num_str = strval($num);\n\
    \        $has_even = false;\n        for ($i = 0; $i < strlen($num_str); $i++)\
    \ {\n            if ($num_str[$i] % 2 == 0) {\n                $has_even = true;\n\
    \                break;\n            }\n        }\n        if (!$has_even) {\n\
    \            $result[] = $num;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strlen($num) == 1) {\n\
    \      $result[] = $num;\n    } else {\n      $digits = str_split($num);\n   \
    \   $hasEven = false;\n      foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 == 0) {\n          $hasEven = true;\n          break;\n        }\n     \
    \ }\n      if (!$hasEven) {\n        $result[] = $num;\n      }\n    }\n  }\n\
    \  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $str = strval($num);\n   \
    \ $is_unique = true;\n    for ($i = 0; $i < strlen($str); $i++) {\n      if ($str[$i]\
    \ % 2 == 0) {\n        $is_unique = false;\n        break;\n      }\n    }\n \
    \   if ($is_unique) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n\
    \  return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $num = strval($num);\n\
    \        $hasEven = false;\n        for ($i = 0; $i < strlen($num); $i++) {\n\
    \            if ($num[$i] % 2 == 0) {\n                $hasEven = true;\n    \
    \            break;\n            }\n        }\n        if (!$hasEven) {\n    \
    \        $result[] = $num;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm1fr2mag.php:30\n\
    Stack trace:\n#0 /tmp/tmpm1fr2mag.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpm1fr2mag.php\
    \ on line 30\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strpos($num, '2') ===\
    \ false &&\n        strpos($num, '4') === false &&\n        strpos($num, '6')\
    \ === false &&\n        strpos($num, '8') === false) {\n      $result[] = $num;\n\
    \    }\n  }\n  sort($result);\n  return $result;\n}\n\n$x = [12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20];\nprint_r(unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0cx_psie.php:28\n\
    Stack trace:\n#0 /tmp/tmp0cx_psie.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0cx_psie.php\
    \ on line 28\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            array_push($result, $num);\n        } else {\n           \
    \ $str = strval($num);\n            $flag = true;\n            for ($i = 0; $i\
    \ < strlen($str); $i++) {\n                if ($str[$i] % 2 == 0) {\n        \
    \            $flag = false;\n                    break;\n                }\n \
    \           }\n            if ($flag) {\n                array_push($result, $num);\n\
    \            }\n        }\n    }\n    sort($result);\n    return $result;\n}\n\
    \n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $num = (string)$num;\n   \
    \ $hasEven = false;\n    for ($i = 0; $i < strlen($num); $i++) {\n      if ($num[$i]\
    \ % 2 === 0) {\n        $hasEven = true;\n        break;\n      }\n    }\n   \
    \ if (!$hasEven) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\n$x = [12, 34, 11, 9, 8];\nprint_r(unique_digits($x));\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 9\n    [1] => 11\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpa08j5a0g.php:33\nStack trace:\n#0 /tmp/tmpa08j5a0g.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpa08j5a0g.php on line 33\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $digits = str_split($num);\n\
    \    $is_odd = true;\n    foreach ($digits as $digit) {\n      if ($digit % 2\
    \ == 0) {\n        $is_odd = false;\n        break;\n      }\n    }\n    if ($is_odd)\
    \ {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n  return $result;\n\
    }\n\n$x = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n\
    print_r(unique_digits($x));\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 5\n    [2] => 7\n    [3] => 9\n    [4]\
    \ => 11\n    [5] => 13\n    [6] => 15\n    [7] => 17\n    [8] => 19\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strlen(strval($num)) ==\
    \ 1) {\n      $result[] = $num;\n    } else {\n      $digits = str_split(strval($num));\n\
    \      $is_even = false;\n      foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 == 0) {\n          $is_even = true;\n          break;\n        }\n     \
    \ }\n      if (!$is_even) {\n        $result[] = $num;\n      }\n    }\n  }\n\
    \  sort($result);\n  return $result;\n}\n\n$x = [12, 345, 2, 6, 7896];\n$result\
    \ = unique_digits($x);\nprint_r($result);\nfunction candidate(...$args) {\n  \
    \  return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 6\n)\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ===\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $num = str_split($num);\n\
    \            $is_even = false;\n            foreach ($num as $digit) {\n     \
    \           if ($digit % 2 === 0) {\n                    $is_even = true;\n  \
    \                  break;\n                }\n            }\n            if (!$is_even)\
    \ {\n                $result[] = implode('', $num);\n            }\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\n$x = [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10];\nprint_r(unique_digits($x));\n\n$x = [12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20];\nprint_r(unique_digits($x));\n\n$x = [12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,\
    \ 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50];\nprint_r(unique_digits($x));\n\
    \n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\
    \ 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,\
    \ 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,\
    \ 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86,\
    \ 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\nprint_r(unique_\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwp_jj03v.php on line 40

    '
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $arr = [];\n  foreach ($x as $num) {\n    if (strlen($num) == 1) {\n  \
    \    $arr[] = $num;\n    } else {\n      $str = str_split($num);\n      $is_even\
    \ = false;\n      foreach ($str as $digit) {\n        if ($digit % 2 == 0) {\n\
    \          $is_even = true;\n          break;\n        }\n      }\n      if (!$is_even)\
    \ {\n        $arr[] = $num;\n      }\n    }\n  }\n  sort($arr);\n  return $arr;\n\
    }\n\n$x = [12, 11, 14, 15, 7, 121];\nprint_r(unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 7\n    [1] => 11\n    [2] => 15\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strlen($num) == 1) {\n\
    \      $result[] = $num;\n    } else {\n      $num_arr = str_split($num);\n  \
    \    $has_even = false;\n      foreach ($num_arr as $digit) {\n        if ($digit\
    \ % 2 == 0) {\n          $has_even = true;\n          break;\n        }\n    \
    \  }\n      if (!$has_even) {\n        $result[] = $num;\n      }\n    }\n  }\n\
    \  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $arr = [];\n  foreach ($x as $num) {\n    $str = strval($num);\n    if\
    \ (strpos($str, '2') === false && strpos($str, '4') === false && strpos($str,\
    \ '6') === false && strpos($str, '8') === false) {\n      $arr[] = $num;\n   \
    \ }\n  }\n  sort($arr);\n  return $arr;\n}\n\n$x = [12, 11, 14, 13, 15, 16, 17,\
    \ 18, 19];\nprint_r(unique_digits($x));\n\nfunction candidate(...$args) {\n  \
    \  return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 11\n    [1] => 13\n    [2] => 15\n    [3] => 17\n\
    \    [4] => 19\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp199t_m4h.php:27\n\
    Stack trace:\n#0 /tmp/tmp199t_m4h.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp199t_m4h.php\
    \ on line 27\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $digits = str_split($num);\n\
    \    $is_unique = true;\n    foreach ($digits as $digit) {\n      if ($digit %\
    \ 2 == 0) {\n        $is_unique = false;\n        break;\n      }\n    }\n   \
    \ if ($is_unique) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n \
    \ return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (has_even_digit($num))\
    \ {\n      continue;\n    }\n    $result[] = $num;\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmpxhvi0xp9.php:9\nStack trace:\n#0 /tmp/tmpxhvi0xp9.php(19): unique_digits(Array)\n\
    #1 /tmp/tmpxhvi0xp9.php(23): candidate(Array)\n#2 /tmp/tmpxhvi0xp9.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxhvi0xp9.php on line 9\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $num = (string)$num;\n\
    \        $has_even = false;\n        for ($i = 0; $i < strlen($num); $i++) {\n\
    \            if ($num[$i] % 2 == 0) {\n                $has_even = true;\n   \
    \             break;\n            }\n        }\n        if (!$has_even) {\n  \
    \          $result[] = $num;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\n$x = [12, 345, 2, 6, 7896];\nprint_r(unique_digits($x));\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0e30smxo.php:33\n\
    Stack trace:\n#0 /tmp/tmp0e30smxo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0e30smxo.php\
    \ on line 33\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen(strval($num))\
    \ == 1) {\n            $result[] = $num;\n        } else {\n            $str =\
    \ strval($num);\n            $is_even = false;\n            for ($i = 0; $i <\
    \ strlen($str); $i++) {\n                if ($str[$i] % 2 == 0) {\n          \
    \          $is_even = true;\n                    break;\n                }\n \
    \           }\n            if (!$is_even) {\n                $result[] = $num;\n\
    \            }\n        }\n    }\n    sort($result);\n    return $result;\n}\n\
    \n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen(strval($num))\
    \ == 1) {\n            $result[] = $num;\n        } else {\n            $num_str\
    \ = strval($num);\n            $is_unique = true;\n            for ($i = 0; $i\
    \ < strlen($num_str); $i++) {\n                if ($num_str[$i] % 2 == 0) {\n\
    \                    $is_unique = false;\n                    break;\n       \
    \         }\n            }\n            if ($is_unique) {\n                $result[]\
    \ = $num;\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\n$x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(unique_digits($x));\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $num = str_split($num);\n\
    \            $is_even = false;\n            foreach ($num as $digit) {\n     \
    \           if ($digit % 2 == 0) {\n                    $is_even = true;\n   \
    \                 break;\n                }\n            }\n            if (!$is_even)\
    \ {\n                $result[] = implode($num);\n            }\n        }\n  \
    \  }\n    sort($result);\n    return $result;\n}\n\n$x = [12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20];\nprint_r(unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6i_7t6z9.php:36\n\
    Stack trace:\n#0 /tmp/tmp6i_7t6z9.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp6i_7t6z9.php\
    \ on line 36\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (has_even_digit($num))\
    \ {\n      continue;\n    }\n    $result[] = $num;\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmpxhvi0xp9.php:9\nStack trace:\n#0 /tmp/tmpxhvi0xp9.php(19): unique_digits(Array)\n\
    #1 /tmp/tmpxhvi0xp9.php(23): candidate(Array)\n#2 /tmp/tmpxhvi0xp9.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxhvi0xp9.php on line 9\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strlen($num) == 1) {\n\
    \      $result[] = $num;\n    } else {\n      $arr = str_split($num);\n      $is_even\
    \ = false;\n      foreach ($arr as $digit) {\n        if ($digit % 2 == 0) {\n\
    \          $is_even = true;\n          break;\n        }\n      }\n      if (!$is_even)\
    \ {\n        $result[] = $num;\n      }\n    }\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\n$x = [12, 11, 14, 15, 7, 121];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 7\n    [1] => 11\n    [2] => 15\n)\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (has_even_digit($num))\
    \ {\n      continue;\n    }\n    $result[] = $num;\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmpxhvi0xp9.php:9\nStack trace:\n#0 /tmp/tmpxhvi0xp9.php(19): unique_digits(Array)\n\
    #1 /tmp/tmpxhvi0xp9.php(23): candidate(Array)\n#2 /tmp/tmpxhvi0xp9.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxhvi0xp9.php on line 9\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $digits = str_split($num);\n\
    \        $is_even = false;\n        foreach ($digits as $digit) {\n          \
    \  if ($digit % 2 == 0) {\n                $is_even = true;\n                break;\n\
    \            }\n        }\n        if (!$is_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    $x = array_unique($x);\n    foreach ($x as $num) {\n\
    \        $str = strval($num);\n        $arr = str_split($str);\n        $is_even\
    \ = false;\n        foreach ($arr as $digit) {\n            if ($digit % 2 ==\
    \ 0) {\n                $is_even = true;\n                break;\n           \
    \ }\n        }\n        if (!$is_even) {\n            $result[] = $num;\n    \
    \    }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen(strval($num))\
    \ == 1) {\n            array_push($result, $num);\n        } else {\n        \
    \    $num_str = strval($num);\n            $has_even = false;\n            for\
    \ ($i = 0; $i < strlen($num_str); $i++) {\n                if ($num_str[$i] %\
    \ 2 == 0) {\n                    $has_even = true;\n                    break;\n\
    \                }\n            }\n            if (!$has_even) {\n           \
    \     array_push($result, $num);\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $arr = [];\n  foreach ($x as $num) {\n    if (strlen($num) == 1) {\n  \
    \    $arr[] = $num;\n    } else {\n      $num_arr = str_split($num);\n      $even\
    \ = false;\n      foreach ($num_arr as $digit) {\n        if ($digit % 2 == 0)\
    \ {\n          $even = true;\n        }\n      }\n      if (!$even) {\n      \
    \  $arr[] = $num;\n      }\n    }\n  }\n  sort($arr);\n  return $arr;\n}\n\n$x\
    \ = [12, 11, 14, 15, 7, 111];\nprint_r(unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 7\n    [1] => 11\n    [2] => 15\n    [3] => 111\n\
    )\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $number) {\n    if (has_even_digit($number))\
    \ {\n      continue;\n    }\n    $result[] = $number;\n  }\n  sort($result);\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmpyqa8sx3z.php:9\nStack trace:\n#0 /tmp/tmpyqa8sx3z.php(19): unique_digits(Array)\n\
    #1 /tmp/tmpyqa8sx3z.php(23): candidate(Array)\n#2 /tmp/tmpyqa8sx3z.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmpyqa8sx3z.php on line 9\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (has_even_digit($num))\
    \ {\n            continue;\n        }\n        $result[] = $num;\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmp_ugc2o9r.php:9\nStack trace:\n#0 /tmp/tmp_ugc2o9r.php(19): unique_digits(Array)\n\
    #1 /tmp/tmp_ugc2o9r.php(23): candidate(Array)\n#2 /tmp/tmp_ugc2o9r.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_ugc2o9r.php on line 9\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $digits = str_split($num);\n\
    \        $hasEven = false;\n        foreach ($digits as $digit) {\n          \
    \  if ($digit % 2 == 0) {\n                $hasEven = true;\n                break;\n\
    \            }\n        }\n        if (!$hasEven) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $number) {\n        $number = strval($number);\n\
    \        $has_even = false;\n        for ($i = 0; $i < strlen($number); $i++)\
    \ {\n            if ($number[$i] % 2 == 0) {\n                $has_even = true;\n\
    \                break;\n            }\n        }\n        if (!$has_even) {\n\
    \            $result[] = intval($number);\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\n$x = [12, 345, 2, 6, 7896];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Array

    (

    )

    '
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strpos($num, '2') ===\
    \ false && strpos($num, '4') === false && strpos($num, '6') === false && strpos($num,\
    \ '8') === false) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqkhc0zk7.php:23\n\
    Stack trace:\n#0 /tmp/tmpqkhc0zk7.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpqkhc0zk7.php\
    \ on line 23\n"
  timestamp: 1659729992
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $num = strval($num);\n   \
    \ $hasEven = false;\n    for ($i = 0; $i < strlen($num); $i++) {\n      if ($num[$i]\
    \ % 2 == 0) {\n        $hasEven = true;\n        break;\n      }\n    }\n    if\
    \ (!$hasEven) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5nipj3ze.php:32\n\
    Stack trace:\n#0 /tmp/tmp5nipj3ze.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5nipj3ze.php\
    \ on line 32\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strlen($num) == 1) {\n\
    \      $result[] = $num;\n    } else {\n      $num_arr = str_split($num);\n  \
    \    $is_odd = true;\n      foreach ($num_arr as $digit) {\n        if ($digit\
    \ % 2 == 0) {\n          $is_odd = false;\n          break;\n        }\n     \
    \ }\n      if ($is_odd) {\n        $result[] = $num;\n      }\n    }\n  }\n  sort($result);\n\
    \  return $result;\n}\n\n$x = [12, 345, 2, 6, 7896];\nprint_r(unique_digits($x));\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 6\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ===\
    \ 1) {\n            array_push($result, $num);\n        } else {\n           \
    \ $num_str = strval($num);\n            $is_unique = true;\n            for ($i\
    \ = 0; $i < strlen($num_str); $i++) {\n                if ($num_str[$i] % 2 ===\
    \ 0) {\n                    $is_unique = false;\n                    break;\n\
    \                }\n            }\n            if ($is_unique) {\n           \
    \     array_push($result, $num);\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,\
    \ 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\
    \ 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\
    \ 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,\
    \ 100];\n\necho json_encode(unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[13,15,17,19,31,33,35,37,39,51,53,55,57,59,71,73,75,77,79,91,93,95,97,99]'
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $num = (string)$num;\n\
    \            $hasEven = false;\n            for ($i = 0; $i < strlen($num); $i++)\
    \ {\n                if ($num[$i] % 2 == 0) {\n                    $hasEven =\
    \ true;\n                    break;\n                }\n            }\n      \
    \      if (!$hasEven) {\n                $result[] = $num;\n            }\n  \
    \      }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5la0xcyr.php:36\n\
    Stack trace:\n#0 /tmp/tmp5la0xcyr.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5la0xcyr.php\
    \ on line 36\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $digits = str_split($num);\n\
    \    if (in_array(0, $digits) || in_array(2, $digits) || in_array(4, $digits)\
    \ || in_array(6, $digits) || in_array(8, $digits)) {\n      continue;\n    } else\
    \ {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strlen($num) == 1) {\n\
    \      $result[] = $num;\n    } else {\n      $digits = str_split($num);\n   \
    \   $is_unique = true;\n      foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 == 0) {\n          $is_unique = false;\n          break;\n        }\n  \
    \    }\n      if ($is_unique) {\n        $result[] = $num;\n      }\n    }\n \
    \ }\n  sort($result);\n  return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20];\nprint_r(unique_digits($x));\n\nfunction candidate(...$args) {\n  \
    \  return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $num = (string)$num;\n   \
    \ $hasEven = false;\n    for ($i = 0; $i < strlen($num); $i++) {\n      if ($num[$i]\
    \ % 2 === 0) {\n        $hasEven = true;\n        break;\n      }\n    }\n   \
    \ if (!$hasEven) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\necho implode(', ', unique_digits([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15]));\necho \"\\n\";\necho implode(', ', unique_digits([1,\
    \ 2, 32, 3, 4, 52, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\necho \"\\n\";\necho\
    \ implode(', ', unique_digits([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,\
    \ 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,\
    \ 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,\
    \ 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90,\
    \ 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]));\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1, 3, 5, 7, 9, 11, 13, 15\n1, 3, 7, 9, 11, 13, 15\n1, 3, 5, 7, 9, 11, 13,\
    \ 15, 17, 19, 31, 33, 35, 37, 39, 51, 53, 55, 57, 59, 71, 73, 75, 77, 79, 91,\
    \ 93, 95, 97, 99\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc87wumm7.php:36\n\
    Stack trace:\n#0 /tmp/tmpc87wumm7.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpc87wumm7.php\
    \ on line 36\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $num = strval($num);\n\
    \        $is_odd = true;\n        for ($i = 0; $i < strlen($num); $i++) {\n  \
    \          if ($num[$i] % 2 == 0) {\n                $is_odd = false;\n      \
    \          break;\n            }\n        }\n        if ($is_odd) {\n        \
    \    $result[] = $num;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\n$x = [12, 345, 2, 6, 7896];\nprint_r(unique_digits($x));\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi09gci1q.php:33\n\
    Stack trace:\n#0 /tmp/tmpi09gci1q.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpi09gci1q.php\
    \ on line 33\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $arr = [];\n  foreach ($x as $num) {\n    $str = strval($num);\n    $hasEven\
    \ = false;\n    for ($i = 0; $i < strlen($str); $i++) {\n      if ($str[$i] %\
    \ 2 == 0) {\n        $hasEven = true;\n        break;\n      }\n    }\n    if\
    \ (!$hasEven) {\n      $arr[] = $num;\n    }\n  }\n  sort($arr);\n  return $arr;\n\
    }\n\n$x = [12, 1, 21, 3, 5, 8, 13, 11];\nprint_r(unique_digits($x));\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n    [3] => 11\n   \
    \ [4] => 13\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $val) {\n    if (strlen($val) == 1) {\n\
    \      $result[] = $val;\n    } else {\n      $str = strval($val);\n      $flag\
    \ = true;\n      for ($i = 0; $i < strlen($str); $i++) {\n        if ($str[$i]\
    \ % 2 == 0) {\n          $flag = false;\n          break;\n        }\n      }\n\
    \      if ($flag) {\n        $result[] = $val;\n      }\n    }\n  }\n  sort($result);\n\
    \  return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $num_str = strval($num);\n\
    \    $has_even = false;\n    for ($i = 0; $i < strlen($num_str); $i++) {\n   \
    \   if ($num_str[$i] % 2 == 0) {\n        $has_even = true;\n        break;\n\
    \      }\n    }\n    if (!$has_even) {\n      $result[] = $num;\n    }\n  }\n\
    \  sort($result);\n  return $result;\n}\n\necho \"unique_digits([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]) = \";\nvar_dump(unique_digits([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\
    echo \"unique_digits([11, 20, 32, 43, 55, 60, 71, 80, 91, 101]) = \";\nvar_dump(unique_digits([11,\
    \ 20, 32, 43, 55, 60, 71, 80, 91, 101]));\necho \"unique_digits([111, 222, 333,\
    \ 444, 555, 666, 777, 888, 999, 1111]) = \";\nvar_dump(unique_digits([111, 222,\
    \ 333, 444, 555, 666, 777, 888, 999, 1111]));\necho \"unique_digits([]) = \";\n\
    var_dump(unique_digits([]));\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "unique_digits([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) = array(5) {\n  [0]=>\n\
    \  int(1)\n  [1]=>\n  int(3)\n  [2]=>\n  int(5)\n  [3]=>\n  int(7)\n  [4]=>\n\
    \  int(9)\n}\nunique_digits([11, 20, 32, 43, 55, 60, 71, 80, 91, 101]) = array(4)\
    \ {\n  [0]=>\n  int(11)\n  [1]=>\n  int(55)\n  [2]=>\n  int(71)\n  [3]=>\n  int(91)\n\
    }\nunique_digits([111, 222, 333, 444, 555, 666, 777, 888, 999, 1111]) = array(6)\
    \ {\n  [0]=>\n  int(111)\n  [1]=>\n  int(333)\n  [2]=>\n  int(555)\n  [3]=>\n\
    \  int(777)\n  [4]=>\n  int(999)\n  [5]=>\n  int(1111)\n}\nunique_digits([]) =\
    \ array(0) {\n}\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $num_str = strval($num);\n\
    \    $has_even = false;\n    for ($i = 0; $i < strlen($num_str); $i++) {\n   \
    \   if ($num_str[$i] % 2 == 0) {\n        $has_even = true;\n        break;\n\
    \      }\n    }\n    if (!$has_even) {\n      $result[] = $num;\n    }\n  }\n\
    \  sort($result);\n  return $result;\n}\n\n$x = [12, 345, 2, 6, 7896];\nprint_r(unique_digits($x));\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Array

    (

    )

    '
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $arr = [];\n  foreach ($x as $num) {\n    $str = strval($num);\n    if\
    \ (strpos($str, '2') === false && strpos($str, '4') === false && strpos($str,\
    \ '6') === false && strpos($str, '8') === false) {\n      $arr[] = $num;\n   \
    \ }\n  }\n  sort($arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu3y0uffg.php:24\n\
    Stack trace:\n#0 /tmp/tmpu3y0uffg.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpu3y0uffg.php\
    \ on line 24\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $value) {\n        $value = str_split($value);\n\
    \        $isEven = false;\n        foreach ($value as $digit) {\n            if\
    \ ($digit % 2 == 0) {\n                $isEven = true;\n                break;\n\
    \            }\n        }\n        if (!$isEven) {\n            $result[] = $value;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi9zhgt_e.php:29\n\
    Stack trace:\n#0 /tmp/tmpi9zhgt_e.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpi9zhgt_e.php\
    \ on line 29\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $str = (string)$num;\n\
    \        $has_even = false;\n        for ($i = 0; $i < strlen($str); $i++) {\n\
    \            if ($str[$i] % 2 == 0) {\n                $has_even = true;\n   \
    \             break;\n            }\n        }\n        if (!$has_even) {\n  \
    \          $result[] = $num;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\n$x = [12, 345, 2, 6, 7896];\nprint_r(unique_digits($x));\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Array

    (

    )

    '
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $str = strval($num);\n\
    \            $arr = str_split($str);\n            $is_even = false;\n        \
    \    foreach ($arr as $digit) {\n                if ($digit % 2 == 0) {\n    \
    \                $is_even = true;\n                    break;\n              \
    \  }\n            }\n            if (!$is_even) {\n                $result[] =\
    \ $num;\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strpos($num, '2')\
    \ === false && strpos($num, '4') === false && strpos($num, '6') === false && strpos($num,\
    \ '8') === false) {\n            $result[] = $num;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2lgtp2of.php:23\n\
    Stack trace:\n#0 /tmp/tmp2lgtp2of.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp2lgtp2of.php\
    \ on line 23\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $value) {\n        if (!has_even_digit($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmptanx4mhh.php:9\nStack trace:\n#0 /tmp/tmptanx4mhh.php(18): unique_digits(Array)\n\
    #1 /tmp/tmptanx4mhh.php(22): candidate(Array)\n#2 /tmp/tmptanx4mhh.php(28): test()\n\
    #3 {main}\n  thrown in /tmp/tmptanx4mhh.php on line 9\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $digits = str_split($num);\n\
    \    $is_unique = true;\n    foreach ($digits as $digit) {\n      if ($digit %\
    \ 2 == 0) {\n        $is_unique = false;\n        break;\n      }\n    }\n   \
    \ if ($is_unique) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (has_even_digit($num))\
    \ {\n      continue;\n    }\n    $result[] = $num;\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmpxhvi0xp9.php:9\nStack trace:\n#0 /tmp/tmpxhvi0xp9.php(19): unique_digits(Array)\n\
    #1 /tmp/tmpxhvi0xp9.php(23): candidate(Array)\n#2 /tmp/tmpxhvi0xp9.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxhvi0xp9.php on line 9\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $digits = str_split($num);\n\
    \    $is_unique = true;\n    foreach ($digits as $digit) {\n      if ($digit %\
    \ 2 == 0) {\n        $is_unique = false;\n        break;\n      }\n    }\n   \
    \ if ($is_unique) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $digits = str_split($num);\n\
    \    $is_unique = true;\n    foreach ($digits as $digit) {\n      if ($digit %\
    \ 2 == 0) {\n        $is_unique = false;\n        break;\n      }\n    }\n   \
    \ if ($is_unique) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n \
    \ return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $num_str = strval($num);\n\
    \        $has_even = false;\n        for ($i = 0; $i < strlen($num_str); $i++)\
    \ {\n            if ($num_str[$i] % 2 == 0) {\n                $has_even = true;\n\
    \                break;\n            }\n        }\n        if (!$has_even) {\n\
    \            $result[] = $num;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\n$x = [12, 34, 11, 9, 8];\nprint_r(unique_digits($x));\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 9\n    [1] => 11\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $str = (string)$num;\n   \
    \ $hasEven = false;\n    for ($i = 0; $i < strlen($str); $i++) {\n      if ($str[$i]\
    \ % 2 === 0) {\n        $hasEven = true;\n        break;\n      }\n    }\n   \
    \ if (!$hasEven) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (is_unique($num)) {\n \
    \     $result[] = $num;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_unique() in\
    \ /tmp/tmpv262tp8r.php:9\nStack trace:\n#0 /tmp/tmpv262tp8r.php(18): unique_digits(Array)\n\
    #1 /tmp/tmpv262tp8r.php(22): candidate(Array)\n#2 /tmp/tmpv262tp8r.php(28): test()\n\
    #3 {main}\n  thrown in /tmp/tmpv262tp8r.php on line 9\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (has_even_digit($num))\
    \ {\n      continue;\n    }\n    $result[] = $num;\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmpxhvi0xp9.php:9\nStack trace:\n#0 /tmp/tmpxhvi0xp9.php(19): unique_digits(Array)\n\
    #1 /tmp/tmpxhvi0xp9.php(23): candidate(Array)\n#2 /tmp/tmpxhvi0xp9.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxhvi0xp9.php on line 9\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $num_arr\
    \ = str_split($num);\n            $is_even = false;\n            foreach ($num_arr\
    \ as $digit) {\n                if ($digit % 2 == 0) {\n                    $is_even\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (!$is_even) {\n                $result[] = $num;\n            }\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,\
    \ 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\
    \ 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,\
    \ 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,\
    \ 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n\nprint_r(unique_digits($x));\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    \    [4] => 31\n    [5] => 33\n    [6] => 35\n    [7] => 37\n    [8] => 39\n \
    \   [9] => 51\n    [10] => 53\n    [11] => 55\n    [12] => 57\n    [13] => 59\n\
    \    [14] => 71\n    [15] => 73\n    [16] => 75\n    [17] => 77\n    [18] => 79\n\
    \    [19] => 91\n    [20] => 93\n    [21] => 95\n    [22] => 97\n    [23] => 99\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $digits = str_split($num);\n\
    \    $is_unique = true;\n    foreach ($digits as $digit) {\n      if ($digit %\
    \ 2 == 0) {\n        $is_unique = false;\n        break;\n      }\n    }\n   \
    \ if ($is_unique) {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n \
    \ return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strlen($num) == 1) {\n\
    \      array_push($result, $num);\n    } else {\n      $num_arr = str_split($num);\n\
    \      $is_unique = true;\n      foreach ($num_arr as $digit) {\n        if ($digit\
    \ % 2 == 0) {\n          $is_unique = false;\n          break;\n        }\n  \
    \    }\n      if ($is_unique) {\n        array_push($result, $num);\n      }\n\
    \    }\n  }\n  sort($result);\n  return $result;\n}\n\n$x = [12, 1, 13, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 11\n\
    \    [10] => 13\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $digits = str_split($num);\n\
    \        $hasEven = false;\n        foreach ($digits as $digit) {\n          \
    \  if ($digit % 2 == 0) {\n                $hasEven = true;\n                break;\n\
    \            }\n        }\n        if (!$hasEven) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ===\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $num_str\
    \ = strval($num);\n            $is_unique = true;\n            for ($i = 0; $i\
    \ < strlen($num_str); $i++) {\n                if ($num_str[$i] % 2 === 0) {\n\
    \                    $is_unique = false;\n                    break;\n       \
    \         }\n            }\n            if ($is_unique) {\n                $result[]\
    \ = $num;\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\
    \ 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,\
    \ 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85,\
    \ 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    \    [4] => 31\n    [5] => 33\n    [6] => 35\n    [7] => 37\n    [8] => 39\n \
    \   [9] => 51\n    [10] => 53\n    [11] => 55\n    [12] => 57\n    [13] => 59\n\
    \    [14] => 71\n    [15] => 73\n    [16] => 75\n    [17] => 77\n    [18] => 79\n\
    \    [19] => 91\n    [20] => 93\n    [21] => 95\n    [22] => 97\n    [23] => 99\n\
    )\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (has_even_digit($num))\
    \ {\n            continue;\n        }\n        $result[] = $num;\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmp_ugc2o9r.php:9\nStack trace:\n#0 /tmp/tmp_ugc2o9r.php(19): unique_digits(Array)\n\
    #1 /tmp/tmp_ugc2o9r.php(23): candidate(Array)\n#2 /tmp/tmp_ugc2o9r.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_ugc2o9r.php on line 9\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $arr = [];\n    foreach ($x as $num) {\n        if (strlen($num) == 1)\
    \ {\n            $arr[] = $num;\n        } else {\n            $str = str_split($num);\n\
    \            $flag = true;\n            foreach ($str as $digit) {\n         \
    \       if ($digit % 2 == 0) {\n                    $flag = false;\n         \
    \           break;\n                }\n            }\n            if ($flag) {\n\
    \                $arr[] = $num;\n            }\n        }\n    }\n    sort($arr);\n\
    \    return $arr;\n}\n\n$x = [12, 11, 14, 15, 7, 2];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 7\n    [2] => 11\n    [3] => 15\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $number) {\n        $digits = str_split($number);\n\
    \        $isEven = false;\n        foreach ($digits as $digit) {\n           \
    \ if ($digit % 2 == 0) {\n                $isEven = true;\n                break;\n\
    \            }\n        }\n        if (!$isEven) {\n            $result[] = $number;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $str = strval($num);\n\
    \        $has_even = false;\n        for ($i = 0; $i < strlen($str); $i++) {\n\
    \            if ($str[$i] % 2 == 0) {\n                $has_even = true;\n   \
    \             break;\n            }\n        }\n        if (!$has_even) {\n  \
    \          $result[] = $num;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\n$x = [12, 345, 2, 6, 7896];\nprint_r(unique_digits($x));\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Array

    (

    )

    '
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $num_str\
    \ = strval($num);\n            $is_unique = true;\n            for ($i = 0; $i\
    \ < strlen($num_str); $i++) {\n                if ($num_str[$i] % 2 == 0) {\n\
    \                    $is_unique = false;\n                    break;\n       \
    \         }\n            }\n            if ($is_unique) {\n                $result[]\
    \ = $num;\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\n$x = [12, 1, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 11\n\
    \    [10] => 13\n)\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            array_push($result, $num);\n        } else {\n           \
    \ $num = str_split($num);\n            $is_unique = true;\n            foreach\
    \ ($num as $digit) {\n                if ($digit % 2 == 0) {\n               \
    \     $is_unique = false;\n                    break;\n                }\n   \
    \         }\n            if ($is_unique) {\n                array_push($result,\
    \ implode($num));\n            }\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,\
    \ 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\
    \ 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82,\
    \ 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n\n\
    print_r(unique_digits($x));\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    \    [4] => 31\n    [5] => 33\n    [6] => 35\n    [7] => 37\n    [8] => 39\n \
    \   [9] => 51\n    [10] => 53\n    [11] => 55\n    [12] => 57\n    [13] => 59\n\
    \    [14] => 71\n    [15] => 73\n    [16] => 75\n    [17] => 77\n    [18] => 79\n\
    \    [19] => 91\n    [20] => 93\n    [21] => 95\n    [22] => 97\n    [23] => 99\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzbbiykia.php:37\n\
    Stack trace:\n#0 /tmp/tmpzbbiykia.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpzbbiykia.php\
    \ on line 37\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $arr = [];\n    foreach ($x as $num) {\n        if (strpos($num, '2')\
    \ === false && strpos($num, '4') === false && strpos($num, '6') === false && strpos($num,\
    \ '8') === false) {\n            $arr[] = $num;\n        }\n    }\n    sort($arr);\n\
    \    return $arr;\n}\n\n$x = [12, 14, 94, 33, 182, 5];\nprint_r(unique_digits($x));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => 33\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp05ivofr2.php:25\nStack trace:\n#0 /tmp/tmp05ivofr2.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp05ivofr2.php on line 25\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $arr = [];\n  foreach ($x as $num) {\n    $str = (string)$num;\n    $even\
    \ = false;\n    for ($i = 0; $i < strlen($str); $i++) {\n      if ($str[$i] %\
    \ 2 == 0) {\n        $even = true;\n        break;\n      }\n    }\n    if (!$even)\
    \ {\n      $arr[] = $num;\n    }\n  }\n  sort($arr);\n  return $arr;\n}\n\n$x\
    \ = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strlen($num) == 1) {\n\
    \      $result[] = $num;\n    } else {\n      $digits = str_split($num);\n   \
    \   $is_even = false;\n      foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 == 0) {\n          $is_even = true;\n          break;\n        }\n     \
    \ }\n      if (!$is_even) {\n        $result[] = $num;\n      }\n    }\n  }\n\
    \  sort($result);\n  return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20];\nprint_r(unique_digits($x));\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strlen($num) == 1) {\n\
    \      $result[] = $num;\n    } else {\n      $digits = str_split($num);\n   \
    \   $is_unique = true;\n      foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 == 0) {\n          $is_unique = false;\n          break;\n        }\n  \
    \    }\n      if ($is_unique) {\n        $result[] = $num;\n      }\n    }\n \
    \ }\n  sort($result);\n  return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20];\nprint_r(unique_digits($x));\n\nfunction candidate(...$args) {\n  \
    \  return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $number) {\n        if (strlen($number)\
    \ === 1) {\n            $result[] = $number;\n        } else {\n            $string\
    \ = strval($number);\n            $even = false;\n            for ($i = 0; $i\
    \ < strlen($string); $i++) {\n                if ($string[$i] % 2 === 0) {\n \
    \                   $even = true;\n                    break;\n              \
    \  }\n            }\n            if (!$even) {\n                $result[] = $number;\n\
    \            }\n        }\n    }\n    sort($result);\n    return $result;\n}\n\
    \n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $digits = str_split($num);\n\
    \        $isEven = false;\n        foreach ($digits as $digit) {\n           \
    \ if ($digit % 2 == 0) {\n                $isEven = true;\n                break;\n\
    \            }\n        }\n        if (!$isEven) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $value) {\n    if (strlen($value) === 1)\
    \ {\n      array_push($result, $value);\n    } else {\n      $str = strval($value);\n\
    \      $arr = str_split($str);\n      $hasEven = false;\n      foreach ($arr as\
    \ $digit) {\n        if ($digit % 2 === 0) {\n          $hasEven = true;\n   \
    \       break;\n        }\n      }\n      if (!$hasEven) {\n        array_push($result,\
    \ $value);\n      }\n    }\n  }\n  sort($result);\n  return $result;\n}\n\n$x\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(unique_digits($x));\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (!has_even_digit($num))\
    \ {\n            $result[] = $num;\n        }\n    }\n    sort($result);\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmplrz7nzlp.php:9\nStack trace:\n#0 /tmp/tmplrz7nzlp.php(18): unique_digits(Array)\n\
    #1 /tmp/tmplrz7nzlp.php(22): candidate(Array)\n#2 /tmp/tmplrz7nzlp.php(28): test()\n\
    #3 {main}\n  thrown in /tmp/tmplrz7nzlp.php on line 9\n"
  timestamp: 1659729993
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (is_unique($num)) {\n \
    \     $result[] = $num;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_unique() in\
    \ /tmp/tmpv262tp8r.php:9\nStack trace:\n#0 /tmp/tmpv262tp8r.php(18): unique_digits(Array)\n\
    #1 /tmp/tmpv262tp8r.php(22): candidate(Array)\n#2 /tmp/tmpv262tp8r.php(28): test()\n\
    #3 {main}\n  thrown in /tmp/tmpv262tp8r.php on line 9\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen(strval($num))\
    \ === 1) {\n            $result[] = $num;\n        } else {\n            $digits\
    \ = str_split(strval($num));\n            $odd = true;\n            foreach ($digits\
    \ as $digit) {\n                if ($digit % 2 === 0) {\n                    $odd\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         if ($odd) {\n                $result[] = $num;\n            }\n    \
    \    }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [12, 345, 2,\
    \ 6, 7896];\nprint_r(unique_digits($x));\nfunction candidate(...$args) {\n   \
    \ return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 6\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $digits =\
    \ str_split($num);\n            $is_even = false;\n            foreach ($digits\
    \ as $digit) {\n                if ($digit % 2 == 0) {\n                    $is_even\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (!$is_even) {\n                $result[] = $num;\n            }\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $digits =\
    \ str_split($num);\n            $isEven = false;\n            foreach ($digits\
    \ as $digit) {\n                if ($digit % 2 == 0) {\n                    $isEven\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (!$isEven) {\n                $result[] = $num;\n            }\n \
    \       }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $num_str = strval($num);\n\
    \    $has_even = false;\n    for ($i = 0; $i < strlen($num_str); $i++) {\n   \
    \   if ($num_str[$i] % 2 == 0) {\n        $has_even = true;\n        break;\n\
    \      }\n    }\n    if (!$has_even) {\n      $result[] = $num;\n    }\n  }\n\
    \  sort($result);\n  return $result;\n}\n\n$x = [12, 345, 2, 6, 7896];\nprint_r(unique_digits($x));\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Array

    (

    )

    '
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strlen($num) === 1) {\n\
    \      $result[] = $num;\n    } else {\n      $str = strval($num);\n      $is_odd\
    \ = true;\n      for ($i = 0; $i < strlen($str); $i++) {\n        if ($str[$i]\
    \ % 2 === 0) {\n          $is_odd = false;\n          break;\n        }\n    \
    \  }\n      if ($is_odd) {\n        $result[] = $num;\n      }\n    }\n  }\n \
    \ sort($result);\n  return $result;\n}\n\n$x = [1,2,3,4,5,6,7,8,9,10];\nprint_r(unique_digits($x));\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $digits =\
    \ str_split($num);\n            $is_even = false;\n            foreach ($digits\
    \ as $digit) {\n                if ($digit % 2 == 0) {\n                    $is_even\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (!$is_even) {\n                $result[] = $num;\n            }\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    $num_str = strval($num);\n\
    \    $is_unique = true;\n    for ($i = 0; $i < strlen($num_str); $i++) {\n   \
    \   if ($num_str[$i] % 2 == 0) {\n        $is_unique = false;\n        break;\n\
    \      }\n    }\n    if ($is_unique) {\n      $result[] = $num;\n    }\n  }\n\
    \  sort($result);\n  return $result;\n}\n\n$x = [12, 1, 21, 3, 4, 5, 6, 7, 8,\
    \ 9];\nprint_r(unique_digits($x));\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n    [3] => 7\n    [4]\
    \ => 9\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $arr = [];\n  foreach ($x as $num) {\n    $str = strval($num);\n    $is_unique\
    \ = true;\n    for ($i = 0; $i < strlen($str); $i++) {\n      if ($str[$i] % 2\
    \ == 0) {\n        $is_unique = false;\n        break;\n      }\n    }\n    if\
    \ ($is_unique) {\n      $arr[] = $num;\n    }\n  }\n  sort($arr);\n  return $arr;\n\
    }\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $num_arr\
    \ = str_split($num);\n            $is_even = false;\n            foreach ($num_arr\
    \ as $digit) {\n                if ($digit % 2 == 0) {\n                    $is_even\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (!$is_even) {\n                $result[] = $num;\n            }\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [12, 11,\
    \ 14, 15, 7, 121];\nvar_dump(unique_digits($x));\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "array(3) {\n  [0]=>\n  int(7)\n  [1]=>\n  int(11)\n  [2]=>\n  int(15)\n\
    }\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strlen(strval($num)) ==\
    \ 1) {\n      $result[] = $num;\n    } else {\n      $digits = str_split(strval($num));\n\
    \      $has_even = false;\n      foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 == 0) {\n          $has_even = true;\n          break;\n        }\n    \
    \  }\n      if (!$has_even) {\n        $result[] = $num;\n      }\n    }\n  }\n\
    \  sort($result);\n  return $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20];\nprint_r(unique_digits($x));\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $n) {\n        if (strlen($n) == 1)\
    \ {\n            $result[] = $n;\n        } else {\n            $digits = str_split($n);\n\
    \            $hasEven = false;\n            foreach ($digits as $digit) {\n  \
    \              if ($digit % 2 == 0) {\n                    $hasEven = true;\n\
    \                    break;\n                }\n            }\n            if\
    \ (!$hasEven) {\n                $result[] = $n;\n            }\n        }\n \
    \   }\n    sort($result);\n    return $result;\n}\n\n$x = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10];\nprint_r(unique_digits($x));\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ===\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $str = strval($num);\n\
    \            $arr = str_split($str);\n            $flag = true;\n            foreach\
    \ ($arr as $digit) {\n                if ($digit % 2 === 0) {\n              \
    \      $flag = false;\n                    break;\n                }\n       \
    \     }\n            if ($flag) {\n                $result[] = $num;\n       \
    \     }\n        }\n    }\n    sort($result);\n    return $result;\n}\n\n$x =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $num) {\n        $num_str = strval($num);\n\
    \        $has_even = false;\n        for ($i = 0; $i < strlen($num_str); $i++)\
    \ {\n            if ($num_str[$i] % 2 == 0) {\n                $has_even = true;\n\
    \                break;\n            }\n        }\n        if (!$has_even) {\n\
    \            $result[] = $num;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\necho implode(', ',\
    \ unique_digits($x));\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 13, 15, 17, 19
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $value) {\n        $digits = str_split($value);\n\
    \        $is_odd = true;\n        foreach ($digits as $digit) {\n            if\
    \ ($digit % 2 == 0) {\n                $is_odd = false;\n                break;\n\
    \            }\n        }\n        if ($is_odd) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = [12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n  $result = [];\n  foreach ($x as $num) {\n    if (strlen($num) == 1) {\n\
    \      $result[] = $num;\n    } else {\n      $num_arr = str_split($num);\n  \
    \    $is_even = false;\n      foreach ($num_arr as $digit) {\n        if ($digit\
    \ % 2 == 0) {\n          $is_even = true;\n          break;\n        }\n     \
    \ }\n      if (!$is_even) {\n        $result[] = $num;\n      }\n    }\n  }\n\
    \  sort($result);\n  return $result;\n}\n\n$x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    print_r(unique_digits($x));\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n"
  timestamp: 1659729993
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\nfunction unique_digits($x)\
    \ {\n    $result = [];\n    foreach ($x as $value) {\n        $str = (string)$value;\n\
    \        $isEven = false;\n        for ($i = 0; $i < strlen($str); $i++) {\n \
    \           if ($str[$i] % 2 == 0) {\n                $isEven = true;\n      \
    \          break;\n            }\n        }\n        if (!$isEven) {\n       \
    \     $result[] = $value;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\n$x = [12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(unique_digits($x));\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 13\n    [1] => 15\n    [2] => 17\n    [3] => 19\n\
    )\n"
  timestamp: 1659729993

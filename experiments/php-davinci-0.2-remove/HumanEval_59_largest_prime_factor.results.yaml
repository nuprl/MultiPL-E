language: php
name: HumanEval_59_largest_prime_factor
results:
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i < $n)\
    \ {\n    if ($n % $i == 0) {\n      $n = $n / $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\n$n = 600851475143;\n\
    echo largest_prime_factor($n);\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\n$n = 600851475143;\n\
    $result = largest_prime_factor($n);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\necho largest_prime_factor(600851475143) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\n$n = 600851475143;\n\
    echo largest_prime_factor($n);\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\necho largest_prime_factor(600851475143) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\necho largest_prime_factor(600851475143) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\n$n = 600851475143;\necho largest_prime_factor($n);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\n$n = 600851475143;\n\
    echo largest_prime_factor($n);\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\necho largest_prime_factor(600851475143) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\n$n = 600851475143;\necho largest_prime_factor($n);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\n$n = 600851475143;\n\
    echo largest_prime_factor($n);\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\n$n = 600851475143;\n\
    echo largest_prime_factor($n);\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\necho largest_prime_factor(600851475143) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\n$n = 600851475143;\n\
    echo largest_prime_factor($n);\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\necho largest_prime_factor(600851475143)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857

    '
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i *\
    \ $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}\n\necho largest_prime_factor(600851475143);\n\
    function candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $i;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_prime_factor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(330)\
    \ !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13195)\
    \ !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i * $i <=\
    \ $n) {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964
- exit_code: 0
  program: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\nfunction largest_prime_factor($n) {\n  $i = 2;\n  while ($i <= $n)\
    \ {\n    if ($n % $i == 0) {\n      $n /= $i;\n    } else {\n      $i++;\n   \
    \ }\n  }\n  return $i;\n}\n\necho largest_prime_factor(600851475143);\nfunction\
    \ candidate(...$args) {\n    return largest_prime_factor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '6857'
  timestamp: 1659730964

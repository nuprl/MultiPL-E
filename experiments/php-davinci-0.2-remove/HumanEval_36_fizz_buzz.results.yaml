language: php
name: HumanEval_36_fizz_buzz
results:
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\necho fizz_buzz(100);\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '3'
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $result\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $result += substr_count((string)$i, '7');\n        }\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $result\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $result += substr_count((string)$i, '7');\n        }\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\necho fizz_buzz(100);\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '3'
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n}\n\
    \necho fizz_buzz(100);\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '3'
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, 7);\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n}\n\
    \necho fizz_buzz(100);\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '3'
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if (($i % 11 == 0) || ($i % 13 ==\
    \ 0)) {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if (strpos($i, '7') !== false) {\n\
    \      if ($i % 11 == 0 || $i % 13 == 0) {\n        $count++;\n      }\n    }\n\
    \  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc82b579g.php:21\n\
    Stack trace:\n#0 /tmp/tmpc82b579g.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpc82b579g.php\
    \ on line 21\n"
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n}\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, \"7\");\n    }\n  }\n  return $count;\n\
    }\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if (($i % 11 == 0 || $i % 13\
    \ == 0) && strpos($i, '7') !== false) {\n            $count++;\n        }\n  \
    \  }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2v1xbyu7.php:19\n\
    Stack trace:\n#0 /tmp/tmp2v1xbyu7.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp2v1xbyu7.php\
    \ on line 19\n"
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $cnt\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $cnt += substr_count((string)$i, '7');\n        }\n   \
    \ }\n    return $cnt;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if (($i % 11 == 0 || $i % 13 == 0)\
    \ && strpos($i, '7') !== false) {\n      $count++;\n    }\n  }\n  return $count;\n\
    }\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv9w_kqog.php:18\n\
    Stack trace:\n#0 /tmp/tmpv9w_kqog.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpv9w_kqog.php\
    \ on line 18\n"
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, 7);\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, 7);\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\necho fizz_buzz(100);\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '3'
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\necho fizz_buzz(100);\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '3'
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, 7);\n    }\n  }\n  return $count;\n}\n\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\necho fizz_buzz(100);\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '3'
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, 7);\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $result\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $result += substr_count((string)$i, '7');\n        }\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\necho fizz_buzz(100);\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '3'
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n}\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, 7);\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n}\n\
    \necho fizz_buzz(100);\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '3'
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count($i, '7');\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $count += substr_count((string)$i, '7');\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\nfunction fizz_buzz($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n      $count += substr_count($i, 7);\n    }\n  }\n  return $count;\n}\n\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730910

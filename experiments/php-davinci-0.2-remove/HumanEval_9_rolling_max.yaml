name: HumanEval_9_rolling_max
language: php
prompt: "<?php\n// From a given list of integers, generate a list of rolling maximum\
  \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
  \ {\n"
tests: "function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
  \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
  \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $result = [];\n    $max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($max === null || $number > $max) {\n            $max = $number;\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n", "  $max\
    \ = $numbers[0];\n  $result = [];\n  foreach ($numbers as $number) {\n    if ($number\
    \ > $max) {\n      $max = $number;\n    }\n    $result[] = $max;\n  }\n  return\
    \ $result;\n}\n", "    $max = [];\n    $max[] = $numbers[0];\n    for ($i = 1;\
    \ $i < count($numbers); $i++) {\n        $max[] = max($max[$i - 1], $numbers[$i]);\n\
    \    }\n    return $max;\n}\n", "    $max = $numbers[0];\n    $result = [];\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max) {\n        \
    \    $max = $number;\n        }\n        $result[] = $max;\n    }\n    return\
    \ $result;\n}\n", "    $max = $numbers[0];\n    $result = [$max];\n    for ($i\
    \ = 1; $i < count($numbers); $i++) {\n        $max = max($max, $numbers[$i]);\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n", "  $max = $numbers[0];\n\
    \  $result = [];\n  foreach ($numbers as $number) {\n    if ($number > $max) {\n\
    \      $max = $number;\n    }\n    $result[] = $max;\n  }\n  return $result;\n\
    }\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(rolling_max($numbers));\n",
  "    $max = [];\n    $max[] = $numbers[0];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max[] = max($max[$i - 1], $numbers[$i]);\n    }\n    return\
    \ $max;\n}\n", "    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n", "   \
    \ $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n", "    $max = $numbers[0];\n\
    \    $result = [];\n    foreach ($numbers as $number) {\n        if ($number >\
    \ $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n$numbers = [1, 3, 5, 7, 2, 4, 6, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20];\n$result = rolling_max($numbers);\nprint_r($result);",
  "    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n", "    $max = $numbers[0];\n\
    \    $result = [];\n    foreach ($numbers as $number) {\n        if ($number >\
    \ $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n", "    $max = $numbers[0];\n    $result = [$max];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $max = max($max, $numbers[$i]);\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n", "    $max = $numbers[0];\n\
    \    $maxes = [$max];\n    for ($i = 1; $i < count($numbers); $i++) {\n      \
    \  $max = max($max, $numbers[$i]);\n        $maxes[] = $max;\n    }\n    return\
    \ $maxes;\n}\n", "    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n", "   \
    \ $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n", "    $max = $numbers[0];\n\
    \    $result = [];\n    foreach ($numbers as $number) {\n        if ($number >\
    \ $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $max = null;\n    foreach\
    \ ($numbers as $number) {\n        if ($max === null || $number > $max) {\n  \
    \          $max = $number;\n        }\n        $result[] = $max;\n    }\n    return\
    \ $result;\n}\n", "    $max = $numbers[0];\n    $result = [$max];\n    for ($i\
    \ = 1; $i < count($numbers); $i++) {\n        $max = max($max, $numbers[$i]);\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n", "    $max = $numbers[0];\n\
    \    $result = [];\n    foreach ($numbers as $number) {\n        if ($number >\
    \ $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

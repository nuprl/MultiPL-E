language: php
name: HumanEval_131_digits
results:
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $sum = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n            $sum\
    \ *= $value;\n        }\n    }\n    return $sum;\n}\necho digits(1);\necho \"\\\
    n\";\necho digits(4);\necho \"\\n\";\necho digits(123456789);\necho \"\\n\";\n\
    echo digitsn\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbocq6sf9.php on line 26

    '
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n       \
    \     $product *= $digit;\n        }\n    }\n    if ($product == 1) {\n      \
    \  return 0;\n    }\n    return $product;\n}\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnioa4u2z.php:29\n\
    Stack trace:\n#0 /tmp/tmpnioa4u2z.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpnioa4u2z.php\
    \ on line 29\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $result = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $result *= $n[$i];\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(123456789) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbj7acend.php:33\n\
    Stack trace:\n#0 /tmp/tmpbj7acend.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbj7acend.php\
    \ on line 33\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n            $product\
    \ *= $num;\n        }\n    }\n    if ($product == 1) {\n        return 0;\n  \
    \  }\n    return $product;\n}\necho digits(1) . \"\\n\";\necho digits(4) . \"\\\
    n\";\necho digits(1234) . \"\\n\";\necho digits(123456789) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n3\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb24pvi0q.php:33\n\
    Stack trace:\n#0 /tmp/tmpb24pvi0q.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpb24pvi0q.php\
    \ on line 33\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odds = array_filter($digits, function($digit) {\n        return $digit %\
    \ 2 !== 0;\n    });\n    if (count($odds) === 0) {\n        return 0;\n    }\n\
    \    return array_product($odds);\n}\n\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 != 0;\n    });\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuvsemnll.php:28\n\
    Stack trace:\n#0 /tmp/tmpuvsemnll.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpuvsemnll.php\
    \ on line 28\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $result\
    \ = 1;\n    foreach ($n as $value) {\n        if ($value % 2 !== 0) {\n      \
    \      $result *= $value;\n        }\n    }\n    return $result;\n}\necho digits(1)\
    \ . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(12345) . \"\\n\";\necho digits(123456789)\
    \ . \"\\n\";\necho digits(1234567890123456789) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n893025\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmps4by93x3.php:35\nStack trace:\n#0 /tmp/tmps4by93x3.php(38): test()\n\
    #1 {main}\n  thrown in /tmp/tmps4by93x3.php on line 35\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n  $product = 1;\n  $n = str_split($n);\n\
    \  foreach ($n as $num) {\n    if ($num % 2 != 0) {\n      $product *= $num;\n\
    \    }\n  }\n  return $product;\n}\necho digits(1) . PHP_EOL;\necho digits(4)\
    \ . PHP_EOL;\necho digits(123456789) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp33tit1_7.php:33\n\
    Stack trace:\n#0 /tmp/tmp33tit1_7.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp33tit1_7.php\
    \ on line 33\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n\t$digits = str_split($n);\n\t\
    $odd_digits = array_filter($digits, function($digit) {\n\t\treturn $digit % 2\
    \ !== 0;\n\t});\n\tif (count($odd_digits) === 0) {\n\t\treturn 0;\n\t}\n\treturn\
    \ array_product($odd_digits);\n}\n\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 !== 0;\n    });\n    if (count($odd_digits) === 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $result = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 == 1) {\n        \
    \    $result *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpewppt9at.php:32\n\
    Stack trace:\n#0 /tmp/tmpewppt9at.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpewppt9at.php\
    \ on line 32\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $num) {\n        if ($num % 2 !== 0) {\n          \
    \  $product *= $num;\n        }\n    }\n    if ($product === 1) {\n        return\
    \ 0;\n    }\n    return $product;\n}\n\necho digits(1) . PHP_EOL;\necho digits(4)\
    \ . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(1234) . PHP_EOL;\necho\
    \ digits(123456789) . PHP_EOL;\necho digits(1234567890123456789) . PHP_EOL;\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n15\n3\n945\n893025\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpv_5550sw.php:36\nStack trace:\n#0 /tmp/tmpv_5550sw.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmpv_5550sw.php on line 36\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n\t$n = str_split($n);\n\t$odd\
    \ = 1;\n\tforeach ($n as $num) {\n\t\tif ($num % 2 == 1) {\n\t\t\t$odd *= $num;\n\
    \t\t}\n\t}\n\treturn $odd;\n}\necho digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\n\
    echo digits(12345) . PHP_EOL;\necho digits(123456789) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7d_3hcqq.php:34\n\
    Stack trace:\n#0 /tmp/tmp7d_3hcqq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7d_3hcqq.php\
    \ on line 34\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $sum = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n            $sum *=\
    \ $num;\n        }\n    }\n    return $sum;\n}\necho digits(1) . PHP_EOL;\necho\
    \ digits(4) . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(1234) . PHP_EOL;\n\
    echo digits(12) . PHP_EOL;\necho digits(123) . PHP_EOL;\necho digits(1234) . PHP_EOL;\n\
    echo digits(12345) . PHP_EOL;\necho digits(123456) . PHP_EOL;\necho digits(1234567)\
    \ . PHP_EOL;\necho digits(12345678) . PHP_EOL;\necho digits(123456789) . PHP_EOL;\n\
    echo digits(1234567890) . PHP_EOL;\necho digits(12345678901) . PHP_EOL;\necho\
    \ digits(123456789012) . PHP_EOL;\necho digits(1234567890123) . PHP_EOL;\necho\
    \ digits(12345678901234) . PHP_EOL;\necho digits(123456789012345) . PHP_EOL;\n\
    echo digits(1234567890123456) . PHP_EOL;\necho digits(12345678901234567) . PHP_EOL;\n\
    echo digits(123456789012345678) . PHP_EOL;\necho digits(1234567890123456789) .\
    \ PHP_EOL;\necho digits(12345678901234567890) . PHP_EOL;\necho digits(123456789012345678901)\
    \ . PHP_EOL;\necho digits(1234567890123456789012) . PHP_EOL;\necho digits(12345678901234567890123)\
    \ . PHP_EOL;\necho digits(123456789012345678901234) . PHP_EOL;\necho digits(12345678901234567\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4d5lddz8.php on line 47

    '
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $sum = 1;\n    while ($n >\
    \ 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n          \
    \  $sum *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n    return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppt4fdpo_.php:32\n\
    Stack trace:\n#0 /tmp/tmppt4fdpo_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmppt4fdpo_.php\
    \ on line 32\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n            $product\
    \ *= $num;\n        }\n    }\n    return $product;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7wkshmll.php:31\n\
    Stack trace:\n#0 /tmp/tmp7wkshmll.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp7wkshmll.php\
    \ on line 31\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $product *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n   \
    \ return $product;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqilwcftc.php:32\n\
    Stack trace:\n#0 /tmp/tmpqilwcftc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqilwcftc.php\
    \ on line 32\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 == 1;\n    });\n    if (count($odd_digits) == 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n           \
    \ $product *= $num;\n        }\n    }\n    return $product;\n}\necho digits(1)\
    \ . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(123456789)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2k0t1_44.php:34\n\
    Stack trace:\n#0 /tmp/tmp2k0t1_44.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2k0t1_44.php\
    \ on line 34\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $odds = array();\n    $digits\
    \ = str_split($n);\n    foreach ($digits as $digit) {\n        if ($digit % 2\
    \ != 0) {\n            array_push($odds, $digit);\n        }\n    }\n    if (count($odds)\
    \ == 0) {\n        return 0;\n    }\n    return array_product($odds);\n}\n\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $sum = 1;\n    while ($n >\
    \ 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n          \
    \  $sum *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n    return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp148ziq19.php:32\n\
    Stack trace:\n#0 /tmp/tmp148ziq19.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp148ziq19.php\
    \ on line 32\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $result = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $value) {\n        if ($value % 2 == 1) {\n            $result\
    \ *= $value;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdu21v4di.php:31\n\
    Stack trace:\n#0 /tmp/tmpdu21v4di.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdu21v4di.php\
    \ on line 31\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 == 1;\n    });\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp38cw0yfs.php:28\n\
    Stack trace:\n#0 /tmp/tmp38cw0yfs.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp38cw0yfs.php\
    \ on line 28\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $sum = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $num) {\n        if ($num % 2 == 1) {\n            $sum *=\
    \ $num;\n        }\n    }\n    return $sum;\n}\necho digits(1) . PHP_EOL;\necho\
    \ digits(4) . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(123456789)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ce54huz.php:34\n\
    Stack trace:\n#0 /tmp/tmp9ce54huz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9ce54huz.php\
    \ on line 34\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $sum\
    \ = 1;\n    foreach ($n as $num) {\n        if ($num % 2 == 1) {\n           \
    \ $sum *= $num;\n        }\n    }\n    return $sum;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(123456789)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc1aex1lu.php:34\n\
    Stack trace:\n#0 /tmp/tmpc1aex1lu.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpc1aex1lu.php\
    \ on line 34\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $odds\
    \ = [];\n    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n          \
    \  $odds[] = $num;\n        }\n    }\n    if (count($odds) == 0) {\n        return\
    \ 0;\n    }\n    return array_product($odds);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(123456789)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf97hq0b9.php:34\n\
    Stack trace:\n#0 /tmp/tmpf97hq0b9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpf97hq0b9.php\
    \ on line 34\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $sum = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n            $sum *=\
    \ $num;\n        }\n    }\n    return $sum;\n}\necho digits(1) . PHP_EOL;\necho\
    \ digits(4) . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(1234) . PHP_EOL;\n\
    echo digits(123456789) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n3\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzt0jk59k.php:35\n\
    Stack trace:\n#0 /tmp/tmpzt0jk59k.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzt0jk59k.php\
    \ on line 35\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 !== 0) {\n      \
    \      $product *= $digit;\n        }\n    }\n    return $product;\n}\n\necho\
    \ digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(123) . PHP_EOL;\n\
    echo digits(12345) . PHP_EOL;\necho digits(123456789) . PHP_EOL;\necho digits(1234567890123456789)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n3\n15\n945\n893025\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpkwqn3rqo.php:37\nStack trace:\n#0 /tmp/tmpkwqn3rqo.php(40): test()\n\
    #1 {main}\n  thrown in /tmp/tmpkwqn3rqo.php on line 37\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\n\necho digits(1) . \"\
    \\n\";\necho digits(4) . \"\\n\";\necho digits(123456789) . \"\\n\";\necho digits(1234567890123456789)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n945\n893025\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s9qryrc.php:35\n\
    Stack trace:\n#0 /tmp/tmp6s9qryrc.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6s9qryrc.php\
    \ on line 35\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odds = array_filter($digits, function($digit) {\n        return $digit %\
    \ 2;\n    });\n    return array_product($odds);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp03k4xcot.php:28\n\
    Stack trace:\n#0 /tmp/tmp03k4xcot.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp03k4xcot.php\
    \ on line 28\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odds = array_filter($digits, function($digit) {\n        return $digit %\
    \ 2 == 1;\n    });\n    if (count($odds) == 0) {\n        return 0;\n    }\n \
    \   return array_product($odds);\n}\n\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $odds = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $odds\
    \ *= $digit;\n        }\n    }\n    return $odds;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6chsw9pz.php:31\n\
    Stack trace:\n#0 /tmp/tmp6chsw9pz.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp6chsw9pz.php\
    \ on line 31\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $product *= $n[$i];\n        }\n    }\n    return $product;\n}\necho\
    \ digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(123456789) . \"\
    \\n\";\necho digits(1234567890123456789) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n945\n893025\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd07aeg8v.php:34\n\
    Stack trace:\n#0 /tmp/tmpd07aeg8v.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpd07aeg8v.php\
    \ on line 34\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmcaesr77.php:31\n\
    Stack trace:\n#0 /tmp/tmpmcaesr77.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmcaesr77.php\
    \ on line 31\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 != 0;\n    });\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuvsemnll.php:28\n\
    Stack trace:\n#0 /tmp/tmpuvsemnll.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpuvsemnll.php\
    \ on line 28\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odds = array_filter($digits, function($x) {\n        return $x % 2 == 1;\n\
    \    });\n    if (count($odds) == 0) {\n        return 0;\n    }\n    return array_product($odds);\n\
    }\n\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n           \
    \ $product *= $num;\n        }\n    }\n    if ($product == 1) {\n        return\
    \ 0;\n    }\n    return $product;\n}\necho digits(1);\necho \"\\n\";\necho digits(4);\n\
    echo \"\\n\";\necho digits(123456789);\necho \"\\n\";\necho digits(12);\necho\
    \ \"\\n\";\necho digitsn\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyvjd5a8g.php on line 31

    '
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 !== 0;\n    });\n    if (count($odd_digits) === 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n           \
    \ $product *= $num;\n        }\n    }\n    return $product;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8dw6ww51.php:31\n\
    Stack trace:\n#0 /tmp/tmp8dw6ww51.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8dw6ww51.php\
    \ on line 31\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n\t$product = 1;\n\t$n = str_split($n);\n\
    \tforeach ($n as $value) {\n\t\tif ($value % 2 != 0) {\n\t\t\t$product *= $value;\n\
    \t\t}\n\t}\n\treturn $product;\n}\n\necho digits(1) . PHP_EOL;\necho digits(4)\
    \ . PHP_EOL;\necho digits(123456789) . PHP_EOL;\necho digitsn\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmph730t2j8.php on line 24

    '
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odds = [];\n    foreach ($digits as $digit) {\n        if ($digit % 2 ==\
    \ 1) {\n            $odds[] = $digit;\n        }\n    }\n    if (count($odds)\
    \ == 0) {\n        return 0;\n    }\n    return array_product($odds);\n}\n\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n\t$n = str_split($n);\n\t$odds\
    \ = array();\n\tforeach ($n as $num) {\n\t\tif ($num % 2 != 0) {\n\t\t\t$odds[]\
    \ = $num;\n\t\t}\n\t}\n\tif (count($odds) == 0) {\n\t\treturn 0;\n\t}\n\treturn\
    \ array_product($odds);\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $num) {\n        if ($num % 2 == 1) {\n           \
    \ $product *= $num;\n        }\n    }\n    return $product;\n}\necho digits(1)\
    \ . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(1234)\
    \ . PHP_EOL;\necho digits(123456789) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n3\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphb0ifi97.php:35\n\
    Stack trace:\n#0 /tmp/tmphb0ifi97.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphb0ifi97.php\
    \ on line 35\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $result = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n            $result\
    \ *= $value;\n        }\n    }\n    return $result;\n}\necho digits(1) . \"\\\
    n\";\necho digits(4) . \"\\n\";\necho digits(12345) . \"\\n\";\necho digits(1234)\
    \ . \"\\n\";\necho digits(12) . \"\\n\";\necho digits(123456789) . \"\\n\";\n\
    echo digits(1234567890123456789) . \"\\n\";\necho digits(12345678901234567890123456789)\
    \ . \"\\n\";\necho digits(123456789012345678901234567890123456789) . \"\\n\";\n\
    echo digits(1234567890123456789012345678901234567890123456789) . \"\\n\";\necho\
    \ digits(12345678901234567890123456789012345678901234567890123456789) . \"\\n\"\
    ;\necho digits(123456789012345678901234567890123456789012345678901234567890123456789)\
    \ . \"\\n\";\necho digits(1234567890123456789012345678901234567890123456789012345678901234567890123456789)\
    \ . \"\\n\";\necho digits(12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789)\
    \ . \"\\n\";\necho digits(123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789)\
    \ . \"\\n\";\necho digits(12345678901234567890123456789012345678901234567890123456789012345678901234567\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpl9hl13ek.php on line 35

    '
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2;\n    });\n    if (empty($odd_digits)) {\n        return 0;\n    }\n   \
    \ return array_product($odd_digits);\n}\n\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $odds = array();\n    $digits\
    \ = str_split($n);\n    foreach ($digits as $digit) {\n        if ($digit % 2\
    \ != 0) {\n            array_push($odds, $digit);\n        }\n    }\n    if (count($odds)\
    \ == 0) {\n        return 0;\n    }\n    $product = 1;\n    foreach ($odds as\
    \ $odd) {\n        $product *= $odd;\n    }\n    return $product;\n}\n\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $product = 1;\n    foreach ($digits as $digit) {\n        if ($digit % 2\
    \ != 0) {\n            $product *= $digit;\n        }\n    }\n    return $product;\n\
    }\n\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4oybuyk3.php:31\n\
    Stack trace:\n#0 /tmp/tmp4oybuyk3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4oybuyk3.php\
    \ on line 31\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $result = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $result *= $n[$i];\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(12345) . \"\\n\"\
    ;\necho digits(123456789) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkg_evs16.php:34\n\
    Stack trace:\n#0 /tmp/tmpkg_evs16.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkg_evs16.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $product = 1;\n    foreach ($digits as $digit) {\n        if ($digit % 2\
    \ == 1) {\n            $product *= $digit;\n        }\n    }\n    return $product;\n\
    }\n\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(123) .\
    \ \"\\n\";\necho digits(12345) . \"\\n\";\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n3\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnm3an_vu.php:35\n\
    Stack trace:\n#0 /tmp/tmpnm3an_vu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpnm3an_vu.php\
    \ on line 35\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $result = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $result *= $n[$i];\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(123456789) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbj7acend.php:33\n\
    Stack trace:\n#0 /tmp/tmpbj7acend.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbj7acend.php\
    \ on line 33\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $number) {\n        if ($number % 2 != 0) {\n     \
    \       $product *= $number;\n        }\n    }\n    if ($product == 1) {\n   \
    \     return 0;\n    }\n    return $product;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprgwv04ga.php:30\n\
    Stack trace:\n#0 /tmp/tmprgwv04ga.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprgwv04ga.php\
    \ on line 30\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 !== 0;\n    });\n    if (count($odd_digits) === 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 == 1;\n    });\n    if (count($odd_digits) == 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 == 1;\n    });\n    if (count($odd_digits) == 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $result = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $value) {\n        if ($value % 2 !== 0) {\n            $result\
    \ *= $value;\n        }\n    }\n    return $result;\n}\necho digits(1) . \"\\\
    n\";\necho digits(4) . \"\\n\";\necho digits(123456789) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyro2xjr2.php:33\n\
    Stack trace:\n#0 /tmp/tmpyro2xjr2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpyro2xjr2.php\
    \ on line 33\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $value) {\n        if ($value % 2 == 1) {\n       \
    \     $product *= $value;\n        }\n    }\n    return $product;\n}\necho digits(1)\
    \ . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(12345) . \"\\n\";\necho digits(123456789)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpexe6pa44.php:34\n\
    Stack trace:\n#0 /tmp/tmpexe6pa44.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpexe6pa44.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $result = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $result *= $n[$i];\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(123456789) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbj7acend.php:33\n\
    Stack trace:\n#0 /tmp/tmpbj7acend.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbj7acend.php\
    \ on line 33\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n\t$n = str_split($n);\n\t$odd\
    \ = [];\n\tforeach ($n as $num) {\n\t\tif ($num % 2 != 0) {\n\t\t\t$odd[] = $num;\n\
    \t\t}\n\t}\n\tif (count($odd) == 0) {\n\t\treturn 0;\n\t}\n\treturn array_product($odd);\n\
    }\necho digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(123) . PHP_EOL;\n\
    echo digits(1234567890) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    0

    3

    945

    '
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n\t$n = str_split($n);\n\t$product\
    \ = 1;\n\tforeach ($n as $num) {\n\t\tif ($num % 2 != 0) {\n\t\t\t$product *=\
    \ $num;\n\t\t}\n\t}\n\treturn $product;\n}\necho digits(1) . PHP_EOL;\necho digits(4)\
    \ . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(123456789) . PHP_EOL;\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprdno6wiz.php:34\n\
    Stack trace:\n#0 /tmp/tmprdno6wiz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprdno6wiz.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 == 1) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\necho digits(1) . \"\\\
    n\";\necho digits(4) . \"\\n\";\necho digits(5) . \"\\n\";\necho digits(10) .\
    \ \"\\n\";\necho digits(11) . \"\\n\";\necho digits(12) . \"\\n\";\necho digits(13)\
    \ . \"\\n\";\necho digits(14) . \"\\n\";\necho digits(15) . \"\\n\";\necho digits(16)\
    \ . \"\\n\";\necho digits(17) . \"\\n\";\necho digits(18) . \"\\n\";\necho digits(19)\
    \ . \"\\n\";\necho digits(20) . \"\\n\";\necho digits(21) . \"\\n\";\necho digits(22)\
    \ . \"\\n\";\necho digits(23) . \"\\n\";\necho digits(24) . \"\\n\";\necho digits(25)\
    \ . \"\\n\";\necho digits(26) . \"\\n\";\necho digits(27) . \"\\n\";\necho digits(28)\
    \ . \"\\n\";\necho digits(29) . \"\\n\";\necho digits(30) . \"\\n\";\necho digits(31)\
    \ . \"\\n\";\necho digits(32) . \"\\n\";\necho digits(33) . \"\\n\";\necho digits(34)\
    \ . \"\\n\";\necho digits(35) . \"\\n\";\necho digits(36) . \"\\n\";\necho digits(37)\
    \ . \"\\n\";\necho digits(38) . \"\\n\";\necho digits(39) . \"\\n\";\necho digits(40)\
    \ . \"\\n\";\necho digits(41) . \"\\n\";\necho digits(42) . \"\\n\";\necho digits(43)\
    \ . \"\\n\";\necho digits(44) . \"\\n\";\necho digits(45) . \"\\n\";\necho digits(46)\
    \ . \"\\n\";\necho digits(47) . \"\\n\";\necho digits(48) . \"\\n\";\necho digits(49)\
    \ . \"\\n\";\necho digits(50) . \"\\n\";\necho digits(51) . \"\\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp1_j_ja2g.php on line 69

    '
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odds = array_filter($digits, function($digit) {\n        return $digit %\
    \ 2 !== 0;\n    });\n    return array_product($odds);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp93tc1p62.php:28\n\
    Stack trace:\n#0 /tmp/tmp93tc1p62.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp93tc1p62.php\
    \ on line 28\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $sum = 1;\n    while ($n >\
    \ 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n          \
    \  $sum *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n    return\
    \ $sum;\n}\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(12345)\
    \ . \"\\n\";\necho digits(1234) . \"\\n\";\necho digits(123456789) . \"\\n\";\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n3\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxl6ssnm1.php:36\n\
    Stack trace:\n#0 /tmp/tmpxl6ssnm1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxl6ssnm1.php\
    \ on line 36\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 !== 0;\n    });\n    return array_product($odd_digits);\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6jny50ej.php:27\n\
    Stack trace:\n#0 /tmp/tmp6jny50ej.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp6jny50ej.php\
    \ on line 27\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odds = array_filter($digits, function($digit) {\n        return $digit %\
    \ 2 !== 0;\n    });\n    if (empty($odds)) {\n        return 0;\n    }\n    return\
    \ array_product($odds);\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $num) {\n        if ($num % 2 == 1) {\n           \
    \ $product *= $num;\n        }\n    }\n    return $product;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_y18egz.php:31\n\
    Stack trace:\n#0 /tmp/tmpa_y18egz.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpa_y18egz.php\
    \ on line 31\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odds = array_filter($digits, function($digit) {\n        return $digit %\
    \ 2 !== 0;\n    });\n    return array_product($odds);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp93tc1p62.php:28\n\
    Stack trace:\n#0 /tmp/tmp93tc1p62.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp93tc1p62.php\
    \ on line 28\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $result = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $result *= $n[$i];\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(12345) . \"\\n\"\
    ;\necho digits(123456789) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkg_evs16.php:34\n\
    Stack trace:\n#0 /tmp/tmpkg_evs16.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkg_evs16.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $number) {\n        if ($number % 2 == 1) {\n     \
    \       $product *= $number;\n        }\n    }\n    return $product;\n}\necho\
    \ digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(123) . PHP_EOL;\n\
    echo digits(1234) . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(123456)\
    \ . PHP_EOL;\necho digits(1234567) . PHP_EOL;\necho digits(12345678) . PHP_EOL;\n\
    echo digits(123456789) . PHP_EOL;\necho digits(1234567890) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n3\n3\n15\n15\n105\n105\n945\n945\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpw61o608e.php:40\nStack trace:\n#0 /tmp/tmpw61o608e.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpw61o608e.php on line 40\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $odd_digits = [];\n    $digits\
    \ = str_split($n);\n    foreach ($digits as $digit) {\n        if ($digit % 2\
    \ == 1) {\n            $odd_digits[] = $digit;\n        }\n    }\n    if (count($odd_digits)\
    \ == 0) {\n        return 0;\n    }\n    return array_product($odd_digits);\n\
    }\n\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odds = array_filter($digits, function($digit) {\n        return $digit %\
    \ 2 !== 0;\n    });\n    if (empty($odds)) {\n        return 0;\n    }\n    return\
    \ array_product($odds);\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n\t$n = str_split($n);\n\t$odd\
    \ = [];\n\tforeach ($n as $num) {\n\t\tif ($num % 2 !== 0) {\n\t\t\t$odd[] = $num;\n\
    \t\t}\n\t}\n\tif (empty($odd)) {\n\t\treturn 0;\n\t}\n\treturn array_product($odd);\n\
    }\necho digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(1234) . PHP_EOL;\n\
    echo digits(12345) . PHP_EOL;\necho digits(123456789) . PHP_EOL;\necho digitsn\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpu7ekcro1.php on line 28

    '
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 == 1) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiiwsj93.php:30\n\
    Stack trace:\n#0 /tmp/tmpuiiwsj93.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiiwsj93.php\
    \ on line 30\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 == 1;\n    });\n    if (count($odd_digits) == 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $total\
    \ = 1;\n    foreach ($n as $num) {\n        if ($num % 2 == 1) {\n           \
    \ $total *= $num;\n        }\n    }\n    return $total;\n}\necho digits(1);\n\
    echo \"\\n\";\necho digits(4);\necho \"\\n\";\necho digits(123);\necho \"\\n\"\
    ;\necho digits(1234);\necho \"\\n\";\necho digits(12345);\necho \"\\n\";\necho\
    \ digits(123456);\necho \"\\n\";\necho digits(1234567);\necho \"\\n\";\necho digits(12345678);\n\
    echo \"\\n\";\necho digits(123456789);\necho \"\\n\";\necho digits(1234567890);\n\
    echo \"\\n\";\necho digits(12345678901);\necho \"\\n\";\necho digits(123456789012);\n\
    echo \"\\n\";\necho digits(1234567890123);\necho \"\\n\";\necho digits(12345678901234);\n\
    echo \"\\n\";\necho digits(123456789012345);\necho \"\\n\";\necho digits(1234567890123456);\n\
    echo \"\\n\";\necho digits(12345678901234567);\necho \"\\n\";\necho digits(123456789012345678);\n\
    echo \"\\n\";\necho digits(1234567890123456789);\necho \"\\n\";\necho digits(12345678901234567890);\n\
    echo \"\\n\";\necho digits(123456789012345678901);\necho \"\\n\";\necho digits(1234567890123456789012);\n\
    echo \"\\n\";\necho digits(12345678901234567890123);\necho \"\\n\";\necho digits(123456789012345678901234);\n\
    echo \"\\n\";\necho digits(1234567890123456789012345);\necho \"\\n\";\necho digits(12345678901234567890123456);\n\
    echo \"\\n\";\necho digits(123456789012345678901234567);\necho \"\\n\";\necho\
    \ digits(1234567\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4an8ukq2.php on line 74

    '
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n\t$sum = 1;\n\t$n = (string)$n;\n\
    \tfor ($i = 0; $i < strlen($n); $i++) {\n\t\tif ($n[$i] % 2 == 1) {\n\t\t\t$sum\
    \ *= $n[$i];\n\t\t}\n\t}\n\treturn $sum;\n}\n\necho digits(1) . \"\\n\";\necho\
    \ digits(4) . \"\\n\";\necho digits(123) . \"\\n\";\necho digits(12345) . \"\\\
    n\";\necho digits(123456789) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n3\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnt5756b4.php:36\n\
    Stack trace:\n#0 /tmp/tmpnt5756b4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnt5756b4.php\
    \ on line 36\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $number) {\n        if ($number % 2 != 0) {\n            $product\
    \ *= $number;\n        }\n    }\n    if ($product == 1) {\n        return 0;\n\
    \    }\n    return $product;\n}\necho digits(1) . \"\\n\";\necho digits(4) . \"\
    \\n\";\necho digits(12345) . \"\\n\";\necho digits(123456789) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwso1ig12.php:33\n\
    Stack trace:\n#0 /tmp/tmpwso1ig12.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpwso1ig12.php\
    \ on line 33\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 == 1;\n    });\n    if (empty($odd_digits)) {\n        return 0;\n    }\n\
    \    return array_product($odd_digits);\n}\n\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $product *= $n[$i];\n        }\n    }\n    return $product;\n}\necho\
    \ digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(12345) . \"\\n\"\
    ;\necho digits(1234) . \"\\n\";\necho digits(123456789) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n3\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdvw37css.php:35\n\
    Stack trace:\n#0 /tmp/tmpdvw37css.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpdvw37css.php\
    \ on line 35\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 == 1) {\n       \
    \     $product *= $digit;\n        }\n    }\n    return $product;\n}\necho digits(1)\
    \ . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(12345) . \"\\n\";\necho digits(1234)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsq_ftpla.php:34\n\
    Stack trace:\n#0 /tmp/tmpsq_ftpla.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpsq_ftpla.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $odds = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 == 1) {\n        \
    \    $odds *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n    return\
    \ $odds;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbc_687jc.php:32\n\
    Stack trace:\n#0 /tmp/tmpbc_687jc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbc_687jc.php\
    \ on line 32\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\necho digits(1) . \"\\\
    n\";\necho digits(4) . \"\\n\";\necho digits(123456789) . \"\\n\";\necho digits(1234567890123456789)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n945\n893025\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jxjzq2o.php:34\n\
    Stack trace:\n#0 /tmp/tmp8jxjzq2o.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8jxjzq2o.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $number) {\n        if ($number % 2 != 0) {\n            $product\
    \ *= $number;\n        }\n    }\n    if ($product == 1) {\n        return 0;\n\
    \    }\n    return $product;\n}\necho digits(1) . \"\\n\";\necho digits(4) . \"\
    \\n\";\necho digits(123456789) . \"\\n\";\necho digits(12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpgv7bx1ks.php on line 26

    '
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n\t$result = 1;\n\t$n = (string)$n;\n\
    \tfor ($i = 0; $i < strlen($n); $i++) {\n\t\tif ($n[$i] % 2 != 0) {\n\t\t\t$result\
    \ *= $n[$i];\n\t\t}\n\t}\n\treturn $result;\n}\necho digits(1) . \"\\n\";\necho\
    \ digits(4) . \"\\n\";\necho digits(12345) . \"\\n\";\necho digits(123456789)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1rl4iv_6.php:34\n\
    Stack trace:\n#0 /tmp/tmp1rl4iv_6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1rl4iv_6.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(123456789)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf97hq0b9.php:34\n\
    Stack trace:\n#0 /tmp/tmpf97hq0b9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpf97hq0b9.php\
    \ on line 34\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 != 0;\n    });\n    if (count($odd_digits) == 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 == 1) {\n       \
    \     $product *= $digit;\n        }\n    }\n    return $product;\n}\necho digits(1)\
    \ . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(123456789)\
    \ . PHP_EOL;\necho digits(1234567890123456789) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n893025\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpwffg2nzk.php:35\nStack trace:\n#0 /tmp/tmpwffg2nzk.php(38): test()\n\
    #1 {main}\n  thrown in /tmp/tmpwffg2nzk.php on line 35\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $result = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $result\
    \ *= $digit;\n        }\n    }\n    return $result;\n}\necho digits(4);\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzx2453n5.php:31\n\
    Stack trace:\n#0 /tmp/tmpzx2453n5.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpzx2453n5.php\
    \ on line 31\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 == 1;\n    });\n    if (empty($odd_digits)) {\n        return 0;\n    }\n\
    \    return array_product($odd_digits);\n}\n\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n       \
    \     $product *= $digit;\n        }\n    }\n    return $product;\n}\necho digits(4);\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9eijjbg3.php:31\n\
    Stack trace:\n#0 /tmp/tmp9eijjbg3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9eijjbg3.php\
    \ on line 31\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n           \
    \ $product *= $num;\n        }\n    }\n    return $product;\n}\necho digits(1)\
    \ . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(1234) . PHP_EOL;\necho digits(123456789)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n3\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91ueibuy.php:34\n\
    Stack trace:\n#0 /tmp/tmp91ueibuy.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp91ueibuy.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 !== 0;\n    });\n    if (empty($odd_digits)) {\n        return 0;\n    }\n\
    \    return array_product($odd_digits);\n}\n\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $product = 1;\n    foreach ($digits as $digit) {\n        if ($digit % 2\
    \ != 0) {\n            $product *= $digit;\n        }\n    }\n    return $product;\n\
    }\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(12345) .\
    \ \"\\n\";\necho digits(123456789) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz44442nu.php:34\n\
    Stack trace:\n#0 /tmp/tmpz44442nu.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz44442nu.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 !== 0;\n    });\n    if (count($odd_digits) === 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $product *= $digit;\n        }\n        $n = ($n - $digit) / 10;\n    }\n\
    \    return $product;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpph5fb8b2.php:31\n\
    Stack trace:\n#0 /tmp/tmpph5fb8b2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpph5fb8b2.php\
    \ on line 31\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = (string)$n;\n    $odd_digits\
    \ = array_filter(str_split($n), function($digit) {\n        return $digit % 2\
    \ != 0;\n    });\n    if (count($odd_digits) == 0) {\n        return 0;\n    }\n\
    \    return array_product($odd_digits);\n}\n\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $odd_digits = array();\n \
    \   $digits = str_split($n);\n    foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 == 1) {\n            array_push($odd_digits, $digit);\n        }\n    }\n\
    \    if (count($odd_digits) == 0) {\n        return 0;\n    }\n    return array_product($odd_digits);\n\
    }\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    0

    '
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 !== 0;\n    });\n    if (count($odd_digits) === 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $result = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 == 1) {\n        \
    \    $result *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5pajfqlq.php:32\n\
    Stack trace:\n#0 /tmp/tmp5pajfqlq.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5pajfqlq.php\
    \ on line 32\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $total\
    \ = 1;\n    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n           \
    \ $total *= $num;\n        }\n    }\n    return $total;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(123456789)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq3tnkz64.php:34\n\
    Stack trace:\n#0 /tmp/tmpq3tnkz64.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpq3tnkz64.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $odds = array();\n    $n =\
    \ str_split($n);\n    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n \
    \           $odds[] = $num;\n        }\n    }\n    if (count($odds) == 0) {\n\
    \        return 0;\n    }\n    return array_product($odds);\n}\necho digits(1)\
    \ . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(123456789) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    0

    945

    '
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $result = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $result *= $n[$i];\n        }\n    }\n    return $result;\n}\necho\
    \ digits(4);\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1060pmy.php:31\n\
    Stack trace:\n#0 /tmp/tmpl1060pmy.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1060pmy.php\
    \ on line 31\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 !== 0;\n    });\n    if (count($odd_digits) === 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\n\necho digits(1) . \"\
    \\n\";\necho digits(4) . \"\\n\";\necho digits(123) . \"\\n\";\necho digits(12345)\
    \ . \"\\n\";\necho digits(123456789) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n3\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjf9kyzyd.php:36\n\
    Stack trace:\n#0 /tmp/tmpjf9kyzyd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjf9kyzyd.php\
    \ on line 36\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n           \
    \ $product *= $num;\n        }\n    }\n    return $product;\n}\necho digits(1)\
    \ . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(123456789) . PHP_EOL;\necho\
    \ digits(1234567890123456789) . PHP_EOL;\nfunction candidate(...$args) {\n   \
    \ return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n945\n893025\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqsb8xo8s.php:34\n\
    Stack trace:\n#0 /tmp/tmpqsb8xo8s.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqsb8xo8s.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $odd\
    \ = [];\n    foreach ($n as $digit) {\n        if ($digit % 2 !== 0) {\n     \
    \       $odd[] = $digit;\n        }\n    }\n    if (count($odd) === 0) {\n   \
    \     return 0;\n    }\n    return array_product($odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = (string)$n;\n    $n =\
    \ str_split($n);\n    $result = 1;\n    foreach ($n as $key => $value) {\n   \
    \     if ($value % 2 != 0) {\n            $result *= $value;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_c_htc68.php:32\n\
    Stack trace:\n#0 /tmp/tmp_c_htc68.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_c_htc68.php\
    \ on line 32\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n\t$n = str_split($n);\n\t$result\
    \ = 1;\n\tforeach ($n as $num) {\n\t\tif ($num % 2 != 0) {\n\t\t\t$result *= $num;\n\
    \t\t}\n\t}\n\treturn $result;\n}\necho digits(1);\necho \"\\n\";\necho digits(4);\n\
    echo \"\\n\";\necho digits(123456789);\necho \"\\n\";\necho digitsn\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbn0vr6o1.php on line 26

    '
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 !== 0;\n    });\n    if (count($odd_digits) === 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n           \
    \ $product *= $num;\n        }\n    }\n    if ($product == 1) {\n        return\
    \ 0;\n    }\n    return $product;\n}\n\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp60ihc1t2.php:30\n\
    Stack trace:\n#0 /tmp/tmp60ihc1t2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp60ihc1t2.php\
    \ on line 30\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 == 1) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(123456789) . PHP_EOL;\necho digits(1234567890)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n945\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp65wxozas.php:34\n\
    Stack trace:\n#0 /tmp/tmp65wxozas.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp65wxozas.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 == 1;\n    });\n    if (count($odd_digits) == 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 == 1) {\n        \
    \    $product *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n   \
    \ return $product;\n}\n\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\n\
    echo digits(123456789) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9_twg_y.php:35\n\
    Stack trace:\n#0 /tmp/tmpc9_twg_y.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpc9_twg_y.php\
    \ on line 35\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n  $digits = str_split($n);\n \
    \ $odd_digits = array_filter($digits, function($digit) {\n    return $digit %\
    \ 2 !== 0;\n  });\n  if (count($odd_digits) === 0) {\n    return 0;\n  }\n  return\
    \ array_product($odd_digits);\n}\n\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = [];\n    foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 != 0) {\n            $odd_digits[] = $digit;\n        }\n    }\n    if (count($odd_digits)\
    \ == 0) {\n        return 0;\n    }\n    $product = 1;\n    foreach ($odd_digits\
    \ as $odd_digit) {\n        $product *= $odd_digit;\n    }\n    return $product;\n\
    }\n\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $sum\
    \ = 1;\n    foreach ($n as $num) {\n        if ($num % 2 !== 0) {\n          \
    \  $sum *= $num;\n        }\n    }\n    return $sum;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(123) . PHP_EOL;\necho digits(12345) . PHP_EOL;\n\
    echo digits(123456789) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n3\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpod120v0t.php:35\n\
    Stack trace:\n#0 /tmp/tmpod120v0t.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpod120v0t.php\
    \ on line 35\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $sum = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 !== 0) {\n            $sum\
    \ *= $digit;\n        }\n    }\n    return $sum;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(12345) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpchasrqd4.php:33\n\
    Stack trace:\n#0 /tmp/tmpchasrqd4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpchasrqd4.php\
    \ on line 33\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $sum = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n            $sum *=\
    \ $num;\n        }\n    }\n    return $sum;\n}\necho digits(1) . PHP_EOL;\necho\
    \ digits(4) . PHP_EOL;\necho digits(5) . PHP_EOL;\necho digits(12) . PHP_EOL;\n\
    echo digits(123) . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(123456789)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n5\n1\n3\n15\n945\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpgzislkj1.php:37\nStack trace:\n#0 /tmp/tmpgzislkj1.php(40): test()\n\
    #1 {main}\n  thrown in /tmp/tmpgzislkj1.php on line 37\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $sum = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n            $sum *=\
    \ $num;\n        }\n    }\n    return $sum;\n}\n\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(1234) .\
    \ PHP_EOL;\necho digits(123) . PHP_EOL;\necho digits(12) . PHP_EOL;\necho digits(1)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n3\n3\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp9z26ybml.php:38\nStack trace:\n#0 /tmp/tmp9z26ybml.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9z26ybml.php on line 38\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $product = 1;\n    foreach ($digits as $digit) {\n        if ($digit % 2\
    \ != 0) {\n            $product *= $digit;\n        }\n    }\n    return $product;\n\
    }\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(12345) .\
    \ \"\\n\";\necho digits(123456789) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz44442nu.php:34\n\
    Stack trace:\n#0 /tmp/tmpz44442nu.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz44442nu.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n\t$result = 1;\n\t$n = (string)$n;\n\
    \tfor ($i = 0; $i < strlen($n); $i++) {\n\t\tif ($n[$i] % 2 == 1) {\n\t\t\t$result\
    \ *= $n[$i];\n\t\t}\n\t}\n\treturn $result;\n}\necho digits(1) . \"\\n\";\necho\
    \ digits(4) . \"\\n\";\necho digits(123456789) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30gwe195.php:33\n\
    Stack trace:\n#0 /tmp/tmp30gwe195.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp30gwe195.php\
    \ on line 33\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $num) {\n        if ($num % 2 !== 0) {\n            $product\
    \ *= $num;\n        }\n    }\n    return $product;\n}\n\necho digits(1) . \"\\\
    n\";\necho digits(4) . \"\\n\";\necho digits(123456) . \"\\n\";\necho digits(123456789)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwtrf2rhj.php:35\n\
    Stack trace:\n#0 /tmp/tmpwtrf2rhj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwtrf2rhj.php\
    \ on line 35\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $str = strval($n);\n    $arr\
    \ = str_split($str);\n    $product = 1;\n    foreach ($arr as $num) {\n      \
    \  if ($num % 2 != 0) {\n            $product *= $num;\n        }\n    }\n   \
    \ return $product;\n}\n\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\n\
    echo digits(12345) . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4b5adiix.php:35\n\
    Stack trace:\n#0 /tmp/tmp4b5adiix.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4b5adiix.php\
    \ on line 35\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $sum\
    \ = 1;\n    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n           \
    \ $sum *= $num;\n        }\n    }\n    return $sum;\n}\necho digits(4);\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsghxnzqn.php:31\n\
    Stack trace:\n#0 /tmp/tmpsghxnzqn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpsghxnzqn.php\
    \ on line 31\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = (string)$n;\n    $result\
    \ = 1;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0)\
    \ {\n            $result *= $n[$i];\n        }\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp39rieg52.php:31\n\
    Stack trace:\n#0 /tmp/tmp39rieg52.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp39rieg52.php\
    \ on line 31\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $odd_digits = array();\n \
    \   $digits = str_split($n);\n    foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 != 0) {\n            array_push($odd_digits, $digit);\n        }\n    }\n\
    \    if (count($odd_digits) == 0) {\n        return 0;\n    }\n    return array_product($odd_digits);\n\
    }\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $odds = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $odds\
    \ *= $digit;\n        }\n    }\n    return $odds;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(1234) .\
    \ PHP_EOL;\necho digits(123456789) . PHP_EOL;\necho digits(12346789) . PHP_EOL;\n\
    echo digits(1234567890123456789) . PHP_EOL;\necho digits(123467890123456789) .\
    \ PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n3\n945\n189\n893025\n178605\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpm6dgijet.php:38\nStack trace:\n#0 /tmp/tmpm6dgijet.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpm6dgijet.php on line 38\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 == 1) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(1234) . PHP_EOL;\necho digits(123456789)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n3\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisc9m9pt.php:34\n\
    Stack trace:\n#0 /tmp/tmpisc9m9pt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpisc9m9pt.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 != 0;\n    });\n    if (count($odd_digits) == 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\necho digits(1) . \"\\\
    n\";\necho digits(4) . \"\\n\";\necho digits(12345) . \"\\n\";\necho digits(123456789)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxp_r863t.php:34\n\
    Stack trace:\n#0 /tmp/tmpxp_r863t.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxp_r863t.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n\t$sum = 1;\n\t$n = (string)$n;\n\
    \tfor ($i = 0; $i < strlen($n); $i++) {\n\t\tif ($n[$i] % 2 != 0) {\n\t\t\t$sum\
    \ *= $n[$i];\n\t\t}\n\t}\n\treturn $sum;\n}\necho digits(1) . \"\\n\";\necho digits(4)\
    \ . \"\\n\";\necho digits(12345) . \"\\n\";\necho digits(1234) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv637yty2.php:34\n\
    Stack trace:\n#0 /tmp/tmpv637yty2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpv637yty2.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $result = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 !== 0) {\n            $result\
    \ *= $digit;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2grya3i8.php:31\n\
    Stack trace:\n#0 /tmp/tmp2grya3i8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2grya3i8.php\
    \ on line 31\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $product *= $n[$i];\n        }\n    }\n    return $product;\n}\n\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppoowdp4p.php:31\n\
    Stack trace:\n#0 /tmp/tmppoowdp4p.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppoowdp4p.php\
    \ on line 31\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 != 0;\n    });\n    if (count($odd_digits) == 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\necho digits(1) . \"\\n\"\
    ;\necho digits(4) . \"\\n\";\necho digits(12345) . \"\\n\";\necho digits(1234)\
    \ . \"\\n\";\necho digits(123456789) . \"\\n\";\necho digits(1234) . \"\\n\";\n\
    echo digits(123456789) . \"\\n\";\necho digits(1234) . \"\\n\";\necho digits(123456789)\
    \ . \"\\n\";\necho digits(1234) . \"\\n\";\necho digits(123456789) . \"\\n\";\n\
    echo digits(1234) . \"\\n\";\necho digits(123456789) . \"\\n\";\necho digits(1234)\
    \ . \"\\n\";\necho digits(123456789) . \"\\n\";\necho digits(1234) . \"\\n\";\n\
    echo digits(123456789) . \"\\n\";\necho digits(1234) . \"\\n\";\necho digits(123456789)\
    \ . \"\\n\";\necho digits(1234) . \"\\n\";\necho digits(123456789) . \"\\n\";\n\
    echo digits(1234) . \"\\n\";\necho digits(123456789) . \"\\n\";\necho digits(1234)\
    \ . \"\\n\";\necho digits(123456789) . \"\\n\";\necho digits(1234) . \"\\n\";\n\
    echo digits(123456789) . \"\\n\";\necho digits(1234) . \"\\n\";\necho digits(123456789)\
    \ . \"\\n\";\necho digits(1234) . \"\\n\";\necho digits(123456789) . \"\\n\";\n\
    echo digits(1234) . \"\\n\";\necho digits(123456789) . \"\\n\";\necho digits(1234)\
    \ . \"\\n\";\necho digits(123456789) . \"\\n\";\necho digits(1234) . \"\\n\";\n\
    echo digits\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp0xgbnu44.php on line 57

    '
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 == 1;\n    });\n    if (empty($odd_digits)) {\n        return 0;\n    }\n\
    \    return array_product($odd_digits);\n}\n\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odds = [];\n    foreach ($digits as $digit) {\n        if ($digit % 2 ==\
    \ 1) {\n            $odds[] = $digit;\n        }\n    }\n    if (count($odds)\
    \ == 0) {\n        return 0;\n    }\n    return array_product($odds);\n}\n\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $digits\
    \ = str_split($n);\n    foreach ($digits as $digit) {\n        if ($digit % 2\
    \ == 1) {\n            $product *= $digit;\n        }\n    }\n    return $product;\n\
    }\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(12345) .\
    \ \"\\n\";\necho digits(1234567890) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp28fjfpdv.php:34\n\
    Stack trace:\n#0 /tmp/tmp28fjfpdv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp28fjfpdv.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 != 0;\n    });\n    if (count($odd_digits) == 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 !== 0;\n    });\n    if (count($odd_digits) === 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $result = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $result *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n    return\
    \ $result;\n}\n\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(12345)\
    \ . \"\\n\";\necho digits(123456789) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuhf74pwv.php:36\n\
    Stack trace:\n#0 /tmp/tmpuhf74pwv.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuhf74pwv.php\
    \ on line 36\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n            $product\
    \ *= $value;\n        }\n    }\n    return $product;\n}\necho digits(1) . \"\\\
    n\";\necho digits(4) . \"\\n\";\necho digits(12345) . \"\\n\";\necho digits(123456789)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7mu_0eez.php:34\n\
    Stack trace:\n#0 /tmp/tmp7mu_0eez.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7mu_0eez.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $odds\
    \ = [];\n    foreach ($n as $num) {\n        if ($num % 2 !== 0) {\n         \
    \   $odds[] = $num;\n        }\n    }\n    if (empty($odds)) {\n        return\
    \ 0;\n    }\n    return array_product($odds);\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(123) . PHP_EOL;\necho digits(1234) . PHP_EOL;\n\
    echo digits(12345) . PHP_EOL;\necho digits(123456) . PHP_EOL;\necho digits(1234567)\
    \ . PHP_EOL;\necho digits(12345678) . PHP_EOL;\necho digits(123456789) . PHP_EOL;\n\
    echo digits(1234567890) . PHP_EOL;\necho digits(12345678901) . PHP_EOL;\necho\
    \ digits(123456789012) . PHP_EOL;\necho digits(1234567890123) . PHP_EOL;\necho\
    \ digits(12345678901234) . PHP_EOL;\necho digits(123456789012345) . PHP_EOL;\n\
    echo digits(1234567890123456) . PHP_EOL;\necho digits(12345678901234567) . PHP_EOL;\n\
    echo digits(123456789012345678) . PHP_EOL;\necho digits(1234567890123456789) .\
    \ PHP_EOL;\necho digits(12345678901234567890) . PHP_EOL;\necho digits(123456789012345678901)\
    \ . PHP_EOL;\necho digits(1234567890123456789012) . PHP_EOL;\necho digits(12345678901234567890123)\
    \ . PHP_EOL;\necho digits(123456789012345678901234) . PHP_EOL;\necho digits(1234567890123456789012345)\
    \ . PHP_EOL;\necho digits\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphn0rj_hz.php on line 48

    '
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $result = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $result *= $n[$i];\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(123456789) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbj7acend.php:33\n\
    Stack trace:\n#0 /tmp/tmpbj7acend.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbj7acend.php\
    \ on line 33\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $odds\
    \ = array_filter($n, function($num) {\n        return $num % 2 != 0;\n    });\n\
    \    if (count($odds) == 0) {\n        return 0;\n    }\n    $odds = array_map(function($num)\
    \ {\n        return (int)$num;\n    }, $odds);\n    return array_product($odds);\n\
    }\n\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odds = array_filter($digits, function($digit) {\n        return $digit %\
    \ 2 !== 0;\n    });\n    if (count($odds) === 0) {\n        return 0;\n    }\n\
    \    return array_product($odds);\n}\n\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $odd_digits = array();\n \
    \   $n_string = strval($n);\n    $n_array = str_split($n_string);\n    foreach\
    \ ($n_array as $num) {\n        if ($num % 2 != 0) {\n            array_push($odd_digits,\
    \ $num);\n        }\n    }\n    if (count($odd_digits) == 0) {\n        return\
    \ 0;\n    } else {\n        $product = 1;\n        foreach ($odd_digits as $num)\
    \ {\n            $product *= $num;\n        }\n        return $product;\n    }\n\
    }\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 !== 0;\n    });\n    if (count($odd_digits) === 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $result = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 == 1) {\n        \
    \    $result *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n    return\
    \ $result;\n}\n\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(12345)\
    \ . \"\\n\";\necho digits(123456789) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv7f50xmo.php:36\n\
    Stack trace:\n#0 /tmp/tmpv7f50xmo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpv7f50xmo.php\
    \ on line 36\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n       \
    \     $product *= $value;\n        }\n    }\n    return $product;\n}\n\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps8c4_br3.php:31\n\
    Stack trace:\n#0 /tmp/tmps8c4_br3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmps8c4_br3.php\
    \ on line 31\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 == 1;\n    });\n    if (count($odd_digits) == 0) {\n        return 0;\n\
    \    }\n    $product = array_reduce($odd_digits, function($product, $digit) {\n\
    \        return $product * $digit;\n    });\n    return $product;\n}\n\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp13aetoct.php:28\n\
    Stack trace:\n#0 /tmp/tmp13aetoct.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp13aetoct.php\
    \ on line 28\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $number) {\n        if ($number % 2 != 0) {\n            $product\
    \ *= $number;\n        }\n    }\n    return $product;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzmjfalda.php:30\n\
    Stack trace:\n#0 /tmp/tmpzmjfalda.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzmjfalda.php\
    \ on line 30\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $result = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n            $result\
    \ *= $num;\n        }\n    }\n    return $result;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(123) . PHP_EOL;\necho digits(12345) . PHP_EOL;\n\
    echo digits(123456789) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n3\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0wcdlnaa.php:35\n\
    Stack trace:\n#0 /tmp/tmp0wcdlnaa.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp0wcdlnaa.php\
    \ on line 35\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $product = 1;\n    foreach ($digits as $digit) {\n        if ($digit % 2\
    \ != 0) {\n            $product *= $digit;\n        }\n    }\n    return $product;\n\
    }\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(123) . \"\
    \\n\";\necho digits(12345) . \"\\n\";\necho digits(123456789) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n3\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7duwsvpq.php:35\n\
    Stack trace:\n#0 /tmp/tmp7duwsvpq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7duwsvpq.php\
    \ on line 35\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 != 0;\n    });\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuvsemnll.php:28\n\
    Stack trace:\n#0 /tmp/tmpuvsemnll.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpuvsemnll.php\
    \ on line 28\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odds = array_filter($digits, function($digit) {\n        return $digit %\
    \ 2 !== 0;\n    });\n    return array_product($odds);\n}\n\necho digits(1);\n\
    echo \"\\n\";\necho digits(4);\necho \"\\n\";\necho digits(123456789);\necho \"\
    \\n\";\necho digitsn\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpr95wgbsl.php on line 24

    '
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $odd\
    \ = 1;\n    foreach ($n as $num) {\n        if ($num % 2 == 1) {\n           \
    \ $odd *= $num;\n        }\n    }\n    return $odd;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(123456789)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxtsrs1zw.php:34\n\
    Stack trace:\n#0 /tmp/tmpxtsrs1zw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxtsrs1zw.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n       \
    \     $product *= $digit;\n        }\n    }\n    return $product;\n}\necho digits(1)\
    \ . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(123456789)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_fg7j1mr.php:34\n\
    Stack trace:\n#0 /tmp/tmp_fg7j1mr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_fg7j1mr.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n\t$n = str_split($n);\n\t$odds\
    \ = [];\n\tforeach ($n as $number) {\n\t\tif ($number % 2 === 1) {\n\t\t\t$odds[]\
    \ = $number;\n\t\t}\n\t}\n\tif (empty($odds)) {\n\t\treturn 0;\n\t}\n\treturn\
    \ array_product($odds);\n}\necho digits(4);\necho \"\\n\";\necho digits(1);\n\
    echo \"\\n\";\necho digits(123456789);\necho \"\\n\";\necho digits(1234);\necho\
    \ \"\\n\";\necho digits(12346789);\necho \"\\n\";\necho digits(123467890123456789);\n\
    echo \"\\n\";\necho digits(1234678901234567890123456789);\necho \"\\n\";\necho\
    \ digits(12346789012345678901234567890123456789);\necho \"\\n\";\necho digits(123467890123456789012345678901234567890123456789);\n\
    echo \"\\n\";\necho digits(1234678901234567890123456789012345678901234567890123456789);\n\
    echo \"\\n\";\necho digits(12346789012345678901234567890123456789012345678901234567890123456789);\n\
    echo \"\\n\";\necho digits(123467890123456789012345678901234567890123456789012345678901234567890123456789);\n\
    echo \"\\n\";\necho digits(1234678901234567890123456789012345678901234567890123456789012345678901234567890123456789);\n\
    echo \"\\n\";\necho digits(12346789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789);\n\
    echo \"\\n\";\necho digits(12346789\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpmx6grsyc.php on line 51

    '
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $number) {\n        if ($number % 2 != 0) {\n            $product\
    \ *= $number;\n        }\n    }\n    return $product;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(123) . PHP_EOL;\necho digits(12345) . PHP_EOL;\n\
    echo digits(123456789) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n3\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_kfkozo.php:35\n\
    Stack trace:\n#0 /tmp/tmpu_kfkozo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpu_kfkozo.php\
    \ on line 35\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 == 1) {\n        \
    \    $product *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n   \
    \ return $product;\n}\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\n\
    echo digits(12345) . \"\\n\";\necho digits(1234567890) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnmas7az8.php:35\n\
    Stack trace:\n#0 /tmp/tmpnmas7az8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpnmas7az8.php\
    \ on line 35\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $number) {\n        if ($number % 2 != 0) {\n     \
    \       $product *= $number;\n        }\n    }\n    return $product;\n}\necho\
    \ digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(5) . PHP_EOL;\n\
    echo digits(12) . PHP_EOL;\necho digits(123) . PHP_EOL;\necho digits(12345) .\
    \ PHP_EOL;\necho digits(123456789) . PHP_EOL;\necho digits(12345678901234567890)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n5\n1\n3\n15\n945\n\nWarning: A non-numeric value encountered in /tmp/tmp5foe31j8.php\
    \ on line 13\n\nWarning: A non-numeric value encountered in /tmp/tmp5foe31j8.php\
    \ on line 13\n\nWarning: A non-numeric value encountered in /tmp/tmp5foe31j8.php\
    \ on line 13\n127575\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5foe31j8.php:38\n\
    Stack trace:\n#0 /tmp/tmp5foe31j8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp5foe31j8.php\
    \ on line 38\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $product = 1;\n    foreach ($digits as $digit) {\n        if ($digit % 2\
    \ != 0) {\n            $product *= $digit;\n        }\n    }\n    return $product;\n\
    }\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(12345) .\
    \ \"\\n\";\necho digits(123456789) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz44442nu.php:34\n\
    Stack trace:\n#0 /tmp/tmpz44442nu.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz44442nu.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 == 1) {\n \
    \           $product *= $n[$i];\n        }\n    }\n    return $product;\n}\n\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsb_uqy_w.php:31\n\
    Stack trace:\n#0 /tmp/tmpsb_uqy_w.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpsb_uqy_w.php\
    \ on line 31\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n\t$n = str_split($n);\n\t$odd\
    \ = 1;\n\tforeach ($n as $number) {\n\t\tif ($number % 2 == 1) {\n\t\t\t$odd *=\
    \ $number;\n\t\t}\n\t}\n\treturn $odd;\n}\necho digits(1);\necho \"\\n\";\necho\
    \ digits(4);\necho \"\\n\";\necho digits(123456789);\necho \"\\n\";\necho digits(1234567890123456789);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n945\n893025\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf6jmgr6m.php:38\n\
    Stack trace:\n#0 /tmp/tmpf6jmgr6m.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpf6jmgr6m.php\
    \ on line 38\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n\t$digits = str_split($n);\n\t\
    $odd_digits = array_filter($digits, function($d) {\n\t\treturn $d % 2 == 1;\n\t\
    });\n\tif (count($odd_digits) == 0) {\n\t\treturn 0;\n\t}\n\treturn array_product($odd_digits);\n\
    }\n\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\n\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(123) . PHP_EOL;\necho digits(12345) . PHP_EOL;\n\
    echo digits(123456789) . PHP_EOL;\necho digits(1234567890123456789) . PHP_EOL;\n\
    echo digitsn\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_kp8cbee.php on line 27

    '
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 == 1;\n    });\n    if (count($odd_digits) == 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $sum\
    \ = 1;\n    foreach ($n as $num) {\n        if ($num % 2 == 1) {\n           \
    \ $sum *= $num;\n        }\n    }\n    return $sum;\n}\necho digits(1);\necho\
    \ \"\\n\";\necho digits(4);\necho \"\\n\";\necho digits(12345);\necho \"\\n\"\
    ;\necho digits(123456789);\necho \"\\n\";\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqme7snxq.php:38\n\
    Stack trace:\n#0 /tmp/tmpqme7snxq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqme7snxq.php\
    \ on line 38\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 != 0;\n    });\n    if (empty($odd_digits)) {\n        return 0;\n    }\n\
    \    return array_product($odd_digits);\n}\n\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmcaesr77.php:31\n\
    Stack trace:\n#0 /tmp/tmpmcaesr77.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmcaesr77.php\
    \ on line 31\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $num) {\n        if ($num % 2 == 1) {\n           \
    \ $product *= $num;\n        }\n    }\n    return $product;\n}\necho digits(1)\
    \ . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(123456789)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_7zx045.php:34\n\
    Stack trace:\n#0 /tmp/tmp5_7zx045.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5_7zx045.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $odds = array();\n    $digits\
    \ = str_split($n);\n    foreach ($digits as $digit) {\n        if ($digit % 2\
    \ != 0) {\n            array_push($odds, $digit);\n        }\n    }\n    if (count($odds)\
    \ == 0) {\n        return 0;\n    }\n    return array_product($odds);\n}\n\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $sum = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $num) {\n        if ($num % 2 == 1) {\n            $sum *=\
    \ $num;\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoucj4s09.php:31\n\
    Stack trace:\n#0 /tmp/tmpoucj4s09.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpoucj4s09.php\
    \ on line 31\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 != 0;\n    });\n    if (count($odd_digits) == 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n            $product\
    \ *= $value;\n        }\n    }\n    return $product;\n}\necho digits(1) . \"\\\
    n\";\necho digits(4) . \"\\n\";\necho digits(123456789) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpewe554ha.php:33\n\
    Stack trace:\n#0 /tmp/tmpewe554ha.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpewe554ha.php\
    \ on line 33\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $odd_digits = array();\n \
    \   $digits = str_split($n);\n    foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 == 1) {\n            array_push($odd_digits, $digit);\n        }\n    }\n\
    \    if (count($odd_digits) == 0) {\n        return 0;\n    }\n    $product =\
    \ 1;\n    foreach ($odd_digits as $odd_digit) {\n        $product *= $odd_digit;\n\
    \    }\n    return $product;\n}\n\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $odds = 1;\n    $digits =\
    \ str_split($n);\n    foreach ($digits as $digit) {\n        if ($digit % 2 ==\
    \ 1) {\n            $odds *= $digit;\n        }\n    }\n    return $odds;\n}\n\
    echo digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(123456789) .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfp9d2avy.php:33\n\
    Stack trace:\n#0 /tmp/tmpfp9d2avy.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfp9d2avy.php\
    \ on line 33\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $odds\
    \ = array_filter($n, function($x) {\n        return $x % 2 == 1;\n    });\n  \
    \  if (count($odds) == 0) {\n        return 0;\n    }\n    return array_product($odds);\n\
    }\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(123456789)\
    \ . \"\\n\";\necho digits(1234567890123456789) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    0

    945

    893025

    '
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n       \
    \     $product *= $digit;\n        }\n    }\n    return $product;\n}\necho digits(1)\
    \ . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(123456789)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_fg7j1mr.php:34\n\
    Stack trace:\n#0 /tmp/tmp_fg7j1mr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_fg7j1mr.php\
    \ on line 34\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $odds\
    \ = [];\n    foreach ($n as $num) {\n        if ($num % 2 !== 0) {\n         \
    \   $odds[] = $num;\n        }\n    }\n    if (count($odds) === 0) {\n       \
    \ return 0;\n    }\n    return array_product($odds);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $odds = array();\n    $n =\
    \ str_split($n);\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n\
    \            $odds[] = $digit;\n        }\n    }\n    if (count($odds) == 0) {\n\
    \        return 0;\n    }\n    return array_product($odds);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 == 1;\n    });\n    if (count($odd_digits) == 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 != 0;\n    });\n    if (count($odd_digits) == 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 == 1) {\n        \
    \    $product *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n   \
    \ return $product;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1byk4gr5.php:32\n\
    Stack trace:\n#0 /tmp/tmp1byk4gr5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1byk4gr5.php\
    \ on line 32\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $result = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 == 1) {\n        \
    \    $result *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpywq6cxcf.php:31\n\
    Stack trace:\n#0 /tmp/tmpywq6cxcf.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpywq6cxcf.php\
    \ on line 31\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $odd\
    \ = array();\n    foreach ($n as $number) {\n        if ($number % 2 != 0) {\n\
    \            $odd[] = $number;\n        }\n    }\n    if (count($odd) == 0) {\n\
    \        return 0;\n    }\n    return array_product($odd);\n}\necho digits(1)\
    \ . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(1234) . PHP_EOL;\necho digits(123456789)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    0

    3

    945

    '
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $product\
    \ = 1;\n    foreach ($n as $number) {\n        if ($number % 2 != 0) {\n     \
    \       $product *= $number;\n        }\n    }\n    if ($product == 1) {\n   \
    \     return 0;\n    }\n    return $product;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprgwv04ga.php:30\n\
    Stack trace:\n#0 /tmp/tmprgwv04ga.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprgwv04ga.php\
    \ on line 30\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odds = array_filter($digits, function($digit) {\n        return $digit %\
    \ 2 !== 0;\n    });\n    if (count($odds) === 0) {\n        return 0;\n    }\n\
    \    return array_product($odds);\n}\n\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n  $product = 1;\n  $n = str_split($n);\n\
    \  foreach ($n as $digit) {\n    if ($digit % 2 != 0) {\n      $product *= $digit;\n\
    \    }\n  }\n  return $product;\n}\necho digits(1) . PHP_EOL;\necho digits(4)\
    \ . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(1234) . PHP_EOL;\necho\
    \ digits(123456789) . PHP_EOL;\necho digits(1234567890123456789) . PHP_EOL;\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n3\n945\n893025\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp5em3tuyq.php:36\nStack trace:\n#0 /tmp/tmp5em3tuyq.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmp5em3tuyq.php on line 36\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = (string)$n;\n    $odds\
    \ = array();\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] %\
    \ 2 != 0) {\n            $odds[] = $n[$i];\n        }\n    }\n    if (count($odds)\
    \ == 0) {\n        return 0;\n    }\n    return array_product($odds);\n}\necho\
    \ digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(12345) . \"\\n\"\
    ;\necho digits(123456789) . \"\\n\";\necho digitsn\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5nw5ignp.php on line 27

    '
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 == 1) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\n\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(123456789) . PHP_EOL;\necho digits(1234567890123456789)\
    \ . PHP_EOL;\necho digitsn\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmps7xdpnr1.php on line 25

    '
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $result = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $result *= $n[$i];\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho \"\\n\";\necho digits(4);\necho \"\\n\";\necho digits(123456789);\n\
    echo \"\\n\";\necho digits(123456788);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n945\n105\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjt2ujjf.php:38\n\
    Stack trace:\n#0 /tmp/tmpbjt2ujjf.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbjt2ujjf.php\
    \ on line 38\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = (string)$n;\n    $product\
    \ = 1;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0)\
    \ {\n            $product *= $n[$i];\n        }\n    }\n    return $product;\n\
    }\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(123) . \"\
    \\n\";\necho digits(12345) . \"\\n\";\necho digits(123456789) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n3\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1hjr2oqn.php:35\n\
    Stack trace:\n#0 /tmp/tmp1hjr2oqn.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1hjr2oqn.php\
    \ on line 35\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = (string)$n;\n    $odds\
    \ = array();\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] %\
    \ 2 != 0) {\n            $odds[] = $n[$i];\n        }\n    }\n    if (count($odds)\
    \ == 0) {\n        return 0;\n    }\n    return array_product($odds);\n}\n\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $n = str_split($n);\n    $result\
    \ = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n       \
    \     $result *= $value;\n        }\n    }\n    return $result;\n}\necho digits(1);\n\
    echo \"\\n\";\necho digits(4);\necho \"\\n\";\necho digits(123456789);\necho \"\
    \\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbk5rurg8.php:36\n\
    Stack trace:\n#0 /tmp/tmpbk5rurg8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbk5rurg8.php\
    \ on line 36\n"
  timestamp: 1659730789
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 == 1;\n    });\n    if (count($odd_digits) == 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odds = array_filter($digits, function($digit) {\n        return $digit %\
    \ 2 == 1;\n    });\n    if (count($odds) == 0) {\n        return 0;\n    }\n \
    \   return array_product($odds);\n}\n\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $product *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n   \
    \ return $product;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqilwcftc.php:32\n\
    Stack trace:\n#0 /tmp/tmpqilwcftc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqilwcftc.php\
    \ on line 32\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n\t$sum = 1;\n\t$n = str_split($n);\n\
    \tforeach ($n as $digit) {\n\t\tif ($digit % 2 != 0) {\n\t\t\t$sum *= $digit;\n\
    \t\t}\n\t}\n\treturn $sum;\n}\necho digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\n\
    echo digits(123) . PHP_EOL;\necho digits(12345) . PHP_EOL;\necho digits(123456789)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n3\n15\n945\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpucjhchap.php:35\n\
    Stack trace:\n#0 /tmp/tmpucjhchap.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpucjhchap.php\
    \ on line 35\n"
  timestamp: 1659730789
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n            $product\
    \ *= $num;\n        }\n    }\n    if ($product == 1) {\n        return 0;\n  \
    \  }\n    return $product;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3sksh9i3.php:30\n\
    Stack trace:\n#0 /tmp/tmp3sksh9i3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp3sksh9i3.php\
    \ on line 30\n"
  timestamp: 1659730789

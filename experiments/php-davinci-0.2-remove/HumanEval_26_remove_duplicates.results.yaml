language: php
name: HumanEval_26_remove_duplicates
results:
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n$input = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmptyqxmoik.php on line 15

    '
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n  $result = [];\n  foreach ($numbers as $number)\
    \ {\n    if (!in_array($number, $result)) {\n      $result[] = $number;\n    }\n\
    \  }\n  return $result;\n}\n\n$numbers = [1, 2, 3, 3, 4, 4, 5, 6, 7, 7, 8, 9,\
    \ 10, 10];\nprint_r(remove_duplicates($numbers));\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqjo4cwd9.php:23\n\
    Stack trace:\n#0 /tmp/tmpqjo4cwd9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpqjo4cwd9.php\
    \ on line 23\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 3, 4, 5, 5,\
    \ 6, 7, 8, 9, 9, 10];\nprint_r(remove_duplicates($numbers));\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7nd8xzyn.php:23\n\
    Stack trace:\n#0 /tmp/tmp7nd8xzyn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7nd8xzyn.php\
    \ on line 23\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n  $uniques = [];\n  foreach ($numbers as $number)\
    \ {\n    if (!in_array($number, $uniques)) {\n      $uniques[] = $number;\n  \
    \  }\n  }\n  return $uniques;\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9kg8s4r_.php:21\n\
    Stack trace:\n#0 /tmp/tmp9kg8s4r_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp9kg8s4r_.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\n$numbers = array(1,\
    \ 2, 3, 4, 5, 1, 2, 3, 4, 5);\nprint_r(remove_duplicates($numbers));\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphgv3bmi9.php:24\n\
    Stack trace:\n#0 /tmp/tmphgv3bmi9.php(27): test()\n#1 {main}\n  thrown in /tmp/tmphgv3bmi9.php\
    \ on line 24\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n  $numbers = array_unique($numbers);\n  return\
    \ $numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz2ayu7nm.php:16\n\
    Stack trace:\n#0 /tmp/tmpz2ayu7nm.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpz2ayu7nm.php\
    \ on line 16\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(remove_duplicates($numbers));\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe96z1xd4.php:23\n\
    Stack trace:\n#0 /tmp/tmpe96z1xd4.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpe96z1xd4.php\
    \ on line 23\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers = array_unique($numbers);\n    return\
    \ $numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh8o2hhj.php:16\n\
    Stack trace:\n#0 /tmp/tmpmh8o2hhj.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpmh8o2hhj.php\
    \ on line 16\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $counts = [];\n    foreach\
    \ ($numbers as $number) {\n        if (!isset($counts[$number])) {\n         \
    \   $counts[$number] = 0;\n        }\n        $counts[$number]++;\n    }\n   \
    \ foreach ($numbers as $number) {\n        if ($counts[$number] == 1) {\n    \
    \        $result[] = $number;\n        }\n    }\n    return $result;\n}\n\n$input\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\
    \ 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\
    \ 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,\
    \ 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97,\
    \ 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113,\
    \ 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129,\
    \ 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145,\
    \ 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161,\
    \ 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177,\
    \ 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193,\
    \ 194, 195\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp02z9o6zl.php on line 22

    '
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $occurrences = [];\n \
    \   foreach ($numbers as $number) {\n        if (!isset($occurrences[$number]))\
    \ {\n            $occurrences[$number] = 0;\n        }\n        $occurrences[$number]++;\n\
    \    }\n    foreach ($numbers as $number) {\n        if ($occurrences[$number]\
    \ == 1) {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n$numbers = [1, 2, 3, 3, 2, 1, 4, 5, 6, 5, 6, 7, 8, 9, 10, 11, 12, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\
    \ 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,\
    \ 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,\
    \ 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88,\
    \ 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106,\
    \ 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122,\
    \ 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138,\
    \ 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154,\
    \ 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170,\
    \ 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpu3zxwaem.php on line 22

    '
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n\t$numbers = array_unique($numbers);\n\treturn\
    \ $numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfi4p2ae1.php:16\n\
    Stack trace:\n#0 /tmp/tmpfi4p2ae1.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpfi4p2ae1.php\
    \ on line 16\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n  $result = [];\n  foreach ($numbers as $number)\
    \ {\n    if (!in_array($number, $result)) {\n      $result[] = $number;\n    }\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgs4ypkjy.php:21\n\
    Stack trace:\n#0 /tmp/tmpgs4ypkjy.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpgs4ypkjy.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique_numbers = [];\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique_numbers)) {\n        \
    \    $unique_numbers[] = $number;\n        }\n    }\n    return $unique_numbers;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4grnrtx.php:21\n\
    Stack trace:\n#0 /tmp/tmpo4grnrtx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpo4grnrtx.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers = array_unique($numbers);\n    return\
    \ $numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh8o2hhj.php:16\n\
    Stack trace:\n#0 /tmp/tmpmh8o2hhj.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpmh8o2hhj.php\
    \ on line 16\n"
  timestamp: 1659730476
- exit_code: 0
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers_count = array_count_values($numbers);\n\
    \    $result = [];\n    foreach ($numbers as $number) {\n        if ($numbers_count[$number]\
    \ == 1) {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers = array_unique($numbers);\n    return\
    \ $numbers;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10];\nprint_r(remove_duplicates($numbers));\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo02sqxp6.php:18\n\
    Stack trace:\n#0 /tmp/tmpo02sqxp6.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpo02sqxp6.php\
    \ on line 18\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,\
    \ 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\
    \ 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82,\
    \ 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101,\
    \ 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117,\
    \ 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133,\
    \ 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149,\
    \ 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165,\
    \ 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181,\
    \ 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197,\
    \ 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213,\
    \ 214, 215, 216, 217, 218, 219, 220, 221, 222,\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpkpkrk9fe.php on line 15

    '
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $count = count($numbers);\n\
    \    for ($i = 0; $i < $count; $i++) {\n        if (in_array($numbers[$i], $result))\
    \ {\n            continue;\n        }\n        $result[] = $numbers[$i];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe5ajvz9z.php:23\n\
    Stack trace:\n#0 /tmp/tmpe5ajvz9z.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpe5ajvz9z.php\
    \ on line 23\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers = array_unique($numbers);\n    return\
    \ $numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh8o2hhj.php:16\n\
    Stack trace:\n#0 /tmp/tmpmh8o2hhj.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpmh8o2hhj.php\
    \ on line 16\n"
  timestamp: 1659730476
- exit_code: 0
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $counts = array_count_values($numbers);\n\
    \    foreach ($numbers as $number) {\n        if ($counts[$number] == 1) {\n \
    \           $result[] = $number;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 0
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n  $result = [];\n  $occurences = [];\n  foreach\
    \ ($numbers as $number) {\n    if (isset($occurences[$number])) {\n      $occurences[$number]++;\n\
    \    } else {\n      $occurences[$number] = 1;\n    }\n  }\n  foreach ($numbers\
    \ as $number) {\n    if ($occurences[$number] == 1) {\n      $result[] = $number;\n\
    \    }\n  }\n  return $result;\n}\n\n$input = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$output = remove_duplicates($input);\nprint_r($output);\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Array

    (

    )

    '
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\n$numbers = array(1,\
    \ 2, 3, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
    \ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\
    \ 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,\
    \ 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,\
    \ 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,\
    \ 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,\
    \ 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128,\
    \ 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144,\
    \ 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160,\
    \ 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,\
    \ 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192,\
    \ 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208,\
    \ 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221,\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpfbnbc15v.php on line 15

    '
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0ggbovk.php:21\n\
    Stack trace:\n#0 /tmp/tmpa0ggbovk.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa0ggbovk.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(remove_duplicates($numbers));\n\
    \nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkewob37g.php:24\n\
    Stack trace:\n#0 /tmp/tmpkewob37g.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpkewob37g.php\
    \ on line 24\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n  $result = [];\n  $hash = [];\n  foreach ($numbers\
    \ as $number) {\n    if (!isset($hash[$number])) {\n      $hash[$number] = true;\n\
    \      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk_bupme.php:23\n\
    Stack trace:\n#0 /tmp/tmplk_bupme.php(26): test()\n#1 {main}\n  thrown in /tmp/tmplk_bupme.php\
    \ on line 23\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n  $numbers_unique = array();\n  foreach ($numbers\
    \ as $number) {\n    if (!in_array($number, $numbers_unique)) {\n      $numbers_unique[]\
    \ = $number;\n    }\n  }\n  return $numbers_unique;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptd8f2bc3.php:21\n\
    Stack trace:\n#0 /tmp/tmptd8f2bc3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmptd8f2bc3.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 0
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers_count = array_count_values($numbers);\n\
    \    $result = [];\n    foreach ($numbers as $number) {\n        if ($numbers_count[$number]\
    \ == 1) {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n\t$numbers = array_unique($numbers);\n\treturn\
    \ $numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfi4p2ae1.php:16\n\
    Stack trace:\n#0 /tmp/tmpfi4p2ae1.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpfi4p2ae1.php\
    \ on line 16\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers = array_unique($numbers);\n    return\
    \ $numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh8o2hhj.php:16\n\
    Stack trace:\n#0 /tmp/tmpmh8o2hhj.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpmh8o2hhj.php\
    \ on line 16\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(remove_duplicates($numbers));\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe96z1xd4.php:23\n\
    Stack trace:\n#0 /tmp/tmpe96z1xd4.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpe96z1xd4.php\
    \ on line 23\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $count = count($numbers);\n\
    \    for ($i = 0; $i < $count; $i++) {\n        if (!in_array($numbers[$i], $result))\
    \ {\n            $result[] = $numbers[$i];\n        }\n    }\n    return $result;\n\
    }\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,\
    \ 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,\
    \ 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,\
    \ 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94,\
    \ 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,\
    \ 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,\
    \ 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143,\
    \ 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159,\
    \ 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175,\
    \ 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191,\
    \ 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207,\
    \ 208, 209, 210, 211, 212, 213,\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbwxb4lnc.php on line 16

    '
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$result = remove_duplicates($numbers);\n\
    print_r($result);\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvt3gab04.php:25\n\
    Stack trace:\n#0 /tmp/tmpvt3gab04.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpvt3gab04.php\
    \ on line 25\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 0
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $counts = array_count_values($numbers);\n\
    \    foreach ($numbers as $number) {\n        if ($counts[$number] == 1) {\n \
    \           $result[] = $number;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique_numbers = [];\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique_numbers)) {\n        \
    \    $unique_numbers[] = $number;\n        }\n    }\n    return $unique_numbers;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4grnrtx.php:21\n\
    Stack trace:\n#0 /tmp/tmpo4grnrtx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpo4grnrtx.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 0
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $count = [];\n    foreach\
    \ ($numbers as $number) {\n        if (!isset($count[$number])) {\n          \
    \  $count[$number] = 0;\n        }\n        $count[$number]++;\n    }\n    foreach\
    \ ($numbers as $number) {\n        if ($count[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $count = count($numbers);\n\
    \    for ($i = 0; $i < $count; $i++) {\n        if (!in_array($numbers[$i], $result))\
    \ {\n            $result[] = $numbers[$i];\n        }\n    }\n    return $result;\n\
    }\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,\
    \ 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,\
    \ 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,\
    \ 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94,\
    \ 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,\
    \ 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,\
    \ 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143,\
    \ 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159,\
    \ 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175,\
    \ 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191,\
    \ 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207,\
    \ 208, 209, 210, 211, 212, 213,\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbwxb4lnc.php on line 16

    '
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $new_numbers = [];\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $new_numbers)) {\n           \
    \ $new_numbers[] = $number;\n        }\n    }\n    return $new_numbers;\n}\n\n\
    $numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$new_numbers\
    \ = remove_duplicates($numbers);\nprint_r($new_numbers);\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9ukld2l.php:25\n\
    Stack trace:\n#0 /tmp/tmpc9ukld2l.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpc9ukld2l.php\
    \ on line 25\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n  $result = [];\n  foreach ($numbers as $number)\
    \ {\n    if (!in_array($number, $result)) {\n      $result[] = $number;\n    }\n\
    \  }\n  return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(remove_duplicates($numbers));\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprl28p5_w.php:24\n\
    Stack trace:\n#0 /tmp/tmprl28p5_w.php(27): test()\n#1 {main}\n  thrown in /tmp/tmprl28p5_w.php\
    \ on line 24\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 5, 4,\
    \ 3, 2, 1];\nprint_r(remove_duplicates($numbers));\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6z9ckrie.php:23\n\
    Stack trace:\n#0 /tmp/tmp6z9ckrie.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6z9ckrie.php\
    \ on line 23\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(remove_duplicates($numbers));\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe96z1xd4.php:23\n\
    Stack trace:\n#0 /tmp/tmpe96z1xd4.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpe96z1xd4.php\
    \ on line 23\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique_numbers = [];\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique_numbers)) {\n        \
    \    $unique_numbers[] = $number;\n        }\n    }\n    return $unique_numbers;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4grnrtx.php:21\n\
    Stack trace:\n#0 /tmp/tmpo4grnrtx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpo4grnrtx.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n\t$result = array();\n\tforeach ($numbers as\
    \ $number) {\n\t\tif (!in_array($number, $result)) {\n\t\t\t$result[] = $number;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpik312d_z.php:21\n\
    Stack trace:\n#0 /tmp/tmpik312d_z.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpik312d_z.php\
    \ on line 21\n"
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0ggbovk.php:21\n\
    Stack trace:\n#0 /tmp/tmpa0ggbovk.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa0ggbovk.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar_dump(remove_duplicates($numbers));\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(10) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n\
    \  [3]=>\n  int(4)\n  [4]=>\n  int(5)\n  [5]=>\n  int(6)\n  [6]=>\n  int(7)\n\
    \  [7]=>\n  int(8)\n  [8]=>\n  int(9)\n  [9]=>\n  int(10)\n}\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp_46rx3xm.php:23\nStack trace:\n#0 /tmp/tmp_46rx3xm.php(26):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_46rx3xm.php on line 23\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n  $result = [];\n  foreach ($numbers as $number)\
    \ {\n    if (!in_array($number, $result)) {\n      $result[] = $number;\n    }\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgs4ypkjy.php:21\n\
    Stack trace:\n#0 /tmp/tmpgs4ypkjy.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpgs4ypkjy.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0ggbovk.php:21\n\
    Stack trace:\n#0 /tmp/tmpa0ggbovk.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa0ggbovk.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $duplicates = [];\n  \
    \  foreach ($numbers as $number) {\n        if (in_array($number, $result)) {\n\
    \            $duplicates[] = $number;\n        } else {\n            $result[]\
    \ = $number;\n        }\n    }\n    return array_diff($result, $duplicates);\n\
    }\n\n$numbers = [1, 2, 3, 1, 3];\nprint_r(remove_duplicates($numbers));\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpnwsdbsqx.php:27\nStack trace:\n#0 /tmp/tmpnwsdbsqx.php(30): test()\n\
    #1 {main}\n  thrown in /tmp/tmpnwsdbsqx.php on line 27\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers = array_unique($numbers);\n    return\
    \ $numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh8o2hhj.php:16\n\
    Stack trace:\n#0 /tmp/tmpmh8o2hhj.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpmh8o2hhj.php\
    \ on line 16\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(remove_duplicates($numbers));\n\
    \nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkewob37g.php:24\n\
    Stack trace:\n#0 /tmp/tmpkewob37g.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpkewob37g.php\
    \ on line 24\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\n$numbers = array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(remove_duplicates($numbers));\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjkfwzsjp.php:23\n\
    Stack trace:\n#0 /tmp/tmpjkfwzsjp.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpjkfwzsjp.php\
    \ on line 23\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers = array_unique($numbers);\n    return\
    \ $numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh8o2hhj.php:16\n\
    Stack trace:\n#0 /tmp/tmpmh8o2hhj.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpmh8o2hhj.php\
    \ on line 16\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\n$numbers = array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\
    \ 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\
    \ 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,\
    \ 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114,\
    \ 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130,\
    \ 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146,\
    \ 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162,\
    \ 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178,\
    \ 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194,\
    \ 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210,\
    \ 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224,\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpq9odpz3u.php on line 15

    '
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers_unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $numbers_unique)) {\n        \
    \    $numbers_unique[] = $number;\n        }\n    }\n    return $numbers_unique;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqyi3b3fx.php:21\n\
    Stack trace:\n#0 /tmp/tmpqyi3b3fx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpqyi3b3fx.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 5, 6,\
    \ 7, 8, 9, 9, 10];\nprint_r(remove_duplicates($numbers));\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprs0yvfyr.php:24\n\
    Stack trace:\n#0 /tmp/tmprs0yvfyr.php(27): test()\n#1 {main}\n  thrown in /tmp/tmprs0yvfyr.php\
    \ on line 24\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique_numbers = [];\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique_numbers)) {\n        \
    \    $unique_numbers[] = $number;\n        }\n    }\n    return $unique_numbers;\n\
    }\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    $unique_numbers = remove_duplicates($numbers);\nprint_r($unique_numbers);\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0pyu4qbp.php:25\n\
    Stack trace:\n#0 /tmp/tmp0pyu4qbp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp0pyu4qbp.php\
    \ on line 25\n"
  timestamp: 1659730476
- exit_code: 0
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $counts = array_count_values($numbers);\n\
    \    foreach ($numbers as $number) {\n        if ($counts[$number] == 1) {\n \
    \           $result[] = $number;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(remove_duplicates($numbers));\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe96z1xd4.php:23\n\
    Stack trace:\n#0 /tmp/tmpe96z1xd4.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpe96z1xd4.php\
    \ on line 23\n"
  timestamp: 1659730476
- exit_code: 0
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $numbers_count = count($numbers);\n\
    \    for ($i = 0; $i < $numbers_count; $i++) {\n        $number = $numbers[$i];\n\
    \        $occurrences = 0;\n        for ($j = 0; $j < $numbers_count; $j++) {\n\
    \            if ($numbers[$j] == $number) {\n                $occurrences++;\n\
    \            }\n        }\n        if ($occurrences == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n$input = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n$output = remove_duplicates($input);\n\
    print_r($output);\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Array

    (

    )

    '
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique_numbers = [];\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique_numbers)) {\n        \
    \    $unique_numbers[] = $number;\n        }\n    }\n    return $unique_numbers;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4grnrtx.php:21\n\
    Stack trace:\n#0 /tmp/tmpo4grnrtx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpo4grnrtx.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\n$numbers = array(1,\
    \ 2, 3, 3, 4, 5, 5, 6, 7, 8, 8, 9, 10);\nprint_r(remove_duplicates($numbers));\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmlkh58vi.php:23\n\
    Stack trace:\n#0 /tmp/tmpmlkh58vi.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmlkh58vi.php\
    \ on line 23\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0ggbovk.php:21\n\
    Stack trace:\n#0 /tmp/tmpa0ggbovk.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa0ggbovk.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n  $unique = [];\n  foreach ($numbers as $number)\
    \ {\n    if (!in_array($number, $unique)) {\n      $unique[] = $number;\n    }\n\
    \  }\n  return $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp52_uycd1.php:21\n\
    Stack trace:\n#0 /tmp/tmp52_uycd1.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp52_uycd1.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $occurrences = [];\n \
    \   foreach ($numbers as $number) {\n        if (!isset($occurrences[$number]))\
    \ {\n            $occurrences[$number] = 0;\n        }\n        $occurrences[$number]++;\n\
    \    }\n    foreach ($numbers as $number) {\n        if ($occurrences[$number]\
    \ == 1) {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\
    \ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpczy_d0lu.php on line 22

    '
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers = array_unique($numbers);\n    return\
    \ $numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh8o2hhj.php:16\n\
    Stack trace:\n#0 /tmp/tmpmh8o2hhj.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpmh8o2hhj.php\
    \ on line 16\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers = array_unique($numbers);\n    return\
    \ $numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh8o2hhj.php:16\n\
    Stack trace:\n#0 /tmp/tmpmh8o2hhj.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpmh8o2hhj.php\
    \ on line 16\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 0
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $count = [];\n    foreach\
    \ ($numbers as $number) {\n        if (!isset($count[$number])) {\n          \
    \  $count[$number] = 0;\n        }\n        $count[$number]++;\n    }\n    foreach\
    \ ($numbers as $number) {\n        if ($count[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n$input = [1, 2, 2, 3, 3, 3, 4, 5,\
    \ 5, 5, 5, 6, 7, 8, 9, 10, 10, 10];\n$output = remove_duplicates($input);\nprint_r($output);\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpshcpq_zq.php:24\n\
    Stack trace:\n#0 /tmp/tmpshcpq_zq.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpshcpq_zq.php\
    \ on line 24\n"
  timestamp: 1659730476
- exit_code: 0
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $occurrences = [];\n \
    \   foreach ($numbers as $number) {\n        if (!isset($occurrences[$number]))\
    \ {\n            $occurrences[$number] = 0;\n        }\n        $occurrences[$number]++;\n\
    \    }\n    foreach ($numbers as $number) {\n        if ($occurrences[$number]\
    \ == 1) {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique_numbers = [];\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique_numbers)) {\n        \
    \    $unique_numbers[] = $number;\n        }\n    }\n    return $unique_numbers;\n\
    }\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n$unique_numbers\
    \ = remove_duplicates($numbers);\nprint_r($unique_numbers);\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpvvn5lhay.php:24\nStack trace:\n\
    #0 /tmp/tmpvvn5lhay.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpvvn5lhay.php\
    \ on line 24\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers = array_unique($numbers);\n    return\
    \ $numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh8o2hhj.php:16\n\
    Stack trace:\n#0 /tmp/tmpmh8o2hhj.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpmh8o2hhj.php\
    \ on line 16\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $seen = [];\n    foreach\
    \ ($numbers as $number) {\n        if (!in_array($number, $seen)) {\n        \
    \    $result[] = $number;\n            $seen[] = $number;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpky473n32.php:23\n\
    Stack trace:\n#0 /tmp/tmpky473n32.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpky473n32.php\
    \ on line 23\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique_numbers = [];\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique_numbers)) {\n        \
    \    $unique_numbers[] = $number;\n        }\n    }\n    return $unique_numbers;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4grnrtx.php:21\n\
    Stack trace:\n#0 /tmp/tmpo4grnrtx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpo4grnrtx.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $duplicates = [];\n  \
    \  foreach ($numbers as $number) {\n        if (in_array($number, $result)) {\n\
    \            $duplicates[] = $number;\n        } else {\n            $result[]\
    \ = $number;\n        }\n    }\n    return array_diff($result, $duplicates);\n\
    }\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,\
    \ 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,\
    \ 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,\
    \ 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94,\
    \ 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,\
    \ 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,\
    \ 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143,\
    \ 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159,\
    \ 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175,\
    \ 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191,\
    \ 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207,\
    \ 208, 209,\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvytdkgi_.php on line 18

    '
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $count = count($numbers);\n\
    \    for ($i = 0; $i < $count; $i++) {\n        $number = $numbers[$i];\n    \
    \    if (!in_array($number, $result)) {\n            $result[] = $number;\n  \
    \      }\n    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\
    \ 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,\
    \ 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85,\
    \ 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,\
    \ 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\
    \ 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82,\
    \ 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n\n\
    $result = remove_duplicates($numbers);\nprint_r($result);\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    \    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n\
    \    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n\
    \    [20] => 21\n    [21] => 22\n    [22] => 23\n    [23] => 24\n    [24] => 25\n\
    \    [25] => 26\n    [26] => 27\n    [27] => 28\n    [28] => 29\n    [29] => 30\n\
    \    [30] => 31\n    [31] => 32\n    [32] => 33\n    [33] => 34\n    [34] => 35\n\
    \    [35] => 36\n    [36] => 37\n    [37] => 38\n    [38] => 39\n    [39] => 40\n\
    \    [40] => 41\n    [41] => 42\n    [42] => 43\n    [43] => 44\n    [44] => 45\n\
    \    [45] => 46\n    [46] => 47\n    [47] => 48\n    [48] => 49\n    [49] => 50\n\
    \    [50] => 51\n    [51] => 52\n    [52] => 53\n    [53] => 54\n    [54] => 55\n\
    \    [55] => 56\n    [56] => 57\n    [57] => 58\n    [58] => 59\n    [59] => 60\n\
    \    [60] => 61\n    [61] => 62\n    [62] => 63\n    [63] => 64\n    [64] => 65\n\
    \    [65] => 66\n    [66] => 67\n    [67] => 68\n    [68] => 69\n    [69] => 70\n\
    \    [70] => 71\n    [71] => 72\n    [72] => 73\n    [73] => 74\n    [74] => 75\n\
    \    [75] => 76\n    [76] => 77\n    [77] => 78\n    [78] => 79\n    [79] => 80\n\
    \    [80] => 81\n    [81] => 82\n    [82] => 83\n    [83] => 84\n    [84] => 85\n\
    \    [85] => 86\n    [86] => 87\n    [87] => 88\n    [88] => 89\n    [89] => 90\n\
    \    [90] => 91\n    [91] => 92\n    [92] => 93\n    [93] => 94\n    [94] => 95\n\
    \    [95] => 96\n    [96] => 97\n    [97] => 98\n    [98] => 99\n    [99] => 100\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfg919eis.php:28\n\
    Stack trace:\n#0 /tmp/tmpfg919eis.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpfg919eis.php\
    \ on line 28\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(remove_duplicates($numbers));\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe96z1xd4.php:23\n\
    Stack trace:\n#0 /tmp/tmpe96z1xd4.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpe96z1xd4.php\
    \ on line 23\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $counts = array_count_values($numbers);\n\
    \    foreach ($numbers as $number) {\n        if ($counts[$number] == 1) {\n \
    \           $result[] = $number;\n        }\n    }\n    return $result;\n}\n\n\
    $numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\
    \ 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57,\
    \ 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,\
    \ 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95,\
    \ 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,\
    \ 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,\
    \ 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143,\
    \ 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159,\
    \ 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175,\
    \ 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191,\
    \ 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207,\
    \ 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpb7xmxr86.php on line 16

    '
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\n$numbers = array(1,\
    \ 2, 3, 4, 5, 5, 4, 3, 2, 1);\nprint_r(remove_duplicates($numbers));\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcx3l_4uw.php:24\n\
    Stack trace:\n#0 /tmp/tmpcx3l_4uw.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpcx3l_4uw.php\
    \ on line 24\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers = array_unique($numbers);\n    return\
    \ $numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh8o2hhj.php:16\n\
    Stack trace:\n#0 /tmp/tmpmh8o2hhj.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpmh8o2hhj.php\
    \ on line 16\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(remove_duplicates($numbers));\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe96z1xd4.php:23\n\
    Stack trace:\n#0 /tmp/tmpe96z1xd4.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpe96z1xd4.php\
    \ on line 23\n"
  timestamp: 1659730476
- exit_code: 0
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $occurrences = [];\n \
    \   foreach ($numbers as $number) {\n        if (!isset($occurrences[$number]))\
    \ {\n            $occurrences[$number] = 0;\n        }\n        $occurrences[$number]++;\n\
    \    }\n    foreach ($numbers as $number) {\n        if ($occurrences[$number]\
    \ === 1) {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    print_r(remove_duplicates($numbers));\nfunction candidate(...$args) {\n    return\
    \ remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Array

    (

    )

    '
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n  $result = [];\n  foreach ($numbers as $number)\
    \ {\n    if (!in_array($number, $result)) {\n      $result[] = $number;\n    }\n\
    \  }\n  return $result;\n}\n\n$numbers = [1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 10,\
    \ 11, 12, 13, 14, 15, 15, 16, 17, 18, 19, 20, 20, 21, 22, 23, 24, 25, 25, 26,\
    \ 27, 28, 29, 30, 30, 31, 32, 33, 34, 35, 35, 36, 37, 38, 39, 40, 40, 41, 42,\
    \ 43, 44, 45, 45, 46, 47, 48, 49, 50, 50, 51, 52, 53, 54, 55, 55, 56, 57, 58,\
    \ 59, 60, 60, 61, 62, 63, 64, 65, 65, 66, 67, 68, 69, 70, 70, 71, 72, 73, 74,\
    \ 75, 75, 76, 77, 78, 79, 80, 80, 81, 82, 83, 84, 85, 85, 86, 87, 88, 89, 90,\
    \ 90, 91, 92, 93, 94, 95, 95, 96, 97, 98, 99, 100, 100];\n$result = remove_duplicates($numbers);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    \    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n\
    \    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n\
    \    [20] => 21\n    [21] => 22\n    [22] => 23\n    [23] => 24\n    [24] => 25\n\
    \    [25] => 26\n    [26] => 27\n    [27] => 28\n    [28] => 29\n    [29] => 30\n\
    \    [30] => 31\n    [31] => 32\n    [32] => 33\n    [33] => 34\n    [34] => 35\n\
    \    [35] => 36\n    [36] => 37\n    [37] => 38\n    [38] => 39\n    [39] => 40\n\
    \    [40] => 41\n    [41] => 42\n    [42] => 43\n    [43] => 44\n    [44] => 45\n\
    \    [45] => 46\n    [46] => 47\n    [47] => 48\n    [48] => 49\n    [49] => 50\n\
    \    [50] => 51\n    [51] => 52\n    [52] => 53\n    [53] => 54\n    [54] => 55\n\
    \    [55] => 56\n    [56] => 57\n    [57] => 58\n    [58] => 59\n    [59] => 60\n\
    \    [60] => 61\n    [61] => 62\n    [62] => 63\n    [63] => 64\n    [64] => 65\n\
    \    [65] => 66\n    [66] => 67\n    [67] => 68\n    [68] => 69\n    [69] => 70\n\
    \    [70] => 71\n    [71] => 72\n    [72] => 73\n    [73] => 74\n    [74] => 75\n\
    \    [75] => 76\n    [76] => 77\n    [77] => 78\n    [78] => 79\n    [79] => 80\n\
    \    [80] => 81\n    [81] => 82\n    [82] => 83\n    [83] => 84\n    [84] => 85\n\
    \    [85] => 86\n    [86] => 87\n    [87] => 88\n    [88] => 89\n    [89] => 90\n\
    \    [90] => 91\n    [91] => 92\n    [92] => 93\n    [93] => 94\n    [94] => 95\n\
    \    [95] => 96\n    [96] => 97\n    [97] => 98\n    [98] => 99\n    [99] => 100\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1o18j004.php:24\n\
    Stack trace:\n#0 /tmp/tmp1o18j004.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1o18j004.php\
    \ on line 24\n"
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique_numbers = [];\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique_numbers)) {\n        \
    \    $unique_numbers[] = $number;\n        }\n    }\n    return $unique_numbers;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4grnrtx.php:21\n\
    Stack trace:\n#0 /tmp/tmpo4grnrtx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpo4grnrtx.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 0
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $counts = array_count_values($numbers);\n\
    \    foreach ($numbers as $number) {\n        if ($counts[$number] == 1) {\n \
    \           $result[] = $number;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n  $result = [];\n  foreach ($numbers as $number)\
    \ {\n    if (!in_array($number, $result)) {\n      $result[] = $number;\n    }\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgs4ypkjy.php:21\n\
    Stack trace:\n#0 /tmp/tmpgs4ypkjy.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpgs4ypkjy.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\n$numbers = array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(remove_duplicates($numbers));\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjkfwzsjp.php:23\n\
    Stack trace:\n#0 /tmp/tmpjkfwzsjp.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpjkfwzsjp.php\
    \ on line 23\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $numbers_count = count($numbers);\n\
    \    for ($i = 0; $i < $numbers_count; $i++) {\n        $number = $numbers[$i];\n\
    \        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,\
    \ 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,\
    \ 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,\
    \ 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,\
    \ 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103,\
    \ 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,\
    \ 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135,\
    \ 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151,\
    \ 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167,\
    \ 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183,\
    \ 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199,\
    \ 200, 201, 202, 203, 204, 205, 206, 207, 208,\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpkfp406cq.php on line 17

    '
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique_numbers = [];\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique_numbers)) {\n        \
    \    $unique_numbers[] = $number;\n        }\n    }\n    return $unique_numbers;\n\
    }\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n$unique_numbers\
    \ = remove_duplicates($numbers);\nprint_r($unique_numbers);\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmptr0e7jf0.php:25\nStack trace:\n\
    #0 /tmp/tmptr0e7jf0.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptr0e7jf0.php\
    \ on line 25\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,\
    \ 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,\
    \ 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,\
    \ 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,\
    \ 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103,\
    \ 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,\
    \ 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135,\
    \ 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151,\
    \ 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167,\
    \ 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183,\
    \ 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199,\
    \ 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,\
    \ 216, 217, 218, 219, 220, 221, 222, 223, 224, 225,\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwkg3hn65.php on line 15

    '
  timestamp: 1659730477
- exit_code: 0
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $counts = array_count_values($numbers);\n\
    \    foreach ($numbers as $number) {\n        if ($counts[$number] == 1) {\n \
    \           $result[] = $number;\n        }\n    }\n    return $result;\n}\n\n\
    $numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$result\
    \ = remove_duplicates($numbers);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Array

    (

    )

    '
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers = array_unique($numbers);\n    return\
    \ $numbers;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,\
    \ 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,\
    \ 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,\
    \ 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,\
    \ 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108,\
    \ 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,\
    \ 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140,\
    \ 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156,\
    \ 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,\
    \ 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188,\
    \ 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204,\
    \ 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220,\
    \ 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236,\
    \ 237, 238, 239, 240, 241, 242\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpmxe5qfdt.php on line 10

    '
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,\
    \ 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,\
    \ 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,\
    \ 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,\
    \ 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103,\
    \ 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,\
    \ 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135,\
    \ 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151,\
    \ 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167,\
    \ 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183,\
    \ 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199,\
    \ 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,\
    \ 216, 217, 218, 219, 220, 221, 222, 223, 224, 225,\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwkg3hn65.php on line 15

    '
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique_numbers = [];\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique_numbers)) {\n        \
    \    $unique_numbers[] = $number;\n        }\n    }\n    return $unique_numbers;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4grnrtx.php:21\n\
    Stack trace:\n#0 /tmp/tmpo4grnrtx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpo4grnrtx.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 1, 3];\n$result\
    \ = remove_duplicates($numbers);\nprint_r($result);\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpiaj7hb49.php:25\nStack trace:\n#0 /tmp/tmpiaj7hb49.php(28):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpiaj7hb49.php on line 25\n"
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $occurences = [];\n  \
    \  foreach ($numbers as $number) {\n        if (!isset($occurences[$number]))\
    \ {\n            $occurences[$number] = 1;\n            $result[] = $number;\n\
    \        } else {\n            $occurences[$number]++;\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp31x867h0.php:25\n\
    Stack trace:\n#0 /tmp/tmp31x867h0.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp31x867h0.php\
    \ on line 25\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0ggbovk.php:21\n\
    Stack trace:\n#0 /tmp/tmpa0ggbovk.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa0ggbovk.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $new_array = [];\n    foreach ($numbers as\
    \ $number) {\n        if (!in_array($number, $new_array)) {\n            $new_array[]\
    \ = $number;\n        }\n    }\n    return $new_array;\n}\n\n$numbers = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(remove_duplicates($numbers));\n\
    \nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphiuijraw.php:24\n\
    Stack trace:\n#0 /tmp/tmphiuijraw.php(27): test()\n#1 {main}\n  thrown in /tmp/tmphiuijraw.php\
    \ on line 24\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 0
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $count = count($numbers);\n\
    \    for ($i = 0; $i < $count; $i++) {\n        $number = $numbers[$i];\n    \
    \    $occurrences = 0;\n        for ($j = 0; $j < $count; $j++) {\n          \
    \  if ($numbers[$j] == $number) {\n                $occurrences++;\n         \
    \   }\n        }\n        if ($occurrences == 1) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730477
- exit_code: 0
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers_count = array_count_values($numbers);\n\
    \    $result = [];\n    foreach ($numbers as $number) {\n        if ($numbers_count[$number]\
    \ == 1) {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers = array_unique($numbers);\n    return\
    \ $numbers;\n}\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10);\n$numbers = remove_duplicates($numbers);\nprint_r($numbers);\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_e19hysg.php:19\n\
    Stack trace:\n#0 /tmp/tmp_e19hysg.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp_e19hysg.php\
    \ on line 19\n"
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique_numbers = [];\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique_numbers)) {\n        \
    \    $unique_numbers[] = $number;\n        }\n    }\n    return $unique_numbers;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4grnrtx.php:21\n\
    Stack trace:\n#0 /tmp/tmpo4grnrtx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpo4grnrtx.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers = array_unique($numbers);\n    return\
    \ $numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh8o2hhj.php:16\n\
    Stack trace:\n#0 /tmp/tmpmh8o2hhj.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpmh8o2hhj.php\
    \ on line 16\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers = array_flip($numbers);\n    $numbers\
    \ = array_flip($numbers);\n    return $numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3e2dqfdv.php:17\n\
    Stack trace:\n#0 /tmp/tmp3e2dqfdv.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp3e2dqfdv.php\
    \ on line 17\n"
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0ggbovk.php:21\n\
    Stack trace:\n#0 /tmp/tmpa0ggbovk.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa0ggbovk.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 0
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $counts = array_count_values($numbers);\n\
    \    foreach ($numbers as $number) {\n        if ($counts[$number] == 1) {\n \
    \           $result[] = $number;\n        }\n    }\n    return $result;\n}\n\n\
    $numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(remove_duplicates($numbers));\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Array

    (

    )

    '
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique_numbers = [];\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique_numbers)) {\n        \
    \    $unique_numbers[] = $number;\n        }\n    }\n    return $unique_numbers;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4grnrtx.php:21\n\
    Stack trace:\n#0 /tmp/tmpo4grnrtx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpo4grnrtx.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$result = remove_duplicates($numbers);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqx8k67sm.php:24\n\
    Stack trace:\n#0 /tmp/tmpqx8k67sm.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqx8k67sm.php\
    \ on line 24\n"
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $occurrences = [];\n \
    \   foreach ($numbers as $number) {\n        if (!isset($occurrences[$number]))\
    \ {\n            $occurrences[$number] = 0;\n        }\n        $occurrences[$number]++;\n\
    \    }\n    foreach ($numbers as $number) {\n        if ($occurrences[$number]\
    \ == 1) {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n$numbers = [1, 2, 3, 1, 3];\nprint_r(remove_duplicates($numbers));\n\n$numbers\
    \ = [1, 2, 3, 4];\nprint_r(remove_duplicates($numbers));\n\n$numbers = [1, 1,\
    \ 1, 1];\nprint_r(remove_duplicates($numbers));\n\n$numbers = [];\nprint_r(remove_duplicates($numbers));\n\
    \n$numbers = [1, 2, 3, 1, 3, 2, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,\
    \ 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,\
    \ 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,\
    \ 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90,\
    \ 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107,\
    \ 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123,\
    \ 124, 125, 126, 127, 128, 129, 130, 131\nfunction candidate(...$args) {\n   \
    \ return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpe7bpl5ik.php on line 34

    '
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n  $new_numbers = [];\n  foreach ($numbers as\
    \ $number) {\n    if (!in_array($number, $new_numbers)) {\n      $new_numbers[]\
    \ = $number;\n    }\n  }\n  return $new_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppn652pdh.php:21\n\
    Stack trace:\n#0 /tmp/tmppn652pdh.php(24): test()\n#1 {main}\n  thrown in /tmp/tmppn652pdh.php\
    \ on line 21\n"
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique_numbers = [];\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique_numbers)) {\n        \
    \    $unique_numbers[] = $number;\n        }\n    }\n    return $unique_numbers;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4grnrtx.php:21\n\
    Stack trace:\n#0 /tmp/tmpo4grnrtx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpo4grnrtx.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0ggbovk.php:21\n\
    Stack trace:\n#0 /tmp/tmpa0ggbovk.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa0ggbovk.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers = array_unique($numbers);\n    return\
    \ $numbers;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,\
    \ 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,\
    \ 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,\
    \ 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,\
    \ 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108,\
    \ 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,\
    \ 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140,\
    \ 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156,\
    \ 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,\
    \ 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188,\
    \ 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204,\
    \ 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220,\
    \ 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236,\
    \ 237, 238, 239, 240, 241, 242\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpmxe5qfdt.php on line 10

    '
  timestamp: 1659730477
- exit_code: 0
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers_unique = array();\n    $numbers_count\
    \ = array();\n    foreach ($numbers as $number) {\n        if (isset($numbers_count[$number]))\
    \ {\n            $numbers_count[$number]++;\n        } else {\n            $numbers_count[$number]\
    \ = 1;\n        }\n    }\n    foreach ($numbers as $number) {\n        if ($numbers_count[$number]\
    \ == 1) {\n            $numbers_unique[] = $number;\n        }\n    }\n    return\
    \ $numbers_unique;\n}\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10);\n$numbers_unique = remove_duplicates($numbers);\n\
    print_r($numbers_unique);\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Array

    (

    )

    '
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers = array_flip($numbers);\n    $numbers\
    \ = array_flip($numbers);\n    return $numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3e2dqfdv.php:17\n\
    Stack trace:\n#0 /tmp/tmp3e2dqfdv.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp3e2dqfdv.php\
    \ on line 17\n"
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\n$numbers = array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\
    \ 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\
    \ 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,\
    \ 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114,\
    \ 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130,\
    \ 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146,\
    \ 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162,\
    \ 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178,\
    \ 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194,\
    \ 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210,\
    \ 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224,\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpq9odpz3u.php on line 15

    '
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\n$numbers = array(1,\
    \ 2, 3, 3, 4, 5, 5, 6, 7, 8, 8, 9, 10);\n$unique = remove_duplicates($numbers);\n\
    print_r($unique);\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu3t8m2u9.php:25\n\
    Stack trace:\n#0 /tmp/tmpu3t8m2u9.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpu3t8m2u9.php\
    \ on line 25\n"
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique_numbers = [];\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique_numbers)) {\n        \
    \    $unique_numbers[] = $number;\n        }\n    }\n    return $unique_numbers;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4grnrtx.php:21\n\
    Stack trace:\n#0 /tmp/tmpo4grnrtx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpo4grnrtx.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0ggbovk.php:21\n\
    Stack trace:\n#0 /tmp/tmpa0ggbovk.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa0ggbovk.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\n$numbers = array(1,\
    \ 2, 3, 4, 5, 1, 2, 3, 4, 5);\nprint_r(remove_duplicates($numbers));\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphgv3bmi9.php:24\n\
    Stack trace:\n#0 /tmp/tmphgv3bmi9.php(27): test()\n#1 {main}\n  thrown in /tmp/tmphgv3bmi9.php\
    \ on line 24\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique_numbers = [];\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique_numbers)) {\n        \
    \    $unique_numbers[] = $number;\n        }\n    }\n    return $unique_numbers;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4grnrtx.php:21\n\
    Stack trace:\n#0 /tmp/tmpo4grnrtx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpo4grnrtx.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 0
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $occurrences = [];\n \
    \   foreach ($numbers as $number) {\n        if (!isset($occurrences[$number]))\
    \ {\n            $occurrences[$number] = 0;\n        }\n        $occurrences[$number]++;\n\
    \    }\n    foreach ($numbers as $number) {\n        if ($occurrences[$number]\
    \ == 1) {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n$input = [1, 2, 3, 1, 3];\n$output = remove_duplicates($input);\nprint_r($output);\
    \ // [2]\n\n$input = [1, 2, 3, 4];\n$output = remove_duplicates($input);\nprint_r($output);\
    \ // [1, 2, 3, 4]\n\n$input = [1, 1, 1, 1];\n$output = remove_duplicates($input);\n\
    print_r($output); // []\n\n$input = [1, 2, 1, 1];\n$output = remove_duplicates($input);\n\
    print_r($output); // [2]\n\n$input = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n\
    $output = remove_duplicates($input);\nprint_r($output); // [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13]\n\n$input = [1, 2, 1, 3, 4, 2];\n$output = remove_duplicates($input);\n\
    print_r($output); // [3, 4]\n\n$input = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$output = remove_duplicates($input);\n\
    print_r($output); // []\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2]\
    \ => 3\n    [3] => 4\n)\nArray\n(\n)\nArray\n(\n    [0] => 2\n)\nArray\n(\n  \
    \  [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] =>\
    \ 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n\
    \    [11] => 12\n    [12] => 13\n)\nArray\n(\n    [0] => 3\n    [1] => 4\n)\n\
    Array\n(\n)\n"
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers = array_unique($numbers);\n    return\
    \ $numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh8o2hhj.php:16\n\
    Stack trace:\n#0 /tmp/tmpmh8o2hhj.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpmh8o2hhj.php\
    \ on line 16\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique_numbers = [];\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique_numbers)) {\n        \
    \    $unique_numbers[] = $number;\n        }\n    }\n    return $unique_numbers;\n\
    }\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    print_r(remove_duplicates($numbers));\nfunction candidate(...$args) {\n    return\
    \ remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_h1gotpp.php:23\n\
    Stack trace:\n#0 /tmp/tmp_h1gotpp.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_h1gotpp.php\
    \ on line 23\n"
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n  $numbers = array_unique($numbers);\n  return\
    \ $numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz2ayu7nm.php:16\n\
    Stack trace:\n#0 /tmp/tmpz2ayu7nm.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpz2ayu7nm.php\
    \ on line 16\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n\t$result = array();\n\tforeach ($numbers as\
    \ $number) {\n\t\tif (!in_array($number, $result)) {\n\t\t\t$result[] = $number;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpik312d_z.php:21\n\
    Stack trace:\n#0 /tmp/tmpik312d_z.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpik312d_z.php\
    \ on line 21\n"
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers_unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $numbers_unique)) {\n        \
    \    $numbers_unique[] = $number;\n        }\n    }\n    return $numbers_unique;\n\
    }\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10);\n$numbers_unique = remove_duplicates($numbers);\nvar_dump($numbers_unique);\n\
    \nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(10) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n\
    \  [3]=>\n  int(4)\n  [4]=>\n  int(5)\n  [5]=>\n  int(6)\n  [6]=>\n  int(7)\n\
    \  [7]=>\n  int(8)\n  [8]=>\n  int(9)\n  [9]=>\n  int(10)\n}\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpkndta4eb.php:25\nStack trace:\n#0 /tmp/tmpkndta4eb.php(28):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkndta4eb.php on line 25\n"
  timestamp: 1659730477
- exit_code: 0
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n\t$result = array();\n\t$count = array();\n\t\
    foreach ($numbers as $number) {\n\t\tif (!isset($count[$number])) {\n\t\t\t$count[$number]\
    \ = 0;\n\t\t}\n\t\t$count[$number]++;\n\t}\n\tforeach ($numbers as $number) {\n\
    \t\tif ($count[$number] == 1) {\n\t\t\t$result[] = $number;\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0ggbovk.php:21\n\
    Stack trace:\n#0 /tmp/tmpa0ggbovk.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa0ggbovk.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n  $numbers = array_unique($numbers);\n  return\
    \ $numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz2ayu7nm.php:16\n\
    Stack trace:\n#0 /tmp/tmpz2ayu7nm.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpz2ayu7nm.php\
    \ on line 16\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n  $result = [];\n  foreach ($numbers as $number)\
    \ {\n    if (!in_array($number, $result)) {\n      $result[] = $number;\n    }\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgs4ypkjy.php:21\n\
    Stack trace:\n#0 /tmp/tmpgs4ypkjy.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpgs4ypkjy.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0ggbovk.php:21\n\
    Stack trace:\n#0 /tmp/tmpa0ggbovk.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa0ggbovk.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers_unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $numbers_unique)) {\n        \
    \    $numbers_unique[] = $number;\n        }\n    }\n    return $numbers_unique;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqyi3b3fx.php:21\n\
    Stack trace:\n#0 /tmp/tmpqyi3b3fx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpqyi3b3fx.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 0
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n  $numbers_count = array_count_values($numbers);\n\
    \  $result = [];\n  foreach ($numbers as $number) {\n    if ($numbers_count[$number]\
    \ === 1) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n  $unique = [];\n  foreach ($numbers as $number)\
    \ {\n    if (!in_array($number, $unique)) {\n      $unique[] = $number;\n    }\n\
    \  }\n  return $unique;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\
    \ 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,\
    \ 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,\
    \ 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88,\
    \ 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106,\
    \ 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122,\
    \ 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138,\
    \ 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154,\
    \ 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170,\
    \ 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186,\
    \ 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,\
    \ 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218,\
    \ 219, 220, 221, 222, 223, 224, 225,\nfunction candidate(...$args) {\n    return\
    \ remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphsvw_apn.php on line 15

    '
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0ggbovk.php:21\n\
    Stack trace:\n#0 /tmp/tmpa0ggbovk.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa0ggbovk.php\
    \ on line 21\n"
  timestamp: 1659730476
- exit_code: 0
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    $counts = [];\n    foreach\
    \ ($numbers as $number) {\n        if (!isset($counts[$number])) {\n         \
    \   $counts[$number] = 0;\n        }\n        $counts[$number]++;\n    }\n   \
    \ foreach ($numbers as $number) {\n        if ($counts[$number] == 1) {\n    \
    \        $result[] = $number;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730477
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $numbers = array_unique($numbers);\n    return\
    \ $numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh8o2hhj.php:16\n\
    Stack trace:\n#0 /tmp/tmpmh8o2hhj.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpmh8o2hhj.php\
    \ on line 16\n"
  timestamp: 1659730476
- exit_code: 255
  program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\nfunction\
    \ remove_duplicates($numbers) {\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qd1tiv.php:21\n\
    Stack trace:\n#0 /tmp/tmp73qd1tiv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp73qd1tiv.php\
    \ on line 21\n"
  timestamp: 1659730476

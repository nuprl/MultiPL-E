{
  "language": "php",
  "name": "HumanEval_24_largest_divisor",
  "results": [
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\t$divisor = $n - 1;\n\twhile ($n % $divisor != 0) {\n\t\t$divisor--;\n\t}\n\treturn $divisor;\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(41);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(43);\necho \"\\n\";\necho largest_divisor(44);\necho \"\\n\";\necho largest_divisor(45);\necho \"\\\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpbpll4elk.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(11);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(14);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpyqlnp1kg.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\necho largest_divisor(10);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(7);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(3);\necho \"\\n\";\necho largest_divisor(2);\necho \"\\n\";\necho largest_divisor(1);\necho \"\\n\";\necho largest_divisor(0);\necho \"\\n\";\necho largest_divisor(-1);\necho \"\\n\";\necho largest_divisor(-2);\necho \"\\n\";\necho largest_divisor(-3);\necho \"\\n\";\necho largest_divisor(-4);\necho \"\\n\";\necho largest_divisor(-5);\necho \"\\n\";\necho largest_divisor(-6);\necho \"\\n\";\necho largest_divisor(-7);\necho \"\\n\";\necho largest_divisor(-8);\necho \"\\n\";\necho largest_divisor(-9);\necho \"\\n\";\necho largest_divisor(-10);\necho \"\\n\";\necho largest_divisor(-11);\necho \"\\n\";\necho largest_divisor(-12);\necho \"\\n\";\necho largest_divisor(-13);\necho \"\\n\";\necho largest_divisor(-14);\necho \"\\n\";\necho largest_divisor(-15);\necho \"\\n\";\necho largest_divisor(-16);\necho \"\\n\";\necho largest_divisor(-17);\necho \"\\n\";\necho largest_divisor(-18);\necho \"\\n\";\necho largest_divisor(-19);\necho \"\\n\";\necho largest_divisor(-20);\necho \"\\n\";\necho largest_divisor(-21);\necho \"\\n\";\necho largest_divisor(-22);\necho \"\\n\";\necho largest_divisor(-23);\necho \"\\n\";\necho largest_divisor(-24);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n1\n6\n1\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(81);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(1);\necho \"\\n\";\necho largest_divisor(2);\necho \"\\n\";\necho largest_divisor(3);\necho \"\\n\";\necho largest_divisor(4);\necho \"\\n\";\necho largest_divisor(5);\necho \"\\n\";\necho largest_divisor(6);\necho \"\\n\";\necho largest_divisor(7);\necho \"\\n\";\necho largest_divisor(8);\necho \"\\n\";\necho largest_divisor(9);\necho \"\\n\";\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(11);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(14);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_div\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpidxjxjoj.php on line 72\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest = $i;\n        }\n    }\n    return $largest;\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(45);\necho \"\\n\";\necho largest_divisor(50);\necho \"\\n\";\necho largest_divisor(55);\necho \"\\n\";\necho largest_divisor(60);\necho \"\\n\";\necho largest_divisor(65);\necho \"\\n\";\necho largest_divisor(70);\necho \"\\n\";\necho largest_divisor(75);\necho \"\\n\";\necho largest_divisor(80);\necho \"\\n\";\necho largest_divisor(85);\necho \"\\n\";\necho largest_divisor(90);\necho \"\\n\";\necho largest_divisor(95);\necho \"\\n\";\necho largest_divisor(100);\necho \"\\n\";\necho largest_divisor(105);\necho \"\\n\";\necho largest_divisor(110);\necho \"\\n\";\necho largest_divisor(115);\necho \"\\n\";\necho largest_divisor(120);\necho \"\\n\";\necho largest_divisor(125);\necho \"\\n\";\necho largest_divisor(130);\necho \"\\n\";\necho largest_divisor(135);\necho \"\\n\";\necho largest_divisor(140);\necho \"\\n\";\necho largest_divisor(145);\necho \"\\n\";\necho largest_divisor(150);\necho \"\\n\";\necho largest_divisor(155);\necho \"\\n\";\necho\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpkageukh8.php on line 74\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(100);\necho \"\\n\";\necho largest_divisor(101);\necho \"\\n\";\necho largest_divisor(102);\necho \"\\n\";\necho largest_divisor(103);\necho \"\\n\";\necho largest_divisor(104);\necho \"\\n\";\necho largest_divisor(105);\necho \"\\n\";\necho largest_divisor(106);\necho \"\\n\";\necho largest_divisor(107);\necho \"\\n\";\necho largest_divisor(108);\necho \"\\n\";\necho largest_divisor(109);\necho \"\\n\";\necho largest_divisor(110);\necho \"\\n\";\necho largest_divisor(111);\necho \"\\n\";\necho largest_divisor(112);\necho \"\\n\";\necho largest_divisor(113);\necho \"\\n\";\necho largest_divisor(114);\necho \"\\n\";\necho largest_divisor(115);\necho \"\\n\";\necho largest_divisor(116);\necho \"\\n\";\necho largest_divisor(117);\necho \"\\n\";\necho largest_divisor(118);\necho \"\\n\";\necho largest_divisor(119);\necho \"\\n\";\necho largest_divisor(120);\necho \"\\n\";\necho largest_divisor(121);\necho \"\\n\";\necho largest_divisor(122);\necho \"\\n\";\necho largest_divisor(123);\necho \"\\n\";\necho largest_divisor(124);\necho \"\\n\";\necho largest_divisor(125);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmph65y_9g5.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t}\n}\n\necho largest_divisor(10);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(41);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(43);\necho \"\\n\";\necho largest_div\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpjvojvr6o.php on line 72\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\t$largest_divisor = 1;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\t$largest_divisor = $i;\n\t\t}\n\t}\n\treturn $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(9);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "6\n5\n3\n1\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\necho largest_divisor(10);\necho \"<br>\";\necho largest_divisor(15);\necho \"<br>\";\necho largest_divisor(20);\necho \"<br>\";\necho largest_divisor(25);\necho \"<br>\";\necho largest_divisor(30);\necho \"<br>\";\necho largest_divisor(35);\necho \"<br>\";\necho largest_divisor(40);\necho \"<br>\";\necho largest_divisor(45);\necho \"<br>\";\necho largest_divisor(50);\necho \"<br>\";\necho largest_divisor(55);\necho \"<br>\";\necho largest_divisor(60);\necho \"<br>\";\necho largest_divisor(65);\necho \"<br>\";\necho largest_divisor(70);\necho \"<br>\";\necho largest_divisor(75);\necho \"<br>\";\necho largest_divisor(80);\necho \"<br>\";\necho largest_divisor(85);\necho \"<br>\";\necho largest_divisor(90);\necho \"<br>\";\necho largest_divisor(95);\necho \"<br>\";\necho largest_divisor(100);\necho \"<br>\";\necho largest_divisor(105);\necho \"<br>\";\necho largest_divisor(110);\necho \"<br>\";\necho largest_divisor(115);\necho \"<br>\";\necho largest_divisor(120);\necho \"<br>\";\necho largest_divisor(125);\necho \"<br>\";\necho largest_divisor(130);\necho \"<br>\";\necho largest_divisor(135);\necho \"<br>\";\necho largest_divisor(140);\necho \"<br>\";\necho largest_divisor(\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpx3yfjr8u.php on line 68\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(41);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(43);\necho \"\\n\";\necho largest_div\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpjvojvr6o.php on line 72\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(15);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(5);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(100);\necho \"\\n\";\necho largest_divisor(1000);\necho \"\\n\";\necho largest_divisor(10000);\necho \"\\n\";\necho largest_divisor(100000);\necho \"\\n\";\necho largest_divisor(1000000);\necho \"\\n\";\necho largest_divisor(10000000);\necho \"\\n\";\necho largest_divisor(100000000);\necho \"\\n\";\necho largest_divisor(1000000000);\necho \"\\n\";\necho largest_divisor(10000000000);\necho \"\\n\";\necho largest_divisor(100000000000);\necho \"\\n\";\necho largest_divisor(1000000000000);\necho \"\\n\";\necho largest_divisor(10000000000000);\necho \"\\n\";\necho largest_divisor(100000000000000);\necho \"\\n\";\necho largest_divisor(1000000000000000);\necho \"\\n\";\necho largest_divisor(10000000000000000);\necho \"\\n\";\necho largest_divisor(100000000000000000);\necho \"\\n\";\necho largest_divisor(1000000000000000000);\necho \"\\n\";\necho largest_divisor(10000000000000000000);\necho \"\\n\";\necho largest_divisor(100000000000000000000);\necho \"\\n\";\necho largest_divisor(1000000000000000000000);\necho \"\\n\";\necho largest_divisor(10000000000000000000000);\necho \"\\n\";\necho largest_divisor(100000000000000000000000);\necho \"\\n\";\necho largest_divis\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmp98ez4etw.php on line 70\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\t$i = $n - 1;\n\twhile ($i > 0) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t\t$i--;\n\t}\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(41);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(43);\necho \"\\n\";\necho largest_divisor(44);\necho \"\\n\";\necho largest_div\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmph2seni5e.php on line 74\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(15); // 5\necho largest_divisor(16); // 8\necho largest_divisor(17); // 1\necho largest_divisor(18); // 6\necho largest_divisor(19); // 1\necho largest_divisor(20); // 10\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5819110",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t}\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\t$largest_divisor = 1;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\t$largest_divisor = $i;\n\t\t}\n\t}\n\treturn $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t}\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(41);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(43);\necho \"\\n\";\necho largest_divisor(44);\necho \"\\n\";\necho largest_divisor(45);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n8\n1\n9\n1\n10\n7\n11\n1\n12\n5\n13\n9\n14\n1\n15\n1\n16\n11\n17\n7\n18\n1\n19\n13\n20\n1\n21\n1\n22\n15",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(11);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(14);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpyqlnp1kg.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(9);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "6\n5\n3\n1\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest = $i;\n        }\n    }\n    return $largest;\n}\n\necho largest_divisor(10) . \"\\n\";\necho largest_divisor(20) . \"\\n\";\necho largest_divisor(30) . \"\\n\";\necho largest_divisor(40) . \"\\n\";\necho largest_divisor(50) . \"\\n\";\necho largest_divisor(60) . \"\\n\";\necho largest_divisor(70) . \"\\n\";\necho largest_divisor(80) . \"\\n\";\necho largest_divisor(90) . \"\\n\";\necho largest_divisor(100) . \"\\n\";\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n10\n15\n20\n25\n30\n35\n40\n45\n50\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(15);\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(41);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(43);\necho \"\\n\";\necho largest_divisor(44);\necho \"\\n\";\necho largest_divisor(45);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpknagp0r5.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t}\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(100);\necho \"\\n\";\necho largest_divisor(7);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n10\n50\n1\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(15) . \"\\n\";\necho largest_divisor(16) . \"\\n\";\necho largest_divisor(17) . \"\\n\";\necho largest_divisor(18) . \"\\n\";\necho largest_divisor(19) . \"\\n\";\necho largest_divisor(20) . \"\\n\";\necho largest_divisor(21) . \"\\n\";\necho largest_divisor(22) . \"\\n\";\necho largest_divisor(23) . \"\\n\";\necho largest_divisor(24) . \"\\n\";\necho largest_divisor(25) . \"\\n\";\necho largest_divisor(26) . \"\\n\";\necho largest_divisor(27) . \"\\n\";\necho largest_divisor(28) . \"\\n\";\necho largest_divisor(29) . \"\\n\";\necho largest_divisor(30) . \"\\n\";\necho largest_divisor(31) . \"\\n\";\necho largest_divisor(32) . \"\\n\";\necho largest_divisor(33) . \"\\n\";\necho largest_divisor(34) . \"\\n\";\necho largest_divisor(35) . \"\\n\";\necho largest_divisor(36) . \"\\n\";\necho largest_divisor(37) . \"\\n\";\necho largest_divisor(38) . \"\\n\";\necho largest_divisor(39) . \"\\n\";\necho largest_divisor(40) . \"\\n\";\necho largest_divisor(41) . \"\\n\";\necho largest_divisor(42) . \"\\n\";\necho largest_divisor(43) . \"\\n\";\necho largest_divisor(44) . \"\\n\";\necho largest_divisor(45) . \"\\n\";\necho largest_divisor(46) . \"\\n\";\necho largest_divisor(47) . \"\\n\";\necho\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpn1js7l_l.php on line 45\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\necho largest_divisor(10) . \"\\n\";\necho largest_divisor(15) . \"\\n\";\necho largest_divisor(20) . \"\\n\";\necho largest_divisor(25) . \"\\n\";\necho largest_divisor(30) . \"\\n\";\necho largest_divisor(35) . \"\\n\";\necho largest_divisor(40) . \"\\n\";\necho largest_divisor(45) . \"\\n\";\necho largest_divisor(50) . \"\\n\";\necho largest_divisor(55) . \"\\n\";\necho largest_divisor(60) . \"\\n\";\necho largest_divisor(65) . \"\\n\";\necho largest_divisor(70) . \"\\n\";\necho largest_divisor(75) . \"\\n\";\necho largest_divisor(80) . \"\\n\";\necho largest_divisor(85) . \"\\n\";\necho largest_divisor(90) . \"\\n\";\necho largest_divisor(95) . \"\\n\";\necho largest_divisor(100) . \"\\n\";\necho largest_divisor(105) . \"\\n\";\necho largest_divisor(110) . \"\\n\";\necho largest_divisor(115) . \"\\n\";\necho largest_divisor(120) . \"\\n\";\necho largest_divisor(125) . \"\\n\";\necho largest_divisor(130) . \"\\n\";\necho largest_divisor(135) . \"\\n\";\necho largest_divisor(140) . \"\\n\";\necho largest_divisor(145) . \"\\n\";\necho largest_divisor(150) . \"\\n\";\necho largest_divisor(155) . \"\\n\";\necho largest_divisor(160) . \"\\n\";\necho largest_divis\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmprpg61yw6.php on line 45\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(41);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(43);\necho \"\\n\";\necho largest_divisor(44);\necho \"\\n\";\necho largest_divisor(45);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpyim4tr9n.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\t$largest_divisor = 1;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\t$largest_divisor = $i;\n\t\t}\n\t}\n\treturn $largest_divisor;\n}\n\necho largest_divisor(10);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t}\n}\n\necho largest_divisor(100);\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "50",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest = $i;\n        }\n    }\n    return $largest;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(11);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(14);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n1\n6\n1\n7\n5\n8\n1\n9\n1\n10\n7\n11\n1\n12\n5\n13\n9\n14\n1\n15\n1\n16\n11\n17\n7\n18\n1\n19\n13\n20",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(100);\necho \"\\n\";\necho largest_divisor(101);\necho \"\\n\";\necho largest_divisor(102);\necho \"\\n\";\necho largest_divisor(103);\necho \"\\n\";\necho largest_divisor(104);\necho \"\\n\";\necho largest_divisor(105);\necho \"\\n\";\necho largest_divisor(106);\necho \"\\n\";\necho largest_divisor(107);\necho \"\\n\";\necho largest_divisor(108);\necho \"\\n\";\necho largest_divisor(109);\necho \"\\n\";\necho largest_divisor(110);\necho \"\\n\";\necho largest_divisor(111);\necho \"\\n\";\necho largest_divisor(112);\necho \"\\n\";\necho largest_divisor(113);\necho \"\\n\";\necho largest_divisor(114);\necho \"\\n\";\necho largest_divisor(115);\necho \"\\n\";\necho largest_divisor(116);\necho \"\\n\";\necho largest_divisor(117);\necho \"\\n\";\necho largest_divisor(118);\necho \"\\n\";\necho largest_divisor(119);\necho \"\\n\";\necho largest_divisor(120);\necho \"\\n\";\necho largest_divisor(121);\necho \"\\n\";\necho largest_divisor(122);\necho \"\\n\";\necho largest_divisor(123);\necho \"\\n\";\necho largest_divisor(124);\necho \"\\n\";\necho largest_divisor(125);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmph65y_9g5.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(97);\necho \"\\n\";\necho largest_divisor(0);\necho \"\\n\";\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n5\n1\n-1\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\necho largest_divisor(12) . \"\\n\";\necho largest_divisor(15) . \"\\n\";\necho largest_divisor(97) . \"\\n\";\necho largest_divisor(0) . \"\\n\";\necho largest_divisor(1) . \"\\n\";\necho largest_divisor(2) . \"\\n\";\necho largest_divisor(3) . \"\\n\";\necho largest_divisor(4) . \"\\n\";\necho largest_divisor(5) . \"\\n\";\necho largest_divisor(6) . \"\\n\";\necho largest_divisor(7) . \"\\n\";\necho largest_divisor(8) . \"\\n\";\necho largest_divisor(9) . \"\\n\";\necho largest_divisor(10) . \"\\n\";\necho largest_divisor(11) . \"\\n\";\necho largest_divisor(12) . \"\\n\";\necho largest_divisor(13) . \"\\n\";\necho largest_divisor(14) . \"\\n\";\necho largest_divisor(15) . \"\\n\";\necho largest_divisor(16) . \"\\n\";\necho largest_divisor(17) . \"\\n\";\necho largest_divisor(18) . \"\\n\";\necho largest_divisor(19) . \"\\n\";\necho largest_divisor(20) . \"\\n\";\necho largest_divisor(21) . \"\\n\";\necho largest_divisor(22) . \"\\n\";\necho largest_divisor(23) . \"\\n\";\necho largest_divisor(24) . \"\\n\";\necho largest_divisor(25) . \"\\n\";\necho largest_divisor(26) . \"\\n\";\necho largest_divisor(27) . \"\\n\";\necho largest_divisor(28) . \"\\n\";\necho largest_divisor(29) . \"\\n\";\necho\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmp7_ch1z58.php on line 45\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(14);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(69);\necho \"\\n\";\necho largest_divisor(221);\necho \"\\n\";\necho largest_divisor(5);\necho \"\\n\";\necho largest_divisor(80);\necho \"\\n\";\necho largest_divisor(7);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(9);\necho \"\\n\";\necho largest_divisor(91);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(3);\necho \"\\n\";\necho largest_divisor(2);\necho \"\\n\";\necho largest_divisor(1);\necho \"\\n\";\necho largest_divisor(101);\necho \"\\n\";\necho largest_divisor(45);\necho \"\\n\";\necho largest_divisor(7);\necho \"\\n\";\necho largest_divisor(48);\necho \"\\n\";\necho largest_divisor(221);\necho \"\\n\";\necho largest_divisor(57);\necho \"\\n\";\necho largest_divisor(99);\necho \"\\n\";\necho largest_divisor(5);\necho \"\\n\";\necho largest_divisor(80);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(9);\necho \"\\n\";\necho largest_divisor(91);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(3);\necho \"\\n\";\necho largest_divisor(2);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmprc0hlyga.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(41);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(43);\necho \"\\n\";\necho largest_divisor(44);\necho \"\\n\";\necho largest_divisor(45);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpknagp0r5.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\necho \"<br>\";\necho largest_divisor(15);\necho \"<br>\";\necho largest_divisor(20);\necho \"<br>\";\necho largest_divisor(25);\necho \"<br>\";\necho largest_divisor(30);\necho \"<br>\";\necho largest_divisor(35);\necho \"<br>\";\necho largest_divisor(40);\necho \"<br>\";\necho largest_divisor(45);\necho \"<br>\";\necho largest_divisor(50);\necho \"<br>\";\necho largest_divisor(55);\necho \"<br>\";\necho largest_divisor(60);\necho \"<br>\";\necho largest_divisor(65);\necho \"<br>\";\necho largest_divisor(70);\necho \"<br>\";\necho largest_divisor(75);\necho \"<br>\";\necho largest_divisor(80);\necho \"<br>\";\necho largest_divisor(85);\necho \"<br>\";\necho largest_divisor(90);\necho \"<br>\";\necho largest_divisor(95);\necho \"<br>\";\necho largest_divisor(100);\necho \"<br>\";\necho largest_divisor(105);\necho \"<br>\";\necho largest_divisor(110);\necho \"<br>\";\necho largest_divisor(115);\necho \"<br>\";\necho largest_divisor(120);\necho \"<br>\";\necho largest_divisor(125);\necho \"<br>\";\necho largest_divisor(130);\necho \"<br>\";\necho largest_divisor(135);\necho \"<br>\";\necho largest_divisor(140);\necho \"<br>\";\necho largest_divisor(145);\necho \"<br>\";\necho largest_divisor(150);\necho \"<br>\";\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5<br>5<br>10<br>5<br>15<br>7<br>20<br>15<br>25<br>11<br>30<br>13<br>35<br>25<br>40<br>17<br>45<br>19<br>50<br>35<br>55<br>23<br>60<br>25<br>65<br>45<br>70<br>29<br>75<br>",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(15) . \"\\n\";\necho largest_divisor(16) . \"\\n\";\necho largest_divisor(17) . \"\\n\";\necho largest_divisor(18) . \"\\n\";\necho largest_divisor(19) . \"\\n\";\necho largest_divisor(20) . \"\\n\";\necho largest_divisor(21) . \"\\n\";\necho largest_divisor(22) . \"\\n\";\necho largest_divisor(23) . \"\\n\";\necho largest_divisor(24) . \"\\n\";\necho largest_divisor(25) . \"\\n\";\necho largest_divisor(26) . \"\\n\";\necho largest_divisor(27) . \"\\n\";\necho largest_divisor(28) . \"\\n\";\necho largest_divisor(29) . \"\\n\";\necho largest_divisor(30) . \"\\n\";\necho largest_divisor(31) . \"\\n\";\necho largest_divisor(32) . \"\\n\";\necho largest_divisor(33) . \"\\n\";\necho largest_divisor(34) . \"\\n\";\necho largest_divisor(35) . \"\\n\";\necho largest_divisor(36) . \"\\n\";\necho largest_divisor(37) . \"\\n\";\necho largest_divisor(38) . \"\\n\";\necho largest_divisor(39) . \"\\n\";\necho largest_divisor(40) . \"\\n\";\necho largest_divisor(41) . \"\\n\";\necho largest_divisor(42) . \"\\n\";\necho largest_divisor(43) . \"\\n\";\necho largest_divisor(44) . \"\\n\";\necho largest_divisor(45) . \"\\n\";\necho largest_divisor(46) . \"\\n\";\necho largest_divisor(47) . \"\\n\";\necho\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpn1js7l_l.php on line 45\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": -1,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(126);\necho \"\\n\";\necho largest_divisor(1024);\necho \"\\n\";\necho largest_divisor(13195);\necho \"\\n\";\necho largest_divisor(600851475143);\necho \"\\n\";\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Timeout",
      "stderr": "None",
      "stdout": "b'5\\n8\\n1\\n5\\n63\\n512\\n2639\\n'",
      "timestamp": 1659729921
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(11);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(14);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpyqlnp1kg.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(41);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(43);\necho \"\\n\";\necho largest_divisor(44);\necho \"\\n\";\necho largest_divisor(45);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpknagp0r5.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(100);\necho \"\\n\";\necho largest_divisor(101);\necho \"\\n\";\necho largest_divisor(102);\necho \"\\n\";\necho largest_divisor(103);\necho \"\\n\";\necho largest_divisor(104);\necho \"\\n\";\necho largest_divisor(105);\necho \"\\n\";\necho largest_divisor(106);\necho \"\\n\";\necho largest_divisor(107);\necho \"\\n\";\necho largest_divisor(108);\necho \"\\n\";\necho largest_divisor(109);\necho \"\\n\";\necho largest_divisor(110);\necho \"\\n\";\necho largest_divisor(111);\necho \"\\n\";\necho largest_divisor(112);\necho \"\\n\";\necho largest_divisor(113);\necho \"\\n\";\necho largest_divisor(114);\necho \"\\n\";\necho largest_divisor(115);\necho \"\\n\";\necho largest_divisor(116);\necho \"\\n\";\necho largest_divisor(117);\necho \"\\n\";\necho largest_divisor(118);\necho \"\\n\";\necho largest_divisor(119);\necho \"\\n\";\necho largest_divisor(120);\necho \"\\n\";\necho largest_divisor(121);\necho \"\\n\";\necho largest_divisor(122);\necho \"\\n\";\necho largest_divisor(123);\necho \"\\n\";\necho largest_divisor(124);\necho \"\\n\";\necho largest_divisor(125);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n10\n5\n1\n5\n50\n1\n51\n1\n52\n35\n53\n1\n54\n1\n55\n37\n56\n1\n57\n23\n58\n39\n59\n17\n60\n11\n61\n41\n62\n25",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\necho largest_divisor(15);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(41);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(43);\necho \"\\n\";\necho largest_divisor(44);\necho \"\\n\";\necho largest_divisor(45);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpyim4tr9n.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t}\n}\n\necho largest_divisor(10);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest = $i;\n        }\n    }\n    return $largest;\n}\n\necho largest_divisor(10);\necho \"<br>\";\necho largest_divisor(20);\necho \"<br>\";\necho largest_divisor(30);\necho \"<br>\";\necho largest_divisor(40);\necho \"<br>\";\necho largest_divisor(50);\necho \"<br>\";\necho largest_divisor(60);\necho \"<br>\";\necho largest_divisor(70);\necho \"<br>\";\necho largest_divisor(80);\necho \"<br>\";\necho largest_divisor(90);\necho \"<br>\";\necho largest_divisor(100);\necho \"<br>\";\necho largest_divisor(110);\necho \"<br>\";\necho largest_divisor(120);\necho \"<br>\";\necho largest_divisor(130);\necho \"<br>\";\necho largest_divisor(140);\necho \"<br>\";\necho largest_divisor(150);\necho \"<br>\";\necho largest_divisor(160);\necho \"<br>\";\necho largest_divisor(170);\necho \"<br>\";\necho largest_divisor(180);\necho \"<br>\";\necho largest_divisor(190);\necho \"<br>\";\necho largest_divisor(200);\necho \"<br>\";\necho largest_divisor(210);\necho \"<br>\";\necho largest_divisor(220);\necho \"<br>\";\necho largest_divisor(230);\necho \"<br>\";\necho largest_divisor(240);\necho \"<br>\";\necho largest_divisor(250);\necho \"<br>\";\necho largest_divisor(260);\necho \"<br>\";\necho largest_divisor(270);\necho \"<br>\";\necho largest_divisor(280);\necho \"<br>\";\necho largest_\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpl7hh7fjg.php on line 70\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(11);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(14);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n1\n6\n1\n7\n5\n8\n1\n9\n1\n10\n7\n11\n1\n12\n5\n13\n9\n14\n1\n15\n1\n16\n11\n17\n7\n18\n1\n19\n13\n20",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\t$i = $n - 1;\n\twhile ($i > 0) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t\t$i--;\n\t}\n}\n\necho largest_divisor(10);\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(11);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(14);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpyqlnp1kg.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\necho largest_divisor(10);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\necho largest_divisor(15); // 5\necho largest_divisor(16); // 8\necho largest_divisor(17); // 1\necho largest_divisor(18); // 9\necho largest_divisor(19); // 1\necho largest_divisor(20); // 10\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5819110",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t}\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(11);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(14);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n1\n6\n1\n7\n5\n8\n1\n9\n1\n10\n7\n11\n1\n12\n5\n13\n9\n14\n1\n15\n1\n16\n11\n17\n7\n18\n1\n19\n13\n20",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\necho largest_divisor(15); // 5\necho largest_divisor(97); // 1\necho largest_divisor(48); // 16\necho largest_divisor(36); // 12\necho largest_divisor(17); // 1\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5124181",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(15); // 5\necho largest_divisor(16); // 8\necho largest_divisor(17); // 1\necho largest_divisor(18); // 9\necho largest_divisor(19); // 1\necho largest_divisor(20); // 10\necho largest_divisor(21); // 7\necho largest_divisor(22); // 11\necho largest_divisor(23); // 1\necho largest_divisor(24); // 12\necho largest_divisor(25); // 5\necho largest_divisor(26); // 13\necho largest_divisor(27); // 9\necho largest_divisor(28); // 14\necho largest_divisor(29); // 1\necho largest_divisor(30); // 15\necho largest_divisor(31); // 1\necho largest_divisor(32); // 16\necho largest_divisor(33); // 11\necho largest_divisor(34); // 17\necho largest_divisor(35); // 7\necho largest_divisor(36); // 18\necho largest_divisor(37); // 1\necho largest_divisor(38); // 19\necho largest_divisor(39); // 13\necho largest_divisor(40); // 20\necho largest_divisor(41); // 1\necho largest_divisor(42); // 21\necho largest_divisor(43); // 1\necho largest_divisor(44); // 22\necho largest_divisor(45); // 15\necho largest_divisor(46); // 23\necho largest_divisor(47); // 1\necho largest_divisor(48); // 24\necho largest_divisor(49); // 7\necho largest_divisor(50); // 25\necho largest_divisor(51); // 17\necho largest_divisor(52); // 26\necho largest_divisor(\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmp7u5y7gz2.php on line 50\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(45);\necho \"\\n\";\necho largest_divisor(50);\necho \"\\n\";\necho largest_divisor(55);\necho \"\\n\";\necho largest_divisor(60);\necho \"\\n\";\necho largest_divisor(65);\necho \"\\n\";\necho largest_divisor(70);\necho \"\\n\";\necho largest_divisor(75);\necho \"\\n\";\necho largest_divisor(80);\necho \"\\n\";\necho largest_divisor(85);\necho \"\\n\";\necho largest_divisor(90);\necho \"\\n\";\necho largest_divisor(95);\necho \"\\n\";\necho largest_divisor(100);\necho \"\\n\";\necho largest_divisor(105);\necho \"\\n\";\necho largest_divisor(110);\necho \"\\n\";\necho largest_divisor(115);\necho \"\\n\";\necho largest_divisor(120);\necho \"\\n\";\necho largest_divisor(125);\necho \"\\n\";\necho largest_divisor(130);\necho \"\\n\";\necho largest_divisor(135);\necho \"\\n\";\necho largest_divisor(140);\necho \"\\n\";\necho largest_divisor(145);\necho \"\\n\";\necho largest_divisor(150);\necho \"\\n\";\necho largest_divisor(155);\necho \"\\n\";\necho largest_divisor(160);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmps7j5ljfy.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\necho largest_divisor(10);\necho largest_divisor(25);\necho largest_divisor(13);\necho largest_divisor(17);\necho largest_divisor(144);\necho largest_divisor(1024);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "551172512",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(41);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(43);\necho \"\\n\";\necho largest_divisor(44);\necho \"\\n\";\necho largest_divisor(45);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpknagp0r5.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(144);\necho \"\\n\";\necho largest_divisor(1024);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(72);\necho \"\\n\";\necho largest_divisor(11);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(132);\necho \"\\n\";\necho largest_divisor(250);\necho \"\\n\";\necho largest_divisor(127);\necho \"\\n\";\necho largest_divisor(144);\necho \"\\n\";\necho largest_divisor(1024);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(72);\necho \"\\n\";\necho largest_divisor(11);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(132);\necho \"\\n\";\necho largest_divisor(250);\necho \"\\n\";\necho largest_divisor(127);\necho \"\\n\";\necho largest_divisor(144);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmp6nx01k3o.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\t$largest_divisor = 1;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\t$largest_divisor = $i;\n\t\t}\n\t}\n\treturn $largest_divisor;\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(11);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(14);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n1\n6\n1\n7\n5\n8\n1\n9\n1\n10\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\necho largest_divisor(10);\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(11);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(14);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpyqlnp1kg.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(11);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(14);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n1\n6\n1\n7\n5\n8\n1\n9\n1\n10\n7\n11\n1\n12\n5\n13\n9\n14\n1\n15\n1\n16\n11\n17\n7\n18\n1\n19\n13\n20",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(97);\necho \"\\n\";\necho largest_divisor(0);\necho \"\\n\";\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n5\n1\n\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(15); // 5\necho largest_divisor(16); // 8\necho largest_divisor(17); // 1\necho largest_divisor(18); // 9\necho largest_divisor(19); // 1\necho largest_divisor(20); // 10\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5819110",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest = $i;\n        }\n    }\n    return $largest;\n}\n\necho largest_divisor(10);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\necho largest_divisor(10) . \"\\n\";\necho largest_divisor(15) . \"\\n\";\necho largest_divisor(20) . \"\\n\";\necho largest_divisor(25) . \"\\n\";\necho largest_divisor(30) . \"\\n\";\necho largest_divisor(35) . \"\\n\";\necho largest_divisor(40) . \"\\n\";\necho largest_divisor(45) . \"\\n\";\necho largest_divisor(50) . \"\\n\";\necho largest_divisor(55) . \"\\n\";\necho largest_divisor(60) . \"\\n\";\necho largest_divisor(65) . \"\\n\";\necho largest_divisor(70) . \"\\n\";\necho largest_divisor(75) . \"\\n\";\necho largest_divisor(80) . \"\\n\";\necho largest_divisor(85) . \"\\n\";\necho largest_divisor(90) . \"\\n\";\necho largest_divisor(95) . \"\\n\";\necho largest_divisor(100) . \"\\n\";\necho largest_divisor(105) . \"\\n\";\necho largest_divisor(110) . \"\\n\";\necho largest_divisor(115) . \"\\n\";\necho largest_divisor(120) . \"\\n\";\necho largest_divisor(125) . \"\\n\";\necho largest_divisor(130) . \"\\n\";\necho largest_divisor(135) . \"\\n\";\necho largest_divisor(140) . \"\\n\";\necho largest_divisor(145) . \"\\n\";\necho largest_divisor(150) . \"\\n\";\necho largest_divisor(155) . \"\\n\";\necho largest_divisor(160) . \"\\n\";\necho largest_divisor(165) . \"\\n\";\necho largest_divisor(170) . \"\\n\";\necho\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpyox33oz9.php on line 45\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(15); // 5\necho largest_divisor(16); // 8\necho largest_divisor(17); // 1\necho largest_divisor(18); // 6\necho largest_divisor(19); // 1\necho largest_divisor(20); // 10\necho largest_divisor(21); // 7\necho largest_divisor(22); // 11\necho largest_divisor(23); // 1\necho largest_divisor(24); // 12\necho largest_divisor(25); // 5\necho largest_divisor(26); // 13\necho largest_divisor(27); // 9\necho largest_divisor(28); // 14\necho largest_divisor(29); // 1\necho largest_divisor(30); // 15\necho largest_divisor(31); // 1\necho largest_divisor(32); // 16\necho largest_divisor(33); // 11\necho largest_divisor(34); // 17\necho largest_divisor(35); // 7\necho largest_divisor(36); // 18\necho largest_divisor(37); // 1\necho largest_divisor(38); // 19\necho largest_divisor(39); // 13\necho largest_divisor(40); // 20\necho largest_divisor(41); // 1\necho largest_divisor(42); // 21\necho largest_divisor(43); // 1\necho largest_divisor(44); // 22\necho largest_divisor(45); // 15\necho largest_divisor(46); // 23\necho largest_divisor(47); // 1\necho largest_divisor(48); // 24\necho largest_divisor(49); // 7\necho largest_divisor(50); // 25\necho largest_divisor(51); // 17\necho largest_divisor(52); // 26\necho largest_divisor(\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpd9avoe4u.php on line 50\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\necho \"<br>\";\necho largest_divisor(15);\necho \"<br>\";\necho largest_divisor(20);\necho \"<br>\";\necho largest_divisor(25);\necho \"<br>\";\necho largest_divisor(30);\necho \"<br>\";\necho largest_divisor(35);\necho \"<br>\";\necho largest_divisor(40);\necho \"<br>\";\necho largest_divisor(45);\necho \"<br>\";\necho largest_divisor(50);\necho \"<br>\";\necho largest_divisor(55);\necho \"<br>\";\necho largest_divisor(60);\necho \"<br>\";\necho largest_divisor(65);\necho \"<br>\";\necho largest_divisor(70);\necho \"<br>\";\necho largest_divisor(75);\necho \"<br>\";\necho largest_divisor(80);\necho \"<br>\";\necho largest_divisor(85);\necho \"<br>\";\necho largest_divisor(90);\necho \"<br>\";\necho largest_divisor(95);\necho \"<br>\";\necho largest_divisor(100);\necho \"<br>\";\necho largest_divisor(105);\necho \"<br>\";\necho largest_divisor(110);\necho \"<br>\";\necho largest_divisor(115);\necho \"<br>\";\necho largest_divisor(120);\necho \"<br>\";\necho largest_divisor(125);\necho \"<br>\";\necho largest_divisor(130);\necho \"<br>\";\necho largest_divisor(135);\necho \"<br>\";\necho largest_divisor(140);\necho \"<br>\";\necho largest_divisor(145);\necho \"<br>\";\necho largest_divisor(150);\necho \"<br>\";\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5<br>5<br>10<br>5<br>15<br>7<br>20<br>15<br>25<br>11<br>30<br>13<br>35<br>25<br>40<br>17<br>45<br>19<br>50<br>35<br>55<br>23<br>60<br>25<br>65<br>45<br>70<br>29<br>75<br>",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 1; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\necho largest_divisor(10);\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": -1,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(126);\necho \"\\n\";\necho largest_divisor(1024);\necho \"\\n\";\necho largest_divisor(13195);\necho \"\\n\";\necho largest_divisor(600851475143);\necho \"\\n\";\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Timeout",
      "stderr": "None",
      "stdout": "b'5\\n8\\n1\\n5\\n63\\n512\\n2639\\n'",
      "timestamp": 1659729921
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(41);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(43);\necho \"\\n\";\necho largest_divisor(44);\necho \"\\n\";\necho largest_divisor(45);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n8\n1\n9\n1\n10\n7\n11\n1\n12\n5\n13\n9\n14\n1\n15\n1\n16\n11\n17\n7\n18\n1\n19\n13\n20\n1\n21\n1\n22\n15",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\t$i = $n - 1;\n\twhile ($i > 0) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t\t$i--;\n\t}\n}\n\necho largest_divisor(20);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "10",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 1; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(15) . PHP_EOL;\necho largest_divisor(16) . PHP_EOL;\necho largest_divisor(17) . PHP_EOL;\necho largest_divisor(18) . PHP_EOL;\necho largest_divisor(19) . PHP_EOL;\necho largest_divisor(20) . PHP_EOL;\necho largest_divisor(21) . PHP_EOL;\necho largest_divisor(22) . PHP_EOL;\necho largest_divisor(23) . PHP_EOL;\necho largest_divisor(24) . PHP_EOL;\necho largest_divisor(25) . PHP_EOL;\necho largest_divisor(26) . PHP_EOL;\necho largest_divisor(27) . PHP_EOL;\necho largest_divisor(28) . PHP_EOL;\necho largest_divisor(29) . PHP_EOL;\necho largest_divisor(30) . PHP_EOL;\necho largest_divisor(31) . PHP_EOL;\necho largest_divisor(32) . PHP_EOL;\necho largest_divisor(33) . PHP_EOL;\necho largest_divisor(34) . PHP_EOL;\necho largest_divisor(35) . PHP_EOL;\necho largest_divisor(36) . PHP_EOL;\necho largest_divisor(37) . PHP_EOL;\necho largest_divisor(38) . PHP_EOL;\necho largest_divisor(39) . PHP_EOL;\necho largest_divisor(40) . PHP_EOL;\necho largest_divisor(41) . PHP_EOL;\necho largest_divisor(42) . PHP_EOL;\necho largest_divisor(43) . PHP_EOL;\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n8\n1\n9\n1\n10\n7\n11\n1\n12\n5\n13\n9\n14\n1\n15\n1\n16\n11\n17\n7\n18\n1\n19\n13\n20\n1\n21\n1\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\t$largest_divisor = 1;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\t$largest_divisor = $i;\n\t\t}\n\t}\n\treturn $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(11);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(14);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpyqlnp1kg.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\necho largest_divisor(10) . \"\\n\";\necho largest_divisor(11) . \"\\n\";\necho largest_divisor(12) . \"\\n\";\necho largest_divisor(13) . \"\\n\";\necho largest_divisor(14) . \"\\n\";\necho largest_divisor(15) . \"\\n\";\necho largest_divisor(16) . \"\\n\";\necho largest_divisor(17) . \"\\n\";\necho largest_divisor(18) . \"\\n\";\necho largest_divisor(19) . \"\\n\";\necho largest_divisor(20) . \"\\n\";\necho largest_divisor(21) . \"\\n\";\necho largest_divisor(22) . \"\\n\";\necho largest_divisor(23) . \"\\n\";\necho largest_divisor(24) . \"\\n\";\necho largest_divisor(25) . \"\\n\";\necho largest_divisor(26) . \"\\n\";\necho largest_divisor(27) . \"\\n\";\necho largest_divisor(28) . \"\\n\";\necho largest_divisor(29) . \"\\n\";\necho largest_divisor(30) . \"\\n\";\necho largest_divisor(31) . \"\\n\";\necho largest_divisor(32) . \"\\n\";\necho largest_divisor(33) . \"\\n\";\necho largest_divisor(34) . \"\\n\";\necho largest_divisor(35) . \"\\n\";\necho largest_divisor(36) . \"\\n\";\necho largest_divisor(37) . \"\\n\";\necho largest_divisor(38) . \"\\n\";\necho largest_divisor(39) . \"\\n\";\necho largest_divisor(40) . \"\\n\";\necho largest_divisor(41) . \"\\n\";\necho largest_divisor(42) . \"\\\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmppv3xi3fo.php on line 51\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(11);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(14);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpyqlnp1kg.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t}\n}\n\necho largest_divisor(12);\necho largest_divisor(15);\necho largest_divisor(97);\necho largest_divisor(0);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "651",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(41);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(43);\necho \"\\n\";\necho largest_divisor(44);\necho \"\\n\";\necho largest_divisor(45);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpknagp0r5.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\necho largest_divisor(10);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\necho largest_divisor(15);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(41);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(43);\necho \"\\n\";\necho largest_divisor(44);\necho \"\\n\";\necho largest_divisor(45);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpknagp0r5.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t}\n}\n\necho largest_divisor(15); // 5\necho largest_divisor(16); // 8\necho largest_divisor(17); // 1\necho largest_divisor(18); // 9\necho largest_divisor(19); // 1\necho largest_divisor(20); // 10\necho largest_divisor(21); // 3\necho largest_divisor(22); // 11\necho largest_divisor(23); // 1\necho largest_divisor(24); // 12\necho largest_divisor(25); // 5\necho largest_divisor(26); // 13\necho largest_divisor(27); // 9\necho largest_divisor(28); // 14\necho largest_divisor(29); // 1\necho largest_divisor(30); // 15\necho largest_divisor(31); // 1\necho largest_divisor(32); // 16\necho largest_divisor(33); // 11\necho largest_divisor(34); // 17\necho largest_divisor(35); // 5\necho largest_divisor(36); // 18\necho largest_divisor(37); // 1\necho largest_divisor(38); // 19\necho largest_divisor(39); // 1\necho largest_divisor(40); // 20\necho largest_divisor(41); // 1\necho largest_divisor(42); // 21\necho largest_divisor(43); // 1\necho largest_divisor(44); // 22\necho largest_divisor(45); // 15\necho largest_divisor(46); // 23\necho largest_divisor(47); // 1\necho largest_divisor(48); // 24\necho largest_divisor(49); // 7\necho largest_divisor(50); // 25\necho largest_divisor(51); // 3\necho largest_divisor(52); // 26\necho largest_\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpcd7ez4we.php on line 50\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(125);\necho \"\\n\";\necho largest_divisor(132189);\necho \"\\n\";\necho largest_divisor(49);\necho \"\\n\";\necho largest_divisor(147);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25432);\necho \"\\n\";\necho largest_divisor(135);\necho \"\\n\";\necho largest_divisor(2048);\necho \"\\n\";\necho largest_divisor(357);\necho \"\\n\";\necho largest_divisor(360);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(14);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(18);\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n1\n5\n25\n44063\n7\n49\n1\n7\n12\n12716\n45\n1024\n119\n180\n6\n9\n7\n15\n1\n14\n9\n13\n5\n12\n1\n11\n7\n10\n1\n9",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(100);\necho \"\\n\";\necho largest_divisor(1000);\necho \"\\n\";\necho largest_divisor(10000);\necho \"\\n\";\necho largest_divisor(100000);\necho \"\\n\";\necho largest_divisor(1000000);\necho \"\\n\";\necho largest_divisor(10000000);\necho \"\\n\";\necho largest_divisor(100000000);\necho \"\\n\";\necho largest_divisor(1000000000);\necho \"\\n\";\necho largest_divisor(10000000000);\necho \"\\n\";\necho largest_divisor(100000000000);\necho \"\\n\";\necho largest_divisor(1000000000000);\necho \"\\n\";\necho largest_divisor(10000000000000);\necho \"\\n\";\necho largest_divisor(100000000000000);\necho \"\\n\";\necho largest_divisor(1000000000000000);\necho \"\\n\";\necho largest_divisor(10000000000000000);\necho \"\\n\";\necho largest_divisor(100000000000000000);\necho \"\\n\";\necho largest_divisor(1000000000000000000);\necho \"\\n\";\necho largest_divisor(10000000000000000000);\necho \"\\n\";\necho largest_divisor(100000000000000000000);\necho \"\\n\";\necho largest_divisor(1000000000000000000000);\necho \"\\n\";\necho largest_divisor(10000000000000000000000);\necho \"\\n\";\necho largest_divisor(100000000000000000000000);\necho \"\\n\";\necho largest_divisor(1000000000000000000000000);\necho \"\\n\";\necho largest_divisor(10000000000000000000000000);\necho \"\\n\";\necho largest_divisor(100000000000000000000000000);\necho \"\\n\";\necho largest_divisor(\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmp4hpwa3h1.php on line 66\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest = $i;\n        }\n    }\n    return $largest;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(11);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(14);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n1\n6\n1\n7\n5\n8\n1\n9\n1\n10\n7\n11\n1\n12\n5\n13\n9\n14\n1\n15\n1\n16\n11\n17\n7\n18\n1\n19\n13\n20",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(41);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(43);\necho \"\\n\";\necho largest_divisor(44);\necho \"\\n\";\necho largest_divisor(45);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpyim4tr9n.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\necho largest_divisor(15);\necho largest_divisor(16);\necho largest_divisor(17);\necho largest_divisor(18);\necho largest_divisor(19);\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "58191",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\t$largest_divisor = 1;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\t$largest_divisor = $i;\n\t\t}\n\t}\n\treturn $largest_divisor;\n}\n\necho largest_divisor(10);\necho \"<br>\";\necho largest_divisor(11);\necho \"<br>\";\necho largest_divisor(12);\necho \"<br>\";\necho largest_divisor(13);\necho \"<br>\";\necho largest_divisor(14);\necho \"<br>\";\necho largest_divisor(15);\necho \"<br>\";\necho largest_divisor(16);\necho \"<br>\";\necho largest_divisor(17);\necho \"<br>\";\necho largest_divisor(18);\necho \"<br>\";\necho largest_divisor(19);\necho \"<br>\";\necho largest_divisor(20);\necho \"<br>\";\necho largest_divisor(21);\necho \"<br>\";\necho largest_divisor(22);\necho \"<br>\";\necho largest_divisor(23);\necho \"<br>\";\necho largest_divisor(24);\necho \"<br>\";\necho largest_divisor(25);\necho \"<br>\";\necho largest_divisor(26);\necho \"<br>\";\necho largest_divisor(27);\necho \"<br>\";\necho largest_divisor(28);\necho \"<br>\";\necho largest_divisor(29);\necho \"<br>\";\necho largest_divisor(30);\necho \"<br>\";\necho largest_divisor(31);\necho \"<br>\";\necho largest_divisor(32);\necho \"<br>\";\necho largest_divisor(33);\necho \"<br>\";\necho largest_divisor(34);\necho \"<br>\";\necho largest_divisor(35);\necho \"<br>\";\necho largest_divisor(36);\necho \"<br>\";\necho largest_\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmp_l7izqwd.php on line 68\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(41);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(43);\necho \"\\n\";\necho largest_divisor(44);\necho \"\\n\";\necho largest_divisor(45);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpknagp0r5.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(15);\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t}\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\necho largest_divisor(15); // 5\necho largest_divisor(16); // 8\necho largest_divisor(17); // 1\necho largest_divisor(18); // 9\necho largest_divisor(19); // 1\necho largest_divisor(20); // 10\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5819110",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(15); // 5\necho largest_divisor(16); // 8\necho largest_divisor(17); // 1\necho largest_divisor(18); // 6\necho largest_divisor(19); // 1\necho largest_divisor(20); // 10\necho largest_divisor(21); // 3\necho largest_divisor(22); // 11\necho largest_divisor(23); // 1\necho largest_divisor(24); // 12\necho largest_divisor(25); // 5\necho largest_divisor(26); // 13\necho largest_divisor(27); // 9\necho largest_divisor(28); // 14\necho largest_divisor(29); // 1\necho largest_divisor(30); // 15\necho largest_divisor(31); // 1\necho largest_divisor(32); // 16\necho largest_divisor(33); // 11\necho largest_divisor(34); // 17\necho largest_divisor(35); // 5\necho largest_divisor(36); // 18\necho largest_divisor(37); // 1\necho largest_divisor(38); // 19\necho largest_divisor(39); // 13\necho largest_divisor(40); // 20\necho largest_divisor(41); // 1\necho largest_divisor(42); // 21\necho largest_divisor(43); // 1\necho largest_divisor(44); // 22\necho largest_divisor(45); // 15\necho largest_divisor(46); // 23\necho largest_divisor(47); // 1\necho largest_divisor(48); // 24\necho largest_divisor(49); // 7\necho largest_divisor(50); // 25\necho largest_divisor(51); // 17\necho largest_divisor(52); // 26\necho largest_divisor(\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmp4y5111na.php on line 50\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(41);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(43);\necho \"\\n\";\necho largest_divisor(44);\necho \"\\n\";\necho largest_divisor(45);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n8\n1\n9\n1\n10\n7\n11\n1\n12\n5\n13\n9\n14\n1\n15\n1\n16\n11\n17\n7\n18\n1\n19\n13\n20\n1\n21\n1\n22\n15",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\t$largest = 1;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\t$largest = $i;\n\t\t}\n\t}\n\treturn $largest;\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(41);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(43);\necho \"\\n\";\necho largest_divisor(44);\necho \"\\\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpwxe1yjk6.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 1; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\necho largest_divisor(10);\necho \"<br>\";\necho largest_divisor(11);\necho \"<br>\";\necho largest_divisor(12);\necho \"<br>\";\necho largest_divisor(13);\necho \"<br>\";\necho largest_divisor(14);\necho \"<br>\";\necho largest_divisor(15);\necho \"<br>\";\necho largest_divisor(16);\necho \"<br>\";\necho largest_divisor(17);\necho \"<br>\";\necho largest_divisor(18);\necho \"<br>\";\necho largest_divisor(19);\necho \"<br>\";\necho largest_divisor(20);\necho \"<br>\";\necho largest_divisor(21);\necho \"<br>\";\necho largest_divisor(22);\necho \"<br>\";\necho largest_divisor(23);\necho \"<br>\";\necho largest_divisor(24);\necho \"<br>\";\necho largest_divisor(25);\necho \"<br>\";\necho largest_divisor(26);\necho \"<br>\";\necho largest_divisor(27);\necho \"<br>\";\necho largest_divisor(28);\necho \"<br>\";\necho largest_divisor(29);\necho \"<br>\";\necho largest_divisor(30);\necho \"<br>\";\necho largest_divisor(31);\necho \"<br>\";\necho largest_divisor(32);\necho \"<br>\";\necho largest_divisor(33);\necho \"<br>\";\necho largest_divisor(34);\necho \"<br>\";\necho largest_divisor(35);\necho \"<br>\";\necho largest_divisor(36);\necho \"<br>\";\necho largest_divisor(\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmp1wi31ngq.php on line 68\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest = $i;\n        }\n    }\n    return $largest;\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(137);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(133);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(176);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(4);\necho \"\\n\";\necho largest_divisor(3);\necho \"\\n\";\necho largest_divisor(2);\necho \"\\n\";\necho largest_divisor(1);\necho \"\\n\";\necho largest_divisor(0);\necho \"\\n\";\necho largest_divisor(-1);\necho \"\\n\";\necho largest_divisor(-2);\necho \"\\n\";\necho largest_divisor(-3);\necho \"\\n\";\necho largest_divisor(-4);\necho \"\\n\";\necho largest_divisor(-16);\necho \"\\n\";\necho largest_divisor(-176);\necho \"\\n\";\necho largest_divisor(-17);\necho \"\\n\";\necho largest_divisor(-27);\necho \"\\n\";\necho largest_divisor(-133);\necho \"\\n\";\necho largest_divisor(-15);\necho \"\\n\";\necho largest_divisor(-13);\necho \"\\n\";\necho largest_divisor(-137);\necho \"\\n\";\necho largest_divisor(-10);\necho \"\\n\";\necho largest_divisor(-10);\necho \"\\n\";\necho largest_divisor(-10);\necho \"\\n\";\necho largest_divisor(-10);\necho \"\\n\";\necho\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmp3c06_439.php on line 74\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest = $i;\n        }\n    }\n    return $largest;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(15);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(100);\necho \"\\n\";\necho largest_divisor(1000);\necho \"\\n\";\necho largest_divisor(10000);\necho \"\\n\";\necho largest_divisor(100000);\necho \"\\n\";\necho largest_divisor(1000000);\necho \"\\n\";\necho largest_divisor(10000000);\necho \"\\n\";\necho largest_divisor(100000000);\necho \"\\n\";\necho largest_divisor(1000000000);\necho \"\\n\";\necho largest_divisor(10000000000);\necho \"\\n\";\necho largest_divisor(100000000000);\necho \"\\n\";\necho largest_divisor(1000000000000);\necho \"\\n\";\necho largest_divisor(10000000000000);\necho \"\\n\";\necho largest_divisor(100000000000000);\necho \"\\n\";\necho largest_divisor(1000000000000000);\necho \"\\n\";\necho largest_divisor(10000000000000000);\necho \"\\n\";\necho largest_divisor(100000000000000000);\necho \"\\n\";\necho largest_divisor(1000000000000000000);\necho \"\\n\";\necho largest_divisor(10000000000000000000);\necho \"\\n\";\necho largest_divisor(100000000000000000000);\necho \"\\n\";\necho largest_divisor(1000000000000000000000);\necho \"\\n\";\necho largest_divisor(10000000000000000000000);\necho \"\\n\";\necho largest_divisor(100000000000000000000000);\necho \"\\n\";\necho largest_divisor(1000000000000000000000000);\necho \"\\n\";\necho largest_divisor(10000000000000000000000000);\necho \"\\n\";\necho largest_divisor(100000000000000000000000000);\necho \"\\n\";\necho largest_divisor(\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmp4hpwa3h1.php on line 66\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\necho largest_divisor(15); // 5\necho largest_divisor(16); // 8\necho largest_divisor(17); // 1\necho largest_divisor(18); // 9\necho largest_divisor(19); // 1\necho largest_divisor(20); // 10\necho largest_divisor(21); // 7\necho largest_divisor(22); // 11\necho largest_divisor(23); // 1\necho largest_divisor(24); // 12\necho largest_divisor(25); // 5\necho largest_divisor(26); // 13\necho largest_divisor(27); // 9\necho largest_divisor(28); // 14\necho largest_divisor(29); // 1\necho largest_divisor(30); // 15\necho largest_divisor(31); // 1\necho largest_divisor(32); // 16\necho largest_divisor(33); // 11\necho largest_divisor(34); // 17\necho largest_divisor(35); // 5\necho largest_divisor(36); // 18\necho largest_divisor(37); // 1\necho largest_divisor(38); // 19\necho largest_divisor(39); // 1\necho largest_divisor(40); // 20\necho largest_divisor(41); // 1\necho largest_divisor(42); // 21\necho largest_divisor(43); // 1\necho largest_divisor(44); // 22\necho largest_divisor(45); // 15\necho largest_divisor(46); // 23\necho largest_divisor(47); // 1\necho largest_divisor(48); // 24\necho largest_divisor(49); // 7\necho largest_divisor(50); // 25\necho largest_divisor(51); // 3\necho largest_divisor(52); // 26\necho largest_\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpl4anfg7w.php on line 52\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\necho largest_divisor(10);\necho \"<br>\";\necho largest_divisor(11);\necho \"<br>\";\necho largest_divisor(12);\necho \"<br>\";\necho largest_divisor(13);\necho \"<br>\";\necho largest_divisor(14);\necho \"<br>\";\necho largest_divisor(15);\necho \"<br>\";\necho largest_divisor(16);\necho \"<br>\";\necho largest_divisor(17);\necho \"<br>\";\necho largest_divisor(18);\necho \"<br>\";\necho largest_divisor(19);\necho \"<br>\";\necho largest_divisor(20);\necho \"<br>\";\necho largest_divisor(21);\necho \"<br>\";\necho largest_divisor(22);\necho \"<br>\";\necho largest_divisor(23);\necho \"<br>\";\necho largest_divisor(24);\necho \"<br>\";\necho largest_divisor(25);\necho \"<br>\";\necho largest_divisor(26);\necho \"<br>\";\necho largest_divisor(27);\necho \"<br>\";\necho largest_divisor(28);\necho \"<br>\";\necho largest_divisor(29);\necho \"<br>\";\necho largest_divisor(30);\necho \"<br>\";\necho largest_divisor(31);\necho \"<br>\";\necho largest_divisor(32);\necho \"<br>\";\necho largest_divisor(33);\necho \"<br>\";\necho largest_divisor(34);\necho \"<br>\";\necho largest_divisor(35);\necho \"<br>\";\necho largest_divisor(36);\necho \"<br>\";\necho largest_divisor(\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpn1505p57.php on line 68\n",
      "timestamp": 1659729917
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest = $i;\n        }\n    }\n    return $largest;\n}\n\necho largest_divisor(10);\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(15);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t}\n}\n\necho largest_divisor(10);\necho largest_divisor(15);\necho largest_divisor(20);\necho largest_divisor(25);\necho largest_divisor(30);\necho largest_divisor(35);\necho largest_divisor(40);\necho largest_divisor(45);\necho largest_divisor(50);\necho largest_divisor(55);\necho largest_divisor(60);\necho largest_divisor(65);\necho largest_divisor(70);\necho largest_divisor(75);\necho largest_divisor(80);\necho largest_divisor(85);\necho largest_divisor(90);\necho largest_divisor(95);\necho largest_divisor(100);\necho largest_divisor(105);\necho largest_divisor(110);\necho largest_divisor(115);\necho largest_divisor(120);\necho largest_divisor(125);\necho largest_divisor(130);\necho largest_divisor(135);\necho largest_divisor(140);\necho largest_divisor(145);\necho largest_divisor(150);\necho largest_divisor(155);\necho largest_divisor(160);\necho largest_divisor(165);\necho largest_divisor(170);\necho largest_divisor(175);\necho largest_divisor(180);\necho largest_divisor(185);\necho largest_divisor(190);\necho largest_divisor(195);\necho largest_divisor(200);\necho largest_divisor(205);\necho largest_divisor(210);\necho largest_divisor(215);\necho largest_divisor(220);\necho largest_divisor(225);\necho largest_divisor(230);\necho largest_divisor(235);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "55105157201525113013352540174519503555236025654570297531805585359037956510041105431107511547",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\necho largest_divisor(15);\necho largest_divisor(97);\necho largest_divisor(0);\necho largest_divisor(1);\necho largest_divisor(2);\necho largest_divisor(3);\necho largest_divisor(4);\necho largest_divisor(5);\necho largest_divisor(6);\necho largest_divisor(7);\necho largest_divisor(8);\necho largest_divisor(9);\necho largest_divisor(10);\necho largest_divisor(11);\necho largest_divisor(12);\necho largest_divisor(13);\necho largest_divisor(14);\necho largest_divisor(15);\necho largest_divisor(16);\necho largest_divisor(17);\necho largest_divisor(18);\necho largest_divisor(19);\necho largest_divisor(20);\necho largest_divisor(21);\necho largest_divisor(22);\necho largest_divisor(23);\necho largest_divisor(24);\necho largest_divisor(25);\necho largest_divisor(26);\necho largest_divisor(27);\necho largest_divisor(28);\necho largest_divisor(29);\necho largest_divisor(30);\necho largest_divisor(31);\necho largest_divisor(32);\necho largest_divisor(33);\necho largest_divisor(34);\necho largest_divisor(35);\necho largest_divisor(36);\necho largest_divisor(37);\necho largest_divisor(38);\necho largest_divisor(39);\necho largest_divisor(40);\necho largest_divisor(41);\necho largest_divisor(42);\necho largest_\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmp9gbd3ebr.php on line 58\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest = $i;\n        }\n    }\n    return $largest;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest = $i;\n        }\n    }\n    return $largest;\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(144);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(44);\necho \"\\n\";\necho largest_divisor(46);\necho \"\\n\";\necho largest_divisor(48);\necho \"\\n\";\necho largest_divisor(50);\necho \"\\n\";\necho largest_divisor(52);\necho \"\\n\";\necho largest_divisor(54);\necho \"\\n\";\necho largest_divisor(56);\necho \"\\n\";\necho largest_divisor(58);\necho \"\\n\";\necho largest_divisor(60);\necho \"\\n\";\necho largest_divisor(62);\necho \"\\n\";\necho largest_divisor(64);\necho \"\\n\";\necho\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpjvc147fy.php on line 74\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest = $i;\n        }\n    }\n    return $largest;\n}\n\necho largest_divisor(12); // 6\necho largest_divisor(15); // 5\necho largest_divisor(9); // 3\necho largest_divisor(17); // 1\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "6531",
      "timestamp": 1659729917
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(41);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(43);\necho \"\\n\";\necho largest_divisor(44);\necho \"\\n\";\necho largest_divisor(45);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n8\n1\n9\n1\n10\n7\n11\n1\n12\n5\n13\n9\n14\n1\n15\n1\n16\n11\n17\n7\n18\n1\n19\n13\n20\n1\n21\n1\n22\n15",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(97);\necho \"\\n\";\necho largest_divisor(0);\necho \"\\n\";\necho largest_divisor(1);\necho \"\\n\";\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "5\n5\n1\n-1\n\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpcs9ackad.php:5\nStack trace:\n#0 /tmp/tmpcs9ackad.php(19): largest_divisor(1)\n#1 {main}\n  thrown in /tmp/tmpcs9ackad.php on line 5\n",
      "timestamp": 1659729917
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\necho largest_divisor(15); // 5\necho largest_divisor(16); // 8\necho largest_divisor(17); // 17\necho largest_divisor(18); // 9\necho largest_divisor(19); // 19\necho largest_divisor(20); // 10\necho largest_divisor(21); // 7\necho largest_divisor(22); // 11\necho largest_divisor(23); // 23\necho largest_divisor(24); // 12\necho largest_divisor(25); // 5\necho largest_divisor(26); // 13\necho largest_divisor(27); // 9\necho largest_divisor(28); // 14\necho largest_divisor(29); // 29\necho largest_divisor(30); // 15\necho largest_divisor(31); // 31\necho largest_divisor(32); // 16\necho largest_divisor(33); // 11\necho largest_divisor(34); // 17\necho largest_divisor(35); // 5\necho largest_divisor(36); // 18\necho largest_divisor(37); // 37\necho largest_divisor(38); // 19\necho largest_divisor(39); // 13\necho largest_divisor(40); // 20\necho largest_divisor(41); // 41\necho largest_divisor(42); // 7\necho largest_divisor(43); // 43\necho largest_divisor(44); // 22\necho largest_divisor(45); // 15\necho largest_divisor(46); // 23\necho largest_divisor(47); // 47\necho largest_divisor(48); // 16\necho largest_divisor(49); // 7\necho largest_divisor(50); // 25\necho largest_divisor(51); // 17\necho largest_divisor(52); // 26\necho largest_divisor(\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmp98gbpa3l.php on line 50\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(126);\necho \"\\n\";\necho largest_divisor(1024);\necho \"\\n\";\necho largest_divisor(1365);\necho \"\\n\";\necho largest_divisor(16807);\necho \"\\n\";\necho largest_divisor(4096);\necho \"\\n\";\necho largest_divisor(40320);\necho \"\\n\";\necho largest_divisor(362880);\necho \"\\n\";\necho largest_divisor(479001600);\necho \"\\n\";\necho largest_divisor(6);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(49);\necho \"\\n\";\necho largest_divisor(180);\necho \"\\n\";\necho largest_divisor(360);\necho \"\\n\";\necho largest_divisor(2520);\necho \"\\n\";\necho largest_divisor(5040);\necho \"\\n\";\necho largest_divisor(10080);\necho \"\\n\";\necho largest_divisor(20160);\necho \"\\n\";\necho largest_divisor(40320);\necho \"\\n\";\necho largest_divisor(80640);\necho \"\\n\";\necho largest_divisor(362880);\necho \"\\n\";\necho largest_divisor(725760);\necho \"\\n\";\necho largest_divisor(1451520);\necho \"\\n\";\necho largest_divisor(2903040);\necho \"\\n\";\necho largest_divisor\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpxassz3vn.php on line 70\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t}\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\t$divisor = $n - 1;\n\twhile ($n % $divisor != 0) {\n\t\t$divisor--;\n\t}\n\treturn $divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t}\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(11);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(14);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n1\n6\n1\n7\n5\n8\n1\n9\n1\n10\n7\n11\n1\n12\n5\n13\n9\n14\n1\n15\n1\n16\n11\n17\n7\n18\n1\n19\n13\n20",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\necho largest_divisor(10);\necho \"<br>\";\necho largest_divisor(15);\necho \"<br>\";\necho largest_divisor(20);\necho \"<br>\";\necho largest_divisor(25);\necho \"<br>\";\necho largest_divisor(30);\necho \"<br>\";\necho largest_divisor(35);\necho \"<br>\";\necho largest_divisor(40);\necho \"<br>\";\necho largest_divisor(45);\necho \"<br>\";\necho largest_divisor(50);\necho \"<br>\";\necho largest_divisor(55);\necho \"<br>\";\necho largest_divisor(60);\necho \"<br>\";\necho largest_divisor(65);\necho \"<br>\";\necho largest_divisor(70);\necho \"<br>\";\necho largest_divisor(75);\necho \"<br>\";\necho largest_divisor(80);\necho \"<br>\";\necho largest_divisor(85);\necho \"<br>\";\necho largest_divisor(90);\necho \"<br>\";\necho largest_divisor(95);\necho \"<br>\";\necho largest_divisor(100);\necho \"<br>\";\necho largest_divisor(105);\necho \"<br>\";\necho largest_divisor(110);\necho \"<br>\";\necho largest_divisor(115);\necho \"<br>\";\necho largest_divisor(120);\necho \"<br>\";\necho largest_divisor(125);\necho \"<br>\";\necho largest_divisor(130);\necho \"<br>\";\necho largest_divisor(135);\necho \"<br>\";\necho largest_divisor(140);\necho \"<br>\";\necho largest_divisor(\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpx3yfjr8u.php on line 68\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t}\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(11);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(14);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n1\n6\n1\n7\n5\n8\n1\n9\n1\n10\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest = $i;\n        }\n    }\n    return $largest;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t}\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n    return $largest_divisor;\n}\n\necho largest_divisor(15);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\n$n = 10;\necho largest_divisor($n);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729917
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(15); // 5\necho largest_divisor(16); // 8\necho largest_divisor(17); // 1\necho largest_divisor(18); // 9\necho largest_divisor(19); // 1\necho largest_divisor(20); // 10\necho largest_divisor(21); // 7\necho largest_divisor(22); // 11\necho largest_divisor(23); // 1\necho largest_divisor(24); // 12\necho largest_divisor(25); // 5\necho largest_divisor(26); // 13\necho largest_divisor(27); // 9\necho largest_divisor(28); // 14\necho largest_divisor(29); // 1\necho largest_divisor(30); // 15\necho largest_divisor(31); // 1\necho largest_divisor(32); // 16\necho largest_divisor(33); // 11\necho largest_divisor(34); // 17\necho largest_divisor(35); // 7\necho largest_divisor(36); // 18\necho largest_divisor(37); // 1\necho largest_divisor(38); // 19\necho largest_divisor(39); // 13\necho largest_divisor(40); // 20\necho largest_divisor(41); // 1\necho largest_divisor(42); // 21\necho largest_divisor(43); // 1\necho largest_divisor(44); // 22\necho largest_divisor(45); // 15\necho largest_divisor(46); // 23\necho largest_divisor(47); // 1\necho largest_divisor(48); // 24\necho largest_divisor(49); // 7\necho largest_divisor(50); // 25\necho largest_divisor(51); // 17\necho largest_divisor(52); // 26\necho largest_divisor(\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmp7u5y7gz2.php on line 50\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10) . \"\\n\";\necho largest_divisor(25) . \"\\n\";\necho largest_divisor(13) . \"\\n\";\necho largest_divisor(127) . \"\\n\";\necho largest_divisor(5) . \"\\n\";\necho largest_divisor(7) . \"\\n\";\necho largest_divisor(1) . \"\\n\";\necho largest_divisor(3) . \"\\n\";\necho largest_divisor(0) . \"\\n\";\necho largest_divisor(1000) . \"\\n\";\necho largest_divisor(91) . \"\\n\";\necho largest_divisor(99) . \"\\n\";\necho largest_divisor(100) . \"\\n\";\necho largest_divisor(101) . \"\\n\";\necho largest_divisor(102) . \"\\n\";\necho largest_divisor(103) . \"\\n\";\necho largest_divisor(104) . \"\\n\";\necho largest_divisor(105) . \"\\n\";\necho largest_divisor(106) . \"\\n\";\necho largest_divisor(107) . \"\\n\";\necho largest_divisor(108) . \"\\n\";\necho largest_divisor(109) . \"\\n\";\necho largest_divisor(110) . \"\\n\";\necho largest_divisor(111) . \"\\n\";\necho largest_divisor(112) . \"\\n\";\necho largest_divisor(113) . \"\\n\";\necho largest_divisor(114) . \"\\n\";\necho largest_divisor(115) . \"\\n\";\necho largest_divisor(116) . \"\\n\";\necho largest_divisor(117) . \"\\n\";\necho largest_divisor(118) . \"\\n\";\necho largest_divisor(119) . \"\\n\";\necho largest_divisor(120) . \"\\n\";\necho\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpcryrvdgt.php on line 45\n",
      "timestamp": 1659729917
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t}\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\t$divisor = $n - 1;\n\twhile ($n % $divisor != 0) {\n\t\t$divisor--;\n\t}\n\treturn $divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $largest = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $largest = $i;\n        }\n    }\n    return $largest;\n}\n\necho largest_divisor(12);\necho \"<br>\";\necho largest_divisor(15);\necho \"<br>\";\necho largest_divisor(97);\necho \"<br>\";\necho largest_divisor(0);\necho \"<br>\";\necho largest_divisor(1);\necho \"<br>\";\necho largest_divisor(2);\necho \"<br>\";\necho largest_divisor(3);\necho \"<br>\";\necho largest_divisor(4);\necho \"<br>\";\necho largest_divisor(5);\necho \"<br>\";\necho largest_divisor(6);\necho \"<br>\";\necho largest_divisor(7);\necho \"<br>\";\necho largest_divisor(8);\necho \"<br>\";\necho largest_divisor(9);\necho \"<br>\";\necho largest_divisor(10);\necho \"<br>\";\necho largest_divisor(11);\necho \"<br>\";\necho largest_divisor(12);\necho \"<br>\";\necho largest_divisor(13);\necho \"<br>\";\necho largest_divisor(14);\necho \"<br>\";\necho largest_divisor(15);\necho \"<br>\";\necho largest_divisor(16);\necho \"<br>\";\necho largest_divisor(17);\necho \"<br>\";\necho largest_divisor(18);\necho \"<br>\";\necho largest_divisor(19);\necho \"<br>\";\necho largest_divisor(20);\necho \"<br>\";\necho largest_divisor(21);\necho \"<br>\";\necho largest_divisor(22);\necho \"<br>\";\necho largest_divisor(23);\necho \"<br>\";\necho largest_divisor(24);\necho \"<br>\";\necho largest_\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpv7wvow7d.php on line 70\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(5);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(45);\necho \"\\n\";\necho largest_divisor(50);\necho \"\\n\";\necho largest_divisor(55);\necho \"\\n\";\necho largest_divisor(60);\necho \"\\n\";\necho largest_divisor(65);\necho \"\\n\";\necho largest_divisor(70);\necho \"\\n\";\necho largest_divisor(75);\necho \"\\n\";\necho largest_divisor(80);\necho \"\\n\";\necho largest_divisor(85);\necho \"\\n\";\necho largest_divisor(90);\necho \"\\n\";\necho largest_divisor(95);\necho \"\\n\";\necho largest_divisor(100);\necho \"\\n\";\necho largest_divisor(105);\necho \"\\n\";\necho largest_divisor(110);\necho \"\\n\";\necho largest_divisor(115);\necho \"\\n\";\necho largest_divisor(120);\necho \"\\n\";\necho largest_divisor(125);\necho \"\\n\";\necho largest_divisor(130);\necho \"\\n\";\necho largest_divisor(135);\necho \"\\n\";\necho largest_divisor(140);\necho \"\\n\";\necho largest_divisor(145);\necho \"\\n\";\necho largest_divisor(150);\necho \"\\n\";\necho largest_divisor(155);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n1\n5\n10\n5\n15\n7\n20\n15\n25\n11\n30\n13\n35\n25\n40\n17\n45\n19\n50\n35\n55\n23\n60\n25\n65\n45\n70\n29\n75\n31",
      "timestamp": 1659729917
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n\t$divisor = $n - 1;\n\twhile ($n % $divisor != 0) {\n\t\t$divisor--;\n\t}\n\treturn $divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659729916
    },
    {
      "exit_code": 0,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n        $i--;\n    }\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\";\necho largest_divisor(41);\necho \"\\n\";\necho largest_divisor(42);\necho \"\\n\";\necho largest_divisor(43);\necho \"\\n\";\necho largest_divisor(44);\necho \"\\n\";\necho largest_divisor(45);\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n8\n1\n9\n1\n10\n7\n11\n1\n12\n5\n13\n9\n14\n1\n15\n1\n16\n11\n17\n7\n18\n1\n19\n13\n20\n1\n21\n1\n22\n15",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(11);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(14);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divisor(24);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(26);\necho \"\\n\";\necho largest_divisor(27);\necho \"\\n\";\necho largest_divisor(28);\necho \"\\n\";\necho largest_divisor(29);\necho \"\\n\";\necho largest_divisor(30);\necho \"\\n\";\necho largest_divisor(31);\necho \"\\n\";\necho largest_divisor(32);\necho \"\\n\";\necho largest_divisor(33);\necho \"\\n\";\necho largest_divisor(34);\necho \"\\n\";\necho largest_divisor(35);\necho \"\\n\";\necho largest_divisor(36);\necho \"\\n\";\necho largest_divisor(37);\necho \"\\n\";\necho largest_divisor(38);\necho \"\\n\";\necho largest_divisor(39);\necho \"\\n\";\necho largest_divisor(40);\necho \"\\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpyqlnp1kg.php on line 78\n",
      "timestamp": 1659729916
    },
    {
      "exit_code": 255,
      "program": "<?php\n// For a given number n, find the largest number that divides n evenly, smaller than n\nfunction largest_divisor($n) {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(25);\necho \"\\n\";\necho largest_divisor(126);\necho \"\\n\";\necho largest_divisor(1024);\necho \"\\n\";\necho largest_divisor(1365);\necho \"\\n\";\necho largest_divisor(16807);\necho \"\\n\";\necho largest_divisor(4096);\necho \"\\n\";\necho largest_divisor(40320);\necho \"\\n\";\necho largest_divisor(362880);\necho \"\\n\";\necho largest_divisor(479001600);\necho \"\\n\";\necho largest_divisor(6);\necho \"\\n\";\necho largest_divisor(7);\necho \"\\n\";\necho largest_divisor(8);\necho \"\\n\";\necho largest_divisor(9);\necho \"\\n\";\necho largest_divisor(10);\necho \"\\n\";\necho largest_divisor(11);\necho \"\\n\";\necho largest_divisor(12);\necho \"\\n\";\necho largest_divisor(13);\necho \"\\n\";\necho largest_divisor(14);\necho \"\\n\";\necho largest_divisor(15);\necho \"\\n\";\necho largest_divisor(16);\necho \"\\n\";\necho largest_divisor(17);\necho \"\\n\";\necho largest_divisor(18);\necho \"\\n\";\necho largest_divisor(19);\necho \"\\n\";\necho largest_divisor(20);\necho \"\\n\";\necho largest_divisor(21);\necho \"\\n\";\necho largest_divisor(22);\necho \"\\n\";\necho largest_divisor(23);\necho \"\\n\";\necho largest_divis\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "status": "Exception",
      "stderr": "",
      "stdout": "\nParse error: syntax error in /tmp/tmpcde5poua.php on line 72\n",
      "timestamp": 1659729917
    }
  ]
}
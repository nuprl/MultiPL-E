language: php
name: HumanEval_124_valid_date
results:
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[1] < 1 || $date[1]\
    \ > 31) return false;\n  if ($date[0] == 2 && $date[1] > 29) return false;\n \
    \ if ($date[0] == 4 || $date[0] == 6 || $date[0] == 9 || $date[0] == 11) {\n \
    \   if ($date[1] > 30) return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if (count($date_arr) != 3) {\n    return false;\n  }\n  $month =\
    \ $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  if (strlen($year) != 4) {\n    return false;\n  }\n  return true;\n\
    }\n\n$date = '02-29-2016';\necho valid_date($date);\necho \"\\n\";\n$date = '02-29-2017';\n\
    echo valid_date($date);\necho \"\\n\";\n$date = '02-29-2018';\necho valid_date($date);\n\
    echo \"\\n\";\n$date = '02-29-2019';\necho valid_date($date);\necho \"\\n\";\n\
    $date = '02-29-2020';\necho valid_date($date);\necho \"\\n\";\n$date = '02-29-2021';\n\
    echo valid_date($date);\necho \"\\n\";\n$date = '02-29-2022';\necho valid_date($date);\n\
    echo \"\\n\";\n$date = '02-29-2023';\necho valid_date($date);\necho \"\\n\";\n\
    $date = '02-29-2024';\necho valid_date($date);\necho \"\\n\";\n$date = '02-29-2025';\n\
    echo valid_date($date);\necho \"\\n\";\n$date\nfunction candidate(...$args) {\n\
    \    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpu6np2v19.php on line 73

    '
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($day < 1 || $day > 31)\
    \ {\n    return false;\n  }\n  if ($month == 2) {\n    if ($day > 29) {\n    \
    \  return false;\n    }\n  }\n  if ($month == 4 || $month == 6 || $month == 9\
    \ || $month == 11) {\n    if ($day > 30) {\n      return false;\n    }\n  }\n\
    \  if ($year < 1) {\n    return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if (count($date_arr) != 3) {\n    return false;\n  }\n  $month =\
    \ $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($day < 1 || $day > 31)\
    \ {\n    return false;\n  }\n  if ($month == 2) {\n    if ($day > 29) {\n    \
    \  return false;\n    }\n  }\n  if ($month == 4 || $month == 6 || $month == 9\
    \ || $month == 11) {\n    if ($day > 30) {\n      return false;\n    }\n  }\n\
    \  if (strlen($year) != 4) {\n    return false;\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    if (empty($date)) {\n        return false;\n    }\n    $date_arr = explode('-',\
    \ $date);\n    if (count($date_arr) !== 3) {\n        return false;\n    }\n \
    \   $month = $date_arr[0];\n    $day = $date_arr[1];\n    $year = $date_arr[2];\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($month\
    \ === '02') {\n        if ($day < 1 || $day > 29) {\n            return false;\n\
    \        }\n    } else if ($month === '01' || $month === '03' || $month === '05'\
    \ || $month === '07' || $month === '08' || $month === '10' || $month === '12')\
    \ {\n        if ($day < 1 || $day > 31) {\n            return false;\n       \
    \ }\n    } else {\n        if ($day < 1 || $day > 30) {\n            return false;\n\
    \        }\n    }\n    if ($year < 1) {\n        return false;\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) !== 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if (count($date_arr) != 3) {\n    return false;\n  }\n  $month =\
    \ $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  if ($year < 1) {\n    return false;\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($day < 1 || $day > 31)\
    \ {\n    return false;\n  }\n  if ($month == 2) {\n    if ($day > 29) {\n    \
    \  return false;\n    }\n  }\n  if ($month == 4 || $month == 6 || $month == 9\
    \ || $month == 11) {\n    if ($day > 30) {\n      return false;\n    }\n  }\n\
    \  if ($year < 1) {\n    return false;\n  }\n  return true;\n}\n\necho valid_date('12-31-2014');\n\
    echo \"\\n\";\necho valid_date('02-29-2014');\necho \"\\n\";\necho valid_date('02-29-2015');\n\
    echo \"\\n\";\necho valid_date('02-29-2016');\necho \"\\n\";\necho valid_date('02-29-2017');\n\
    echo \"\\n\";\necho valid_date('02-29-2018');\necho \"\\n\";\necho valid_date('02-29-2019');\n\
    echo \"\\n\";\necho valid_date('02-29-2020');\necho \"\\n\";\necho valid_date('02-29-2021');\n\
    echo \"\\n\";\necho valid_date('02-29-2022');\necho \"\\n\";\necho valid_date('02-29-2023');\n\
    echo \"\\n\";\necho valid_date('02-29-2024');\necho \"\\n\";\necho valid_date('02-29-2025');\n\
    echo \"\\n\";\necho valid_date('02-29-2026');\necho \"\\n\";\necho valid_date('02-29-2027');\n\
    echo \"\\n\";\necho valid_date('02-29-2028');\necho \"\\n\";\necho valid_date('02-29-2029');\n\
    echo \"\\n\";\necho valid_date('02-29-\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpu97g_qha.php on line 73

    '
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date = explode('-', $date);\n    if (count($date) !== 3) {\n       \
    \ return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n    $year\
    \ = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n \
    \   }\n    if ($month === 2) {\n        if ($day < 1 || $day > 29) {\n       \
    \     return false;\n        }\n    } else if ($month === 1 || $month === 3 ||\
    \ $month === 5 || $month === 7 || $month === 8 || $month === 10 || $month ===\
    \ 12) {\n        if ($day < 1 || $day > 31) {\n            return false;\n   \
    \     }\n    } else {\n        if ($day < 1 || $day > 30) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if (count($date_arr) != 3) {\n    return false;\n  }\n  $month =\
    \ $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if (!is_numeric($month)\
    \ || !is_numeric($day) || !is_numeric($year)) {\n    return false;\n  }\n  if\
    \ ($month < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n\
    \    if ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0] == 2) {\n\
    \    if ($date[1] < 1 || $date[1] > 29) return false;\n  } else if ($date[0] ==\
    \ 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0]\
    \ == 10 || $date[0] == 12) {\n    if ($date[1] < 1 || $date[1] > 31) return false;\n\
    \  } else {\n    if ($date[1] < 1 || $date[1] > 30) return false;\n  }\n  if (strlen($date[2])\
    \ != 4) return false;\n  return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date = explode('-', $date);\n    if (count($date) != 3) {\n        return\
    \ false;\n    }\n    if ($date[0] < 1 || $date[0] > 12) {\n        return false;\n\
    \    }\n    if ($date[0] == 2) {\n        if ($date[1] < 1 || $date[1] > 29) {\n\
    \            return false;\n        }\n    } elseif ($date[0] == 1 || $date[0]\
    \ == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 ||\
    \ $date[0] == 12) {\n        if ($date[1] < 1 || $date[1] > 31) {\n          \
    \  return false;\n        }\n    } else {\n        if ($date[1] < 1 || $date[1]\
    \ > 30) {\n            return false;\n        }\n    }\n    if (strlen($date[2])\
    \ != 4) {\n        return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    if (empty($date)) {\n        return false;\n    }\n    $date_arr = explode('-',\
    \ $date);\n    if (count($date_arr) != 3) {\n        return false;\n    }\n  \
    \  $month = $date_arr[0];\n    $day = $date_arr[1];\n    $year = $date_arr[2];\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($month\
    \ == 2) {\n        if ($day < 1 || $day > 29) {\n            return false;\n \
    \       }\n    } else if ($month == 1 || $month == 3 || $month == 5 || $month\
    \ == 7 || $month == 8 || $month == 10 || $month == 12) {\n        if ($day < 1\
    \ || $day > 31) {\n            return false;\n        }\n    } else {\n      \
    \  if ($day < 1 || $day > 30) {\n            return false;\n        }\n    }\n\
    \    if ($year < 1000 || $year > 9999) {\n        return false;\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) !== 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0] === 2) {\n\
    \    if ($date[1] < 1 || $date[1] > 29) return false;\n  } else if ($date[0] ===\
    \ 1 || $date[0] === 3 || $date[0] === 5 || $date[0] === 7 || $date[0] === 8 ||\
    \ $date[0] === 10 || $date[0] === 12) {\n    if ($date[1] < 1 || $date[1] > 31)\
    \ return false;\n  } else {\n    if ($date[1] < 1 || $date[1] > 30) return false;\n\
    \  }\n  if ($date[2] < 1) return false;\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date = explode('-', $date);\n    if (count($date) != 3) {\n        return\
    \ false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($day\
    \ < 1 || $day > 31) {\n        return false;\n    }\n    if ($month == 2) {\n\
    \        if ($day > 29) {\n            return false;\n        }\n    }\n    if\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day\
    \ > 30) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $months = [\n    1 => 31,\n    2 => 28,\n    3 => 31,\n    4 => 30,\n \
    \   5 => 31,\n    6 => 30,\n    7 => 31,\n    8 => 31,\n    9 => 30,\n    10 =>\
    \ 31,\n    11 => 30,\n    12 => 31\n  ];\n  $date = explode('-', $date);\n  if\
    \ (count($date) != 3) {\n    return false;\n  }\n  $month = $date[0];\n  $day\
    \ = $date[1];\n  $year = $date[2];\n  if ($day < 1 || $day > $months[$month])\
    \ {\n    return false;\n  }\n  if ($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  if ($year < 1) {\n    return false;\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpogzlexyr.php:48\n\
    Stack trace:\n#0 /tmp/tmpogzlexyr.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpogzlexyr.php\
    \ on line 48\n"
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if (count($date_arr) != 3) {\n    return false;\n  }\n  $month =\
    \ $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  if (strlen($year) != 4) {\n    return false;\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0] == 2) {\n\
    \    if ($date[1] < 1 || $date[1] > 29) return false;\n  } else if ($date[0] ==\
    \ 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0]\
    \ == 10 || $date[0] == 12) {\n    if ($date[1] < 1 || $date[1] > 31) return false;\n\
    \  } else {\n    if ($date[1] < 1 || $date[1] > 30) return false;\n  }\n  if (strlen($date[2])\
    \ != 4) return false;\n  return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) !== 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0] === 2) {\n\
    \    if ($date[1] < 1 || $date[1] > 29) return false;\n  } else if ($date[0] ===\
    \ 1 || $date[0] === 3 || $date[0] === 5 || $date[0] === 7 || $date[0] === 8 ||\
    \ $date[0] === 10 || $date[0] === 12) {\n    if ($date[1] < 1 || $date[1] > 31)\
    \ return false;\n  } else {\n    if ($date[1] < 1 || $date[1] > 30) return false;\n\
    \  }\n  if ($date[2] < 1) return false;\n  return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    return preg_match('/^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\d{4}$/',\
    \ $date);\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpauqz44_h.php:18\n\
    Stack trace:\n#0 /tmp/tmpauqz44_h.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpauqz44_h.php\
    \ on line 18\n"
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if(preg_match(\"/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/\", $date, $matches))\
    \ {\n    if(checkdate($matches[1], $matches[2], $matches[3])) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if (count($date_arr) !== 3) {\n    return false;\n  }\n  $month =\
    \ $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month === 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ===\
    \ 1 || $month === 3 || $month === 5 || $month === 7 || $month === 8 || $month\
    \ === 10 || $month === 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\n\necho valid_date('12-31-2000') . PHP_EOL;\necho\
    \ valid_date('2-29-2000') . PHP_EOL;\necho valid_date('2-29-2001') . PHP_EOL;\n\
    echo valid_date('2-29-2002') . PHP_EOL;\necho valid_date('2-29-2003') . PHP_EOL;\n\
    echo valid_date('2-29-2004') . PHP_EOL;\necho valid_date('2-29-2005') . PHP_EOL;\n\
    echo valid_date('2-29-2006') . PHP_EOL;\necho valid_date('2-29-2007') . PHP_EOL;\n\
    echo valid_date('2-29-2008') . PHP_EOL;\necho valid_date('2-29-2009') . PHP_EOL;\n\
    echo valid_date('2-29-2010') . PHP_EOL;\necho valid_date('2-29-2011') . PHP_EOL;\n\
    echo valid_date('2-29-2012') . PHP_EOL;\necho valid_date('2-29-2013') . PHP_E\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmppevyg5ht.php on line 54

    '
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date_array = explode('-', $date);\n  if (count($date_array) != 3) {\n\
    \    return false;\n  }\n  $month = $date_array[0];\n  $day = $date_array[1];\n\
    \  $year = $date_array[2];\n  if ($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  if ($day < 1 || $day > 31) {\n    return false;\n  }\n  if ($month ==\
    \ 2) {\n    if ($day > 29) {\n      return false;\n    }\n  }\n  if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day > 30) {\n \
    \     return false;\n    }\n  }\n  if ($year < 0) {\n    return false;\n  }\n\
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if(count($date) != 3) return false;\n \
    \ if(!is_numeric($date[0]) || !is_numeric($date[1]) || !is_numeric($date[2]))\
    \ return false;\n  if($date[0] < 1 || $date[0] > 12) return false;\n  if($date[0]\
    \ == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 ||\
    \ $date[0] == 10 || $date[0] == 12) {\n    if($date[1] < 1 || $date[1] > 31) return\
    \ false;\n  } else if($date[0] == 4 || $date[0] == 6 || $date[0] == 9 || $date[0]\
    \ == 11) {\n    if($date[1] < 1 || $date[1] > 30) return false;\n  } else if($date[0]\
    \ == 2) {\n    if($date[1] < 1 || $date[1] > 29) return false;\n  }\n  return\
    \ true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date_arr = explode('-', $date);\n    if (count($date_arr) != 3) {\n\
    \        return false;\n    }\n    if (strlen($date_arr[0]) != 2 || strlen($date_arr[1])\
    \ != 2 || strlen($date_arr[2]) != 4) {\n        return false;\n    }\n    if ($date_arr[0]\
    \ < 1 || $date_arr[0] > 12) {\n        return false;\n    }\n    if ($date_arr[0]\
    \ == 2) {\n        if ($date_arr[1] < 1 || $date_arr[1] > 29) {\n            return\
    \ false;\n        }\n    } else if ($date_arr[0] == 1 || $date_arr[0] == 3 ||\
    \ $date_arr[0] == 5 || $date_arr[0] == 7 || $date_arr[0] == 8 || $date_arr[0]\
    \ == 10 || $date_arr[0] == 12) {\n        if ($date_arr[1] < 1 || $date_arr[1]\
    \ > 31) {\n            return false;\n        }\n    } else {\n        if ($date_arr[1]\
    \ < 1 || $date_arr[1] > 30) {\n            return false;\n        }\n    }\n \
    \   return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[1] < 1 || $date[1]\
    \ > 31) return false;\n  if ($date[0] == 2 && $date[1] > 29) return false;\n \
    \ if ($date[0] == 4 || $date[0] == 6 || $date[0] == 9 || $date[0] == 11) {\n \
    \   if ($date[1] > 30) return false;\n  }\n  return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if(count($date) != 3) return false;\n \
    \ if(!is_numeric($date[0]) || !is_numeric($date[1]) || !is_numeric($date[2]))\
    \ return false;\n  if($date[0] < 1 || $date[0] > 12) return false;\n  if($date[0]\
    \ == 2) {\n    if($date[1] < 1 || $date[1] > 29) return false;\n  } else if($date[0]\
    \ == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 ||\
    \ $date[0] == 10 || $date[0] == 12) {\n    if($date[1] < 1 || $date[1] > 31) return\
    \ false;\n  } else {\n    if($date[1] < 1 || $date[1] > 30) return false;\n  }\n\
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) !== 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0] === 2) {\n\
    \    if ($date[1] < 1 || $date[1] > 29) return false;\n  } else if ($date[0] ===\
    \ 1 || $date[0] === 3 || $date[0] === 5 || $date[0] === 7 || $date[0] === 8 ||\
    \ $date[0] === 10 || $date[0] === 12) {\n    if ($date[1] < 1 || $date[1] > 31)\
    \ return false;\n  } else {\n    if ($date[1] < 1 || $date[1] > 30) return false;\n\
    \  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) !== 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0] === 2) {\n\
    \    if ($date[1] < 1 || $date[1] > 29) return false;\n  } else if ($date[0] ===\
    \ 1 || $date[0] === 3 || $date[0] === 5 || $date[0] === 7 || $date[0] === 8 ||\
    \ $date[0] === 10 || $date[0] === 12) {\n    if ($date[1] < 1 || $date[1] > 31)\
    \ return false;\n  } else {\n    if ($date[1] < 1 || $date[1] > 30) return false;\n\
    \  }\n  if ($date[2] < 1) return false;\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month <\
    \ 1 || $month > 12) return false;\n  if ($day < 1 || $day > 31) return false;\n\
    \  if ($month == 2 && $day > 29) return false;\n  if ($month == 4 || $month ==\
    \ 6 || $month == 9 || $month == 11) {\n    if ($day > 30) return false;\n  }\n\
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if (count($date_arr) != 3) {\n    return false;\n  }\n  $month =\
    \ $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if (count($date_arr) != 3) {\n    return false;\n  }\n  $month =\
    \ $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  if ($year < 1) {\n    return false;\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) !== 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month === 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ===\
    \ 1 || $month === 3 || $month === 5 || $month === 7 || $month === 8 || $month\
    \ === 10 || $month === 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  $date[0] = intval($date[0]);\n  $date[1] = intval($date[1]);\n  $date[2] =\
    \ intval($date[2]);\n  if ($date[0] < 1 || $date[0] > 12) return false;\n  if\
    \ ($date[0] == 2) {\n    if ($date[1] < 1 || $date[1] > 29) return false;\n  }\
    \ else if ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 ||\
    \ $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n    if ($date[1] < 1 ||\
    \ $date[1] > 31) return false;\n  } else {\n    if ($date[1] < 1 || $date[1] >\
    \ 30) return false;\n  }\n  if ($date[2] < 1) return false;\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date = explode('-', $date);\n\
    \  if (count($date) != 3) {\n    return false;\n  }\n  if (strlen($date[0]) !=\
    \ 2 || strlen($date[1]) != 2 || strlen($date[2]) != 4) {\n    return false;\n\
    \  }\n  if ($date[0] < 1 || $date[0] > 12) {\n    return false;\n  }\n  if ($date[0]\
    \ == 2) {\n    if ($date[1] < 1 || $date[1] > 29) {\n      return false;\n   \
    \ }\n  } else if ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0]\
    \ == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n    if ($date[1]\
    \ < 1 || $date[1] > 31) {\n      return false;\n    }\n  } else {\n    if ($date[1]\
    \ < 1 || $date[1] > 30) {\n      return false;\n    }\n  }\n  return true;\n}\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date = explode('-', $date);\n\
    \  if (count($date) != 3) {\n    return false;\n  }\n  $month = $date[0];\n  $day\
    \ = $date[1];\n  $year = $date[2];\n  if ($month < 1 || $month > 12) {\n    return\
    \ false;\n  }\n  if ($day < 1 || $day > 31) {\n    return false;\n  }\n  if ($month\
    \ == 2) {\n    if ($day > 29) {\n      return false;\n    }\n  }\n  if ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day > 30) {\n\
    \      return false;\n    }\n  }\n  if ($year < 1) {\n    return false;\n  }\n\
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ > 12 || $month < 1) {\n    return false;\n  }\n  if ($day > 31 || $day < 1)\
    \ {\n    return false;\n  }\n  if ($month == 2) {\n    if ($day > 29) {\n    \
    \  return false;\n    }\n  }\n  if ($month == 4 || $month == 6 || $month == 9\
    \ || $month == 11) {\n    if ($day > 30) {\n      return false;\n    }\n  }\n\
    \  if ($year < 1) {\n    return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0] == 2) {\n\
    \    if ($date[1] < 1 || $date[1] > 29) return false;\n  } elseif ($date[0] ==\
    \ 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0]\
    \ == 10 || $date[0] == 12) {\n    if ($date[1] < 1 || $date[1] > 31) return false;\n\
    \  } else {\n    if ($date[1] < 1 || $date[1] > 30) return false;\n  }\n  if ($date[2]\
    \ < 1) return false;\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if (count($date_arr) != 3) {\n    return false;\n  }\n  $month =\
    \ $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($day < 1) {\n    return\
    \ false;\n  }\n  if ($month == 2) {\n    if ($day > 29) {\n      return false;\n\
    \    }\n  } else if ($month == 1 || $month == 3 || $month == 5 || $month == 7\
    \ || $month == 8 || $month == 10 || $month == 12) {\n    if ($day > 31) {\n  \
    \    return false;\n    }\n  } else {\n    if ($day > 30) {\n      return false;\n\
    \    }\n  }\n  if ($year < 1) {\n    return false;\n  }\n  return true;\n}\n\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date = explode('-', $date);\n\
    \  if (count($date) !== 3) {\n    return false;\n  }\n  $month = $date[0];\n \
    \ $day = $date[1];\n  $year = $date[2];\n  if ($month < 1 || $month > 12) {\n\
    \    return false;\n  }\n  if ($month === 2) {\n    if ($day < 1 || $day > 29)\
    \ {\n      return false;\n    }\n  } else if ($month === 1 || $month === 3 ||\
    \ $month === 5 || $month === 7 || $month === 8 || $month === 10 || $month ===\
    \ 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n    }\n  } else\
    \ {\n    if ($day < 1 || $day > 30) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (preg_match('/^\\d{2}-\\d{2}-\\d{4}$/', $date)) {\n    $date = explode('-',\
    \ $date);\n    if (checkdate($date[0], $date[1], $date[2])) {\n      return true;\n\
    \    }\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  $month = $date[0];\n  $day = $date[1];\n\
    \  $year = $date[2];\n  if (count($date) != 3) {\n    return false;\n  }\n  if\
    \ ($month > 12 || $month < 1) {\n    return false;\n  }\n  if ($month == 2) {\n\
    \    if ($day > 29 || $day < 1) {\n      return false;\n    }\n  } else if ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n    if ($day > 31 || $day < 1) {\n      return false;\n\
    \    }\n  } else {\n    if ($day > 30 || $day < 1) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date = explode('-', $date);\n\
    \  if (count($date) !== 3) {\n    return false;\n  }\n  $month = $date[0];\n \
    \ $day = $date[1];\n  $year = $date[2];\n  if ($month < 1 || $month > 12) {\n\
    \    return false;\n  }\n  if ($month === 2) {\n    if ($day < 1 || $day > 29)\
    \ {\n      return false;\n    }\n  } elseif ($month === 1 || $month === 3 || $month\
    \ === 5 || $month === 7 || $month === 8 || $month === 10 || $month === 12) {\n\
    \    if ($day < 1 || $day > 31) {\n      return false;\n    }\n  } else {\n  \
    \  if ($day < 1 || $day > 30) {\n      return false;\n    }\n  }\n  if ($year\
    \ < 1) {\n    return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if(empty($date)) {\n    return false;\n  }\n  $date_array = explode('-',\
    \ $date);\n  if(count($date_array) !== 3) {\n    return false;\n  }\n  $month\
    \ = $date_array[0];\n  $day = $date_array[1];\n  $year = $date_array[2];\n  if(!is_numeric($month)\
    \ || !is_numeric($day) || !is_numeric($year)) {\n    return false;\n  }\n  if($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if($day < 1 || $day > 31) {\n\
    \    return false;\n  }\n  if($month === 2) {\n    if($day > 29) {\n      return\
    \ false;\n    }\n  }\n  if($month === 4 || $month === 6 || $month === 9 || $month\
    \ === 11) {\n    if($day > 30) {\n      return false;\n    }\n  }\n  return true;\n\
    }\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9322cq6g.php:53\n\
    Stack trace:\n#0 /tmp/tmp9322cq6g.php(64): test()\n#1 {main}\n  thrown in /tmp/tmp9322cq6g.php\
    \ on line 53\n"
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($year\
    \ < 1) {\n    return false;\n  }\n  if ($month < 1 || $month > 12) {\n    return\
    \ false;\n  }\n  if ($month == 2) {\n    if ($day < 1 || $day > 29) {\n      return\
    \ false;\n    }\n  } else if ($month == 1 || $month == 3 || $month == 5 || $month\
    \ == 7 || $month == 8 || $month == 10 || $month == 12) {\n    if ($day < 1 ||\
    \ $day > 31) {\n      return false;\n    }\n  } else {\n    if ($day < 1 || $day\
    \ > 30) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if (count($date_arr) != 3) {\n    return false;\n  }\n  $month =\
    \ $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (preg_match('/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$/',\
    \ $date)) {\n    $date = explode('-', $date);\n    if ($date[0] == 2) {\n    \
    \  if ($date[2] % 4 == 0) {\n        if ($date[1] <= 29) {\n          return true;\n\
    \        }\n      } else {\n        if ($date[1] <= 28) {\n          return true;\n\
    \        }\n      }\n    } else if ($date[0] == 1 || $date[0] == 3 || $date[0]\
    \ == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12)\
    \ {\n      if ($date[1] <= 31) {\n        return true;\n      }\n    } else {\n\
    \      if ($date[1] <= 30) {\n        return true;\n      }\n    }\n  }\n  return\
    \ false;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } elseif ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    if (preg_match('/^[0-9]{2}-[0-9]{2}-[0-9]{4}$/', $date)) {\n        $date\
    \ = explode('-', $date);\n        $months = [1, 3, 5, 7, 8, 10, 12];\n       \
    \ if (in_array($date[0], $months) && $date[1] > 0 && $date[1] <= 31) {\n     \
    \       return true;\n        } elseif (!in_array($date[0], $months) && $date[1]\
    \ > 0 && $date[1] <= 30) {\n            return true;\n        } elseif ($date[0]\
    \ == 2 && $date[1] > 0 && $date[1] <= 29) {\n            return true;\n      \
    \  }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp35zx_588.php:30\n\
    Stack trace:\n#0 /tmp/tmp35zx_588.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp35zx_588.php\
    \ on line 30\n"
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date = explode('-', $date);\n    if (count($date) != 3) {\n        return\
    \ false;\n    }\n    if (!is_numeric($date[0]) || !is_numeric($date[1]) || !is_numeric($date[2]))\
    \ {\n        return false;\n    }\n    if ($date[0] < 1 || $date[0] > 12) {\n\
    \        return false;\n    }\n    if ($date[0] == 1 || $date[0] == 3 || $date[0]\
    \ == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12)\
    \ {\n        if ($date[1] < 1 || $date[1] > 31) {\n            return false;\n\
    \        }\n    } else if ($date[0] == 4 || $date[0] == 6 || $date[0] == 9 ||\
    \ $date[0] == 11) {\n        if ($date[1] < 1 || $date[1] > 30) {\n          \
    \  return false;\n        }\n    } else if ($date[0] == 2) {\n        if ($date[1]\
    \ < 1 || $date[1] > 29) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    if (empty($date)) {\n        return false;\n    }\n    $date_arr = explode('-',\
    \ $date);\n    if (count($date_arr) !== 3) {\n        return false;\n    }\n \
    \   $month = $date_arr[0];\n    $day = $date_arr[1];\n    $year = $date_arr[2];\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($day\
    \ < 1 || $day > 31) {\n        return false;\n    }\n    if ($month === '2') {\n\
    \        if ($day > 29) {\n            return false;\n        }\n    }\n    if\
    \ ($month === '4' || $month === '6' || $month === '9' || $month === '11') {\n\
    \        if ($day > 30) {\n            return false;\n        }\n    }\n    if\
    \ ($year < 1) {\n        return false;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr4al12bz.php:54\n\
    Stack trace:\n#0 /tmp/tmpr4al12bz.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpr4al12bz.php\
    \ on line 54\n"
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date = explode('-', $date);\n\
    \  if (count($date) != 3) {\n    return false;\n  }\n  $month = $date[0];\n  $day\
    \ = $date[1];\n  $year = $date[2];\n  if (!is_numeric($month) || !is_numeric($day)\
    \ || !is_numeric($year)) {\n    return false;\n  }\n  if ($month < 1 || $month\
    \ > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if ($day < 1 || $day\
    \ > 29) {\n      return false;\n    }\n  } else if ($month == 1 || $month == 3\
    \ || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12)\
    \ {\n    if ($day < 1 || $day > 31) {\n      return false;\n    }\n  } else {\n\
    \    if ($day < 1 || $day > 30) {\n      return false;\n    }\n  }\n  return true;\n\
    }\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date = explode('-', $date);\n    if (count($date) != 3) {\n        return\
    \ false;\n    }\n    if (!is_numeric($date[0]) || !is_numeric($date[1]) || !is_numeric($date[2]))\
    \ {\n        return false;\n    }\n    if ($date[0] < 1 || $date[0] > 12) {\n\
    \        return false;\n    }\n    if ($date[2] < 1) {\n        return false;\n\
    \    }\n    if ($date[0] == 2) {\n        if ($date[2] % 4 == 0) {\n         \
    \   if ($date[1] < 1 || $date[1] > 29) {\n                return false;\n    \
    \        }\n        } else {\n            if ($date[1] < 1 || $date[1] > 28) {\n\
    \                return false;\n            }\n        }\n    } else if ($date[0]\
    \ == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 ||\
    \ $date[0] == 10 || $date[0] == 12) {\n        if ($date[1] < 1 || $date[1] >\
    \ 31) {\n            return false;\n        }\n    } else {\n        if ($date[1]\
    \ < 1 || $date[1] > 30) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\necho valid_date('01-01-2000') . \"\\n\";\necho valid_date('02-29-2000')\
    \ . \"\\n\";\necho valid_date('02-29-2001') . \"\\n\";\necho valid_date('02-30-2001')\
    \ . \"\\n\";\necho valid_date('13-01-2000') . \"\\n\";\necho valid_date('00-01-2000')\
    \ . \"\\n\";\necho valid_date('01-00-2000') . \"\\n\";\necho valid_date('01-01-0000')\
    \ . \"\\n\";\necho valid_date('01-01-200') . \"\\n\";\necho valid_date('01-01-20000')\
    \ . \"\\n\";\necho\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpuqrmwn13.php on line 56

    '
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\n\n$date = '02-29-2016';\necho valid_date($date);\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) !== 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($day < 1 || $day > 31)\
    \ {\n    return false;\n  }\n  if ($month === '2') {\n    if ($day > 29) {\n \
    \     return false;\n    }\n  }\n  if ($month === '4' || $month === '6' || $month\
    \ === '9' || $month === '11') {\n    if ($day > 30) {\n      return false;\n \
    \   }\n  }\n  if ($year < 1) {\n    return false;\n  }\n  return true;\n}\n\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdeydz9x.php:51\n\
    Stack trace:\n#0 /tmp/tmphdeydz9x.php(62): test()\n#1 {main}\n  thrown in /tmp/tmphdeydz9x.php\
    \ on line 51\n"
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  $month = $date[0];\n  $day = $date[1];\n\
    \  $year = $date[2];\n  if (count($date) != 3) {\n    return false;\n  }\n  if\
    \ ($month < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n\
    \    if ($day < 1 || $day > 29) {\n      return false;\n    }\n  } elseif ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  if (strlen($year) != 4) {\n    return false;\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    if(!$date) return false;\n    $date = explode('-', $date);\n    if(count($date)\
    \ != 3) return false;\n    if(!is_numeric($date[0]) || !is_numeric($date[1]) ||\
    \ !is_numeric($date[2])) return false;\n    if($date[0] < 1 || $date[0] > 12)\
    \ return false;\n    if($date[0] == 2 && $date[1] > 29) return false;\n    if(in_array($date[0],\
    \ [1,3,5,7,8,10,12]) && $date[1] > 31) return false;\n    if(in_array($date[0],\
    \ [4,6,9,11]) && $date[1] > 30) return false;\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0csz7qdh.php:28\n\
    Stack trace:\n#0 /tmp/tmp0csz7qdh.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp0csz7qdh.php\
    \ on line 28\n"
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) !== 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month === 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ===\
    \ 4 || $month === 6 || $month === 9 || $month === 11) {\n    if ($day < 1 || $day\
    \ > 30) {\n      return false;\n    }\n  } else {\n    if ($day < 1 || $day >\
    \ 31) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwl52o8sk.php:48\n\
    Stack trace:\n#0 /tmp/tmpwl52o8sk.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpwl52o8sk.php\
    \ on line 48\n"
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  if (strlen($year) != 4) {\n    return false;\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date = explode('-', $date);\n\
    \  if (count($date) !== 3) {\n    return false;\n  }\n  if (!is_numeric($date[0])\
    \ || !is_numeric($date[1]) || !is_numeric($date[2])) {\n    return false;\n  }\n\
    \  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month <\
    \ 1 || $month > 12) {\n    return false;\n  }\n  if ($day < 1) {\n    return false;\n\
    \  }\n  if ($month === 2) {\n    if ($day > 29) {\n      return false;\n    }\n\
    \  } else if ($month === 4 || $month === 6 || $month === 9 || $month === 11) {\n\
    \    if ($day > 30) {\n      return false;\n    }\n  } else {\n    if ($day >\
    \ 31) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpngxxsh13.php:57\n\
    Stack trace:\n#0 /tmp/tmpngxxsh13.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpngxxsh13.php\
    \ on line 57\n"
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if(empty($date)) {\n    return false;\n  }\n  $date = explode('-', $date);\n\
    \  if(count($date) != 3) {\n    return false;\n  }\n  $month = $date[0];\n  $day\
    \ = $date[1];\n  $year = $date[2];\n  if(!is_numeric($month) || !is_numeric($day)\
    \ || !is_numeric($year)) {\n    return false;\n  }\n  if($month < 1 || $month\
    \ > 12) {\n    return false;\n  }\n  if($month == 2) {\n    if($day < 1 || $day\
    \ > 29) {\n      return false;\n    }\n  } else if($month == 1 || $month == 3\
    \ || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12)\
    \ {\n    if($day < 1 || $day > 31) {\n      return false;\n    }\n  } else {\n\
    \    if($day < 1 || $day > 30) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    if (empty($date)) {\n        return false;\n    }\n    $date = explode('-',\
    \ $date);\n    if (count($date) != 3) {\n        return false;\n    }\n    $month\
    \ = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n    if ($month < 1\
    \ || $month > 12) {\n        return false;\n    }\n    if ($month == 2) {\n  \
    \      if ($day < 1 || $day > 29) {\n            return false;\n        }\n  \
    \  } else if ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12) {\n        if ($day < 1 || $day > 31)\
    \ {\n            return false;\n        }\n    } else {\n        if ($day < 1\
    \ || $day > 30) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date_arr = explode('-', $date);\n    $month = $date_arr[0];\n    $day\
    \ = $date_arr[1];\n    $year = $date_arr[2];\n    if (count($date_arr) != 3) {\n\
    \        return false;\n    }\n    if ($month < 1 || $month > 12) {\n        return\
    \ false;\n    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n\
    \            return false;\n        }\n    } else if ($month == 1 || $month ==\
    \ 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month ==\
    \ 12) {\n        if ($day < 1 || $day > 31) {\n            return false;\n   \
    \     }\n    } else {\n        if ($day < 1 || $day > 30) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    if (empty($date)) {\n        return false;\n    }\n    if (!preg_match('/^\\\
    d{2}-\\d{2}-\\d{4}$/', $date)) {\n        return false;\n    }\n    $date_arr\
    \ = explode('-', $date);\n    $month = $date_arr[0];\n    $day = $date_arr[1];\n\
    \    $year = $date_arr[2];\n    if ($month < 1 || $month > 12) {\n        return\
    \ false;\n    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n\
    \            return false;\n        }\n    } elseif ($month == 1 || $month ==\
    \ 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month ==\
    \ 12) {\n        if ($day < 1 || $day > 31) {\n            return false;\n   \
    \     }\n    } else {\n        if ($day < 1 || $day > 30) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0] == 2) {\n\
    \    if ($date[1] < 1 || $date[1] > 29) return false;\n  } else if ($date[0] ==\
    \ 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0]\
    \ == 10 || $date[0] == 12) {\n    if ($date[1] < 1 || $date[1] > 31) return false;\n\
    \  } else {\n    if ($date[1] < 1 || $date[1] > 30) return false;\n  }\n  if (strlen($date[2])\
    \ != 4) return false;\n  return true;\n}\nfunction candidate(...$args) {\n   \
    \ return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_array = explode('-',\
    \ $date);\n  if (count($date_array) != 3) {\n    return false;\n  }\n  $month\
    \ = $date_array[0];\n  $day = $date_array[1];\n  $year = $date_array[2];\n  if\
    \ ($month < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n\
    \    if ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  if (strlen($year) != 4) {\n    return false;\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date_arr = explode('-', $date);\n  if (count($date_arr) != 3) {\n    return\
    \ false;\n  }\n  $month = $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n\
    \  if ($month < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2)\
    \ {\n    if ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if\
    \ ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 ||\
    \ $month == 10 || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return\
    \ false;\n    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date_arr = explode('-', $date);\n  $month = $date_arr[0];\n  $day = $date_arr[1];\n\
    \  $year = $date_arr[2];\n  if (count($date_arr) != 3) {\n    return false;\n\
    \  }\n  if ($month < 1 || $month > 12) {\n    return false;\n  }\n  if ($month\
    \ == 2) {\n    if ($day < 1 || $day > 29) {\n      return false;\n    }\n  } elseif\
    \ ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 ||\
    \ $month == 10 || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return\
    \ false;\n    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n\
    \    }\n  }\n  if ($year < 1) {\n    return false;\n  }\n  return true;\n}\n\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($day < 1 || $day > 31)\
    \ {\n    return false;\n  }\n  if ($month == 2) {\n    if ($day > 29) {\n    \
    \  return false;\n    }\n  }\n  if ($month == 4 || $month == 6 || $month == 9\
    \ || $month == 11) {\n    if ($day > 30) {\n      return false;\n    }\n  }\n\
    \  if ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8\
    \ || $month == 10 || $month == 12) {\n    if ($day > 31) {\n      return false;\n\
    \    }\n  }\n  if ($year < 1) {\n    return false;\n  }\n  return true;\n}\n\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date = explode('-', $date);\n    if (count($date) !== 3) {\n       \
    \ return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n    $year\
    \ = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n \
    \   }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n        \
    \    return false;\n        }\n    } else if ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \    if ($day < 1 || $day > 31) {\n            return false;\n        }\n    }\
    \ else {\n        if ($day < 1 || $day > 30) {\n            return false;\n  \
    \      }\n    }\n    if ($year < 1) {\n        return false;\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if (strlen($date[0]) != 2 || strlen($date[1]) != 2 || strlen($date[2]) != 4)\
    \ return false;\n  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[1]\
    \ < 1 || $date[1] > 31) return false;\n  if ($date[0] == 2 && $date[1] > 29) return\
    \ false;\n  if ($date[0] == 4 || $date[0] == 6 || $date[0] == 9 || $date[0] ==\
    \ 11) {\n    if ($date[1] > 30) return false;\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date = explode('-', $date);\n\
    \  if (count($date) != 3) {\n    return false;\n  }\n  $month = $date[0];\n  $day\
    \ = $date[1];\n  $year = $date[2];\n  if ($month < 1 || $month > 12) {\n    return\
    \ false;\n  }\n  if ($month == 2) {\n    if ($day < 1 || $day > 29) {\n      return\
    \ false;\n    }\n  } else if ($month == 1 || $month == 3 || $month == 5 || $month\
    \ == 7 || $month == 8 || $month == 10 || $month == 12) {\n    if ($day < 1 ||\
    \ $day > 31) {\n      return false;\n    }\n  } else {\n    if ($day < 1 || $day\
    \ > 30) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month <\
    \ 1 || $month > 12) return false;\n  if ($day < 1 || $day > 31) return false;\n\
    \  if ($month == 2 && $day > 29) return false;\n  if (($month == 4 || $month ==\
    \ 6 || $month == 9 || $month == 11) && $day > 30) return false;\n  if ($year <\
    \ 1) return false;\n  return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_array = explode('-',\
    \ $date);\n  if (count($date_array) != 3) {\n    return false;\n  }\n  $month\
    \ = $date_array[0];\n  $day = $date_array[1];\n  $year = $date_array[2];\n  if\
    \ ($month < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n\
    \    if ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  if (strlen($year) != 4) {\n    return false;\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0] == 2) {\n\
    \    if ($date[1] < 1 || $date[1] > 29) return false;\n  } elseif ($date[0] ==\
    \ 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0]\
    \ == 10 || $date[0] == 12) {\n    if ($date[1] < 1 || $date[1] > 31) return false;\n\
    \  } else {\n    if ($date[1] < 1 || $date[1] > 30) return false;\n  }\n  if ($date[2]\
    \ < 1) return false;\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if(empty($date)) return false;\n  $date = explode('-', $date);\n  if(count($date)\
    \ != 3) return false;\n  if(!is_numeric($date[0]) || !is_numeric($date[1]) ||\
    \ !is_numeric($date[2])) return false;\n  if($date[0] < 1 || $date[0] > 12) return\
    \ false;\n  if($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] ==\
    \ 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n    if($date[1] <\
    \ 1 || $date[1] > 31) return false;\n  } else if($date[0] == 4 || $date[0] ==\
    \ 6 || $date[0] == 9 || $date[0] == 11) {\n    if($date[1] < 1 || $date[1] > 30)\
    \ return false;\n  } else if($date[0] == 2) {\n    if($date[1] < 1 || $date[1]\
    \ > 29) return false;\n  }\n  return true;\n}\nfunction candidate(...$args) {\n\
    \    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($day < 1 || $day > 31)\
    \ {\n    return false;\n  }\n  if ($month == 2) {\n    if ($day > 29) {\n    \
    \  return false;\n    }\n  }\n  if ($month == 4 || $month == 6 || $month == 9\
    \ || $month == 11) {\n    if ($day > 30) {\n      return false;\n    }\n  }\n\
    \  if ($year < 1) {\n    return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if (count($date_arr) !== 3) {\n    return false;\n  }\n  $month =\
    \ $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if (!is_numeric($month)\
    \ || !is_numeric($day) || !is_numeric($year)) {\n    return false;\n  }\n  if\
    \ ($month < 1 || $month > 12) {\n    return false;\n  }\n  if ($day < 1 || $day\
    \ > 31) {\n    return false;\n  }\n  if ($month === 2) {\n    if ($day > 29) {\n\
    \      return false;\n    }\n  }\n  if ($month === 4 || $month === 6 || $month\
    \ === 9 || $month === 11) {\n    if ($day > 30) {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz90czi3t.php:54\n\
    Stack trace:\n#0 /tmp/tmpz90czi3t.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpz90czi3t.php\
    \ on line 54\n"
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date_arr = explode('-', $date);\n  if (count($date_arr) != 3) {\n    return\
    \ false;\n  }\n  $month = $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n\
    \  if ($month < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2)\
    \ {\n    if ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if\
    \ ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 ||\
    \ $month == 10 || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return\
    \ false;\n    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) !== 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month === 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ===\
    \ 1 || $month === 3 || $month === 5 || $month === 7 || $month === 8 || $month\
    \ === 10 || $month === 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date = explode('-', $date);\n\
    \  if (count($date) != 3) {\n    return false;\n  }\n  $month = $date[0];\n  $day\
    \ = $date[1];\n  $year = $date[2];\n  if ($month < 1 || $month > 12) {\n    return\
    \ false;\n  }\n  if ($month == 2) {\n    if ($day < 1 || $day > 29) {\n      return\
    \ false;\n    }\n  } else if ($month == 1 || $month == 3 || $month == 5 || $month\
    \ == 7 || $month == 8 || $month == 10 || $month == 12) {\n    if ($day < 1 ||\
    \ $day > 31) {\n      return false;\n    }\n  } else {\n    if ($day < 1 || $day\
    \ > 30) {\n      return false;\n    }\n  }\n  if ($year < 1) {\n    return false;\n\
    \  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    if (empty($date)) {\n        return false;\n    }\n    $date = explode('-',\
    \ $date);\n    if (count($date) != 3) {\n        return false;\n    }\n    $month\
    \ = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n    if (!is_numeric($month)\
    \ || !is_numeric($day) || !is_numeric($year)) {\n        return false;\n    }\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($month\
    \ == 2) {\n        if ($day < 1 || $day > 29) {\n            return false;\n \
    \       }\n    } else if ($month == 1 || $month == 3 || $month == 5 || $month\
    \ == 7 || $month == 8 || $month == 10 || $month == 12) {\n        if ($day < 1\
    \ || $day > 31) {\n            return false;\n        }\n    } else {\n      \
    \  if ($day < 1 || $day > 30) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date_array = explode('-', $date);\n    if (count($date_array) != 3)\
    \ {\n        return false;\n    }\n    $month = $date_array[0];\n    $day = $date_array[1];\n\
    \    $year = $date_array[2];\n    if ($month < 1 || $month > 12) {\n        return\
    \ false;\n    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n\
    \            return false;\n        }\n    } else if ($month == 1 || $month ==\
    \ 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month ==\
    \ 12) {\n        if ($day < 1 || $day > 31) {\n            return false;\n   \
    \     }\n    } else {\n        if ($day < 1 || $day > 30) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if (count($date_arr) != 3) {\n    return false;\n  }\n  $month =\
    \ $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\n\necho valid_date('12-31-2000') . \"\\n\";\necho\
    \ valid_date('02-29-2000') . \"\\n\";\necho valid_date('02-29-2001') . \"\\n\"\
    ;\necho valid_date('13-01-2000') . \"\\n\";\necho valid_date('12-32-2000') . \"\
    \\n\";\necho valid_date('12-31-200') . \"\\n\";\necho valid_date('12-31-20000')\
    \ . \"\\n\";\necho valid_date('12-31-20000') . \"\\n\";\necho valid_date('12-31-20000')\
    \ . \"\\n\";\necho valid_date('12-31-20000') . \"\\n\";\necho valid_date('12-31-20000')\
    \ . \"\\n\";\necho valid_date('12-31-20000') . \"\\n\";\necho valid_date('12-31-20000')\
    \ . \"\\n\";\necho valid_date('12-31-20000') . \"\\n\";\necho valid_date('12-31-20000')\
    \ . \"\\n\";\necho valid_date('12-31-20000') . \"\\n\";\necho valid\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjghhqiub.php on line 56

    '
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if (count($date_arr) != 3) {\n    return false;\n  }\n  $month =\
    \ $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  if (strlen($year) != 4) {\n    return false;\n  }\n  return true;\n\
    }\n\necho valid_date('02-29-2000') . PHP_EOL;\necho valid_date('02-29-2001') .\
    \ PHP_EOL;\necho valid_date('02-29-2002') . PHP_EOL;\necho valid_date('02-29-2003')\
    \ . PHP_EOL;\necho valid_date('02-29-2004') . PHP_EOL;\necho valid_date('02-29-2005')\
    \ . PHP_EOL;\necho valid_date('02-29-2006') . PHP_EOL;\necho valid_date('02-29-2007')\
    \ . PHP_EOL;\necho valid_date('02-29-2008') . PHP_EOL;\necho valid_date('02-29-2009')\
    \ . PHP_EOL;\necho valid_date('02-29-2010') . PHP_EOL;\necho valid_date('02-29-2011')\
    \ . PHP_EOL;\necho valid_date('02-29-2012') . PHP_EOL;\necho valid_date('02-29-2013')\
    \ . PHP\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpj85noias.php on line 56

    '
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (preg_match('/^\\d{2}-\\d{2}-\\d{4}$/', $date)) {\n    $date_arr = explode('-',\
    \ $date);\n    $month = $date_arr[0];\n    $day = $date_arr[1];\n    $year = $date_arr[2];\n\
    \    if ($month > 12 || $month < 1) {\n      return false;\n    }\n    if ($day\
    \ > 31 || $day < 1) {\n      return false;\n    }\n    if ($month == 2) {\n  \
    \    if ($day > 29) {\n        return false;\n      }\n    }\n    if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n      if ($day > 30) {\n\
    \        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n\
    }\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (preg_match('/^\\d{2}-\\d{2}-\\d{4}$/', $date)) {\n    $date_arr = explode('-',\
    \ $date);\n    $month = $date_arr[0];\n    $day = $date_arr[1];\n    $year = $date_arr[2];\n\
    \    if ($month >= 1 && $month <= 12) {\n      if ($month == 2) {\n        if\
    \ ($day >= 1 && $day <= 29) {\n          return true;\n        }\n      } else\
    \ if ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8\
    \ || $month == 10 || $month == 12) {\n        if ($day >= 1 && $day <= 31) {\n\
    \          return true;\n        }\n      } else {\n        if ($day >= 1 && $day\
    \ <= 30) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_array = explode('-',\
    \ $date);\n  $month = $date_array[0];\n  $day = $date_array[1];\n  $year = $date_array[2];\n\
    \  if ($month < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2)\
    \ {\n    if ($day < 1 || $day > 29) {\n      return false;\n    }\n  } elseif\
    \ ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 ||\
    \ $month == 10 || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return\
    \ false;\n    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n\
    \    }\n  }\n  if ($year < 1) {\n    return false;\n  }\n  return true;\n}\n\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date = explode('-', $date);\n\
    \  if (count($date) !== 3) {\n    return false;\n  }\n  $month = $date[0];\n \
    \ $day = $date[1];\n  $year = $date[2];\n  if ($month < 1 || $month > 12) {\n\
    \    return false;\n  }\n  if ($day < 1 || $day > 31) {\n    return false;\n \
    \ }\n  if ($month === '2') {\n    if ($day > 29) {\n      return false;\n    }\n\
    \  }\n  if ($month === '4' || $month === '6' || $month === '9' || $month === '11')\
    \ {\n    if ($day > 30) {\n      return false;\n    }\n  }\n  if ($year < 1) {\n\
    \    return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx91dw720.php:54\n\
    Stack trace:\n#0 /tmp/tmpx91dw720.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpx91dw720.php\
    \ on line 54\n"
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ > 12 || $month < 1) {\n    return false;\n  }\n  if ($day > 31 || $day < 1)\
    \ {\n    return false;\n  }\n  if ($month == 2) {\n    if ($day > 29) {\n    \
    \  return false;\n    }\n  }\n  if ($month == 4 || $month == 6 || $month == 9\
    \ || $month == 11) {\n    if ($day > 30) {\n      return false;\n    }\n  }\n\
    \  if ($year < 1) {\n    return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($day < 1 || $day > 31)\
    \ {\n    return false;\n  }\n  if ($month == 2) {\n    if ($day > 29) {\n    \
    \  return false;\n    }\n  }\n  if ($month == 4 || $month == 6 || $month == 9\
    \ || $month == 11) {\n    if ($day > 30) {\n      return false;\n    }\n  }\n\
    \  if (strlen($year) != 4) {\n    return false;\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (preg_match('/^\\d{2}-\\d{2}-\\d{4}$/', $date)) {\n    $date = explode('-',\
    \ $date);\n    $month = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n\
    \    if ($month >= 1 && $month <= 12) {\n      if ($month == 2) {\n        if\
    \ ($day >= 1 && $day <= 29) {\n          return true;\n        }\n      } elseif\
    \ ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 ||\
    \ $month == 10 || $month == 12) {\n        if ($day >= 1 && $day <= 31) {\n  \
    \        return true;\n        }\n      } else {\n        if ($day >= 1 && $day\
    \ <= 30) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n\
    }\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date = explode('-', $date);\n    if (count($date) != 3) {\n        return\
    \ false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($day\
    \ < 1 || $day > 31) {\n        return false;\n    }\n    if ($month == 2) {\n\
    \        if ($day > 29) {\n            return false;\n        }\n    }\n    if\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day\
    \ > 30) {\n            return false;\n        }\n    }\n    if (strlen($year)\
    \ != 4) {\n        return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if(empty($date)) return false;\n  $date = explode('-', $date);\n  if(count($date)\
    \ != 3) return false;\n  if(!is_numeric($date[0]) || !is_numeric($date[1]) ||\
    \ !is_numeric($date[2])) return false;\n  if($date[0] < 1 || $date[0] > 12) return\
    \ false;\n  if($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] ==\
    \ 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n    if($date[1] <\
    \ 1 || $date[1] > 31) return false;\n  } else if($date[0] == 4 || $date[0] ==\
    \ 6 || $date[0] == 9 || $date[0] == 11) {\n    if($date[1] < 1 || $date[1] > 30)\
    \ return false;\n  } else if($date[0] == 2) {\n    if($date[1] < 1 || $date[1]\
    \ > 29) return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (preg_match('/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$/',\
    \ $date)) {\n    $date = explode('-', $date);\n    if ($date[0] == 2) {\n    \
    \  if ($date[2] % 4 == 0 && $date[2] % 100 != 0 || $date[2] % 400 == 0) {\n  \
    \      if ($date[1] <= 29) {\n          return true;\n        }\n      } else\
    \ {\n        if ($date[1] <= 28) {\n          return true;\n        }\n      }\n\
    \    } else if ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] ==\
    \ 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n      if ($date[1]\
    \ <= 31) {\n        return true;\n      }\n    } else {\n      if ($date[1] <=\
    \ 30) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) !== 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month === 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ===\
    \ 1 || $month === 3 || $month === 5 || $month === 7 || $month === 8 || $month\
    \ === 10 || $month === 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date = explode('-', $date);\n    if (count($date) != 3) {\n        return\
    \ false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($day\
    \ < 1 || $day > 31) {\n        return false;\n    }\n    if ($month == 2) {\n\
    \        if ($day > 29) {\n            return false;\n        }\n    }\n    if\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day\
    \ > 30) {\n            return false;\n        }\n    }\n    if (strlen($year)\
    \ != 4) {\n        return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date_arr = explode('-', $date);\n    if (count($date_arr) != 3) {\n\
    \        return false;\n    }\n    $month = intval($date_arr[0]);\n    $day =\
    \ intval($date_arr[1]);\n    $year = intval($date_arr[2]);\n    if ($month < 1\
    \ || $month > 12) {\n        return false;\n    }\n    if ($month == 2) {\n  \
    \      if ($day < 1 || $day > 29) {\n            return false;\n        }\n  \
    \  } else if ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12) {\n        if ($day < 1 || $day > 31)\
    \ {\n            return false;\n        }\n    } else {\n        if ($day < 1\
    \ || $day > 30) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date = explode('-', $date);\n    if (count($date) != 3) {\n        return\
    \ false;\n    }\n    if ($date[0] < 1 || $date[0] > 12) {\n        return false;\n\
    \    }\n    if ($date[0] == 2) {\n        if ($date[1] < 1 || $date[1] > 29) {\n\
    \            return false;\n        }\n    } elseif ($date[0] == 1 || $date[0]\
    \ == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 ||\
    \ $date[0] == 12) {\n        if ($date[1] < 1 || $date[1] > 31) {\n          \
    \  return false;\n        }\n    } else {\n        if ($date[1] < 1 || $date[1]\
    \ > 30) {\n            return false;\n        }\n    }\n    if (strlen($date[2])\
    \ != 4) {\n        return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    if (empty($date)) {\n        return false;\n    }\n    $date_arr = explode('-',\
    \ $date);\n    if (count($date_arr) !== 3) {\n        return false;\n    }\n \
    \   $month = $date_arr[0];\n    $day = $date_arr[1];\n    $year = $date_arr[2];\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($month\
    \ === 2) {\n        if ($day < 1 || $day > 29) {\n            return false;\n\
    \        }\n    } else if ($month === 1 || $month === 3 || $month === 5 || $month\
    \ === 7 || $month === 8 || $month === 10 || $month === 12) {\n        if ($day\
    \ < 1 || $day > 31) {\n            return false;\n        }\n    } else {\n  \
    \      if ($day < 1 || $day > 30) {\n            return false;\n        }\n  \
    \  }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date_array = explode('-', $date);\n  if (count($date_array) !== 3) {\n\
    \    return false;\n  }\n  $month = $date_array[0];\n  $day = $date_array[1];\n\
    \  $year = $date_array[2];\n  if ($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  if ($month === 2) {\n    if ($day < 1 || $day > 29) {\n      return false;\n\
    \    }\n  } else if ($month === 1 || $month === 3 || $month === 5 || $month ===\
    \ 7 || $month === 8 || $month === 10 || $month === 12) {\n    if ($day < 1 ||\
    \ $day > 31) {\n      return false;\n    }\n  } else {\n    if ($day < 1 || $day\
    \ > 30) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date = explode('-', $date);\n\
    \  if (count($date) !== 3) {\n    return false;\n  }\n  $month = $date[0];\n \
    \ $day = $date[1];\n  $year = $date[2];\n  if ($month < 1 || $month > 12) {\n\
    \    return false;\n  }\n  if ($month === 2) {\n    if ($day < 1 || $day > 29)\
    \ {\n      return false;\n    }\n  } elseif ($month === 1 || $month === 3 || $month\
    \ === 5 || $month === 7 || $month === 8 || $month === 10 || $month === 12) {\n\
    \    if ($day < 1 || $day > 31) {\n      return false;\n    }\n  } else {\n  \
    \  if ($day < 1 || $day > 30) {\n      return false;\n    }\n  }\n  if ($year\
    \ < 1) {\n    return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date = explode('-', $date);\n    if (count($date) != 3) {\n        return\
    \ false;\n    }\n    if ($date[0] < 1 || $date[0] > 12) {\n        return false;\n\
    \    }\n    if ($date[0] == 2) {\n        if ($date[1] < 1 || $date[1] > 29) {\n\
    \            return false;\n        }\n    } else if ($date[0] == 1 || $date[0]\
    \ == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 ||\
    \ $date[0] == 12) {\n        if ($date[1] < 1 || $date[1] > 31) {\n          \
    \  return false;\n        }\n    } else {\n        if ($date[1] < 1 || $date[1]\
    \ > 30) {\n            return false;\n        }\n    }\n    if ($date[2] < 1)\
    \ {\n        return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) !== 3) return false;\n\
    \  if (strlen($date[0]) !== 2 || strlen($date[1]) !== 2 || strlen($date[2]) !==\
    \ 4) return false;\n  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0]\
    \ == 2) {\n    if ($date[2] % 4 == 0) {\n      if ($date[1] < 1 || $date[1] >\
    \ 29) return false;\n    } else {\n      if ($date[1] < 1 || $date[1] > 28) return\
    \ false;\n    }\n  } else if ($date[0] == 1 || $date[0] == 3 || $date[0] == 5\
    \ || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n \
    \   if ($date[1] < 1 || $date[1] > 31) return false;\n  } else {\n    if ($date[1]\
    \ < 1 || $date[1] > 30) return false;\n  }\n  return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date_arr = explode('-', $date);\n  if (count($date_arr) != 3) {\n    return\
    \ false;\n  }\n  $month = $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n\
    \  if ($month < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2)\
    \ {\n    if ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if\
    \ ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 ||\
    \ $month == 10 || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return\
    \ false;\n    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date = explode('-', $date);\n    if (count($date) != 3) {\n        return\
    \ false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n\
    \    if (is_numeric($month) && is_numeric($day) && is_numeric($year)) {\n    \
    \    if ($month > 0 && $month < 13) {\n            if ($month == 1 || $month ==\
    \ 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month ==\
    \ 12) {\n                if ($day > 0 && $day < 32) {\n                    return\
    \ true;\n                }\n            } else if ($month == 4 || $month == 6\
    \ || $month == 9 || $month == 11) {\n                if ($day > 0 && $day < 31)\
    \ {\n                    return true;\n                }\n            } else if\
    \ ($month == 2) {\n                if ($day > 0 && $day < 30) {\n            \
    \        return true;\n                }\n            }\n        }\n    }\n  \
    \  return false;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date = explode('-', $date);\n    if (count($date) != 3) {\n        return\
    \ false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($day\
    \ < 1 || $day > 31) {\n        return false;\n    }\n    if ($month == 2) {\n\
    \        if ($day > 29) {\n            return false;\n        }\n    }\n    if\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day\
    \ > 30) {\n            return false;\n        }\n    }\n    if ($year < 1) {\n\
    \        return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) !== 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month === 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ===\
    \ 1 || $month === 3 || $month === 5 || $month === 7 || $month === 8 || $month\
    \ === 10 || $month === 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($day < 1 || $day > 31)\
    \ {\n    return false;\n  }\n  if ($month == 2) {\n    if ($day > 29) {\n    \
    \  return false;\n    }\n  }\n  if ($month == 4 || $month == 6 || $month == 9\
    \ || $month == 11) {\n    if ($day > 30) {\n      return false;\n    }\n  }\n\
    \  if ($year < 1) {\n    return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date = explode('-', $date);\n\
    \  if (count($date) !== 3) {\n    return false;\n  }\n  $month = $date[0];\n \
    \ $day = $date[1];\n  $year = $date[2];\n  if ($month < 1 || $month > 12) {\n\
    \    return false;\n  }\n  if ($month === 2) {\n    if ($day < 1 || $day > 29)\
    \ {\n      return false;\n    }\n  } else if ($month === 1 || $month === 3 ||\
    \ $month === 5 || $month === 7 || $month === 8 || $month === 10 || $month ===\
    \ 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n    }\n  } else\
    \ {\n    if ($day < 1 || $day > 30) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if (!is_numeric($date[0]) || !is_numeric($date[1]) || !is_numeric($date[2]))\
    \ return false;\n  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[2]\
    \ < 1) return false;\n  if ($date[0] == 2) {\n    if ($date[2] % 4 == 0) {\n \
    \     if ($date[1] < 1 || $date[1] > 29) return false;\n    } else {\n      if\
    \ ($date[1] < 1 || $date[1] > 28) return false;\n    }\n  } elseif ($date[0] ==\
    \ 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0]\
    \ == 10 || $date[0] == 12) {\n    if ($date[1] < 1 || $date[1] > 31) return false;\n\
    \  } else {\n    if ($date[1] < 1 || $date[1] > 30) return false;\n  }\n  return\
    \ true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  $month = $date[0];\n  $day = $date[1];\n\
    \  $year = $date[2];\n  if ($month > 12 || $month < 1) {\n    return false;\n\
    \  }\n  if ($day > 31 || $day < 1) {\n    return false;\n  }\n  if ($month ==\
    \ 2 && $day > 29) {\n    return false;\n  }\n  if ($month == 2 && $day > 28 &&\
    \ $year % 4 != 0) {\n    return false;\n  }\n  if ($month == 4 || $month == 6\
    \ || $month == 9 || $month == 11) {\n    if ($day > 30) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if (strlen($date[0]) != 2 || strlen($date[1]) != 2 || strlen($date[2]) != 4)\
    \ return false;\n  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0]\
    \ == 2) {\n    if ($date[2] % 4 == 0) {\n      if ($date[1] < 1 || $date[1] >\
    \ 29) return false;\n    } else {\n      if ($date[1] < 1 || $date[1] > 28) return\
    \ false;\n    }\n  } else if ($date[0] == 1 || $date[0] == 3 || $date[0] == 5\
    \ || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n \
    \   if ($date[1] < 1 || $date[1] > 31) return false;\n  } else {\n    if ($date[1]\
    \ < 1 || $date[1] > 30) return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_array = explode('-',\
    \ $date);\n  if (count($date_array) != 3) {\n    return false;\n  }\n  $month\
    \ = $date_array[0];\n  $day = $date_array[1];\n  $year = $date_array[2];\n  if\
    \ ($month < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n\
    \    if ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  if ($year < 1) {\n    return false;\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    if(empty($date)) return false;\n    $date = explode('-', $date);\n  \
    \  if(count($date) != 3) return false;\n    if(!is_numeric($date[0]) || !is_numeric($date[1])\
    \ || !is_numeric($date[2])) return false;\n    if($date[0] < 1 || $date[0] > 12)\
    \ return false;\n    if($date[0] == 2) {\n        if($date[1] < 1 || $date[1]\
    \ > 29) return false;\n    } else if($date[0] == 1 || $date[0] == 3 || $date[0]\
    \ == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12)\
    \ {\n        if($date[1] < 1 || $date[1] > 31) return false;\n    } else {\n \
    \       if($date[1] < 1 || $date[1] > 30) return false;\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date = explode('-', $date);\n    if (count($date) != 3) {\n        return\
    \ false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($day\
    \ < 1 || $day > 31) {\n        return false;\n    }\n    if ($month == 2) {\n\
    \        if ($day > 29) {\n            return false;\n        }\n    }\n    if\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day\
    \ > 30) {\n            return false;\n        }\n    }\n    if ($year < 1) {\n\
    \        return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month <\
    \ 1 || $month > 12) return false;\n  if ($day < 1 || $day > 31) return false;\n\
    \  if ($month == 2 && $day > 29) return false;\n  if (($month == 4 || $month ==\
    \ 6 || $month == 9 || $month == 11) && $day > 30) return false;\n  if ($year <\
    \ 1) return false;\n  return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[1] < 1 || $date[1]\
    \ > 31) return false;\n  if ($date[0] == 2 && $date[1] > 29) return false;\n \
    \ if ($date[0] == 4 || $date[0] == 6 || $date[0] == 9 || $date[0] == 11) {\n \
    \   if ($date[1] > 30) return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) !== 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($day < 1 || $day > 31)\
    \ {\n    return false;\n  }\n  if ($month === 2) {\n    if ($day > 29) {\n   \
    \   return false;\n    }\n  }\n  if ($month === 4 || $month === 6 || $month ===\
    \ 9 || $month === 11) {\n    if ($day > 30) {\n      return false;\n    }\n  }\n\
    \  if (strlen($year) !== 4) {\n    return false;\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbtz186ht.php:51\n\
    Stack trace:\n#0 /tmp/tmpbtz186ht.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpbtz186ht.php\
    \ on line 51\n"
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if (strlen($date[0]) != 2 || strlen($date[1]) != 2 || strlen($date[2]) != 4)\
    \ return false;\n  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0]\
    \ == 2) {\n    if ($date[2] % 4 == 0) {\n      if ($date[1] < 1 || $date[1] >\
    \ 29) return false;\n    } else {\n      if ($date[1] < 1 || $date[1] > 28) return\
    \ false;\n    }\n  } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 ||\
    \ $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n    if\
    \ ($date[1] < 1 || $date[1] > 31) return false;\n  } else {\n    if ($date[1]\
    \ < 1 || $date[1] > 30) return false;\n  }\n  return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if (count($date_arr) != 3) {\n    return false;\n  }\n  $month =\
    \ $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0] == 2) {\n\
    \    if ($date[1] < 1 || $date[1] > 29) return false;\n  } else if ($date[0] ==\
    \ 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0]\
    \ == 10 || $date[0] == 12) {\n    if ($date[1] < 1 || $date[1] > 31) return false;\n\
    \  } else {\n    if ($date[1] < 1 || $date[1] > 30) return false;\n  }\n  if (strlen($date[2])\
    \ != 4) return false;\n  return true;\n}\nfunction candidate(...$args) {\n   \
    \ return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  if (intval($date[0]) < 1 || intval($date[0]) > 12) {\n    return false;\n\
    \  }\n  if (intval($date[0]) == 2) {\n    if (intval($date[1]) < 1 || intval($date[1])\
    \ > 29) {\n      return false;\n    }\n  } else if (intval($date[0]) == 1 || intval($date[0])\
    \ == 3 || intval($date[0]) == 5 || intval($date[0]) == 7 || intval($date[0]) ==\
    \ 8 || intval($date[0]) == 10 || intval($date[0]) == 12) {\n    if (intval($date[1])\
    \ < 1 || intval($date[1]) > 31) {\n      return false;\n    }\n  } else {\n  \
    \  if (intval($date[1]) < 1 || intval($date[1]) > 30) {\n      return false;\n\
    \    }\n  }\n  if (intval($date[2]) < 1) {\n    return false;\n  }\n  return true;\n\
    }\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    if (empty($date)) {\n        return false;\n    }\n    $date = explode('-',\
    \ $date);\n    $month = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($day\
    \ < 1 || $day > 31) {\n        return false;\n    }\n    if ($month == 2) {\n\
    \        if ($day > 29) {\n            return false;\n        }\n    }\n    if\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day\
    \ > 30) {\n            return false;\n        }\n    }\n    if (strlen($year)\
    \ != 4) {\n        return false;\n    }\n    return true;\n}\n\necho valid_date('01-01-2000');\n\
    echo valid_date('01-01-200');\necho valid_date('01-01-20000');\necho valid_date('01-01-200');\n\
    echo valid_date('01-01-200');\necho valid_date('01-01-200');\necho valid_date('01-01-200');\n\
    echo valid_date('01-01-200');\necho valid_date('01-01-200');\necho valid_date('01-01-200');\n\
    echo valid_date('01-01-200');\necho valid_date('01-01-200');\necho valid_date('01-01-200');\n\
    echo valid_date('01-01-200');\necho valid_date('01-01-200');\necho valid_date('01-01-200');\n\
    echo valid_date('01-01-200');\necho valid_date('01-01-200');\necho valid_date('01-01-200');\n\
    echo valid_date('01-01-200');\necho valid_date('01-01-200');\necho valid_date('01-01-200');\n\
    echo valid_date('01-01-200');\necho valid_date('01-01-200');\necho valid_date('01-01-200');\n\
    echo valid_date('\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpdmux_ju9.php on line 64

    '
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if (count($date_arr) != 3) {\n    return false;\n  }\n  $month =\
    \ $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($day < 1 || $day > 31)\
    \ {\n    return false;\n  }\n  if ($month == 2) {\n    if ($day > 29) {\n    \
    \  return false;\n    }\n  }\n  if ($month == 4 || $month == 6 || $month == 9\
    \ || $month == 11) {\n    if ($day > 30) {\n      return false;\n    }\n  }\n\
    \  if (strlen($year) != 4) {\n    return false;\n  }\n  return true;\n}\n\necho\
    \ valid_date('01-01-2000') ? 'true' : 'false';\necho \"\\n\";\necho valid_date('01-01-200')\
    \ ? 'true' : 'false';\necho \"\\n\";\necho valid_date('01-01-20') ? 'true' : 'false';\n\
    echo \"\\n\";\necho valid_date('01-01-2') ? 'true' : 'false';\necho \"\\n\";\n\
    echo valid_date('01-01-') ? 'true' : 'false';\necho \"\\n\";\necho valid_date('01-01')\
    \ ? 'true' : 'false';\necho \"\\n\";\necho valid_date('01-') ? 'true' : 'false';\n\
    echo \"\\n\";\necho valid_date('01') ? 'true' : 'false';\necho \"\\n\";\necho\
    \ valid_date('01-13-2000') ? 'true' : 'false';\necho \"\\n\";\necho valid_date('02-29-2000')\
    \ ? 'true' : 'false';\necho \"\\n\";\necho valid_date('02-29-2001') ? 'true' :\
    \ 'false';\necho \"\\n\";\necho valid_date('02-29-2002')\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjre7tc4p.php on line 65

    '
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if (count($date_arr) !== 3) {\n    return false;\n  }\n  $month =\
    \ $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($day < 1 || $day > 31)\
    \ {\n    return false;\n  }\n  if ($month === 2) {\n    if ($day > 29) {\n   \
    \   return false;\n    }\n  }\n  if ($month === 4 || $month === 6 || $month ===\
    \ 9 || $month === 11) {\n    if ($day > 30) {\n      return false;\n    }\n  }\n\
    \  if ($year < 1) {\n    return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc04022qi.php:54\n\
    Stack trace:\n#0 /tmp/tmpc04022qi.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpc04022qi.php\
    \ on line 54\n"
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (preg_match('/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$/',\
    \ $date)) {\n    $date_parts = explode('-', $date);\n    $month = $date_parts[0];\n\
    \    $day = $date_parts[1];\n    $year = $date_parts[2];\n    if ($month == 2)\
    \ {\n      if ($day > 29) {\n        return false;\n      }\n    } else if ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) {\n      if ($day > 30)\
    \ {\n        return false;\n      }\n    } else {\n      if ($day > 31) {\n  \
    \      return false;\n      }\n    }\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[1] < 1 || $date[1]\
    \ > 31) return false;\n  if ($date[0] == 2 && $date[1] > 29) return false;\n \
    \ if ($date[0] == 4 || $date[0] == 6 || $date[0] == 9 || $date[0] == 11) {\n \
    \   if ($date[1] > 30) return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date_arr = explode('-', $date);\n    if (count($date_arr) != 3) {\n\
    \        return false;\n    }\n    $month = $date_arr[0];\n    $day = $date_arr[1];\n\
    \    $year = $date_arr[2];\n    if ($month < 1 || $month > 12) {\n        return\
    \ false;\n    }\n    if ($day < 1 || $day > 31) {\n        return false;\n   \
    \ }\n    if ($month == 2) {\n        if ($day > 29) {\n            return false;\n\
    \        }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n        if ($day > 30) {\n            return false;\n        }\n \
    \   }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    if (empty($date)) {\n        return false;\n    }\n    $date = explode('-',\
    \ $date);\n    if (count($date) != 3) {\n        return false;\n    }\n    $month\
    \ = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n    if ($month < 1\
    \ || $month > 12) {\n        return false;\n    }\n    if ($month == 2) {\n  \
    \      if ($day < 1 || $day > 29) {\n            return false;\n        }\n  \
    \  } else if ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12) {\n        if ($day < 1 || $day > 31)\
    \ {\n            return false;\n        }\n    } else {\n        if ($day < 1\
    \ || $day > 30) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($day < 1 || $day > 31)\
    \ {\n    return false;\n  }\n  if ($month == 2) {\n    if ($day > 29) {\n    \
    \  return false;\n    }\n  }\n  if ($month == 4 || $month == 6 || $month == 9\
    \ || $month == 11) {\n    if ($day > 30) {\n      return false;\n    }\n  }\n\
    \  if ($year < 1) {\n    return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date_arr = explode('-', $date);\n  if (count($date_arr) != 3) {\n    return\
    \ false;\n  }\n  $month = $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n\
    \  if ($month < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2)\
    \ {\n    if ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if\
    \ ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 ||\
    \ $month == 10 || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return\
    \ false;\n    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) !== 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0] == 2) {\n\
    \    if ($date[1] < 1 || $date[1] > 29) return false;\n  } elseif ($date[0] ==\
    \ 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0]\
    \ == 10 || $date[0] == 12) {\n    if ($date[1] < 1 || $date[1] > 31) return false;\n\
    \  } else {\n    if ($date[1] < 1 || $date[1] > 30) return false;\n  }\n  if (strlen($date[2])\
    \ !== 4) return false;\n  return true;\n}\nfunction candidate(...$args) {\n  \
    \  return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0] == 2) {\n\
    \    if ($date[1] < 1 || $date[1] > 29) return false;\n  } else if ($date[0] ==\
    \ 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0]\
    \ == 10 || $date[0] == 12) {\n    if ($date[1] < 1 || $date[1] > 31) return false;\n\
    \  } else {\n    if ($date[1] < 1 || $date[1] > 30) return false;\n  }\n  if (strlen($date[2])\
    \ != 4) return false;\n  return true;\n}\nfunction candidate(...$args) {\n   \
    \ return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date = explode('-', $date);\n    if (count($date) != 3) {\n        return\
    \ false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($day\
    \ < 1 || $day > 31) {\n        return false;\n    }\n    if ($month == 2) {\n\
    \        if ($day > 29) {\n            return false;\n        }\n    }\n    if\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day\
    \ > 30) {\n            return false;\n        }\n    }\n    if ($year < 1) {\n\
    \        return false;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    if (empty($date)) {\n        return false;\n    }\n    $date = explode('-',\
    \ $date);\n    if (count($date) != 3) {\n        return false;\n    }\n    $month\
    \ = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n    if ($month < 1\
    \ || $month > 12) {\n        return false;\n    }\n    if ($month == 2) {\n  \
    \      if ($day < 1 || $day > 29) {\n            return false;\n        }\n  \
    \  } elseif ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12) {\n        if ($day < 1 || $day > 31)\
    \ {\n            return false;\n        }\n    } else {\n        if ($day < 1\
    \ || $day > 30) {\n            return false;\n        }\n    }\n    if ($year\
    \ < 1) {\n        return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) !== 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if (!is_numeric($month)\
    \ || !is_numeric($day) || !is_numeric($year)) {\n    return false;\n  }\n  if\
    \ ($month < 1 || $month > 12) {\n    return false;\n  }\n  if ($day < 1 || $day\
    \ > 31) {\n    return false;\n  }\n  if ($month === '2') {\n    if ($day > 29)\
    \ {\n      return false;\n    }\n  }\n  if ($month === '4' || $month === '6' ||\
    \ $month === '9' || $month === '11') {\n    if ($day > 30) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyj7ymeed.php:51\n\
    Stack trace:\n#0 /tmp/tmpyj7ymeed.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpyj7ymeed.php\
    \ on line 51\n"
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date_arr = explode('-', $date);\n  if (count($date_arr) != 3) {\n    return\
    \ false;\n  }\n  $month = $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n\
    \  if ($month < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2)\
    \ {\n    if ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if\
    \ ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 ||\
    \ $month == 10 || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return\
    \ false;\n    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n\
    \    }\n  }\n  if (strlen($year) != 4) {\n    return false;\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if(empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if(count($date_arr) != 3) {\n    return false;\n  }\n  $month = $date_arr[0];\n\
    \  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if(!is_numeric($month) ||\
    \ !is_numeric($day) || !is_numeric($year)) {\n    return false;\n  }\n  if($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if($month == 2) {\n    if($day\
    \ < 1 || $day > 29) {\n      return false;\n    }\n  } else if($month == 1 ||\
    \ $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 ||\
    \ $month == 12) {\n    if($day < 1 || $day > 31) {\n      return false;\n    }\n\
    \  } else {\n    if($day < 1 || $day > 30) {\n      return false;\n    }\n  }\n\
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date_arr = explode('-', $date);\n  $month = $date_arr[0];\n  $day = $date_arr[1];\n\
    \  $year = $date_arr[2];\n  if (count($date_arr) != 3) {\n    return false;\n\
    \  }\n  if ($month < 1 || $month > 12) {\n    return false;\n  }\n  if ($month\
    \ == 2) {\n    if ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else\
    \ if ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8\
    \ || $month == 10 || $month == 12) {\n    if ($day < 1 || $day > 31) {\n     \
    \ return false;\n    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\necho valid_date('01-01-2000') . \"\\\
    n\";\necho valid_date('01-01-200') . \"\\n\";\necho valid_date('01-01-20') . \"\
    \\n\";\necho valid_date('01-01-2') . \"\\n\";\necho valid_date('01-01-') . \"\\\
    n\";\necho valid_date('01-01') . \"\\n\";\necho valid_date('01-0') . \"\\n\";\n\
    echo valid_date('01-') . \"\\n\";\necho valid_date('01') . \"\\n\";\necho valid_date('0')\
    \ . \"\\n\";\necho valid_date('') . \"\\n\";\necho valid_date('02-29-2000') .\
    \ \"\\n\";\necho valid_date('02-29-2001') . \"\\n\";\necho valid_date('02-29-2002')\
    \ . \"\\n\";\necho valid_date('02-29-2003') . \"\\n\";\necho valid_date('02-29-2004')\
    \ . \"\\n\";\necho valid_date('02-29-2005') . \"\\n\";\necho valid_date('02-29-2006')\
    \ . \"\\n\";\necho valid_date('02-29-2007') . \"\\n\";\necho\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpr9f3jxn7.php on line 56

    '
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } elseif ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  if ($year < 1) {\n    return false;\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date_arr = explode('-', $date);\n  if (count($date_arr) != 3) {\n    return\
    \ false;\n  }\n  $month = $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n\
    \  if ($month < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2)\
    \ {\n    if ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if\
    \ ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 ||\
    \ $month == 10 || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return\
    \ false;\n    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n\
    \    }\n  }\n  if (strlen($year) != 4) {\n    return false;\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if(empty($date)) return false;\n  $date = explode('-', $date);\n  if(count($date)\
    \ != 3) return false;\n  if(!is_numeric($date[0]) || !is_numeric($date[1]) ||\
    \ !is_numeric($date[2])) return false;\n  if($date[0] < 1 || $date[0] > 12) return\
    \ false;\n  if($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] ==\
    \ 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n    if($date[1] <\
    \ 1 || $date[1] > 31) return false;\n  } else if($date[0] == 4 || $date[0] ==\
    \ 6 || $date[0] == 9 || $date[0] == 11) {\n    if($date[1] < 1 || $date[1] > 30)\
    \ return false;\n  } else if($date[0] == 2) {\n    if($date[1] < 1 || $date[1]\
    \ > 29) return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date = explode('-', $date);\n    if (count($date) != 3) {\n        return\
    \ false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($day\
    \ < 1 || $day > 31) {\n        return false;\n    }\n    if ($month == 2) {\n\
    \        if ($day > 29) {\n            return false;\n        }\n    }\n    if\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day\
    \ > 30) {\n            return false;\n        }\n    }\n    if ($year < 1) {\n\
    \        return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date = explode('-', $date);\n    if (count($date) != 3) {\n        return\
    \ false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($day\
    \ < 1 || $day > 31) {\n        return false;\n    }\n    if ($month == 2) {\n\
    \        if ($day > 29) {\n            return false;\n        }\n    }\n    if\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day\
    \ > 30) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if (count($date_arr) != 3) {\n    return false;\n  }\n  $month =\
    \ $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  if (strlen($year) != 4) {\n    return false;\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (preg_match('/^\\d{2}-\\d{2}-\\d{4}$/', $date)) {\n    $date = explode('-',\
    \ $date);\n    $month = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n\
    \    if ($month < 1 || $month > 12) {\n      return false;\n    }\n    if ($month\
    \ == 2) {\n      if ($day < 1 || $day > 29) {\n        return false;\n      }\n\
    \    } elseif ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n\
    \      if ($day < 1 || $day > 30) {\n        return false;\n      }\n    } else\
    \ {\n      if ($day < 1 || $day > 31) {\n        return false;\n      }\n    }\n\
    \    return true;\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n\
    \    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date = explode('-', $date);\n\
    \  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if (!is_numeric($month)\
    \ || !is_numeric($day) || !is_numeric($year)) {\n    return false;\n  }\n  if\
    \ ($month < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n\
    \    if ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date = explode('-', $date);\n\
    \  if (count($date) !== 3) {\n    return false;\n  }\n  $month = $date[0];\n \
    \ $day = $date[1];\n  $year = $date[2];\n  if (!is_numeric($month) || !is_numeric($day)\
    \ || !is_numeric($year)) {\n    return false;\n  }\n  if ($month < 1 || $month\
    \ > 12) {\n    return false;\n  }\n  if ($month === 2) {\n    if ($day < 1 ||\
    \ $day > 29) {\n      return false;\n    }\n  } else if ($month === 1 || $month\
    \ === 3 || $month === 5 || $month === 7 || $month === 8 || $month === 10 || $month\
    \ === 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n    }\n  }\
    \ else {\n    if ($day < 1 || $day > 30) {\n      return false;\n    }\n  }\n\
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date_arr = explode('-', $date);\n    if (count($date_arr) != 3) {\n\
    \        return false;\n    }\n    $month = $date_arr[0];\n    $day = $date_arr[1];\n\
    \    $year = $date_arr[2];\n    if ($month < 1 || $month > 12) {\n        return\
    \ false;\n    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n\
    \            return false;\n        }\n    } else if ($month == 1 || $month ==\
    \ 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month ==\
    \ 12) {\n        if ($day < 1 || $day > 31) {\n            return false;\n   \
    \     }\n    } else {\n        if ($day < 1 || $day > 30) {\n            return\
    \ false;\n        }\n    }\n    if ($year < 1) {\n        return false;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if (strlen($date[0]) != 2 || strlen($date[1]) != 2 || strlen($date[2]) != 4)\
    \ return false;\n  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0]\
    \ == 2) {\n    if ($date[2] % 4 == 0) {\n      if ($date[1] < 1 || $date[1] >\
    \ 29) return false;\n    } else {\n      if ($date[1] < 1 || $date[1] > 28) return\
    \ false;\n    }\n  } else if ($date[0] == 1 || $date[0] == 3 || $date[0] == 5\
    \ || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n \
    \   if ($date[1] < 1 || $date[1] > 31) return false;\n  } else {\n    if ($date[1]\
    \ < 1 || $date[1] > 30) return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $valid = false;\n  $date_arr = explode('-', $date);\n  if (count($date_arr)\
    \ == 3) {\n    $month = $date_arr[0];\n    $day = $date_arr[1];\n    $year = $date_arr[2];\n\
    \    if ($month >= 1 && $month <= 12) {\n      if ($month == 2) {\n        if\
    \ ($day >= 1 && $day <= 29) {\n          $valid = true;\n        }\n      } else\
    \ if ($month % 2 == 0) {\n        if ($day >= 1 && $day <= 30) {\n          $valid\
    \ = true;\n        }\n      } else {\n        if ($day >= 1 && $day <= 31) {\n\
    \          $valid = true;\n        }\n      }\n    }\n  }\n  return $valid;\n\
    }\n\necho valid_date('12-31-2000') . \"\\n\";\necho valid_date('02-29-2000') .\
    \ \"\\n\";\necho valid_date('02-30-2000') . \"\\n\";\necho valid_date('02-29-2001')\
    \ . \"\\n\";\necho valid_date('02-29-1900') . \"\\n\";\necho valid_date('02-29-2100')\
    \ . \"\\n\";\necho valid_date('02-29-2000') . \"\\n\";\necho valid_date('02-29-2000')\
    \ . \"\\n\";\necho valid_date('02-29-2000') . \"\\n\";\necho valid_date('02-29-2000')\
    \ . \"\\n\";\necho valid_date('02-29-2000') . \"\\n\";\necho valid_date('02-29-2000')\
    \ . \"\\n\";\necho valid_date('02-29-2000') . \"\\n\";\necho valid_date('02-29-2000')\
    \ . \"\\n\";\necho valid_date('02-29-2000') . \"\\n\";\necho valid_date('02-29-2000')\
    \ . \"\\n\";\necho valid_date('02-29-2000') . \"\\n\";\necho valid_date('02-29-2000')\
    \ . \"\\n\";\necho valid_date('02-29-2000') . \"\\n\";\necho valid_date\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp1u6ry3qi.php on line 55

    '
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($day < 1 || $day > 31)\
    \ {\n    return false;\n  }\n  if ($month == 2) {\n    if ($day > 29) {\n    \
    \  return false;\n    }\n  }\n  if ($month == 4 || $month == 6 || $month == 9\
    \ || $month == 11) {\n    if ($day > 30) {\n      return false;\n    }\n  }\n\
    \  if ($year < 1) {\n    return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date = explode('-', $date);\n    if (count($date) !== 3) {\n       \
    \ return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n    $year\
    \ = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n \
    \   }\n    if ($month === 2) {\n        if ($day < 1 || $day > 29) {\n       \
    \     return false;\n        }\n    } elseif ($month === 1 || $month === 3 ||\
    \ $month === 5 || $month === 7 || $month === 8 || $month === 10 || $month ===\
    \ 12) {\n        if ($day < 1 || $day > 31) {\n            return false;\n   \
    \     }\n    } else {\n        if ($day < 1 || $day > 30) {\n            return\
    \ false;\n        }\n    }\n    if ($year < 1) {\n        return false;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if (count($date_arr) != 3) {\n    return false;\n  }\n  $month =\
    \ $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if(empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if(count($date_arr) != 3) {\n    return false;\n  }\n  $month = $date_arr[0];\n\
    \  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if($month < 1 || $month >\
    \ 12) {\n    return false;\n  }\n  if($month == 2) {\n    if($day < 1 || $day\
    \ > 29) {\n      return false;\n    }\n  } else if($month == 1 || $month == 3\
    \ || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12)\
    \ {\n    if($day < 1 || $day > 31) {\n      return false;\n    }\n  } else {\n\
    \    if($day < 1 || $day > 30) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0] == 2) {\n\
    \    if ($date[1] < 1 || $date[1] > 29) return false;\n  } elseif ($date[0] ==\
    \ 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0]\
    \ == 10 || $date[0] == 12) {\n    if ($date[1] < 1 || $date[1] > 31) return false;\n\
    \  } else {\n    if ($date[1] < 1 || $date[1] > 30) return false;\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date_arr = explode('-', $date);\n  if (count($date_arr) !== 3) {\n   \
    \ return false;\n  }\n  $month = $date_arr[0];\n  $day = $date_arr[1];\n  $year\
    \ = $date_arr[2];\n  if ($month < 1 || $month > 12) {\n    return false;\n  }\n\
    \  if ($month === 2) {\n    if ($day < 1 || $day > 29) {\n      return false;\n\
    \    }\n  } else if ($month === 1 || $month === 3 || $month === 5 || $month ===\
    \ 7 || $month === 8 || $month === 10 || $month === 12) {\n    if ($day < 1 ||\
    \ $day > 31) {\n      return false;\n    }\n  } else {\n    if ($day < 1 || $day\
    \ > 30) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date_arr = explode('-', $date);\n  if (count($date_arr) != 3) return false;\n\
    \  if (strlen($date_arr[0]) != 2 || strlen($date_arr[1]) != 2 || strlen($date_arr[2])\
    \ != 4) return false;\n  if ($date_arr[0] < 1 || $date_arr[0] > 12) return false;\n\
    \  if ($date_arr[0] == 2) {\n    if ($date_arr[1] < 1 || $date_arr[1] > 29) return\
    \ false;\n  } else if ($date_arr[0] == 1 || $date_arr[0] == 3 || $date_arr[0]\
    \ == 5 || $date_arr[0] == 7 || $date_arr[0] == 8 || $date_arr[0] == 10 || $date_arr[0]\
    \ == 12) {\n    if ($date_arr[1] < 1 || $date_arr[1] > 31) return false;\n  }\
    \ else {\n    if ($date_arr[1] < 1 || $date_arr[1] > 30) return false;\n  }\n\
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date = explode('-', $date);\n    if (count($date) != 3) {\n        return\
    \ false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($day\
    \ < 1 || $day > 31) {\n        return false;\n    }\n    if ($month == 2) {\n\
    \        if ($day > 29) {\n            return false;\n        }\n    }\n    if\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day\
    \ > 30) {\n            return false;\n        }\n    }\n    if ($year < 1) {\n\
    \        return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0] == 2) {\n\
    \    if ($date[1] < 1 || $date[1] > 29) return false;\n  } else if ($date[0] ==\
    \ 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0]\
    \ == 10 || $date[0] == 12) {\n    if ($date[1] < 1 || $date[1] > 31) return false;\n\
    \  } else {\n    if ($date[1] < 1 || $date[1] > 30) return false;\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0] == 2) {\n\
    \    if ($date[1] < 1 || $date[1] > 29) return false;\n  } else if ($date[0] ==\
    \ 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0]\
    \ == 10 || $date[0] == 12) {\n    if ($date[1] < 1 || $date[1] > 31) return false;\n\
    \  } else {\n    if ($date[1] < 1 || $date[1] > 30) return false;\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if (count($date_arr) != 3) {\n    return false;\n  }\n  $month =\
    \ $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  if ($year < 1) {\n    return false;\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[1] < 1 || $date[1]\
    \ > 31) return false;\n  if ($date[0] == 2 && $date[1] > 29) return false;\n \
    \ if ($date[0] == 4 || $date[0] == 6 || $date[0] == 9 || $date[0] == 11) {\n \
    \   if ($date[1] > 30) return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if(count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if($month == 2) {\n    if($day\
    \ < 1 || $day > 29) {\n      return false;\n    }\n  } else if($month == 1 ||\
    \ $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 ||\
    \ $month == 12) {\n    if($day < 1 || $day > 31) {\n      return false;\n    }\n\
    \  } else {\n    if($day < 1 || $day > 30) {\n      return false;\n    }\n  }\n\
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0] == 2) {\n\
    \    if ($date[1] < 1 || $date[1] > 29) return false;\n  } else if ($date[0] ==\
    \ 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0]\
    \ == 10 || $date[0] == 12) {\n    if ($date[1] < 1 || $date[1] > 31) return false;\n\
    \  } else {\n    if ($date[1] < 1 || $date[1] > 30) return false;\n  }\n  if ($date[2]\
    \ < 1) return false;\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date = explode('-', $date);\n\
    \  if (count($date) !== 3) {\n    return false;\n  }\n  $month = $date[0];\n \
    \ $day = $date[1];\n  $year = $date[2];\n  if ($month < 1 || $month > 12) {\n\
    \    return false;\n  }\n  if ($month === 1 || $month === 3 || $month === 5 ||\
    \ $month === 7 || $month === 8 || $month === 10 || $month === 12) {\n    if ($day\
    \ < 1 || $day > 31) {\n      return false;\n    }\n  } else if ($month === 4 ||\
    \ $month === 6 || $month === 9 || $month === 11) {\n    if ($day < 1 || $day >\
    \ 30) {\n      return false;\n    }\n  } else if ($month === 2) {\n    if ($day\
    \ < 1 || $day > 29) {\n      return false;\n    }\n  }\n  if ($year < 1) {\n \
    \   return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnr9oar71.php:49\n\
    Stack trace:\n#0 /tmp/tmpnr9oar71.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpnr9oar71.php\
    \ on line 49\n"
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if(empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  $month = $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n\
    \  if(!checkdate($month, $day, $year)) {\n    return false;\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    if (preg_match('/^\\d{2}-\\d{2}-\\d{4}$/', $date)) {\n        $date =\
    \ explode('-', $date);\n        $month = $date[0];\n        $day = $date[1];\n\
    \        $year = $date[2];\n        if ($month >= 1 && $month <= 12) {\n     \
    \       if ($month == 2) {\n                if ($day >= 1 && $day <= 29) {\n \
    \                   return true;\n                }\n            } elseif ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n                if ($day >= 1 && $day <= 31) {\n    \
    \                return true;\n                }\n            } else {\n     \
    \           if ($day >= 1 && $day <= 30) {\n                    return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\n\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) !== 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month === 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ===\
    \ 4 || $month === 6 || $month === 9 || $month === 11) {\n    if ($day < 1 || $day\
    \ > 30) {\n      return false;\n    }\n  } else {\n    if ($day < 1 || $day >\
    \ 31) {\n      return false;\n    }\n  }\n  return true;\n}\n\necho valid_date('02-29-2000')\
    \ . PHP_EOL;\necho valid_date('02-30-2000') . PHP_EOL;\necho valid_date('02-29-2001')\
    \ . PHP_EOL;\necho valid_date('02-29-2002') . PHP_EOL;\necho valid_date('02-29-2003')\
    \ . PHP_EOL;\necho valid_date('02-29-2004') . PHP_EOL;\necho valid_date('02-29-2005')\
    \ . PHP_EOL;\necho valid_date('02-29-2006') . PHP_EOL;\necho valid_date('02-29-2007')\
    \ . PHP_EOL;\necho valid_date('02-29-2008') . PHP_EOL;\necho valid_date('02-29-2009')\
    \ . PHP_EOL;\necho valid_date('02-29-2010') . PHP_EOL;\necho valid_date('02-29-2011')\
    \ . PHP_EOL;\necho valid_date('02-29-2012') . PHP_EOL;\necho valid_date('02-29-2013')\
    \ . PHP_EOL;\necho valid_date('02-29-2014') . PHP_EOL;\necho valid_date('02-29-2015')\
    \ . PHP_EOL;\necho valid_\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpci2jay60.php on line 54

    '
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date = explode('-', $date);\n    if (count($date) != 3) {\n        return\
    \ false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($day\
    \ < 1 || $day > 31) {\n        return false;\n    }\n    if ($month == 2) {\n\
    \        if ($day > 29) {\n            return false;\n        }\n    }\n    if\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day\
    \ > 30) {\n            return false;\n        }\n    }\n    if ($year < 0) {\n\
    \        return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if(empty($date)) {\n    return false;\n  }\n  $date = explode('-', $date);\n\
    \  if(count($date) !== 3) {\n    return false;\n  }\n  if(!is_numeric($date[0])\
    \ || !is_numeric($date[1]) || !is_numeric($date[2])) {\n    return false;\n  }\n\
    \  if($date[0] < 1 || $date[0] > 12) {\n    return false;\n  }\n  if($date[0]\
    \ === 2) {\n    if($date[1] < 1 || $date[1] > 29) {\n      return false;\n   \
    \ }\n  } elseif($date[0] === 1 || $date[0] === 3 || $date[0] === 5 || $date[0]\
    \ === 7 || $date[0] === 8 || $date[0] === 10 || $date[0] === 12) {\n    if($date[1]\
    \ < 1 || $date[1] > 31) {\n      return false;\n    }\n  } else {\n    if($date[1]\
    \ < 1 || $date[1] > 30) {\n      return false;\n    }\n  }\n  return true;\n}\n\
    \nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date = explode('-', $date);\n\
    \  if (count($date) !== 3) {\n    return false;\n  }\n  if (!is_numeric($date[0])\
    \ || !is_numeric($date[1]) || !is_numeric($date[2])) {\n    return false;\n  }\n\
    \  if ($date[0] < 1 || $date[0] > 12) {\n    return false;\n  }\n  if ($date[0]\
    \ === 2) {\n    if ($date[1] < 1 || $date[1] > 29) {\n      return false;\n  \
    \  }\n  } elseif ($date[0] === 1 || $date[0] === 3 || $date[0] === 5 || $date[0]\
    \ === 7 || $date[0] === 8 || $date[0] === 10 || $date[0] === 12) {\n    if ($date[1]\
    \ < 1 || $date[1] > 31) {\n      return false;\n    }\n  } else {\n    if ($date[1]\
    \ < 1 || $date[1] > 30) {\n      return false;\n    }\n  }\n  return true;\n}\n\
    \nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (preg_match('/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$/',\
    \ $date)) {\n    $date = explode('-', $date);\n    $month = $date[0];\n    $day\
    \ = $date[1];\n    $year = $date[2];\n    if ($month == 2) {\n      if ($day >\
    \ 29) {\n        return false;\n      }\n    } else if ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n      if ($day > 30) {\n        return\
    \ false;\n      }\n    } else {\n      if ($day > 31) {\n        return false;\n\
    \      }\n    }\n    return true;\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date = explode('-', $date);\n    if (count($date) !== 3) {\n       \
    \ return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n    $year\
    \ = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n \
    \   }\n    if ($month === 2) {\n        if ($day < 1 || $day > 29) {\n       \
    \     return false;\n        }\n    } else if ($month === 1 || $month === 3 ||\
    \ $month === 5 || $month === 7 || $month === 8 || $month === 10 || $month ===\
    \ 12) {\n        if ($day < 1 || $day > 31) {\n            return false;\n   \
    \     }\n    } else {\n        if ($day < 1 || $day > 30) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date_arr = explode('-', $date);\n    if (count($date_arr) != 3) {\n\
    \        return false;\n    }\n    $month = $date_arr[0];\n    $day = $date_arr[1];\n\
    \    $year = $date_arr[2];\n    if (!is_numeric($month) || !is_numeric($day) ||\
    \ !is_numeric($year)) {\n        return false;\n    }\n    if ($month < 1 || $month\
    \ > 12) {\n        return false;\n    }\n    if ($day < 1 || $day > 31) {\n  \
    \      return false;\n    }\n    if ($month == 2) {\n        if ($day > 29) {\n\
    \            return false;\n        }\n    }\n    if ($month == 4 || $month ==\
    \ 6 || $month == 9 || $month == 11) {\n        if ($day > 30) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if (!is_numeric($date[0]) || !is_numeric($date[1]) || !is_numeric($date[2]))\
    \ return false;\n  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0]\
    \ == 2) {\n    if ($date[1] < 1 || $date[1] > 29) return false;\n  } else if ($date[0]\
    \ % 2 == 0) {\n    if ($date[1] < 1 || $date[1] > 30) return false;\n  } else\
    \ {\n    if ($date[1] < 1 || $date[1] > 31) return false;\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month <\
    \ 1 || $month > 12) return false;\n  if ($day < 1 || $day > 31) return false;\n\
    \  if ($month == 2 && $day > 29) return false;\n  if ($month == 4 || $month ==\
    \ 6 || $month == 9 || $month == 11) {\n    if ($day > 30) return false;\n  }\n\
    \  if (strlen($year) != 4) return false;\n  return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if(empty($date)) {\n    return false;\n  }\n  $date = explode('-', $date);\n\
    \  if(count($date) != 3) {\n    return false;\n  }\n  if(!is_numeric($date[0])\
    \ || !is_numeric($date[1]) || !is_numeric($date[2])) {\n    return false;\n  }\n\
    \  if($date[0] < 1 || $date[0] > 12) {\n    return false;\n  }\n  if($date[0]\
    \ == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 ||\
    \ $date[0] == 10 || $date[0] == 12) {\n    if($date[1] < 1 || $date[1] > 31) {\n\
    \      return false;\n    }\n  }\n  if($date[0] == 4 || $date[0] == 6 || $date[0]\
    \ == 9 || $date[0] == 11) {\n    if($date[1] < 1 || $date[1] > 30) {\n      return\
    \ false;\n    }\n  }\n  if($date[0] == 2) {\n    if($date[1] < 1 || $date[1] >\
    \ 29) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date_arr = explode('-', $date);\n  if (count($date_arr) != 3) return false;\n\
    \  $month = $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n \
    \ if ($month < 1 || $month > 12) return false;\n  if ($day < 1 || $day > 31) return\
    \ false;\n  if ($month == 2 && $day > 29) return false;\n  if (($month == 4 ||\
    \ $month == 6 || $month == 9 || $month == 11) && $day > 30) return false;\n  if\
    \ (strlen($year) != 4) return false;\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if (strlen($date[0]) != 2 || strlen($date[1]) != 2 || strlen($date[2]) != 4)\
    \ return false;\n  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0]\
    \ == 2) {\n    if ($date[2] % 4 == 0) {\n      if ($date[1] < 1 || $date[1] >\
    \ 29) return false;\n    } else {\n      if ($date[1] < 1 || $date[1] > 28) return\
    \ false;\n    }\n  } else if ($date[0] == 1 || $date[0] == 3 || $date[0] == 5\
    \ || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n \
    \   if ($date[1] < 1 || $date[1] > 31) return false;\n  } else {\n    if ($date[1]\
    \ < 1 || $date[1] > 30) return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_array = explode('-',\
    \ $date);\n  if (count($date_array) != 3) {\n    return false;\n  }\n  $month\
    \ = $date_array[0];\n  $day = $date_array[1];\n  $year = $date_array[2];\n  if\
    \ ($month < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n\
    \    if ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    if (empty($date)) {\n        return false;\n    }\n    $date_arr = explode('-',\
    \ $date);\n    if (count($date_arr) != 3) {\n        return false;\n    }\n  \
    \  $month = $date_arr[0];\n    $day = $date_arr[1];\n    $year = $date_arr[2];\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($day\
    \ < 1) {\n        return false;\n    }\n    if ($month == 2) {\n        if ($day\
    \ > 29) {\n            return false;\n        }\n    } elseif ($month == 1 ||\
    \ $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 ||\
    \ $month == 12) {\n        if ($day > 31) {\n            return false;\n     \
    \   }\n    } else {\n        if ($day > 30) {\n            return false;\n   \
    \     }\n    }\n    if (strlen($year) != 4) {\n        return false;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if (count($date_arr) != 3) {\n    return false;\n  }\n  $month =\
    \ $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($day < 1) {\n    return\
    \ false;\n  }\n  if ($month == 2) {\n    if ($day > 29) {\n      return false;\n\
    \    }\n  } else if ($month == 1 || $month == 3 || $month == 5 || $month == 7\
    \ || $month == 8 || $month == 10 || $month == 12) {\n    if ($day > 31) {\n  \
    \    return false;\n    }\n  } else {\n    if ($day > 30) {\n      return false;\n\
    \    }\n  }\n  if (strlen($year) != 4) {\n    return false;\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) !== 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month === 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ===\
    \ 1 || $month === 3 || $month === 5 || $month === 7 || $month === 8 || $month\
    \ === 10 || $month === 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date_arr = explode('-', $date);\n  if (count($date_arr) != 3) {\n    return\
    \ false;\n  }\n  $month = $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n\
    \  if ($year < 0) {\n    return false;\n  }\n  if ($month < 1 || $month > 12)\
    \ {\n    return false;\n  }\n  if ($month == 2) {\n    if ($day < 1 || $day >\
    \ 29) {\n      return false;\n    }\n  } else if ($month == 1 || $month == 3 ||\
    \ $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n\
    \    if ($day < 1 || $day > 31) {\n      return false;\n    }\n  } else {\n  \
    \  if ($day < 1 || $day > 30) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (preg_match('/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/', $date, $matches))\
    \ {\n    $month = $matches[1];\n    $day = $matches[2];\n    $year = $matches[3];\n\
    \    if ($month < 1 || $month > 12) {\n      return false;\n    }\n    if ($day\
    \ < 1 || $day > 31) {\n      return false;\n    }\n    if ($month == 2) {\n  \
    \    if ($day > 29) {\n        return false;\n      }\n    }\n    if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n      if ($day > 30) {\n\
    \        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0] == 2) {\n\
    \    if ($date[1] < 1 || $date[1] > 29) return false;\n  } else if ($date[0] ==\
    \ 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0]\
    \ == 10 || $date[0] == 12) {\n    if ($date[1] < 1 || $date[1] > 31) return false;\n\
    \  } else {\n    if ($date[1] < 1 || $date[1] > 30) return false;\n  }\n  if ($date[2]\
    \ < 1) return false;\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n    $date = explode('-', $date);\n    if (count($date) !== 3) {\n       \
    \ return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n    $year\
    \ = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n \
    \   }\n    if ($month === 2) {\n        if ($day < 1 || $day > 29) {\n       \
    \     return false;\n        }\n    } elseif ($month === 1 || $month === 3 ||\
    \ $month === 5 || $month === 7 || $month === 8 || $month === 10 || $month ===\
    \ 12) {\n        if ($day < 1 || $day > 31) {\n            return false;\n   \
    \     }\n    } else {\n        if ($day < 1 || $day > 30) {\n            return\
    \ false;\n        }\n    }\n    if ($year < 1) {\n        return false;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) return false;\n\
    \  if (strlen($date[0]) != 2 || strlen($date[1]) != 2 || strlen($date[2]) != 4)\
    \ return false;\n  if ($date[0] < 1 || $date[0] > 12) return false;\n  if ($date[0]\
    \ == 2) {\n    if ($date[2] % 4 == 0) {\n      if ($date[1] < 1 || $date[1] >\
    \ 29) return false;\n    } else {\n      if ($date[1] < 1 || $date[1] > 28) return\
    \ false;\n    }\n  } else if ($date[0] == 1 || $date[0] == 3 || $date[0] == 5\
    \ || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n \
    \   if ($date[1] < 1 || $date[1] > 31) return false;\n  } else {\n    if ($date[1]\
    \ < 1 || $date[1] > 30) return false;\n  }\n  return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if (count($date_arr) != 3) {\n    return false;\n  }\n  $month =\
    \ $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  if (strlen($year) != 4) {\n    return false;\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if (preg_match('/^\\d{2}-\\d{2}-\\d{4}$/', $date)) {\n    $date = explode('-',\
    \ $date);\n    $month = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n\
    \    if ($month < 1 || $month > 12) {\n      return false;\n    }\n    if ($month\
    \ == 2) {\n      if ($day < 1 || $day > 29) {\n        return false;\n      }\n\
    \    } else if ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n\
    \      if ($day < 1 || $day > 30) {\n        return false;\n      }\n    } else\
    \ {\n      if ($day < 1 || $day > 31) {\n        return false;\n      }\n    }\n\
    \    return true;\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n\
    \    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  if(empty($date)) {\n    return false;\n  }\n  $date_arr = explode('-',\
    \ $date);\n  if(count($date_arr) != 3) {\n    return false;\n  }\n  $month = $date_arr[0];\n\
    \  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if(!is_numeric($month) ||\
    \ !is_numeric($day) || !is_numeric($year)) {\n    return false;\n  }\n  if($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if($month == 2) {\n    if($day\
    \ < 1 || $day > 29) {\n      return false;\n    }\n  } else if($month == 1 ||\
    \ $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 ||\
    \ $month == 12) {\n    if($day < 1 || $day > 31) {\n      return false;\n    }\n\
    \  } else {\n    if($day < 1 || $day > 30) {\n      return false;\n    }\n  }\n\
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date_arr = explode('-', $date);\n  if (count($date_arr) !== 3) {\n   \
    \ return false;\n  }\n  $month = $date_arr[0];\n  $day = $date_arr[1];\n  $year\
    \ = $date_arr[2];\n  if ($month < 1 || $month > 12) {\n    return false;\n  }\n\
    \  if ($day < 1 || $day > 31) {\n    return false;\n  }\n  if ($month === '2')\
    \ {\n    if ($day > 29) {\n      return false;\n    }\n  }\n  if ($month === '4'\
    \ || $month === '6' || $month === '9' || $month === '11') {\n    if ($day > 30)\
    \ {\n      return false;\n    }\n  }\n  if ($year < 1) {\n    return false;\n\
    \  }\n  return true;\n}\n\n$date = '02-29-2000';\nvar_dump(valid_date($date));\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaz_gqj3_.php:53\n\
    Stack trace:\n#0 /tmp/tmpaz_gqj3_.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpaz_gqj3_.php\
    \ on line 53\n"
  timestamp: 1659730900
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\nfunction valid_date($date)\
    \ {\n  $date = explode('-', $date);\n  if (count($date) != 3) {\n    return false;\n\
    \  }\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730900

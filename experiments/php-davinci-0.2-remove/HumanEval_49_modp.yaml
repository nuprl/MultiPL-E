name: HumanEval_49_modp
language: php
prompt: "<?php\n// Return 2^n modulo p (be aware of numerics).\nfunction modp($n,\
  \ $p) {\n"
tests: "function candidate(...$args) {\n    return modp(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(3, 5) !== 3) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(1101, 101) !== 2) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(0, 101) !== 1) { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(3, 11) !== 8) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(100, 101) !== 1) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(30, 5) !== 4) { throw new Exception(\"Test failed!\"); }\n  \
  \  if (candidate(31, 5) !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\n\
  test();"
completions: ["    $r = 1;\n    $b = 2;\n    while ($n > 0) {\n        if ($n & 1)\
    \ {\n            $r = ($r * $b) % $p;\n        }\n        $n >>= 1;\n        $b\
    \ = ($b * $b) % $p;\n    }\n    return $r;\n}\n", "    $r = 1;\n    $b = 2;\n\
    \    while ($n > 0) {\n        if ($n & 1) {\n            $r = ($r * $b) % $p;\n\
    \        }\n        $n >>= 1;\n        $b = ($b * $b) % $p;\n    }\n    return\
    \ $r;\n}\n", "    $r = 1;\n    $b = 2;\n    while ($n > 0) {\n        if ($n &\
    \ 1) {\n            $r = ($r * $b) % $p;\n        }\n        $n >>= 1;\n     \
    \   $b = ($b * $b) % $p;\n    }\n    return $r;\n}\n", "\t$r = 1;\n\t$b = 2;\n\
    \twhile ($n > 0) {\n\t\tif ($n & 1) {\n\t\t\t$r = ($r * $b) % $p;\n\t\t}\n\t\t\
    $n >>= 1;\n\t\t$b = ($b * $b) % $p;\n\t}\n\treturn $r;\n}\n", "\t$r = 1;\n\tfor\
    \ ($i = 0; $i < $n; $i++) {\n\t\t$r = ($r * 2) % $p;\n\t}\n\treturn $r;\n}\n",
  "    $r = 1;\n    $b = 2;\n    while ($n > 0) {\n        if ($n & 1) {\n       \
    \     $r = ($r * $b) % $p;\n        }\n        $n >>= 1;\n        $b = ($b * $b)\
    \ % $p;\n    }\n    return $r;\n}\n", "  $r = 1;\n  $b = 2;\n  while ($n > 0)\
    \ {\n    if ($n & 1) {\n      $r = ($r * $b) % $p;\n    }\n    $n >>= 1;\n   \
    \ $b = ($b * $b) % $p;\n  }\n  return $r;\n}\n", "  $r = 1;\n  $b = 2;\n  while\
    \ ($n > 0) {\n    if ($n & 1) {\n      $r = ($r * $b) % $p;\n    }\n    $n >>=\
    \ 1;\n    $b = ($b * $b) % $p;\n  }\n  return $r;\n}\n", "\t$r = 1;\n\t$b = 2;\n\
    \twhile ($n > 0) {\n\t\tif ($n & 1) {\n\t\t\t$r = ($r * $b) % $p;\n\t\t}\n\t\t\
    $n >>= 1;\n\t\t$b = ($b * $b) % $p;\n\t}\n\treturn $r;\n}\n", "    $r = 1;\n \
    \   $b = 2;\n    while ($n > 0) {\n        if ($n & 1) {\n            $r = ($r\
    \ * $b) % $p;\n        }\n        $n >>= 1;\n        $b = ($b * $b) % $p;\n  \
    \  }\n    return $r;\n}\n", "\t$r = 1;\n\t$b = 2;\n\twhile ($n > 0) {\n\t\tif\
    \ ($n & 1) {\n\t\t\t$r = ($r * $b) % $p;\n\t\t}\n\t\t$n >>= 1;\n\t\t$b = ($b *\
    \ $b) % $p;\n\t}\n\treturn $r;\n}\n", "  $r = 1;\n  $b = 2;\n  while ($n > 0)\
    \ {\n    if ($n & 1) {\n      $r = ($r * $b) % $p;\n    }\n    $n >>= 1;\n   \
    \ $b = ($b * $b) % $p;\n  }\n  return $r;\n}\n", "    $r = 1;\n    $b = 2;\n \
    \   while ($n > 0) {\n        if ($n & 1) {\n            $r = ($r * $b) % $p;\n\
    \        }\n        $n >>= 1;\n        $b = ($b * $b) % $p;\n    }\n    return\
    \ $r;\n}\n", "\t$r = 1;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\t$r = ($r * 2) %\
    \ $p;\n\t}\n\treturn $r;\n}\n", "\t$r = 1;\n\t$b = 2;\n\twhile ($n > 0) {\n\t\t\
    if ($n & 1) {\n\t\t\t$r = ($r * $b) % $p;\n\t\t}\n\t\t$n >>= 1;\n\t\t$b = ($b\
    \ * $b) % $p;\n\t}\n\treturn $r;\n}\n", "  $r = 1;\n  $b = 2;\n  while ($n > 0)\
    \ {\n    if ($n & 1) {\n      $r = ($r * $b) % $p;\n    }\n    $n >>= 1;\n   \
    \ $b = ($b * $b) % $p;\n  }\n  return $r;\n}\n", "  $r = 1;\n  $b = 2;\n  while\
    \ ($n > 0) {\n    if ($n & 1) {\n      $r = ($r * $b) % $p;\n    }\n    $n >>=\
    \ 1;\n    $b = ($b * $b) % $p;\n  }\n  return $r;\n}\n", "  $r = 1;\n  $b = 2;\n\
    \  while ($n > 0) {\n    if ($n & 1) {\n      $r = ($r * $b) % $p;\n    }\n  \
    \  $n >>= 1;\n    $b = ($b * $b) % $p;\n  }\n  return $r;\n}\n", "    $r = 1;\n\
    \    $b = 2;\n    while ($n > 0) {\n        if ($n & 1) {\n            $r = ($r\
    \ * $b) % $p;\n        }\n        $n >>= 1;\n        $b = ($b * $b) % $p;\n  \
    \  }\n    return $r;\n}\n", "  $r = 1;\n  for ($i = 0; $i < $n; $i++) {\n    $r\
    \ = ($r * 2) % $p;\n  }\n  return $r;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

language: php
name: HumanEval_145_order_by_points
results:
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8583w3q.php:25\n\
    Stack trace:\n#0 /tmp/tmpv8583w3q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv8583w3q.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_array = [];\n    $sum_array = [];\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum = 0;\n        $value_array = str_split($value);\n  \
    \      foreach ($value_array as $key2 => $value2) {\n            $sum += $value2;\n\
    \        }\n        $nums_array[$key] = $value;\n        $sum_array[$key] = $sum;\n\
    \    }\n    array_multisort($sum_array, SORT_ASC, $nums_array);\n    return $nums_array;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp1bo0dqkw.php on line\
    \ 14\n\nWarning: A non-numeric value encountered in /tmp/tmp1bo0dqkw.php on line\
    \ 14\n\nWarning: A non-numeric value encountered in /tmp/tmp1bo0dqkw.php on line\
    \ 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1bo0dqkw.php:28\n\
    Stack trace:\n#0 /tmp/tmp1bo0dqkw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1bo0dqkw.php\
    \ on line 28\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk_a2ykv.php:21\n\
    Stack trace:\n#0 /tmp/tmplk_a2ykv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplk_a2ykv.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $value) {\n        $result[] = $nums[$key];\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsjh4cwod.php:25\n\
    Stack trace:\n#0 /tmp/tmpsjh4cwod.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpsjh4cwod.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $points = [];\n    foreach ($nums as $key => $num) {\n        $points[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($points);\n    $result = [];\n\
    \    foreach ($points as $key => $point) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmlqpnssg.php:25\n\
    Stack trace:\n#0 /tmp/tmpmlqpnssg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmlqpnssg.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk_a2ykv.php:21\n\
    Stack trace:\n#0 /tmp/tmplk_a2ykv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplk_a2ykv.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = array();\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpapxfqvpg.php:21\n\
    Stack trace:\n#0 /tmp/tmpapxfqvpg.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpapxfqvpg.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n  $arr = [];\n  foreach ($nums as $key => $value) {\n    $arr[$key] = array_sum(str_split($value));\n\
    \  }\n  asort($arr);\n  $result = [];\n  foreach ($arr as $key => $value) {\n\
    \    $result[] = $nums[$key];\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp60eswrgk.php:25\n\
    Stack trace:\n#0 /tmp/tmp60eswrgk.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp60eswrgk.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8583w3q.php:25\n\
    Stack trace:\n#0 /tmp/tmpv8583w3q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv8583w3q.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_sum = [];\n    foreach ($nums as $key => $num) {\n        $nums_sum[$key]\
    \ = array_sum(str_split($num));\n    }\n    array_multisort($nums_sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9nx7ftyr.php:21\n\
    Stack trace:\n#0 /tmp/tmp9nx7ftyr.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp9nx7ftyr.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    $sums = [];\n    foreach ($nums as $key => $num) {\n\
    \        $sum = 0;\n        $num = str_split($num);\n        foreach ($num as\
    \ $digit) {\n            $sum += $digit;\n        }\n        $sums[$key] = $sum;\n\
    \    }\n    asort($sums);\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp76ls_kj6.php on line\
    \ 14\n\nWarning: A non-numeric value encountered in /tmp/tmp76ls_kj6.php on line\
    \ 14\n\nWarning: A non-numeric value encountered in /tmp/tmp76ls_kj6.php on line\
    \ 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp76ls_kj6.php:30\n\
    Stack trace:\n#0 /tmp/tmp76ls_kj6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp76ls_kj6.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    foreach ($nums as $key => $value) {\n        $sum = 0;\n\
    \        $value = str_split($value);\n        foreach ($value as $val) {\n   \
    \         $sum += $val;\n        }\n        $arr[$key] = $sum;\n    }\n    asort($arr);\n\
    \    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpxwtrlcck.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpxwtrlcck.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpxwtrlcck.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxwtrlcck.php:30\n\
    Stack trace:\n#0 /tmp/tmpxwtrlcck.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpxwtrlcck.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    foreach ($nums as $key => $num) {\n        $sum =\
    \ 0;\n        while ($num > 0) {\n            $sum += $num % 10;\n           \
    \ $num = (int)($num / 10);\n        }\n        $result[$key] = $sum;\n    }\n\
    \    asort($result);\n    $result2 = [];\n    foreach ($result as $key => $value)\
    \ {\n        $result2[] = $nums[$key];\n    }\n    return $result2;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp9hwhmay.php:30\n\
    Stack trace:\n#0 /tmp/tmpp9hwhmay.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpp9hwhmay.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_with_points = [];\n    foreach ($nums as $key => $num) {\n    \
    \    $points = 0;\n        $num_string = (string)$num;\n        for ($i = 0; $i\
    \ < strlen($num_string); $i++) {\n            $points += (int)$num_string[$i];\n\
    \        }\n        $nums_with_points[$key] = [\n            'num' => $num,\n\
    \            'points' => $points\n        ];\n    }\n    usort($nums_with_points,\
    \ function ($a, $b) {\n        if ($a['points'] == $b['points']) {\n         \
    \   return $a['num'] - $b['num'];\n        }\n        return $a['points'] - $b['points'];\n\
    \    });\n    $result = [];\n    foreach ($nums_with_points as $num_with_points)\
    \ {\n        $result[] = $num_with_points['num'];\n    }\n    return $result;\n\
    }\n\n$nums = [51, 32, 43];\necho implode(', ', order_by_points($nums)); // 32,\
    \ 43, 51\necho '<br>';\n\n$nums = [51, 32, 43, 4, 6, 8, 11, 13, 15];\necho implode(',\
    \ ', order_by_points($nums)); // 4, 6, 8, 11, 13, 15, 32, 43, 51\necho '<br>';\n\
    \n$nums = [42, 2, 62, 3222, 5, 9, 11, 13, 15];\necho implode(', ', order_by_points($nums));\
    \ // 2, 5, 9, 11, 13, 15, 42, 62, 3222\necho '<br>';\n\n$nums = [42, 2, 62, 3222,\
    \ 5, 9, 11, 13, 15, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpqeawgryk.php on line 46

    '
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_sum = [];\n    foreach ($nums as $key => $value) {\n        $nums_sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    asort($nums_sum);\n    $result =\
    \ [];\n    foreach ($nums_sum as $key => $value) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsy6zv4yx.php:25\n\
    Stack trace:\n#0 /tmp/tmpsy6zv4yx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpsy6zv4yx.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    foreach ($nums as $key => $num) {\n        $result[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($result);\n    $result = array_keys($result);\n\
    \    $result = array_map(function($num) use ($nums) {\n        return $nums[$num];\n\
    \    }, $result);\n    return $result;\n}\n\nprint_r(order_by_points([5, 3, 1,\
    \ 4, 2]));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8o_5mkgp.php:26\n\
    Stack trace:\n#0 /tmp/tmp8o_5mkgp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8o_5mkgp.php\
    \ on line 26\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum_nums = [];\n    foreach ($nums as $key => $num) {\n        $sum_nums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sum_nums);\n    $ordered_nums\
    \ = [];\n    foreach ($sum_nums as $key => $sum_num) {\n        $ordered_nums[]\
    \ = $nums[$key];\n    }\n    return $ordered_nums;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3kk6wt0a.php:25\n\
    Stack trace:\n#0 /tmp/tmp3kk6wt0a.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp3kk6wt0a.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk_a2ykv.php:21\n\
    Stack trace:\n#0 /tmp/tmplk_a2ykv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplk_a2ykv.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    $sum = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    asort($sum);\n\
    \    foreach ($sum as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\n$nums = [5, 3, 1, 7, 0, 10, 2];\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 10\n    [3] => 2\n   \
    \ [4] => 3\n    [5] => 5\n    [6] => 7\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpowt1v194.php:27\nStack trace:\n#0 /tmp/tmpowt1v194.php(35):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpowt1v194.php on line 27\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_with_points = [];\n    foreach ($nums as $index => $num) {\n  \
    \      $nums_with_points[$index] = [\n            'num' => $num,\n           \
    \ 'points' => array_sum(str_split($num))\n        ];\n    }\n    usort($nums_with_points,\
    \ function ($a, $b) {\n        if ($a['points'] == $b['points']) {\n         \
    \   return $a['num'] - $b['num'];\n        }\n        return $a['points'] - $b['points'];\n\
    \    });\n    return array_column($nums_with_points, 'num');\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp32_5mfmp.php:29\n\
    Stack trace:\n#0 /tmp/tmp32_5mfmp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp32_5mfmp.php\
    \ on line 29\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    foreach ($nums as $key => $value) {\n        $arr[$key]\
    \ = array_sum(str_split($value));\n    }\n    asort($arr);\n    $result = [];\n\
    \    foreach ($arr as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylf8papf.php:25\n\
    Stack trace:\n#0 /tmp/tmpylf8papf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpylf8papf.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n  $nums_with_points = [];\n  foreach ($nums as $key => $num) {\n    $nums_with_points[$key]\
    \ = [$num, sum_of_digits($num)];\n  }\n  usort($nums_with_points, function($a,\
    \ $b) {\n    if ($a[1] == $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a[1] - $b[1];\n  });\n  $result = [];\n  foreach ($nums_with_points as $num_with_points)\
    \ {\n    $result[] = $num_with_points[0];\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum_of_digits()\
    \ in /tmp/tmp4sf33y_b.php:10\nStack trace:\n#0 /tmp/tmp4sf33y_b.php(26): order_by_points(Array)\n\
    #1 /tmp/tmp4sf33y_b.php(30): candidate(Array)\n#2 /tmp/tmp4sf33y_b.php(38): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4sf33y_b.php on line 10\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8583w3q.php:25\n\
    Stack trace:\n#0 /tmp/tmpv8583w3q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv8583w3q.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk_a2ykv.php:21\n\
    Stack trace:\n#0 /tmp/tmplk_a2ykv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplk_a2ykv.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nvar_dump(order_by_points([5, 3, 1, 4, 2])); //\
    \ [1, 2, 3, 4, 5]\nvar_dump(order_by_points([99, 98, 97, 96, 95])); // [95, 96,\
    \ 97, 98, 99]\nvar_dump(order_by_points([10, 100, 1000, 10000])); // [10, 100,\
    \ 1000, 10000]\nvar_dump(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])); //\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nvar_dump(order_by_points([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])); // [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\nvar_dump(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\
    \ 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9284ozdv.php on line 26

    '
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    foreach ($nums as $key => $value) {\n        $arr[$key]\
    \ = array_sum(str_split($value));\n    }\n    asort($arr);\n    $newArr = [];\n\
    \    foreach ($arr as $key => $value) {\n        $newArr[] = $nums[$key];\n  \
    \  }\n    return $newArr;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpijrvl6rt.php:25\n\
    Stack trace:\n#0 /tmp/tmpijrvl6rt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpijrvl6rt.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk_a2ykv.php:21\n\
    Stack trace:\n#0 /tmp/tmplk_a2ykv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplk_a2ykv.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        for ($i = 0; $i < strlen($num); $i++) {\n            $sum += $num[$i];\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp757mnex9.php:29\n\
    Stack trace:\n#0 /tmp/tmp757mnex9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp757mnex9.php\
    \ on line 29\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $num) {\n        $sum[$key]\
    \ = array_sum(str_split($num));\n    }\n    array_multisort($sum, SORT_ASC, $nums);\n\
    \    return $nums;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuy0remyh.php:21\n\
    Stack trace:\n#0 /tmp/tmpuy0remyh.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuy0remyh.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    foreach ($nums as $key => $value) {\n        $arr[$key]\
    \ = $value;\n        $arr[$key] = array_sum(str_split($value));\n    }\n    asort($arr);\n\
    \    $arr2 = [];\n    foreach ($arr as $key => $value) {\n        $arr2[] = $nums[$key];\n\
    \    }\n    return $arr2;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnnmons8g.php:26\n\
    Stack trace:\n#0 /tmp/tmpnnmons8g.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpnnmons8g.php\
    \ on line 26\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    foreach ($nums as $key => $value) {\n        $arr[$key]\
    \ = array_sum(str_split($value));\n    }\n    asort($arr);\n    $result = [];\n\
    \    foreach ($arr as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylf8papf.php:25\n\
    Stack trace:\n#0 /tmp/tmpylf8papf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpylf8papf.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums = array_map(function($num) {\n        $sum = 0;\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        return $sum;\n    }, $nums);\n    asort($nums);\n\
    \    return array_keys($nums);\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wwlxp2w.php:25\n\
    Stack trace:\n#0 /tmp/tmp6wwlxp2w.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6wwlxp2w.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    foreach ($nums as $key => $num) {\n        $result[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($result);\n    $result = array_keys($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $nums[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp59rxhadc.php:25\n\
    Stack trace:\n#0 /tmp/tmp59rxhadc.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp59rxhadc.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk_a2ykv.php:21\n\
    Stack trace:\n#0 /tmp/tmplk_a2ykv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplk_a2ykv.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n  $nums_with_points = [];\n  foreach ($nums as $index => $num) {\n    $nums_with_points[$index]\
    \ = [\n      'num' => $num,\n      'points' => array_sum(str_split($num))\n  \
    \  ];\n  }\n  usort($nums_with_points, function($a, $b) {\n    if ($a['points']\
    \ == $b['points']) {\n      return $a['index'] - $b['index'];\n    }\n    return\
    \ $a['points'] - $b['points'];\n  });\n  return array_column($nums_with_points,\
    \ 'num');\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpanyrpwny.php:29\n\
    Stack trace:\n#0 /tmp/tmpanyrpwny.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpanyrpwny.php\
    \ on line 29\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    foreach ($nums as $key => $num) {\n        $sum =\
    \ 0;\n        $num = str_split($num);\n        foreach ($num as $number) {\n \
    \           $sum += $number;\n        }\n        $result[$key] = $sum;\n    }\n\
    \    asort($result);\n    $result2 = [];\n    foreach ($result as $key => $value)\
    \ {\n        $result2[] = $nums[$key];\n    }\n    return $result2;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp7_ubglg6.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp7_ubglg6.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp7_ubglg6.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7_ubglg6.php:30\n\
    Stack trace:\n#0 /tmp/tmp7_ubglg6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7_ubglg6.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_sum = [];\n    foreach ($nums as $key => $num) {\n        $nums_sum[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($nums_sum);\n    $nums_sorted\
    \ = [];\n    foreach ($nums_sum as $key => $num) {\n        $nums_sorted[] = $nums[$key];\n\
    \    }\n    return $nums_sorted;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6n5o87l4.php:25\n\
    Stack trace:\n#0 /tmp/tmp6n5o87l4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6n5o87l4.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $index => $num) {\n        $sums[$index]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $index => $sum) {\n        $result[] = $nums[$index];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplhmtnlvf.php:25\n\
    Stack trace:\n#0 /tmp/tmplhmtnlvf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmplhmtnlvf.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8583w3q.php:25\n\
    Stack trace:\n#0 /tmp/tmpv8583w3q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv8583w3q.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    array_multisort($sums, SORT_ASC, $nums);\n\
    \    return $nums;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiji0qfar.php:21\n\
    Stack trace:\n#0 /tmp/tmpiji0qfar.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpiji0qfar.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_sorted = [];\n    $nums_sorted_keys = [];\n    $nums_sorted_values\
    \ = [];\n    foreach ($nums as $key => $value) {\n        $nums_sorted[$key] =\
    \ array_sum(str_split($value));\n    }\n    asort($nums_sorted);\n    foreach\
    \ ($nums_sorted as $key => $value) {\n        $nums_sorted_keys[] = $key;\n  \
    \      $nums_sorted_values[] = $value;\n    }\n    $nums_sorted = array_combine($nums_sorted_keys,\
    \ $nums_sorted_values);\n    foreach ($nums_sorted as $key => $value) {\n    \
    \    $nums_sorted[$key] = $nums[$key];\n    }\n    return $nums_sorted;\n}\n\n\
    $nums = [5, 10, 15, 20, 25, 30, 35, 40, 45, 50];\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [1] => 10\n    [3] => 20\n    [5] => 30\n    [7] => 40\n\
    \    [0] => 5\n    [9] => 50\n    [2] => 15\n    [4] => 25\n    [6] => 35\n  \
    \  [8] => 45\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyqfe5lg5.php:33\n\
    Stack trace:\n#0 /tmp/tmpyqfe5lg5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyqfe5lg5.php\
    \ on line 33\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    foreach ($nums as $key => $value) {\n        $arr[$key]\
    \ = array_sum(str_split($value));\n    }\n    asort($arr);\n    $result = [];\n\
    \    foreach ($arr as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylf8papf.php:25\n\
    Stack trace:\n#0 /tmp/tmpylf8papf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpylf8papf.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum_of_digits = array();\n    foreach ($nums as $key => $value) {\n\
    \        $sum_of_digits[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum_of_digits,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcqb2gbjf.php:21\n\
    Stack trace:\n#0 /tmp/tmpcqb2gbjf.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcqb2gbjf.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk_a2ykv.php:21\n\
    Stack trace:\n#0 /tmp/tmplk_a2ykv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplk_a2ykv.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n  $sum = [];\n  foreach ($nums as $key => $value) {\n    $sum[$key] = array_sum(str_split($value));\n\
    \  }\n  asort($sum);\n  $result = [];\n  foreach ($sum as $key => $value) {\n\
    \    $result[] = $nums[$key];\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprg7p6lt2.php:25\n\
    Stack trace:\n#0 /tmp/tmprg7p6lt2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmprg7p6lt2.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk_a2ykv.php:21\n\
    Stack trace:\n#0 /tmp/tmplk_a2ykv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplk_a2ykv.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    foreach ($nums as $key => $num) {\n        $arr[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($arr);\n    $result = [];\n\
    \    foreach ($arr as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxebkb8d.php:25\n\
    Stack trace:\n#0 /tmp/tmpyxebkb8d.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyxebkb8d.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    foreach ($nums as $key => $value) {\n        $sum = array_sum(str_split($value));\n\
    \        $arr[$key] = $sum;\n    }\n    asort($arr);\n    $result = [];\n    foreach\
    \ ($arr as $key => $value) {\n        $result[] = $nums[$key];\n    }\n    return\
    \ $result;\n}\n\n$nums = [50, 3, 6, 1, 10];\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 10\n    [2] => 3\n    [3] => 50\n  \
    \  [4] => 6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdqiltqa5.php:28\n\
    Stack trace:\n#0 /tmp/tmpdqiltqa5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdqiltqa5.php\
    \ on line 28\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n  $nums_with_points = [];\n  foreach ($nums as $index => $num) {\n    $nums_with_points[$index]\
    \ = [\n      'num' => $num,\n      'points' => sum_of_digits($num)\n    ];\n \
    \ }\n  usort($nums_with_points, function($a, $b) {\n    if ($a['points'] == $b['points'])\
    \ {\n      return $a['index'] - $b['index'];\n    }\n    return $a['points'] -\
    \ $b['points'];\n  });\n  return array_column($nums_with_points, 'num');\n}\n\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum_of_digits()\
    \ in /tmp/tmpwpyvekp4.php:12\nStack trace:\n#0 /tmp/tmpwpyvekp4.php(25): order_by_points(Array)\n\
    #1 /tmp/tmpwpyvekp4.php(29): candidate(Array)\n#2 /tmp/tmpwpyvekp4.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmpwpyvekp4.php on line 12\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n  $nums_sum = [];\n  foreach ($nums as $key => $value) {\n    $sum = 0;\n\
    \    $value = (string)$value;\n    for ($i=0; $i < strlen($value); $i++) {\n \
    \     $sum += $value[$i];\n    }\n    $nums_sum[$key] = $sum;\n  }\n  asort($nums_sum);\n\
    \  $result = [];\n  foreach ($nums_sum as $key => $value) {\n    $result[] = $nums[$key];\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpyihveiy_.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpyihveiy_.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpyihveiy_.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyihveiy_.php:30\n\
    Stack trace:\n#0 /tmp/tmpyihveiy_.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpyihveiy_.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk_a2ykv.php:21\n\
    Stack trace:\n#0 /tmp/tmplk_a2ykv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplk_a2ykv.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk_a2ykv.php:21\n\
    Stack trace:\n#0 /tmp/tmplk_a2ykv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplk_a2ykv.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        $num = str_split($num);\n        foreach ($num as $digit) {\n       \
    \     $sum += $digit;\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\n$nums = [50, 2, 1, 9];\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 50\n    [3] => 9\n)\n\n\
    Warning: A non-numeric value encountered in /tmp/tmpbnd9gaqn.php on line 13\n\n\
    Warning: A non-numeric value encountered in /tmp/tmpbnd9gaqn.php on line 13\n\n\
    Warning: A non-numeric value encountered in /tmp/tmpbnd9gaqn.php on line 13\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpbnd9gaqn.php:32\nStack\
    \ trace:\n#0 /tmp/tmpbnd9gaqn.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpbnd9gaqn.php\
    \ on line 32\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_with_points = [];\n    foreach ($nums as $key => $num) {\n    \
    \    $nums_with_points[$key] = [\n            'num' => $num,\n            'points'\
    \ => array_sum(str_split($num))\n        ];\n    }\n    usort($nums_with_points,\
    \ function ($a, $b) {\n        if ($a['points'] == $b['points']) {\n         \
    \   return $a['num'] <=> $b['num'];\n        }\n        return $a['points'] <=>\
    \ $b['points'];\n    });\n    return array_column($nums_with_points, 'num');\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr5up0vv1.php:29\n\
    Stack trace:\n#0 /tmp/tmpr5up0vv1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpr5up0vv1.php\
    \ on line 29\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8583w3q.php:25\n\
    Stack trace:\n#0 /tmp/tmpv8583w3q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv8583w3q.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    $sum = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    asort($sum);\n\
    \    foreach ($sum as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24dejmr6.php:25\n\
    Stack trace:\n#0 /tmp/tmp24dejmr6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp24dejmr6.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8583w3q.php:25\n\
    Stack trace:\n#0 /tmp/tmpv8583w3q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv8583w3q.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    foreach ($nums as $key => $value) {\n        $result[$key]\
    \ = array_sum(str_split($value));\n    }\n    asort($result);\n    $result = array_keys($result);\n\
    \    $result = array_map(function($value) use ($nums) {\n        return $nums[$value];\n\
    \    }, $result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ows4ij6.php:25\n\
    Stack trace:\n#0 /tmp/tmp0ows4ij6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0ows4ij6.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    foreach ($nums as $key => $value) {\n        $arr[$key]\
    \ = array_sum(str_split($value));\n    }\n    asort($arr);\n    $result = [];\n\
    \    foreach ($arr as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylf8papf.php:25\n\
    Stack trace:\n#0 /tmp/tmpylf8papf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpylf8papf.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    $result = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    asort($sum);\n\
    \    foreach ($sum as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl01ullvq.php:25\n\
    Stack trace:\n#0 /tmp/tmpl01ullvq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpl01ullvq.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    $sums = [];\n    foreach ($nums as $key => $num) {\n\
    \        $sum = 0;\n        $num = str_split($num);\n        foreach ($num as\
    \ $digit) {\n            $sum += $digit;\n        }\n        $sums[$key] = $sum;\n\
    \    }\n    asort($sums);\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp76ls_kj6.php on line\
    \ 14\n\nWarning: A non-numeric value encountered in /tmp/tmp76ls_kj6.php on line\
    \ 14\n\nWarning: A non-numeric value encountered in /tmp/tmp76ls_kj6.php on line\
    \ 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp76ls_kj6.php:30\n\
    Stack trace:\n#0 /tmp/tmp76ls_kj6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp76ls_kj6.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        $num = str_split($num);\n        foreach ($num as $digit) {\n       \
    \     $sum += $digit;\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp0zroikhx.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp0zroikhx.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp0zroikhx.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0zroikhx.php:30\n\
    Stack trace:\n#0 /tmp/tmp0zroikhx.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp0zroikhx.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums = array_map(function($num) {\n        $sum = 0;\n        $num =\
    \ str_split($num);\n        foreach ($num as $digit) {\n            $sum += $digit;\n\
    \        }\n        return $sum;\n    }, $nums);\n    asort($nums);\n    return\
    \ array_keys($nums);\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpias1xfya.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmpias1xfya.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmpias1xfya.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpias1xfya.php:25\n\
    Stack trace:\n#0 /tmp/tmpias1xfya.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpias1xfya.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_sum = [];\n    foreach ($nums as $key => $num) {\n        $sum\
    \ = 0;\n        $num_arr = str_split($num);\n        foreach ($num_arr as $num_arr_key\
    \ => $num_arr_value) {\n            $sum += $num_arr_value;\n        }\n     \
    \   $nums_sum[$key] = $sum;\n    }\n    array_multisort($nums_sum, SORT_ASC, $nums);\n\
    \    return $nums;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpe3hxsppd.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpe3hxsppd.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpe3hxsppd.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe3hxsppd.php:26\n\
    Stack trace:\n#0 /tmp/tmpe3hxsppd.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpe3hxsppd.php\
    \ on line 26\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = (int)($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm4y67z2k.php:30\n\
    Stack trace:\n#0 /tmp/tmpm4y67z2k.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpm4y67z2k.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    foreach ($nums as $key => $value) {\n        $arr[$key]\
    \ = array_sum(str_split($value));\n    }\n    asort($arr);\n    $result = [];\n\
    \    foreach ($arr as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylf8papf.php:25\n\
    Stack trace:\n#0 /tmp/tmpylf8papf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpylf8papf.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        $num = str_split($num);\n        foreach ($num as $digit) {\n       \
    \     $sum += $digit;\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp0zroikhx.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp0zroikhx.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp0zroikhx.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0zroikhx.php:30\n\
    Stack trace:\n#0 /tmp/tmp0zroikhx.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp0zroikhx.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = floor($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplva3oy0w.php:30\n\
    Stack trace:\n#0 /tmp/tmplva3oy0w.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplva3oy0w.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums = array_map(function($num) {\n        $sum = 0;\n        $num =\
    \ str_split($num);\n        foreach ($num as $digit) {\n            $sum += $digit;\n\
    \        }\n        return $sum;\n    }, $nums);\n    asort($nums);\n    return\
    \ array_keys($nums);\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpias1xfya.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmpias1xfya.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmpias1xfya.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpias1xfya.php:25\n\
    Stack trace:\n#0 /tmp/tmpias1xfya.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpias1xfya.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_array = array();\n    foreach ($nums as $key => $value) {\n   \
    \     $nums_array[$key] = array_sum(str_split($value));\n    }\n    asort($nums_array);\n\
    \    $result = array();\n    foreach ($nums_array as $key => $value) {\n     \
    \   $result[] = $nums[$key];\n    }\n    return $result;\n}\n\nprint_r(order_by_points([51,\
    \ 32, 43]));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 32\n    [1] => 51\n    [2] => 43\n)\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp_nrxnl5t.php:26\nStack trace:\n\
    #0 /tmp/tmp_nrxnl5t.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp_nrxnl5t.php\
    \ on line 26\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum_of_digits = array();\n    $result = array();\n    foreach ($nums\
    \ as $key => $value) {\n        $sum_of_digits[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum_of_digits);\n    foreach ($sum_of_digits as $key => $value)\
    \ {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu1ri6obk.php:25\n\
    Stack trace:\n#0 /tmp/tmpu1ri6obk.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpu1ri6obk.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    foreach ($nums as $key => $value) {\n        $arr[$key]\
    \ = array_sum(str_split($value));\n    }\n    asort($arr);\n    $result = [];\n\
    \    foreach ($arr as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqk5mqf8f.php:24\n\
    Stack trace:\n#0 /tmp/tmpqk5mqf8f.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqk5mqf8f.php\
    \ on line 24\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    foreach ($nums as $key => $num) {\n        $arr[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($arr);\n    $result = [];\n\
    \    foreach ($arr as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\n$nums = [10, 2, 3, 4, 5, 6, 7, 8, 9];\n\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 2\n    [2] => 3\n    [3] => 4\n   \
    \ [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp8l11w572.php:28\nStack trace:\n\
    #0 /tmp/tmp8l11w572.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp8l11w572.php\
    \ on line 28\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    $result = [];\n    foreach ($nums as $key => $num) {\n\
    \        $sum = 0;\n        $num = str_split($num);\n        foreach ($num as\
    \ $digit) {\n            $sum += $digit;\n        }\n        $sums[$key] = $sum;\n\
    \    }\n    asort($sums);\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpjxizdbb6.php on line\
    \ 14\n\nWarning: A non-numeric value encountered in /tmp/tmpjxizdbb6.php on line\
    \ 14\n\nWarning: A non-numeric value encountered in /tmp/tmpjxizdbb6.php on line\
    \ 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjxizdbb6.php:30\n\
    Stack trace:\n#0 /tmp/tmpjxizdbb6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjxizdbb6.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums = array_combine(range(1, count($nums)), $nums);\n    $sum = array_map(function($num)\
    \ {\n        return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return array_values($nums);\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6tyjcu9p.php:21\n\
    Stack trace:\n#0 /tmp/tmp6tyjcu9p.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6tyjcu9p.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    foreach ($nums as $key => $value) {\n        $arr[$key]\
    \ = array_sum(str_split($value));\n    }\n    asort($arr);\n    $result = [];\n\
    \    foreach ($arr as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylf8papf.php:25\n\
    Stack trace:\n#0 /tmp/tmpylf8papf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpylf8papf.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    foreach ($nums as $key => $num) {\n        $result[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($result);\n    $result = array_keys($result);\n\
    \    $result = array_map(function ($num) use ($nums) {\n        return $nums[$num];\n\
    \    }, $result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3aswpl8a.php:25\n\
    Stack trace:\n#0 /tmp/tmp3aswpl8a.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp3aswpl8a.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        $num = (string)$num;\n        for ($i = 0; $i < strlen($num); $i++) {\n\
    \            $sum += $num[$i];\n        }\n        $sums[$key] = $sum;\n    }\n\
    \    asort($sums);\n    $result = [];\n    foreach ($sums as $key => $sum) {\n\
    \        $result[] = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp9uvq9yyr.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp9uvq9yyr.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp9uvq9yyr.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9uvq9yyr.php:30\n\
    Stack trace:\n#0 /tmp/tmp9uvq9yyr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9uvq9yyr.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    $sum = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    asort($sum);\n\
    \    foreach ($sum as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24dejmr6.php:25\n\
    Stack trace:\n#0 /tmp/tmp24dejmr6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp24dejmr6.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = array();\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpapxfqvpg.php:21\n\
    Stack trace:\n#0 /tmp/tmpapxfqvpg.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpapxfqvpg.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    foreach ($nums as $key => $value) {\n        $arr[$key]\
    \ = array_sum(str_split($value));\n    }\n    asort($arr);\n    $result = [];\n\
    \    foreach ($arr as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\n$nums = [10, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 2\n    [2] => 3\n    [3] => 4\n   \
    \ [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpc_i_skkf.php:27\nStack trace:\n\
    #0 /tmp/tmpc_i_skkf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpc_i_skkf.php\
    \ on line 27\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n  $sum = array_map(function($num) {\n    return array_sum(str_split($num));\n\
    \  }, $nums);\n  array_multisort($sum, SORT_ASC, $nums);\n  return $nums;\n}\n\
    \nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8iy1rl35.php:20\n\
    Stack trace:\n#0 /tmp/tmp8iy1rl35.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp8iy1rl35.php\
    \ on line 20\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums = array_map(function($num) {\n        $sum = 0;\n        $num =\
    \ (string)$num;\n        for ($i = 0; $i < strlen($num); $i++) {\n           \
    \ $sum += (int)$num[$i];\n        }\n        return $sum;\n    }, $nums);\n  \
    \  $nums = array_combine(range(0, count($nums) - 1), $nums);\n    asort($nums);\n\
    \    return array_keys($nums);\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnb7ekxon.php:26\n\
    Stack trace:\n#0 /tmp/tmpnb7ekxon.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpnb7ekxon.php\
    \ on line 26\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_array = [];\n    foreach ($nums as $key => $num) {\n        $nums_array[$key]\
    \ = $num;\n    }\n    $nums_array = array_map('str_split', $nums_array);\n   \
    \ $nums_array = array_map('array_sum', $nums_array);\n    asort($nums_array);\n\
    \    $nums_array = array_keys($nums_array);\n    $nums_array = array_map(function($num)\
    \ use ($nums) {\n        return $nums[$num];\n    }, $nums_array);\n    return\
    \ $nums_array;\n}\n\n$nums = [13, 20, 7, 4];\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 20\n    [1] => 13\n    [2] => 4\n    [3] => 7\n)\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvi6sel4.php:29\nStack\
    \ trace:\n#0 /tmp/tmpmvi6sel4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmvi6sel4.php\
    \ on line 29\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $points = [];\n    foreach ($nums as $key => $num) {\n        $points[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($points);\n    $result = [];\n\
    \    foreach ($points as $key => $point) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmlqpnssg.php:25\n\
    Stack trace:\n#0 /tmp/tmpmlqpnssg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmlqpnssg.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    foreach ($nums as $key => $num) {\n        $sum =\
    \ 0;\n        $num = str_split($num);\n        foreach ($num as $digit) {\n  \
    \          $sum += $digit;\n        }\n        $result[$key] = $sum;\n    }\n\
    \    asort($result);\n    $result = array_keys($result);\n    $result = array_map(function($num)\
    \ use ($nums) {\n        return $nums[$num];\n    }, $result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpz5jqwssk.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpz5jqwssk.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpz5jqwssk.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz5jqwssk.php:30\n\
    Stack trace:\n#0 /tmp/tmpz5jqwssk.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpz5jqwssk.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        $num = (string)$num;\n        for ($i = 0; $i < strlen($num); $i++) {\n\
    \            $sum += (int)$num[$i];\n        }\n        $sums[$key] = $sum;\n\
    \    }\n    asort($sums);\n    $result = [];\n    foreach ($sums as $key => $sum)\
    \ {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgc9iufm2.php:30\n\
    Stack trace:\n#0 /tmp/tmpgc9iufm2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpgc9iufm2.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    foreach ($nums as $key => $value) {\n        $arr[$key]\
    \ = array_sum(str_split($value));\n    }\n    asort($arr);\n    $result = [];\n\
    \    foreach ($arr as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylf8papf.php:25\n\
    Stack trace:\n#0 /tmp/tmpylf8papf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpylf8papf.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    foreach ($nums as $key => $num) {\n        $result[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($result);\n    $result = array_keys($result);\n\
    \    $result = array_map(function($num) use ($nums) {\n        return $nums[$num];\n\
    \    }, $result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl7l0os3v.php:25\n\
    Stack trace:\n#0 /tmp/tmpl7l0os3v.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpl7l0os3v.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums = array_map(function($num) {\n        $sum = 0;\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        return $sum;\n    }, $nums);\n    $nums = array_map(function($num,\
    \ $index) {\n        return [$num, $index];\n    }, $nums, array_keys($nums));\n\
    \    usort($nums, function($a, $b) {\n        if ($a[0] == $b[0]) {\n        \
    \    return $a[1] - $b[1];\n        }\n        return $a[0] - $b[0];\n    });\n\
    \    return array_map(function($num) {\n        return $num[0];\n    }, $nums);\n\
    }\n\nvar_dump(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(10) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(1)\n  [2]=>\n  int(2)\n\
    \  [3]=>\n  int(3)\n  [4]=>\n  int(4)\n  [5]=>\n  int(5)\n  [6]=>\n  int(6)\n\
    \  [7]=>\n  int(7)\n  [8]=>\n  int(8)\n  [9]=>\n  int(9)\n}\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp90duwsd2.php:36\nStack trace:\n#0 /tmp/tmp90duwsd2.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp90duwsd2.php on line 36\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    $sum = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    asort($sum);\n\
    \    foreach ($sum as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24dejmr6.php:25\n\
    Stack trace:\n#0 /tmp/tmp24dejmr6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp24dejmr6.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums = array_map(function($num) {\n        $sum = 0;\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = floor($num\
    \ / 10);\n        }\n        return $sum;\n    }, $nums);\n    $nums = array_combine(range(0,\
    \ count($nums) - 1), $nums);\n    asort($nums);\n    return array_keys($nums);\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6u_dwihv.php:26\n\
    Stack trace:\n#0 /tmp/tmp6u_dwihv.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp6u_dwihv.php\
    \ on line 26\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_sum = [];\n    foreach ($nums as $key => $num) {\n        $nums_sum[$key]\
    \ = array_sum(str_split($num));\n    }\n    array_multisort($nums_sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9nx7ftyr.php:21\n\
    Stack trace:\n#0 /tmp/tmp9nx7ftyr.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp9nx7ftyr.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    $sums = [];\n    foreach ($nums as $key => $num) {\n\
    \        $sum = 0;\n        $num = str_split($num);\n        foreach ($num as\
    \ $digit) {\n            $sum += $digit;\n        }\n        $sums[$key] = $sum;\n\
    \    }\n    asort($sums);\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\n$nums = [50, 2, 1, 9];\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 50\n    [3] => 9\n)\n\n\
    Warning: A non-numeric value encountered in /tmp/tmpu977548_.php on line 14\n\n\
    Warning: A non-numeric value encountered in /tmp/tmpu977548_.php on line 14\n\n\
    Warning: A non-numeric value encountered in /tmp/tmpu977548_.php on line 14\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpu977548_.php:32\nStack\
    \ trace:\n#0 /tmp/tmpu977548_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpu977548_.php\
    \ on line 32\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n  $new_nums = [];\n  foreach ($nums as $key => $value) {\n    $new_nums[$key]\
    \ = $value;\n    $new_nums[$key] = array_sum(str_split($value));\n  }\n  asort($new_nums);\n\
    \  $new_nums = array_keys($new_nums);\n  foreach ($new_nums as $key => $value)\
    \ {\n    $new_nums[$key] = $nums[$value];\n  }\n  return $new_nums;\n}\n\n$nums\
    \ = [50, 9, 7, 5, 4, 120, 56];\nprint_r(order_by_points($nums));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 120\n    [1] => 4\n    [2] => 50\n    [3] => 5\n \
    \   [4] => 7\n    [5] => 9\n    [6] => 56\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpzp0wuif2.php:28\nStack trace:\n#0 /tmp/tmpzp0wuif2.php(36):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzp0wuif2.php on line 28\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    foreach ($nums as $key => $num) {\n        $sum =\
    \ 0;\n        $num = (string)$num;\n        for ($i = 0; $i < strlen($num); $i++)\
    \ {\n            $sum += $num[$i];\n        }\n        $result[$key] = $sum;\n\
    \    }\n    asort($result);\n    $result2 = [];\n    foreach ($result as $key\
    \ => $value) {\n        $result2[] = $nums[$key];\n    }\n    return $result2;\n\
    }\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 10\n    [2] => 2\n    [3] => 3\n   \
    \ [4] => 4\n    [5] => 5\n    [6] => 6\n    [7] => 7\n    [8] => 8\n    [9] =>\
    \ 9\n)\n\nWarning: A non-numeric value encountered in /tmp/tmpo2t_cxnv.php on\
    \ line 13\n\nWarning: A non-numeric value encountered in /tmp/tmpo2t_cxnv.php\
    \ on line 13\n\nWarning: A non-numeric value encountered in /tmp/tmpo2t_cxnv.php\
    \ on line 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo2t_cxnv.php:32\n\
    Stack trace:\n#0 /tmp/tmpo2t_cxnv.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpo2t_cxnv.php\
    \ on line 32\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_sum = [];\n    foreach ($nums as $key => $num) {\n        $nums_sum[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($nums_sum);\n    $result = [];\n\
    \    foreach ($nums_sum as $key => $num) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1dcg23j.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1dcg23j.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpl1dcg23j.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums = array_map(function($num) {\n        $sum = 0;\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        return $sum;\n    }, $nums);\n    asort($nums);\n\
    \    return array_keys($nums);\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wwlxp2w.php:25\n\
    Stack trace:\n#0 /tmp/tmp6wwlxp2w.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6wwlxp2w.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $num) {\n        $sum[$key]\
    \ = array_sum(str_split($num));\n    }\n    array_multisort($sum, SORT_ASC, $nums);\n\
    \    return $nums;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuy0remyh.php:21\n\
    Stack trace:\n#0 /tmp/tmpuy0remyh.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuy0remyh.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    $sum = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    asort($sum);\n\
    \    foreach ($sum as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\n$nums = [10, 3, 5, 1, 6, 2, 4];\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 1\n    [2] => 2\n    [3] => 3\n   \
    \ [4] => 4\n    [5] => 5\n    [6] => 6\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp0sst29gv.php:27\nStack trace:\n#0 /tmp/tmp0sst29gv.php(35):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0sst29gv.php on line 27\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_sum = [];\n    foreach ($nums as $key => $num) {\n        $sum\
    \ = 0;\n        $num = str_split($num);\n        foreach ($num as $value) {\n\
    \            $sum += $value;\n        }\n        $nums_sum[$key] = $sum;\n   \
    \ }\n    asort($nums_sum);\n    $result = [];\n    foreach ($nums_sum as $key\
    \ => $value) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n\nprint_r(order_by_points([5, 3, 1, 4, 2])); // [1, 3, 4, 5, 2]\nprint_r(order_by_points([5,\
    \ 3, 1, 4, 2, 9, 8, 7, 6])); // [1, 3, 4, 5, 2, 8, 9, 6, 7]\nprint_r(order_by_points([5,\
    \ 3, 1, 4, 2, 9, 8, 7, 6, 10])); // [1, 3, 4, 5, 2, 8, 9, 6, 7, 10]\nprint_r(order_by_points([5,\
    \ 3, 1, 4, 2, 9, 8, 7, 6, 10, 11])); // [1, 3, 4, 5, 2, 8, 9, 6, 7, 10, 11]\n\
    print_r(order_by_points([5, 3, 1, 4, 2, 9, 8, 7, 6, 10, 11, 12])); // [1, 3, 4,\
    \ 5, 2, 8, 9, 6, 7, 10, 11, 12]\nprint_r(order_by_points([5, 3, 1, 4, 2, 9, 8,\
    \ 7, 6, 10, 11, 12, 13])); // [1, 3, 4, 5, 2, 8, 9, 6, 7, 10, 11, 12, 13]\nprint_r(order_by_points([5,\
    \ 3, 1, 4, 2, 9, 8, 7, 6, 10, 11, 12, 13, 14])); // [1, 3, 4,\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n\
    \    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\nArray\n\
    (\n    [0] => 1\n    [1] => 10\n    [2] => 2\n    [3] => 3\n    [4] => 4\n   \
    \ [5] => 5\n    [6] => 6\n    [7] => 7\n    [8] => 8\n    [9] => 9\n)\nArray\n\
    (\n    [0] => 1\n    [1] => 10\n    [2] => 2\n    [3] => 11\n    [4] => 3\n  \
    \  [5] => 4\n    [6] => 5\n    [7] => 6\n    [8] => 7\n    [9] => 8\n    [10]\
    \ => 9\n)\nArray\n(\n    [0] => 1\n    [1] => 10\n    [2] => 2\n    [3] => 11\n\
    \    [4] => 3\n    [5] => 12\n    [6] => 4\n    [7] => 5\n    [8] => 6\n    [9]\
    \ => 7\n    [10] => 8\n    [11] => 9\n)\nArray\n(\n    [0] => 1\n    [1] => 10\n\
    \    [2] => 2\n    [3] => 11\n    [4] => 3\n    [5] => 12\n    [6] => 4\n    [7]\
    \ => 13\n    [8] => 5\n    [9] => 6\n    [10] => 7\n    [11] => 8\n    [12] =>\
    \ 9\n)\nArray\n(\n    [0] => 1\n    [1] => 10\n    [2] => 2\n    [3] => 11\n \
    \   [4] => 3\n    [5] => 12\n    [6] => 4\n    [7] => 13\n    [8] => 5\n    [9]\
    \ => 14\n    [10] => 6\n    [11] => 7\n    [12] => 8\n    [13] => 9\n)\n\nWarning:\
    \ A non-numeric value encountered in /tmp/tmp_bv7sseg.php on line 13\n\nWarning:\
    \ A non-numeric value encountered in /tmp/tmp_bv7sseg.php on line 13\n\nWarning:\
    \ A non-numeric value encountered in /tmp/tmp_bv7sseg.php on line 13\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp_bv7sseg.php:37\nStack trace:\n\
    #0 /tmp/tmp_bv7sseg.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_bv7sseg.php\
    \ on line 37\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n  $nums_sum = [];\n  foreach ($nums as $key => $num) {\n    $sum = 0;\n \
    \   for ($i = 0; $i < strlen($num); $i++) {\n      $sum += $num[$i];\n    }\n\
    \    $nums_sum[$key] = $sum;\n  }\n  asort($nums_sum);\n  $result = [];\n  foreach\
    \ ($nums_sum as $key => $value) {\n    $result[] = $nums[$key];\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0pryl7gt.php:29\n\
    Stack trace:\n#0 /tmp/tmp0pryl7gt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0pryl7gt.php\
    \ on line 29\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8583w3q.php:25\n\
    Stack trace:\n#0 /tmp/tmpv8583w3q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv8583w3q.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_sum = [];\n    foreach ($nums as $key => $num) {\n        $nums_sum[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($nums_sum);\n    $result = [];\n\
    \    foreach ($nums_sum as $key => $num) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1dcg23j.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1dcg23j.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpl1dcg23j.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    $sum = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    asort($sum);\n\
    \    foreach ($sum as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24dejmr6.php:25\n\
    Stack trace:\n#0 /tmp/tmp24dejmr6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp24dejmr6.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk_a2ykv.php:21\n\
    Stack trace:\n#0 /tmp/tmplk_a2ykv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplk_a2ykv.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n  $arr = [];\n  foreach ($nums as $key => $num) {\n    $sum = 0;\n    for\
    \ ($i = 0; $i < strlen($num); $i++) {\n      $sum += $num[$i];\n    }\n    $arr[$key]\
    \ = $sum;\n  }\n  asort($arr);\n  $result = [];\n  foreach ($arr as $key => $value)\
    \ {\n    $result[] = $nums[$key];\n  }\n  return $result;\n}\n\nprint_r(order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfr3fwof.php:30\n\
    Stack trace:\n#0 /tmp/tmpwfr3fwof.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwfr3fwof.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8583w3q.php:25\n\
    Stack trace:\n#0 /tmp/tmpv8583w3q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv8583w3q.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    $result = [];\n    foreach ($nums as $key => $num) {\n\
    \        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nvar_dump(order_by_points([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(10) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(10)\n  [2]=>\n  int(2)\n\
    \  [3]=>\n  int(3)\n  [4]=>\n  int(4)\n  [5]=>\n  int(5)\n  [6]=>\n  int(6)\n\
    \  [7]=>\n  int(7)\n  [8]=>\n  int(8)\n  [9]=>\n  int(9)\n}\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpsvga0ekk.php:26\nStack trace:\n#0 /tmp/tmpsvga0ekk.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpsvga0ekk.php on line 26\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\n$nums = [13, 20, 7, 4];\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 20\n    [1] => 13\n    [2] => 4\n    [3] => 7\n)\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpef62rbmd.php:27\nStack\
    \ trace:\n#0 /tmp/tmpef62rbmd.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpef62rbmd.php\
    \ on line 27\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    foreach ($nums as $key => $value) {\n        $sum = 0;\n\
    \        $value = str_split($value);\n        foreach ($value as $val) {\n   \
    \         $sum += $val;\n        }\n        $arr[$key] = $sum;\n    }\n    asort($arr);\n\
    \    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpxwtrlcck.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpxwtrlcck.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpxwtrlcck.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxwtrlcck.php:30\n\
    Stack trace:\n#0 /tmp/tmpxwtrlcck.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpxwtrlcck.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    foreach ($nums as $key => $value) {\n        $sum\
    \ = 0;\n        $value = (string)$value;\n        for ($i = 0; $i < strlen($value);\
    \ $i++) {\n            $sum += $value[$i];\n        }\n        $result[$key] =\
    \ $sum;\n    }\n    asort($result);\n    $result2 = [];\n    foreach ($result\
    \ as $key => $value) {\n        $result2[] = $nums[$key];\n    }\n    return $result2;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpj9av9h6r.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpj9av9h6r.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpj9av9h6r.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj9av9h6r.php:30\n\
    Stack trace:\n#0 /tmp/tmpj9av9h6r.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpj9av9h6r.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8583w3q.php:25\n\
    Stack trace:\n#0 /tmp/tmpv8583w3q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv8583w3q.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8583w3q.php:25\n\
    Stack trace:\n#0 /tmp/tmpv8583w3q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv8583w3q.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $points = [];\n    foreach ($nums as $index => $num) {\n        $points[$index]\
    \ = array_sum(str_split($num));\n    }\n    asort($points);\n    $result = [];\n\
    \    foreach ($points as $index => $point) {\n        $result[] = $nums[$index];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe0lse1zw.php:25\n\
    Stack trace:\n#0 /tmp/tmpe0lse1zw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpe0lse1zw.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk_a2ykv.php:21\n\
    Stack trace:\n#0 /tmp/tmplk_a2ykv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplk_a2ykv.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    $arr2 = [];\n    foreach ($nums as $key => $value) {\n\
    \        $arr[$key] = $value;\n        $arr2[$key] = $value;\n    }\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n        for ($j = 0; $j < count($arr); $j++)\
    \ {\n            if ($arr[$i] < $arr[$j]) {\n                $temp = $arr[$i];\n\
    \                $arr[$i] = $arr[$j];\n                $arr[$j] = $temp;\n   \
    \         }\n        }\n    }\n    for ($i = 0; $i < count($arr); $i++) {\n  \
    \      for ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$i] == $arr[$j])\
    \ {\n                $arr[$i] = $arr2[$i];\n            }\n        }\n    }\n\
    \    return $arr;\n}\n\n$nums = [10, 20, 30, 40, 50];\necho \"<pre>\";\nprint_r(order_by_points($nums));\n\
    echo \"</pre>\";\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 10\n    [1] => 20\n    [2] => 30\n    [3] =>\
    \ 40\n    [4] => 50\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpjzk34f_3.php:43\nStack trace:\n#0 /tmp/tmpjzk34f_3.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpjzk34f_3.php on line 43\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_sum = [];\n    foreach ($nums as $key => $num) {\n        $nums_sum[$key]\
    \ = array_sum(str_split($num));\n    }\n    array_multisort($nums_sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9nx7ftyr.php:21\n\
    Stack trace:\n#0 /tmp/tmp9nx7ftyr.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp9nx7ftyr.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_array = [];\n    foreach ($nums as $key => $value) {\n        $nums_array[$key]\
    \ = $value;\n    }\n    $nums_array = array_map('str_split', $nums_array);\n \
    \   $nums_array = array_map('array_sum', $nums_array);\n    asort($nums_array);\n\
    \    $nums_array = array_keys($nums_array);\n    $nums_array = array_map(function($value)\
    \ use ($nums) {\n        return $nums[$value];\n    }, $nums_array);\n    return\
    \ $nums_array;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvjv7z9pl.php:27\n\
    Stack trace:\n#0 /tmp/tmpvjv7z9pl.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvjv7z9pl.php\
    \ on line 27\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n  $nums_by_points = [];\n  foreach ($nums as $index => $num) {\n    $points\
    \ = 0;\n    $num_string = (string) $num;\n    for ($i = 0; $i < strlen($num_string);\
    \ $i++) {\n      $points += $num_string[$i];\n    }\n    $nums_by_points[$index]\
    \ = $points;\n  }\n  asort($nums_by_points);\n  $sorted_nums = [];\n  foreach\
    \ ($nums_by_points as $index => $points) {\n    $sorted_nums[] = $nums[$index];\n\
    \  }\n  return $sorted_nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpv6l9fvga.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpv6l9fvga.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpv6l9fvga.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv6l9fvga.php:30\n\
    Stack trace:\n#0 /tmp/tmpv6l9fvga.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpv6l9fvga.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $points = [];\n    foreach ($nums as $key => $num) {\n        $points[$key]\
    \ = array_sum(str_split($num));\n    }\n    array_multisort($points, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8iq8p9az.php:21\n\
    Stack trace:\n#0 /tmp/tmp8iq8p9az.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp8iq8p9az.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums = array_map(function($num) {\n        $sum = 0;\n        $num =\
    \ str_split($num);\n        foreach ($num as $digit) {\n            $sum += $digit;\n\
    \        }\n        return $sum;\n    }, $nums);\n    asort($nums);\n    return\
    \ array_keys($nums);\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpias1xfya.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmpias1xfya.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmpias1xfya.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpias1xfya.php:25\n\
    Stack trace:\n#0 /tmp/tmpias1xfya.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpias1xfya.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = (int)($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\n$nums = [5, 3, 4, 1, 2];\necho\
    \ implode(', ', order_by_points($nums));\nfunction candidate(...$args) {\n   \
    \ return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1, 2, 3, 4, 5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5eq9fqkp.php:32\n\
    Stack trace:\n#0 /tmp/tmp5eq9fqkp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp5eq9fqkp.php\
    \ on line 32\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_with_points = [];\n    foreach ($nums as $key => $num) {\n    \
    \    $nums_with_points[$key] = sum_of_digits($num);\n    }\n    asort($nums_with_points);\n\
    \    $result = [];\n    foreach ($nums_with_points as $key => $num) {\n      \
    \  $result[] = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum_of_digits()\
    \ in /tmp/tmpxdmij4yn.php:10\nStack trace:\n#0 /tmp/tmpxdmij4yn.php(21): order_by_points(Array)\n\
    #1 /tmp/tmpxdmij4yn.php(25): candidate(Array)\n#2 /tmp/tmpxdmij4yn.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxdmij4yn.php on line 10\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    foreach ($nums as $key => $value) {\n        $arr[$key]\
    \ = array_sum(str_split($value));\n    }\n    asort($arr);\n    $result = [];\n\
    \    foreach ($arr as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylf8papf.php:25\n\
    Stack trace:\n#0 /tmp/tmpylf8papf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpylf8papf.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    foreach ($nums as $key => $value) {\n        $arr[$key]\
    \ = array_sum(str_split($value));\n    }\n    asort($arr);\n    $result = [];\n\
    \    foreach ($arr as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\n$nums = [13, 20, 7, 4];\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 20\n    [1] => 13\n    [2] => 4\n    [3] => 7\n)\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm36ddk4v.php:27\nStack\
    \ trace:\n#0 /tmp/tmpm36ddk4v.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpm36ddk4v.php\
    \ on line 27\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_with_points = [];\n    foreach ($nums as $key => $num) {\n    \
    \    $nums_with_points[$key] = [\n            'num' => $num,\n            'points'\
    \ => array_sum(str_split($num))\n        ];\n    }\n    usort($nums_with_points,\
    \ function ($a, $b) {\n        if ($a['points'] == $b['points']) {\n         \
    \   return $a['num'] - $b['num'];\n        }\n        return $a['points'] - $b['points'];\n\
    \    });\n    return array_column($nums_with_points, 'num');\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjc9ji17w.php:29\n\
    Stack trace:\n#0 /tmp/tmpjc9ji17w.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjc9ji17w.php\
    \ on line 29\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8583w3q.php:25\n\
    Stack trace:\n#0 /tmp/tmpv8583w3q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv8583w3q.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    foreach ($nums as $key => $num) {\n        $result[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($result);\n    $result2 = [];\n\
    \    foreach ($result as $key => $value) {\n        $result2[] = $nums[$key];\n\
    \    }\n    return $result2;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6c_i2_l.php:25\n\
    Stack trace:\n#0 /tmp/tmpi6c_i2_l.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpi6c_i2_l.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n  $sum = [];\n  foreach ($nums as $key => $value) {\n    $sum[$key] = array_sum(str_split($value));\n\
    \  }\n  array_multisort($sum, SORT_ASC, $nums);\n  return $nums;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptc8nwi16.php:21\n\
    Stack trace:\n#0 /tmp/tmptc8nwi16.php(29): test()\n#1 {main}\n  thrown in /tmp/tmptc8nwi16.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        $nums[$key] = str_split($num);\n        foreach ($nums[$key] as $n) {\n\
    \            $sum += $n;\n        }\n        $sums[$key] = $sum;\n    }\n    array_multisort($sums,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp33ontng0.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp33ontng0.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp33ontng0.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp33ontng0.php:26\n\
    Stack trace:\n#0 /tmp/tmp33ontng0.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp33ontng0.php\
    \ on line 26\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    $sum = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    asort($sum);\n\
    \    foreach ($sum as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\n$nums = [5, 3, 1, 7, 0, 10, 2];\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 10\n    [3] => 2\n   \
    \ [4] => 3\n    [5] => 5\n    [6] => 7\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpowt1v194.php:27\nStack trace:\n#0 /tmp/tmpowt1v194.php(35):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpowt1v194.php on line 27\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_arr = [];\n    foreach ($nums as $key => $value) {\n        $nums_arr[$key]\
    \ = $value;\n    }\n    $nums_arr = array_map(function($n) {\n        $sum = 0;\n\
    \        while ($n > 0) {\n            $sum += $n % 10;\n            $n = floor($n\
    \ / 10);\n        }\n        return $sum;\n    }, $nums_arr);\n    array_multisort($nums_arr,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdndw5fe3.php:29\n\
    Stack trace:\n#0 /tmp/tmpdndw5fe3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdndw5fe3.php\
    \ on line 29\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    foreach ($nums as $key => $num) {\n        $sum =\
    \ 0;\n        $num = (string)$num;\n        for ($i = 0; $i < strlen($num); $i++)\
    \ {\n            $sum += $num[$i];\n        }\n        $result[$key] = $sum;\n\
    \    }\n    asort($result);\n    $result2 = [];\n    foreach ($result as $key\
    \ => $value) {\n        $result2[] = $nums[$key];\n    }\n    return $result2;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpt5sx5oyi.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpt5sx5oyi.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpt5sx5oyi.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt5sx5oyi.php:30\n\
    Stack trace:\n#0 /tmp/tmpt5sx5oyi.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpt5sx5oyi.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = floor($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    array_multisort($sums,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdtpksxry.php:26\n\
    Stack trace:\n#0 /tmp/tmpdtpksxry.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdtpksxry.php\
    \ on line 26\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    foreach ($nums as $key => $value) {\n        $sum\
    \ = 0;\n        $value = (string)$value;\n        for ($i = 0; $i < strlen($value);\
    \ $i++) {\n            $sum += $value[$i];\n        }\n        $result[$key] =\
    \ $sum;\n    }\n    asort($result);\n    $result2 = [];\n    foreach ($result\
    \ as $key => $value) {\n        $result2[] = $nums[$key];\n    }\n    return $result2;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpj9av9h6r.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpj9av9h6r.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpj9av9h6r.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj9av9h6r.php:30\n\
    Stack trace:\n#0 /tmp/tmpj9av9h6r.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpj9av9h6r.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    $sum = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    asort($sum);\n\
    \    foreach ($sum as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24dejmr6.php:25\n\
    Stack trace:\n#0 /tmp/tmp24dejmr6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp24dejmr6.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nvar_dump(order_by_points([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(10) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(10)\n  [2]=>\n  int(2)\n\
    \  [3]=>\n  int(3)\n  [4]=>\n  int(4)\n  [5]=>\n  int(5)\n  [6]=>\n  int(6)\n\
    \  [7]=>\n  int(7)\n  [8]=>\n  int(8)\n  [9]=>\n  int(9)\n}\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmppnluzmh6.php:26\nStack trace:\n#0 /tmp/tmppnluzmh6.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmppnluzmh6.php on line 26\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = array();\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpapxfqvpg.php:21\n\
    Stack trace:\n#0 /tmp/tmpapxfqvpg.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpapxfqvpg.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8583w3q.php:25\n\
    Stack trace:\n#0 /tmp/tmpv8583w3q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv8583w3q.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk_a2ykv.php:21\n\
    Stack trace:\n#0 /tmp/tmplk_a2ykv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplk_a2ykv.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    foreach ($nums as $key => $value) {\n        $result[$key]\
    \ = array_sum(str_split($value));\n    }\n    asort($result);\n    $result = array_keys($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $nums[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqg50uoz6.php:25\n\
    Stack trace:\n#0 /tmp/tmpqg50uoz6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqg50uoz6.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = (int)($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    array_multisort($sums,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa485851e.php:26\n\
    Stack trace:\n#0 /tmp/tmpa485851e.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpa485851e.php\
    \ on line 26\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        for ($i = 0; $i < strlen($num); $i++) {\n            $sum += $num[$i];\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp757mnex9.php:29\n\
    Stack trace:\n#0 /tmp/tmp757mnex9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp757mnex9.php\
    \ on line 29\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n  $arr = [];\n  foreach ($nums as $key => $value) {\n    $arr[$key] = array_sum(str_split($value));\n\
    \  }\n  asort($arr);\n  $result = [];\n  foreach ($arr as $key => $value) {\n\
    \    $result[] = $nums[$key];\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9qgoq5zx.php:24\n\
    Stack trace:\n#0 /tmp/tmp9qgoq5zx.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9qgoq5zx.php\
    \ on line 24\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8583w3q.php:25\n\
    Stack trace:\n#0 /tmp/tmpv8583w3q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv8583w3q.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n  $sum = [];\n  foreach ($nums as $key => $value) {\n    $sum[$key] = array_sum(str_split($value));\n\
    \  }\n  array_multisort($sum, SORT_ASC, $nums);\n  return $nums;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptc8nwi16.php:21\n\
    Stack trace:\n#0 /tmp/tmptc8nwi16.php(29): test()\n#1 {main}\n  thrown in /tmp/tmptc8nwi16.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    foreach ($nums as $key => $value) {\n        $sum\
    \ = 0;\n        $num = $value;\n        while ($num > 0) {\n            $sum +=\
    \ $num % 10;\n            $num = (int)($num / 10);\n        }\n        $result[$key]\
    \ = $sum;\n    }\n    asort($result);\n    $result2 = [];\n    foreach ($result\
    \ as $key => $value) {\n        $result2[] = $nums[$key];\n    }\n    return $result2;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp17qj38pj.php:31\n\
    Stack trace:\n#0 /tmp/tmp17qj38pj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp17qj38pj.php\
    \ on line 31\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    foreach ($nums as $key => $value) {\n        $arr[$key]\
    \ = $value;\n        $arr[$key] = array_sum(str_split($value));\n    }\n    asort($arr);\n\
    \    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq6odbwls.php:26\n\
    Stack trace:\n#0 /tmp/tmpq6odbwls.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpq6odbwls.php\
    \ on line 26\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $num) {\n        $sum[$key]\
    \ = array_sum(str_split($num));\n    }\n    array_multisort($sum, SORT_ASC, $nums);\n\
    \    return $nums;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuy0remyh.php:21\n\
    Stack trace:\n#0 /tmp/tmpuy0remyh.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuy0remyh.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    // your code here\n    $sum = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp67xmcj3t.php:22\n\
    Stack trace:\n#0 /tmp/tmp67xmcj3t.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp67xmcj3t.php\
    \ on line 22\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    foreach ($nums as $key => $num) {\n        $sum =\
    \ 0;\n        while ($num > 0) {\n            $sum += $num % 10;\n           \
    \ $num = floor($num / 10);\n        }\n        $result[$key] = $sum;\n    }\n\
    \    asort($result);\n    $result = array_keys($result);\n    $sorted = [];\n\
    \    foreach ($result as $key) {\n        $sorted[] = $nums[$key];\n    }\n  \
    \  return $sorted;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00e33bsm.php:31\n\
    Stack trace:\n#0 /tmp/tmp00e33bsm.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp00e33bsm.php\
    \ on line 31\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        $num = (string)$num;\n        for ($i = 0; $i < strlen($num); $i++) {\n\
    \            $sum += $num[$i];\n        }\n        $sums[$key] = $sum;\n    }\n\
    \    asort($sums);\n    $result = [];\n    foreach ($sums as $key => $sum) {\n\
    \        $result[] = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp9uvq9yyr.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp9uvq9yyr.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp9uvq9yyr.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9uvq9yyr.php:30\n\
    Stack trace:\n#0 /tmp/tmp9uvq9yyr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9uvq9yyr.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\n$nums = [13, 20, 7, 4];\nprint_r(order_by_points($nums));\
    \ // [20, 4, 13, 7]\n\n$nums = [13, 20, 7, 4, 100];\nprint_r(order_by_points($nums));\
    \ // [20, 4, 13, 7, 100]\n\n$nums = [13, 20, 7, 4, 100, 50];\nprint_r(order_by_points($nums));\
    \ // [20, 4, 13, 7, 100, 50]\n\n$nums = [13, 20, 7, 4, 100, 50, 99];\nprint_r(order_by_points($nums));\
    \ // [20, 4, 13, 7, 100, 50, 99]\n\n$nums = [13, 20, 7, 4, 100, 50, 99, 55];\n\
    print_r(order_by_points($nums)); // [20, 4, 13, 7, 100, 50, 99, 55]\n\n$nums =\
    \ [13, 20, 7, 4, 100, 50, 99, 55, 33];\nprint_r(order_by_points($nums)); // [20,\
    \ 4, 13, 7, 100, 50, 99, 55, 33]\n\n$nums = [13, 20, 7, 4, 100, 50, 99, 55, 33,\
    \ 44];\nprint_r(order_by_points($nums)); // [20, 4, 13, 7, 100, 50, 99, 55, 33,\
    \ 44]\n\n$nums = [13, 20, 7, 4, 100, 50, 99, 55, 33, 44, 77];\nprint_r(order_by_points($nums));\
    \ // [20, 4, 13, 7, 100, 50,\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 20\n    [1] => 13\n    [2] => 4\n    [3] => 7\n)\n\
    Array\n(\n    [0] => 100\n    [1] => 20\n    [2] => 13\n    [3] => 4\n    [4]\
    \ => 7\n)\nArray\n(\n    [0] => 100\n    [1] => 20\n    [2] => 13\n    [3] =>\
    \ 4\n    [4] => 50\n    [5] => 7\n)\nArray\n(\n    [0] => 100\n    [1] => 20\n\
    \    [2] => 13\n    [3] => 4\n    [4] => 50\n    [5] => 7\n    [6] => 99\n)\n\
    Array\n(\n    [0] => 100\n    [1] => 20\n    [2] => 13\n    [3] => 4\n    [4]\
    \ => 50\n    [5] => 7\n    [6] => 55\n    [7] => 99\n)\nArray\n(\n    [0] => 100\n\
    \    [1] => 20\n    [2] => 13\n    [3] => 4\n    [4] => 50\n    [5] => 33\n  \
    \  [6] => 7\n    [7] => 55\n    [8] => 99\n)\nArray\n(\n    [0] => 100\n    [1]\
    \ => 20\n    [2] => 13\n    [3] => 4\n    [4] => 50\n    [5] => 33\n    [6] =>\
    \ 7\n    [7] => 44\n    [8] => 55\n    [9] => 99\n)\nArray\n(\n    [0] => 100\n\
    \    [1] => 20\n    [2] => 13\n    [3] => 4\n    [4] => 50\n    [5] => 33\n  \
    \  [6] => 7\n    [7] => 44\n    [8] => 55\n    [9] => 77\n    [10] => 99\n)\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpg3aze71c.php:48\nStack\
    \ trace:\n#0 /tmp/tmpg3aze71c.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpg3aze71c.php\
    \ on line 48\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8583w3q.php:25\n\
    Stack trace:\n#0 /tmp/tmpv8583w3q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv8583w3q.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    // your code here\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj8bb71ic.php:16\n\
    Stack trace:\n#0 /tmp/tmpj8bb71ic.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpj8bb71ic.php\
    \ on line 16\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $index => $num) {\n        $sum =\
    \ 0;\n        while ($num > 0) {\n            $sum += $num % 10;\n           \
    \ $num = (int)($num / 10);\n        }\n        $sums[$index] = $sum;\n    }\n\
    \    array_multisort($sums, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaeq8yj2o.php:26\n\
    Stack trace:\n#0 /tmp/tmpaeq8yj2o.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpaeq8yj2o.php\
    \ on line 26\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n  $nums_sorted = [];\n  foreach ($nums as $key => $num) {\n    $sum = 0;\n\
    \    $num_str = strval($num);\n    for ($i = 0; $i < strlen($num_str); $i++) {\n\
    \      $sum += intval($num_str[$i]);\n    }\n    $nums_sorted[$key] = $sum;\n\
    \  }\n  asort($nums_sorted);\n  $nums_sorted_final = [];\n  foreach ($nums_sorted\
    \ as $key => $num) {\n    $nums_sorted_final[] = $nums[$key];\n  }\n  return $nums_sorted_final;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8fjggqa.php:30\n\
    Stack trace:\n#0 /tmp/tmpc8fjggqa.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpc8fjggqa.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $num) {\n        $sum[$key]\
    \ = array_sum(str_split($num));\n    }\n    array_multisort($sum, SORT_ASC, $nums);\n\
    \    return $nums;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuy0remyh.php:21\n\
    Stack trace:\n#0 /tmp/tmpuy0remyh.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuy0remyh.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\n$nums = [12, 13, 14, 15, 16, 17, 18, 19, 20];\n\
    print_r(order_by_points($nums));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 20\n    [1] => 12\n    [2] => 13\n    [3] => 14\n\
    \    [4] => 15\n    [5] => 16\n    [6] => 17\n    [7] => 18\n    [8] => 19\n)\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeek0yhih.php:23\nStack\
    \ trace:\n#0 /tmp/tmpeek0yhih.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpeek0yhih.php\
    \ on line 23\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_sum = [];\n    foreach ($nums as $key => $num) {\n        $nums_sum[$key]\
    \ = array_sum(str_split($num));\n    }\n    array_multisort($nums_sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9nx7ftyr.php:21\n\
    Stack trace:\n#0 /tmp/tmp9nx7ftyr.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp9nx7ftyr.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n  $result = [];\n  $sum = [];\n  foreach ($nums as $key => $value) {\n  \
    \  $sum[$key] = array_sum(str_split($value));\n  }\n  asort($sum);\n  foreach\
    \ ($sum as $key => $value) {\n    $result[] = $nums[$key];\n  }\n  return $result;\n\
    }\n\nprint_r(order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 10\n    [2] => 2\n    [3] => 3\n   \
    \ [4] => 4\n    [5] => 5\n    [6] => 6\n    [7] => 7\n    [8] => 8\n    [9] =>\
    \ 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6a4fvpkd.php:26\n\
    Stack trace:\n#0 /tmp/tmp6a4fvpkd.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp6a4fvpkd.php\
    \ on line 26\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8583w3q.php:25\n\
    Stack trace:\n#0 /tmp/tmpv8583w3q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv8583w3q.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    foreach ($nums as $key => $num) {\n        $result[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($result);\n    $result = array_keys($result);\n\
    \    $result = array_map(function($num) use ($nums) {\n        return $nums[$num];\n\
    \    }, $result);\n    return $result;\n}\n\n$nums = [13, 20, 7, 4];\necho implode(',\
    \ ', order_by_points($nums));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "20, 13, 4, 7\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnhifrkys.php:27\n\
    Stack trace:\n#0 /tmp/tmpnhifrkys.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpnhifrkys.php\
    \ on line 27\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_sum = [];\n    foreach ($nums as $key => $value) {\n        $nums_sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    asort($nums_sum);\n    $result =\
    \ [];\n    foreach ($nums_sum as $key => $value) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsy6zv4yx.php:25\n\
    Stack trace:\n#0 /tmp/tmpsy6zv4yx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpsy6zv4yx.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    foreach ($nums as $key => $value) {\n        $arr[$key]\
    \ = array_sum(str_split($value));\n    }\n    asort($arr);\n    $result = [];\n\
    \    foreach ($arr as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n\nvar_dump(order_by_points([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10]));\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(10) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(10)\n  [2]=>\n  int(2)\n\
    \  [3]=>\n  int(3)\n  [4]=>\n  int(4)\n  [5]=>\n  int(5)\n  [6]=>\n  int(6)\n\
    \  [7]=>\n  int(7)\n  [8]=>\n  int(8)\n  [9]=>\n  int(9)\n}\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpth7texha.php:26\nStack trace:\n#0 /tmp/tmpth7texha.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpth7texha.php on line 26\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = floor($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplva3oy0w.php:30\n\
    Stack trace:\n#0 /tmp/tmplva3oy0w.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplva3oy0w.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums = array_map(function($num) {\n        $sum = 0;\n        for ($i\
    \ = 0; $i < strlen($num); $i++) {\n            $sum += $num[$i];\n        }\n\
    \        return $sum;\n    }, $nums);\n    asort($nums);\n    return array_keys($nums);\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz1u7j_7n.php:24\n\
    Stack trace:\n#0 /tmp/tmpz1u7j_7n.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpz1u7j_7n.php\
    \ on line 24\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = array();\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpapxfqvpg.php:21\n\
    Stack trace:\n#0 /tmp/tmpapxfqvpg.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpapxfqvpg.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk_a2ykv.php:21\n\
    Stack trace:\n#0 /tmp/tmplk_a2ykv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplk_a2ykv.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_sum = [];\n    foreach ($nums as $key => $num) {\n        $sum\
    \ = 0;\n        while ($num > 0) {\n            $sum += $num % 10;\n         \
    \   $num = floor($num / 10);\n        }\n        $nums_sum[$key] = $sum;\n   \
    \ }\n    asort($nums_sum);\n    $result = [];\n    foreach ($nums_sum as $key\
    \ => $value) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa4s_6zy2.php:30\n\
    Stack trace:\n#0 /tmp/tmpa4s_6zy2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpa4s_6zy2.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = array();\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpapxfqvpg.php:21\n\
    Stack trace:\n#0 /tmp/tmpapxfqvpg.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpapxfqvpg.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8583w3q.php:25\n\
    Stack trace:\n#0 /tmp/tmpv8583w3q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv8583w3q.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums = array_map(function($num) {\n        $sum = 0;\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = floor($num\
    \ / 10);\n        }\n        return $sum;\n    }, $nums);\n    asort($nums);\n\
    \    return array_keys($nums);\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw2znyrno.php:25\n\
    Stack trace:\n#0 /tmp/tmpw2znyrno.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpw2znyrno.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_with_points = [];\n    foreach ($nums as $key => $num) {\n    \
    \    $nums_with_points[$key] = [\n            'num' => $num,\n            'points'\
    \ => sum_of_digits($num)\n        ];\n    }\n    usort($nums_with_points, function\
    \ ($a, $b) {\n        if ($a['points'] == $b['points']) {\n            return\
    \ $a['num'] <=> $b['num'];\n        }\n        return $a['points'] <=> $b['points'];\n\
    \    });\n    return array_column($nums_with_points, 'num');\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum_of_digits()\
    \ in /tmp/tmpjh0haw48.php:12\nStack trace:\n#0 /tmp/tmpjh0haw48.php(25): order_by_points(Array)\n\
    #1 /tmp/tmpjh0haw48.php(29): candidate(Array)\n#2 /tmp/tmpjh0haw48.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmpjh0haw48.php on line 12\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = (int)($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm4y67z2k.php:30\n\
    Stack trace:\n#0 /tmp/tmpm4y67z2k.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpm4y67z2k.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_with_points = [];\n    foreach ($nums as $key => $num) {\n    \
    \    $sum = 0;\n        $num_str = (string)$num;\n        for ($i = 0; $i < strlen($num_str);\
    \ $i++) {\n            $sum += $num_str[$i];\n        }\n        $nums_with_points[$key]\
    \ = $sum;\n    }\n    asort($nums_with_points);\n    $result = [];\n    foreach\
    \ ($nums_with_points as $key => $value) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 10\n    [2] => 2\n    [3] => 3\n   \
    \ [4] => 4\n    [5] => 5\n    [6] => 6\n    [7] => 7\n    [8] => 8\n    [9] =>\
    \ 9\n)\n\nWarning: A non-numeric value encountered in /tmp/tmp3sre_eg0.php on\
    \ line 13\n\nWarning: A non-numeric value encountered in /tmp/tmp3sre_eg0.php\
    \ on line 13\n\nWarning: A non-numeric value encountered in /tmp/tmp3sre_eg0.php\
    \ on line 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3sre_eg0.php:32\n\
    Stack trace:\n#0 /tmp/tmp3sre_eg0.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp3sre_eg0.php\
    \ on line 32\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums = array_map(function($num) {\n        $sum = 0;\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = floor($num\
    \ / 10);\n        }\n        return $sum;\n    }, $nums);\n    asort($nums);\n\
    \    return array_keys($nums);\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw2znyrno.php:25\n\
    Stack trace:\n#0 /tmp/tmpw2znyrno.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpw2znyrno.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    array_multisort($sums, SORT_ASC, $nums);\n\
    \    return $nums;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiji0qfar.php:21\n\
    Stack trace:\n#0 /tmp/tmpiji0qfar.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpiji0qfar.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = (int)($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    array_multisort($sums,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa485851e.php:26\n\
    Stack trace:\n#0 /tmp/tmpa485851e.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpa485851e.php\
    \ on line 26\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums = array_map(function($num) {\n        $sum = 0;\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = floor($num\
    \ / 10);\n        }\n        return $sum;\n    }, $nums);\n    asort($nums);\n\
    \    return array_keys($nums);\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw2znyrno.php:25\n\
    Stack trace:\n#0 /tmp/tmpw2znyrno.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpw2znyrno.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    // your code here\n}\n$nums = [4, 2, 3, 1, 5, 6, 7, 8, 9, 10];\nprint_r(order_by_points($nums));\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyihcd91t.php:17\n\
    Stack trace:\n#0 /tmp/tmpyihcd91t.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyihcd91t.php\
    \ on line 17\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_with_points = [];\n    foreach ($nums as $index => $num) {\n  \
    \      $nums_with_points[$index] = [\n            'points' => sum_of_digits($num),\n\
    \            'num' => $num\n        ];\n    }\n    usort($nums_with_points, function\
    \ ($a, $b) {\n        if ($a['points'] == $b['points']) {\n            return\
    \ $a['num'] - $b['num'];\n        }\n        return $a['points'] - $b['points'];\n\
    \    });\n    $result = [];\n    foreach ($nums_with_points as $num_with_points)\
    \ {\n        $result[] = $num_with_points['num'];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum_of_digits()\
    \ in /tmp/tmpm3hl_s18.php:11\nStack trace:\n#0 /tmp/tmpm3hl_s18.php(29): order_by_points(Array)\n\
    #1 /tmp/tmpm3hl_s18.php(33): candidate(Array)\n#2 /tmp/tmpm3hl_s18.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmpm3hl_s18.php on line 11\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_with_points = [];\n    foreach ($nums as $key => $num) {\n    \
    \    $nums_with_points[$key] = [$num, sum_of_digits($num)];\n    }\n    usort($nums_with_points,\
    \ function ($a, $b) {\n        if ($a[1] === $b[1]) {\n            return $a[0]\
    \ - $b[0];\n        }\n        return $a[1] - $b[1];\n    });\n    return array_column($nums_with_points,\
    \ 0);\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum_of_digits()\
    \ in /tmp/tmpdeyztpnm.php:10\nStack trace:\n#0 /tmp/tmpdeyztpnm.php(22): order_by_points(Array)\n\
    #1 /tmp/tmpdeyztpnm.php(26): candidate(Array)\n#2 /tmp/tmpdeyztpnm.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdeyztpnm.php on line 10\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $result = [];\n    foreach ($nums as $key => $value) {\n        $result[$key]\
    \ = array_sum(str_split($value));\n    }\n    asort($result);\n    $result2 =\
    \ [];\n    foreach ($result as $key => $value) {\n        $result2[] = $nums[$key];\n\
    \    }\n    return $result2;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpotcof3s3.php:25\n\
    Stack trace:\n#0 /tmp/tmpotcof3s3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpotcof3s3.php\
    \ on line 25\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $points = [];\n    foreach ($nums as $key => $num) {\n        $points[$key]\
    \ = array_sum(str_split($num));\n    }\n    array_multisort($points, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8iq8p9az.php:21\n\
    Stack trace:\n#0 /tmp/tmp8iq8p9az.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp8iq8p9az.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk_a2ykv.php:21\n\
    Stack trace:\n#0 /tmp/tmplk_a2ykv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplk_a2ykv.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $arr = [];\n    foreach ($nums as $key => $value) {\n        $sum = 0;\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            $sum += $value[$i];\n\
    \        }\n        $arr[$key] = $sum;\n    }\n    asort($arr);\n    $result =\
    \ [];\n    foreach ($arr as $key => $value) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp62qlhzzh.php:29\n\
    Stack trace:\n#0 /tmp/tmp62qlhzzh.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp62qlhzzh.php\
    \ on line 29\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk_a2ykv.php:21\n\
    Stack trace:\n#0 /tmp/tmplk_a2ykv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplk_a2ykv.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_with_points = [];\n    foreach ($nums as $key => $num) {\n    \
    \    $nums_with_points[$key] = [$num, sum_of_digits($num)];\n    }\n    usort($nums_with_points,\
    \ function ($a, $b) {\n        if ($a[1] === $b[1]) {\n            return $a[0]\
    \ - $b[0];\n        }\n        return $a[1] - $b[1];\n    });\n    $result = [];\n\
    \    foreach ($nums_with_points as $num_with_points) {\n        $result[] = $num_with_points[0];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum_of_digits()\
    \ in /tmp/tmppp2oogjt.php:10\nStack trace:\n#0 /tmp/tmppp2oogjt.php(26): order_by_points(Array)\n\
    #1 /tmp/tmppp2oogjt.php(30): candidate(Array)\n#2 /tmp/tmppp2oogjt.php(38): test()\n\
    #3 {main}\n  thrown in /tmp/tmppp2oogjt.php on line 10\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n  $nums_sum = [];\n  foreach ($nums as $key => $num) {\n    $nums_sum[$key]\
    \ = array_sum(str_split($num));\n  }\n  array_multisort($nums_sum, SORT_ASC, $nums);\n\
    \  return $nums;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ukca6gw.php:21\n\
    Stack trace:\n#0 /tmp/tmp1ukca6gw.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1ukca6gw.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $index => $num) {\n        $sum =\
    \ 0;\n        $num = str_split($num);\n        foreach ($num as $digit) {\n  \
    \          $sum += $digit;\n        }\n        $sums[$index] = $sum;\n    }\n\
    \    asort($sums);\n    $result = [];\n    foreach ($sums as $index => $sum) {\n\
    \        $result[] = $nums[$index];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpkdjikyo9.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpkdjikyo9.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpkdjikyo9.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkdjikyo9.php:30\n\
    Stack trace:\n#0 /tmp/tmpkdjikyo9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpkdjikyo9.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk_a2ykv.php:21\n\
    Stack trace:\n#0 /tmp/tmplk_a2ykv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplk_a2ykv.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n  $nums_with_points = [];\n  foreach ($nums as $key => $num) {\n    $nums_with_points[$key]\
    \ = [$num, sum_of_digits($num)];\n  }\n  usort($nums_with_points, function($a,\
    \ $b) {\n    if ($a[1] === $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a[1] - $b[1];\n  });\n  $result = [];\n  foreach ($nums_with_points as $num_with_points)\
    \ {\n    $result[] = $num_with_points[0];\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum_of_digits()\
    \ in /tmp/tmp8dgq649w.php:10\nStack trace:\n#0 /tmp/tmp8dgq649w.php(26): order_by_points(Array)\n\
    #1 /tmp/tmp8dgq649w.php(30): candidate(Array)\n#2 /tmp/tmp8dgq649w.php(38): test()\n\
    #3 {main}\n  thrown in /tmp/tmp8dgq649w.php on line 10\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        for ($i = 0; $i < strlen($num); $i++) {\n            $sum += $num[$i];\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp757mnex9.php:29\n\
    Stack trace:\n#0 /tmp/tmp757mnex9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp757mnex9.php\
    \ on line 29\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_with_points = [];\n    foreach ($nums as $key => $num) {\n    \
    \    $nums_with_points[$key] = [\n            'num' => $num,\n            'points'\
    \ => array_sum(str_split($num))\n        ];\n    }\n    usort($nums_with_points,\
    \ function ($a, $b) {\n        if ($a['points'] == $b['points']) {\n         \
    \   return $a['num'] - $b['num'];\n        }\n        return $a['points'] - $b['points'];\n\
    \    });\n    return array_column($nums_with_points, 'num');\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjc9ji17w.php:29\n\
    Stack trace:\n#0 /tmp/tmpjc9ji17w.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjc9ji17w.php\
    \ on line 29\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        $num = (string)$num;\n        for ($i = 0; $i < strlen($num); $i++) {\n\
    \            $sum += $num[$i];\n        }\n        $sums[$key] = $sum;\n    }\n\
    \    asort($sums);\n    $result = [];\n    foreach ($sums as $key => $sum) {\n\
    \        $result[] = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp9uvq9yyr.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp9uvq9yyr.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp9uvq9yyr.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9uvq9yyr.php:30\n\
    Stack trace:\n#0 /tmp/tmp9uvq9yyr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9uvq9yyr.php\
    \ on line 30\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n  $sums = [];\n  foreach ($nums as $key => $num) {\n    $sum = 0;\n    for\
    \ ($i = 0; $i < strlen($num); $i++) {\n      $sum += $num[$i];\n    }\n    $sums[$key]\
    \ = $sum;\n  }\n  asort($sums);\n  $result = [];\n  foreach ($sums as $key =>\
    \ $sum) {\n    $result[] = $nums[$key];\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1xgz2ksl.php:29\n\
    Stack trace:\n#0 /tmp/tmp1xgz2ksl.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1xgz2ksl.php\
    \ on line 29\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $nums_with_points = [];\n    foreach ($nums as $key => $num) {\n    \
    \    $nums_with_points[$key] = [\n            'num' => $num,\n            'points'\
    \ => array_sum(str_split($num))\n        ];\n    }\n    usort($nums_with_points,\
    \ function ($a, $b) {\n        if ($a['points'] == $b['points']) {\n         \
    \   return $a['num'] - $b['num'];\n        }\n        return $a['points'] - $b['points'];\n\
    \    });\n    return array_column($nums_with_points, 'num');\n}\n\n$nums = [5,\
    \ 3, 1, 7, 0, 10, 2];\nprint_r(order_by_points($nums));\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 10\n    [3] => 2\n   \
    \ [4] => 3\n    [5] => 5\n    [6] => 7\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpbfr4w3j4.php:31\nStack trace:\n#0 /tmp/tmpbfr4w3j4.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpbfr4w3j4.php on line 31\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\nfunction order_by_points($nums)\
    \ {\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8583w3q.php:25\n\
    Stack trace:\n#0 /tmp/tmpv8583w3q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv8583w3q.php\
    \ on line 25\n"
  timestamp: 1659730684

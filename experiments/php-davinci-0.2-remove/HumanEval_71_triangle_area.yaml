name: HumanEval_71_triangle_area
language: php
prompt: "<?php\n// Given the lengths of the three sides of a triangle. Return the\
  \ area of\n// the triangle rounded to 2 decimal points if the three sides form a\
  \ valid triangle. \n// Otherwise return -1\n// Three sides make a valid triangle\
  \ when the sum of any two sides is greater \n// than the third side.\n// Example:\n\
  function triangle_area($a, $b, $c) {\n"
tests: "function candidate(...$args) {\n    return triangle_area(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["  if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n    $p = ($a\
    \ + $b + $c) / 2;\n    $area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \    return round($area, 2);\n  } else {\n    return -1;\n  }\n}\n", "    if ($a\
    \ + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p = ($a + $b + $c) /\
    \ 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n        return\
    \ round($s, 2);\n    } else {\n        return -1;\n    }\n}\n", "  $s = ($a +\
    \ $b + $c) / 2;\n  $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n  return\
    \ $area > 0 ? round($area, 2) : -1;\n}\n\necho triangle_area(2, 2, 2) . \"\\n\"\
    ; // 2.83\necho triangle_area(2, 2, 3) . \"\\n\"; // -1\necho triangle_area(2,\
    \ 3, 4) . \"\\n\"; // 2.90\necho triangle_area(3, 4, 5) . \"\\n\"; // 6.00\necho\
    \ triangle_area(3, 4, 6) . \"\\n\"; // -1\necho triangle_area(3, 4, 7) . \"\\\
    n\"; // -1\necho triangle_area(3, 4, 8) . \"\\n\"; // -1\necho triangle_area(3,\
    \ 4, 9) . \"\\n\"; // -1\necho triangle_area(3, 4, 10) . \"\\n\"; // -1\necho\
    \ triangle_area(3, 4, 11) . \"\\n\"; // -1\necho triangle_area(3, 4, 12) . \"\\\
    n\"; // -1\necho triangle_area(3, 4, 13) . \"\\n\"; // -1\necho triangle_area(3,\
    \ 4, 14) . \"\\n\"; // -1\necho triangle_area(3, 4, 15) . \"\\n\"; // -1\necho\
    \ triangle_area(3, 4, 16) . \"\\n\"; // -1\necho triangle_area(3, 4, 17) . \"\\\
    n\"; // -1\necho triangle_area(3, 4, 18) . \"\\n\"; // -1\necho triangle_area(3,\
    \ 4, 19) . \"\\n\"; // -1\necho triangle_area(3, 4, 20) . \"\\n\"; // -1\necho\
    \ triangle_area(3, 4, 21) . \"\\n\"; // -1\necho triangle_area(3, 4, 22) . \"\\\
    n\"; // -1\necho triangle_area(3, 4, 23) . \"\\n\"; // -1\necho triangle_area(3,\
    \ 4, 24) . \"\\n\"; // -1\necho triangle_", "  if ($a + $b > $c && $a + $c > $b\
    \ && $b + $c > $a) {\n    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s\
    \ - $a) * ($s - $b) * ($s - $c));\n    return round($area, 2);\n  } else {\n \
    \   return -1;\n  }\n}\n\necho triangle_area(3, 4, 5);\necho \"\\n\";\necho triangle_area(1,\
    \ 1, 1);\necho \"\\n\";\necho triangle_area(1, 2, 3);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 4);\necho \"\\n\";\necho triangle_area(1, 2, 5);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 6);\necho \"\\n\";\necho triangle_area(1, 2, 7);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 8);\necho \"\\n\";\necho triangle_area(1, 2, 9);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 10);\necho \"\\n\";\necho triangle_area(1, 2, 11);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 12);\necho \"\\n\";\necho triangle_area(1, 2, 13);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 14);\necho \"\\n\";\necho triangle_area(1, 2, 15);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 16);\necho \"\\n\";\necho triangle_area(1, 2, 17);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 18);\necho \"\\n\";\necho triangle_area(1, 2, 19);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 20);\necho \"\\n\";\necho triangle_area(1, 2, 21);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 22);\necho \"\\n\";\necho triangle_area(1, 2, 23);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 24);\necho \"\\n\";", "    if ($a + $b > $c && $a + $c > $b && $b + $c >\
    \ $a) {\n        $s = ($a + $b + $c) / 2;\n        $area = sqrt($s * ($s - $a)\
    \ * ($s - $b) * ($s - $c));\n        return round($area, 2);\n    } else {\n \
    \       return -1;\n    }\n}\n\necho triangle_area(2, 3, 4); // 2.90\necho triangle_area(3,\
    \ 4, 5); // 6.00\necho triangle_area(1, 1, 1); // 0.43\necho triangle_area(2,\
    \ 2, 8); // -1\necho triangle_area(2, 2, 2); // 1.73\necho triangle_area(2, 3,\
    \ 4); // 2.90\necho triangle_area(3, 4, 5); // 6.00\necho triangle_area(1, 1,\
    \ 1); // 0.43\necho triangle_area(2, 2, 8); // -1\necho triangle_area(2, 2, 2);\
    \ // 1.73\necho triangle_area(2, 3, 4); // 2.90\necho triangle_area(3, 4, 5);\
    \ // 6.00\necho triangle_area(1, 1, 1); // 0.43\necho triangle_area(2, 2, 8);\
    \ // -1\necho triangle_area(2, 2, 2); // 1.73\necho triangle_area(2, 3, 4); //\
    \ 2.90\necho triangle_area(3, 4, 5); // 6.00\necho triangle_area(1, 1, 1); //\
    \ 0.43\necho triangle_area(2, 2, 8); // -1\necho triangle_area(2, 2, 2); // 1.73\n\
    echo triangle_area(2, 3, 4); // 2.90\necho triangle_area(3, 4, 5); // 6.00\necho\
    \ triangle_area(1, 1, 1); // 0.43\necho triangle_area(2, 2, 8); // -1\necho triangle_area(2,\
    \ 2, 2); // 1.73\necho triangle_area(2, 3, 4); //", "  $s = ($a + $b + $c) / 2;\n\
    \  $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n  if ($area > 0) {\n\
    \    return round($area, 2);\n  } else {\n    return -1;\n  }\n}\n", "    if ($a\
    \ + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p = ($a + $b + $c) /\
    \ 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n        return\
    \ round($area, 2);\n    } else {\n        return -1;\n    }\n}\n\necho triangle_area(2,\
    \ 3, 4);\necho \"\\n\";\necho triangle_area(2, 2, 2);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 5);\necho \"\\n\";\necho triangle_area(1, 1, 3);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 3);\necho \"\\n\";\necho triangle_area(1, 2, 4);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 5);\necho \"\\n\";\necho triangle_area(1, 2, 6);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 7);\necho \"\\n\";\necho triangle_area(1, 2, 8);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 9);\necho \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 11);\necho \"\\n\";\necho triangle_area(1, 2, 12);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 13);\necho \"\\n\";\necho triangle_area(1, 2, 14);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 15);\necho \"\\n\";\necho triangle_area(1, 2, 16);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 17);\necho \"\\n\";\necho triangle_area(1, 2, 18);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 19);\necho \"\\n\";\necho triangle_area(1, 2, 20);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 21);\necho \"\\n\";\necho triangle_area(1, 2, 22);\necho \"\\n\";", "   \
    \ if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p = ($a + $b +\
    \ $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n     \
    \   return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\necho triangle_area(2,\
    \ 3, 4);\necho \"\\n\";\necho triangle_area(2, 2, 2);\necho \"\\n\";\necho triangle_area(5,\
    \ 4, 3);\necho \"\\n\";\necho triangle_area(5, 4, 1);\necho \"\\n\";", "    $s\
    \ = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\
    \    if ($area > 0) {\n        return number_format($area, 2);\n    } else {\n\
    \        return -1;\n    }\n}\n", "  if ($a + $b > $c && $a + $c > $b && $b +\
    \ $c > $a) {\n    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) *\
    \ ($s - $b) * ($s - $c));\n    return round($area, 2);\n  } else {\n    return\
    \ -1;\n  }\n}\n", "    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a)\
    \ * ($s - $b) * ($s - $c));\n    if ($area > 0) {\n        return round($area,\
    \ 2);\n    } else {\n        return -1;\n    }\n}\n\necho triangle_area(3, 4,\
    \ 5);\necho \"\\n\";\necho triangle_area(3, 3, 3);\necho \"\\n\";\necho triangle_area(3,\
    \ 3, 4);\necho \"\\n\";\necho triangle_area(3, 3, 5);\necho \"\\n\";\necho triangle_area(3,\
    \ 3, 6);\necho \"\\n\";\necho triangle_area(3, 3, 7);\necho \"\\n\";\necho triangle_area(3,\
    \ 3, 8);\necho \"\\n\";\necho triangle_area(3, 3, 9);\necho \"\\n\";\necho triangle_area(3,\
    \ 3, 10);\necho \"\\n\";\necho triangle_area(3, 3, 11);\necho \"\\n\";\necho triangle_area(3,\
    \ 3, 12);\necho \"\\n\";\necho triangle_area(3, 3, 13);\necho \"\\n\";\necho triangle_area(3,\
    \ 3, 14);\necho \"\\n\";\necho triangle_area(3, 3, 15);\necho \"\\n\";\necho triangle_area(3,\
    \ 3, 16);\necho \"\\n\";\necho triangle_area(3, 3, 17);\necho \"\\n\";\necho triangle_area(3,\
    \ 3, 18);\necho \"\\n\";\necho triangle_area(3, 3, 19);\necho \"\\n\";\necho triangle_area(3,\
    \ 3, 20);\necho \"\\n\";\necho triangle_area(3, 3, 21);\necho \"\\n\";\necho triangle_area(3,\
    \ 3, 22);\necho \"\\n\";\necho triangle_area(3, 3, 23);\necho \"\\n\";\necho triangle_area(3,\
    \ 3, 24);\necho \"\\n\";\necho triangle_area(3, 3, 25);\necho \"\\n\";\necho triangle_area(3,\
    \ 3, 26);\necho \"\\n\";\necho triangle_area", "  if ($a + $b > $c && $a + $c\
    \ > $b && $b + $c > $a) {\n    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s *\
    \ ($s - $a) * ($s - $b) * ($s - $c));\n    return round($area, 2);\n  } else {\n\
    \    return -1;\n  }\n}\n", "    if ($a + $b > $c && $a + $c > $b && $b + $c >\
    \ $a) {\n        $p = ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a)\
    \ * ($p - $b) * ($p - $c));\n        return round($area, 2);\n    } else {\n \
    \       return -1;\n    }\n}\n\necho triangle_area(2, 3, 4) . \"\\n\";\necho triangle_area(3,\
    \ 4, 5) . \"\\n\";\necho triangle_area(6, 8, 10) . \"\\n\";\necho triangle_area(1,\
    \ 1, 1) . \"\\n\";\necho triangle_area(1, 2, 3) . \"\\n\";\necho triangle_area(1,\
    \ 2, 4) . \"\\n\";\necho triangle_area(1, 2, 5) . \"\\n\";\necho triangle_area(1,\
    \ 2, 6) . \"\\n\";\necho triangle_area(1, 2, 7) . \"\\n\";\necho triangle_area(1,\
    \ 2, 8) . \"\\n\";\necho triangle_area(1, 2, 9) . \"\\n\";\necho triangle_area(1,\
    \ 2, 10) . \"\\n\";\necho triangle_area(1, 2, 11) . \"\\n\";\necho triangle_area(1,\
    \ 2, 12) . \"\\n\";\necho triangle_area(1, 2, 13) . \"\\n\";\necho triangle_area(1,\
    \ 2, 14) . \"\\n\";\necho triangle_area(1, 2, 15) . \"\\n\";\necho triangle_area(1,\
    \ 2, 16) . \"\\n\";\necho triangle_area(1, 2, 17) . \"\\n\";\necho triangle_area(1,\
    \ 2, 18) . \"\\n\";\necho triangle_area(1, 2, 19) . \"\\n\";\necho triangle_area(1,\
    \ 2, 20) . \"\\n\";\necho triangle_area(1, 2, 21) . \"\\n\";\necho triangle_area(1,\
    \ 2, 22) . \"\\n\";\necho triangle_area(1, 2, 23) . \"\\n\";\necho triangle_area(1,",
  "  if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n    $s = ($a + $b + $c)\
    \ / 2;\n    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    return\
    \ round($area, 2);\n  } else {\n    return -1;\n  }\n}\n\necho triangle_area(3,\
    \ 4, 5) . \"\\n\";\necho triangle_area(1, 1, 1) . \"\\n\";\necho triangle_area(2,\
    \ 2, 8) . \"\\n\";\necho triangle_area(7, 3, 2) . \"\\n\";\necho triangle_area(10,\
    \ 10, 10) . \"\\n\";\necho triangle_area(1, 2, 3) . \"\\n\";\necho triangle_area(5,\
    \ 4, 3) . \"\\n\";\necho triangle_area(4, 3, 5) . \"\\n\";\necho triangle_area(3,\
    \ 5, 4) . \"\\n\";\necho triangle_area(10, 10, 2) . \"\\n\";\necho triangle_area(2,\
    \ 10, 10) . \"\\n\";\necho triangle_area(10, 2, 10) . \"\\n\";\necho triangle_area(2,\
    \ 2, 2) . \"\\n\";\necho triangle_area(2, 3, 4) . \"\\n\";\necho triangle_area(3,\
    \ 4, 5) . \"\\n\";\necho triangle_area(4, 5, 6) . \"\\n\";\necho triangle_area(5,\
    \ 6, 7) . \"\\n\";\necho triangle_area(6, 7, 8) . \"\\n\";\necho triangle_area(7,\
    \ 8, 9) . \"\\n\";\necho triangle_area(8, 9, 10) . \"\\n\";\necho triangle_area(9,\
    \ 10, 11) . \"\\n\";\necho triangle_area(10, 11, 12) . \"\\n\";\necho triangle_area(11,\
    \ 12, 13) . \"\\n\";\necho triangle_area(12, 13, 14) . \"\\n\";\necho triangle_area(13,\
    \ 14, 15) . \"\\n\";\necho triangle_area(14,", "  $s = ($a + $b + $c) / 2;\n \
    \ $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n  if ($area > 0) {\n\
    \    return round($area, 2);\n  } else {\n    return -1;\n  }\n}\n\necho triangle_area(2,\
    \ 3, 4) . PHP_EOL; // 2.90\necho triangle_area(5, 6, 7) . PHP_EOL; // 14.70\n\
    echo triangle_area(8, 2, 2) . PHP_EOL; // -1\necho triangle_area(4, 2, 3) . PHP_EOL;\
    \ // 2.90\necho triangle_area(41, 98, 83) . PHP_EOL; // 333.39\necho triangle_area(5,\
    \ 2, 8) . PHP_EOL; // -1\necho triangle_area(2, 2, 2) . PHP_EOL; // 1.73\necho\
    \ triangle_area(5, 7, 2) . PHP_EOL; // -1\necho triangle_area(7, 3, 2) . PHP_EOL;\
    \ // -1\necho triangle_area(10, 10, 10) . PHP_EOL; // 43.30\necho triangle_area(8,\
    \ 2, 9) . PHP_EOL; // -1\necho triangle_area(3, 4, 5) . PHP_EOL; // 6.00\necho\
    \ triangle_area(7, 12, 8) . PHP_EOL; // 30.00\necho triangle_area(3, 4, 1) . PHP_EOL;\
    \ // 0.00\necho triangle_area(6, 6, 6) . PHP_EOL; // 15.59\necho triangle_area(7,\
    \ 3, 6) . PHP_EOL; // 14.70\necho triangle_area(11, 9, 11) . PHP_EOL; // 42.26\n\
    echo triangle_area(9, 9, 11) . PHP_EOL; // 40.80\necho triangle_area(7, 12, 8)\
    \ . PHP_EOL; // 30.00\necho triangle_area(11, 12, 13) . PHP_EOL", "  $s = ($a\
    \ + $b + $c) / 2;\n  $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n \
    \ if ($area > 0) {\n    return round($area, 2);\n  } else {\n    return -1;\n\
    \  }\n}\n\necho triangle_area(3, 4, 5); // 6.00\necho triangle_area(2, 3, 4);\
    \ // -1\necho triangle_area(1, 1, 1); // 0.43\necho triangle_area(3, 4, 8); //\
    \ -1\necho triangle_area(7, 12, 8); // 30.00", "  $s = ($a + $b + $c) / 2;\n \
    \ $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n  if ($area > 0) {\n\
    \    return round($area, 2);\n  } else {\n    return -1;\n  }\n}\n\necho triangle_area(2,\
    \ 3, 4);\necho \"\\n\";\necho triangle_area(1, 2, 3);\necho \"\\n\";\necho triangle_area(0,\
    \ 0, 0);\necho \"\\n\";\necho triangle_area(1, 1, 1);\necho \"\\n\";\necho triangle_area(2,\
    \ 2, 3);\necho \"\\n\";\necho triangle_area(3, 4, 5);\necho \"\\n\";\necho triangle_area(5,\
    \ 12, 13);\necho \"\\n\";\necho triangle_area(8, 15, 17);\necho \"\\n\";\necho\
    \ triangle_area(7, 24, 25);\necho \"\\n\";\necho triangle_area(3, 4, 6);\necho\
    \ \"\\n\";\necho triangle_area(10, 11, 12);\necho \"\\n\";\necho triangle_area(5,\
    \ 4, 2);\necho \"\\n\";\necho triangle_area(12, 13, 14);\necho \"\\n\";\necho\
    \ triangle_area(8, 15, 16);\necho \"\\n\";\necho triangle_area(3, 4, 5);\necho\
    \ \"\\n\";\necho triangle_area(7, 12, 13);\necho \"\\n\";\necho triangle_area(10,\
    \ 20, 30);\necho \"\\n\";\necho triangle_area(1, 1, 2);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 1);\necho \"\\n\";\necho triangle_area(2, 1, 1);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 3);\necho \"\\n\";\necho triangle_area(2, 3, 1);\necho \"\\n\";\necho triangle_area(3,\
    \ 1, 2);\necho \"\\n\";\necho triangle_area(1, 3, 2);\necho \"\\n\";\necho triangle_area(2,\
    \ 1, 3);\necho \"\\n\";\necho triangle_area", "    $s = ($a + $b + $c) / 2;\n\
    \    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    if ($area > 0)\
    \ {\n        return round($area, 2);\n    } else {\n        return -1;\n    }\n\
    }\n", "  $s = ($a + $b + $c) / 2;\n  $area = sqrt($s * ($s - $a) * ($s - $b) *\
    \ ($s - $c));\n  return $area > 0 ? round($area, 2) : -1;\n}\n", "    $s = ($a\
    \ + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\
    \    return $area;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

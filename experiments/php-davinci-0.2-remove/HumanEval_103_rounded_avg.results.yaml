language: php
name: HumanEval_103_rounded_avg
results:
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m -\
    \ $n + 1);\n    return decbin(round($avg));\n}\n\necho rounded_avg(5, 6); // 101\n\
    echo rounded_avg(5, 5); // 101\necho rounded_avg(5, 4); // -1\necho rounded_avg(5,\
    \ 10); // 1010\necho rounded_avg(5, 8); // 1010\necho rounded_avg(5, 7); // 1010\n\
    echo rounded_avg(5, 9); // 1010\necho rounded_avg(5, 11); // 1011\necho rounded_avg(5,\
    \ 12); // 1011\necho rounded_avg(5, 13); // 1011\necho rounded_avg(5, 14); //\
    \ 1100\necho rounded_avg(5, 15); // 1100\necho rounded_avg(5, 16); // 1100\necho\
    \ rounded_avg(5, 17); // 1101\necho rounded_avg(5, 18); // 1101\necho rounded_avg(5,\
    \ 19); // 1101\necho rounded_avg(5, 20); // 1101\necho rounded_avg(5, 21); //\
    \ 1110\necho rounded_avg(5, 22); // 1110\necho rounded_avg(5, 23); // 1110\necho\
    \ rounded_avg(5, 24); // 1110\necho rounded_avg(5, 25); // 1111\necho rounded_avg(5,\
    \ 26); // 1111\necho rounded_avg(5, 27); // 1111\necho rounded_avg(5, 28); //\
    \ 1111\necho rounded_avg(5, 29); // 1111\necho rounded_avg(5, 30); // 1111\necho\
    \ rounded_avg(5, 31); // 1111\necho rounded_avg(5, 32); // 1111\necho rounded_avg(5,\
    \ 33); // 1111\necho rounded_avg(5, 34\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmptkrdsx81.php on line 50

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\\
    n\"; // should return \"101\"\necho rounded_avg(5, 1) . \"\\n\"; // should return\
    \ \"-1\"\necho rounded_avg(3, 7) . \"\\n\"; // should return \"11\"\necho rounded_avg(7,\
    \ 3) . \"\\n\"; // should return \"-1\"\necho rounded_avg(10, 10) . \"\\n\"; //\
    \ should return \"1010\"\necho rounded_avg(10, 12) . \"\\n\"; // should return\
    \ \"11\"\necho rounded_avg(10, 14) . \"\\n\"; // should return \"1110\"\necho\
    \ rounded_avg(10, 16) . \"\\n\"; // should return \"10010\"\necho rounded_avg(10,\
    \ 18) . \"\\n\"; // should return \"10010\"\necho rounded_avg(10, 20) . \"\\n\"\
    ; // should return \"10100\"\necho rounded_avg(10, 22) . \"\\n\"; // should return\
    \ \"10110\"\necho rounded_avg(10, 24) . \"\\n\"; // should return \"11000\"\n\
    echo rounded_avg(10, 26) . \"\\n\"; // should return \"11010\"\necho rounded_avg(10,\
    \ 28) . \"\\n\"; // should return \"11100\"\necho rounded_avg(10, 30) . \"\\n\"\
    ; // should return \"11110\"\necho rounded_avg(10, 32) . \"\\n\"; // should return\
    \ \"100010\"\necho rounded_avg(10, 34) . \"\\n\"; // should return \"100010\"\n\
    echo rounded_avg(10, 36) . \"\\n\"; // should return \"100110\"\necho rounded_avg(10,\
    \ 38) . \"\\n\"; // should return \"100110\"\necho rounded_avg(10, 40) . \"\\\n\
    function candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpmvb0pwh1.php on line 44

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(1, 10) . \"\\n\";\necho rounded_avg(1,\
    \ 3) . \"\\n\";\necho rounded_avg(1, 1) . \"\\n\";\necho rounded_avg(1, -1) .\
    \ \"\\n\";\necho rounded_avg(1, 0) . \"\\n\";\necho rounded_avg(1, -10) . \"\\\
    n\";\necho rounded_avg(1, -100) . \"\\n\";\necho rounded_avg(1, -1000) . \"\\\
    n\";\necho rounded_avg(1, -10000) . \"\\n\";\necho rounded_avg(1, -100000) . \"\
    \\n\";\necho rounded_avg(1, -1000000) . \"\\n\";\necho rounded_avg(1, -10000000)\
    \ . \"\\n\";\necho rounded_avg(1, -100000000) . \"\\n\";\necho rounded_avg(1,\
    \ -1000000000) . \"\\n\";\necho rounded_avg(1, -10000000000) . \"\\n\";\necho\
    \ rounded_avg(1, -100000000000) . \"\\n\";\necho rounded_avg(1, -1000000000000)\
    \ . \"\\n\";\necho rounded_avg(1, -10000000000000) . \"\\n\";\necho rounded_avg(1,\
    \ -100000000000000) . \"\\n\";\necho rounded_avg(1, -1000000000000000) . \"\\\
    n\";\necho rounded_avg(1, -10000000000000000) . \"\\n\";\necho rounded_avg(1,\
    \ -100000000000000000) . \"\\n\";\necho rounded_avg(1, -1000000000000000000) .\
    \ \"\\n\";\necho rounded_avg(1, -10000000000000000000) . \"\\n\";\necho rounded_avg(1,\
    \ -100000000000000000000) . \"\\n\";\necho\nfunction candidate(...$args) {\n \
    \   return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp948vgjul.php on line 45

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m -\
    \ $n + 1);\n    $avg = round($avg);\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4sm54zwd.php:25\n\
    Stack trace:\n#0 /tmp/tmp4sm54zwd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4sm54zwd.php\
    \ on line 25\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m -\
    \ $n + 1);\n    $rounded = round($avg);\n    return decbin($rounded);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphd67rl1l.php:25\n\
    Stack trace:\n#0 /tmp/tmphd67rl1l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphd67rl1l.php\
    \ on line 25\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\"; // 3\necho rounded_avg(1,\
    \ 10) . \"\\n\"; // 5\necho rounded_avg(5, 5) . \"\\n\"; // 5\necho rounded_avg(5,\
    \ 1) . \"\\n\"; // -1\necho rounded_avg(5, 10) . \"\\n\"; // 7\necho rounded_avg(10,\
    \ 5) . \"\\n\"; // -1\necho rounded_avg(10, 10) . \"\\n\"; // 10\necho rounded_avg(10,\
    \ 20) . \"\\n\"; // 15\necho rounded_avg(20, 10) . \"\\n\"; // -1\necho rounded_avg(20,\
    \ 20) . \"\\n\"; // 20\necho rounded_avg(20, 30) . \"\\n\"; // 25\necho rounded_avg(30,\
    \ 20) . \"\\n\"; // -1\necho rounded_avg(30, 30) . \"\\n\"; // 30\necho rounded_avg(30,\
    \ 40) . \"\\n\"; // 35\necho rounded_avg(40, 30) . \"\\n\"; // -1\necho rounded_avg(40,\
    \ 40) . \"\\n\"; // 40\necho rounded_avg(40, 50) . \"\\n\"; // 45\necho rounded_avg(50,\
    \ 40) . \"\\n\"; // -1\necho rounded_avg(50, 50) . \"\\n\"; // 50\necho rounded_avg(50,\
    \ 60) . \"\\n\"; // 55\necho rounded_avg(60, 50) . \"\\n\"; // -1\necho rounded_avg(60,\
    \ 60) . \"\\n\"; // 60\necho rounded_avg(60, 70) . \"\\n\"; // 65\necho rounded_avg(70,\
    \ 60) . \"\\n\"; // -1\necho rounded_avg(70, 70\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmptffbotfe.php on line 44

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 10);\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "110\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqrzea7g3.php:25\n\
    Stack trace:\n#0 /tmp/tmpqrzea7g3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqrzea7g3.php\
    \ on line 25\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5); // 101\n\
    echo rounded_avg(5, 1); // -1\necho rounded_avg(5, 5); // 101\necho rounded_avg(5,\
    \ 6); // 101\necho rounded_avg(5, 7); // 110\necho rounded_avg(5, 8); // 110\n\
    echo rounded_avg(5, 9); // 110\necho rounded_avg(5, 10); // 110\necho rounded_avg(5,\
    \ 11); // 111\necho rounded_avg(5, 12); // 111\necho rounded_avg(5, 13); // 111\n\
    echo rounded_avg(5, 14); // 111\necho rounded_avg(5, 15); // 111\necho rounded_avg(5,\
    \ 16); // 111\necho rounded_avg(5, 17); // 1000\necho rounded_avg(5, 18); // 1000\n\
    echo rounded_avg(5, 19); // 1000\necho rounded_avg(5, 20); // 1000\necho rounded_avg(5,\
    \ 21); // 1000\necho rounded_avg(5, 22); // 1000\necho rounded_avg(5, 23); //\
    \ 1000\necho rounded_avg(5, 24); // 1000\necho rounded_avg(5, 25); // 1000\necho\
    \ rounded_avg(5, 26); // 1000\necho rounded_avg(5, 27); // 1000\necho rounded_avg(5,\
    \ 28); // 1000\necho rounded_avg(5, 29); // 1000\necho rounded_avg(5, 30); //\
    \ 1000\necho rounded_avg(5, 31); // 1000\necho rounded_avg(5, 32); // 1000\necho\
    \ rounded_avg(5, 33); // 1000\necho rounded_avg(5, 34); // 1000\necho rounded_avg(5,\n\
    function candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpusrm57aa.php on line 52

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(1, 2) . \"\\n\"; // 10\necho rounded_avg(2,\
    \ 3) . \"\\n\"; // 10\necho rounded_avg(3, 4) . \"\\n\"; // 11\necho rounded_avg(4,\
    \ 5) . \"\\n\"; // 11\necho rounded_avg(5, 6) . \"\\n\"; // 11\necho rounded_avg(6,\
    \ 7) . \"\\n\"; // 11\necho rounded_avg(7, 8) . \"\\n\"; // 11\necho rounded_avg(8,\
    \ 9) . \"\\n\"; // 11\necho rounded_avg(9, 10) . \"\\n\"; // 11\necho rounded_avg(10,\
    \ 11) . \"\\n\"; // 11\necho rounded_avg(11, 12) . \"\\n\"; // 11\necho rounded_avg(12,\
    \ 13) . \"\\n\"; // 11\necho rounded_avg(13, 14) . \"\\n\"; // 11\necho rounded_avg(14,\
    \ 15) . \"\\n\"; // 11\necho rounded_avg(15, 16) . \"\\n\"; // 11\necho rounded_avg(16,\
    \ 17) . \"\\n\"; // 11\necho rounded_avg(17, 18) . \"\\n\"; // 11\necho rounded_avg(18,\
    \ 19) . \"\\n\"; // 11\necho rounded_avg(19, 20) . \"\\n\"; // 11\necho rounded_avg(20,\
    \ 21) . \"\\n\"; // 11\necho rounded_avg(21, 22) . \"\\n\"; // 11\necho rounded_avg(22,\
    \ 23) . \"\\n\"; // 11\necho rounded_avg(23, 24) . \"\\n\"; // 11\necho rounded_avg(24,\
    \ 25) . \"\\n\"; // 11\necho rounded_avg(25, 26) . \"\\n\"; // 11\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "10\n11\n100\n101\n110\n111\n1000\n1001\n1010\n1011\n1100\n1101\n1110\n\
    1111\n10000\n10001\n10010\n10011\n10100\n10101\n10110\n10111\n11000\n11001\n11010\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvimo9e__.php:50\nStack\
    \ trace:\n#0 /tmp/tmpvimo9e__.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpvimo9e__.php\
    \ on line 50\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(3, 7);\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "101\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpauf0f7ot.php:25\n\
    Stack trace:\n#0 /tmp/tmpauf0f7ot.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpauf0f7ot.php\
    \ on line 25\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) return -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n   \
    \ return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0h_358u_.php:22\n\
    Stack trace:\n#0 /tmp/tmp0h_358u_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0h_358u_.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(3, 8) . \"\\n\";\necho rounded_avg(4,\
    \ 3) . \"\\n\";\necho rounded_avg(4, 4) . \"\\n\";\necho rounded_avg(4, 5) . \"\
    \\n\";\necho rounded_avg(4, 6) . \"\\n\";\necho rounded_avg(4, 7) . \"\\n\";\n\
    echo rounded_avg(4, 8) . \"\\n\";\necho rounded_avg(4, 9) . \"\\n\";\necho rounded_avg(4,\
    \ 10) . \"\\n\";\necho rounded_avg(4, 11) . \"\\n\";\necho rounded_avg(4, 12)\
    \ . \"\\n\";\necho rounded_avg(4, 13) . \"\\n\";\necho rounded_avg(4, 14) . \"\
    \\n\";\necho rounded_avg(4, 15) . \"\\n\";\necho rounded_avg(4, 16) . \"\\n\"\
    ;\necho rounded_avg(4, 17) . \"\\n\";\necho rounded_avg(4, 18) . \"\\n\";\necho\
    \ rounded_avg(4, 19) . \"\\n\";\necho rounded_avg(4, 20) . \"\\n\";\necho rounded_avg(4,\
    \ 21) . \"\\n\";\necho rounded_avg(4, 22) . \"\\n\";\necho rounded_avg(4, 23)\
    \ . \"\\n\";\necho rounded_avg(4, 24) . \"\\n\";\necho rounded_avg(4, 25) . \"\
    \\n\";\necho rounded_avg(4, 26) . \"\\n\";\necho rounded_avg(4, 27) . \"\\n\"\
    ;\necho rounded_avg(4, 28) . \"\\n\";\necho rounded_avg(4, 29) . \"\\n\";\necho\
    \ rounded_avg\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpub1u7ivs.php on line 48

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) return -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n   \
    \ return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0h_358u_.php:22\n\
    Stack trace:\n#0 /tmp/tmp0h_358u_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0h_358u_.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(2, 5) . \"\\\
    n\";\necho rounded_avg(5, 2) . \"\\n\";\necho rounded_avg(1, 1) . \"\\n\";\necho\
    \ rounded_avg(1, 2) . \"\\n\";\necho rounded_avg(1, 3) . \"\\n\";\necho rounded_avg(1,\
    \ 4) . \"\\n\";\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(1, 6) . \"\
    \\n\";\necho rounded_avg(1, 7) . \"\\n\";\necho rounded_avg(1, 8) . \"\\n\";\n\
    echo rounded_avg(1, 9) . \"\\n\";\necho rounded_avg(1, 10) . \"\\n\";\necho rounded_avg(1,\
    \ 11) . \"\\n\";\necho rounded_avg(1, 12) . \"\\n\";\necho rounded_avg(1, 13)\
    \ . \"\\n\";\necho rounded_avg(1, 14) . \"\\n\";\necho rounded_avg(1, 15) . \"\
    \\n\";\necho rounded_avg(1, 16) . \"\\n\";\necho rounded_avg(1, 17) . \"\\n\"\
    ;\necho rounded_avg(1, 18) . \"\\n\";\necho rounded_avg(1, 19) . \"\\n\";\necho\
    \ rounded_avg(1, 20) . \"\\n\";\necho rounded_avg(1, 21) . \"\\n\";\necho rounded_avg(1,\
    \ 22) . \"\\n\";\necho rounded_avg(1, 23) . \"\\n\";\necho rounded_avg(1, 24)\
    \ . \"\\n\";\necho rounded_avg(1, 25) . \"\\n\";\necho rounded_avg(1, 26) . \"\
    \\n\";\necho rounded_avg\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp7xk92klb.php on line 48

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\necho rounded_avg(1, 10);\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "110\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6t8n6k6r.php:24\n\
    Stack trace:\n#0 /tmp/tmp6t8n6k6r.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6t8n6k6r.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(5, 1) . \"\\n\";\necho rounded_avg(1, 1) . \"\\n\";\necho\
    \ rounded_avg(1, 2) . \"\\n\";\necho rounded_avg(1, 3) . \"\\n\";\necho rounded_avg(1,\
    \ 4) . \"\\n\";\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(1, 6) . \"\
    \\n\";\necho rounded_avg(1, 7) . \"\\n\";\necho rounded_avg(1, 8) . \"\\n\";\n\
    echo rounded_avg(1, 9) . \"\\n\";\necho rounded_avg(1, 10) . \"\\n\";\necho rounded_avg(1,\
    \ 11) . \"\\n\";\necho rounded_avg(1, 12) . \"\\n\";\necho rounded_avg(1, 13)\
    \ . \"\\n\";\necho rounded_avg(1, 14) . \"\\n\";\necho rounded_avg(1, 15) . \"\
    \\n\";\necho rounded_avg(1, 16) . \"\\n\";\necho rounded_avg(1, 17) . \"\\n\"\
    ;\necho rounded_avg(1, 18) . \"\\n\";\necho rounded_avg(1, 19) . \"\\n\";\necho\
    \ rounded_avg(1, 20) . \"\\n\";\necho rounded_avg(1, 21) . \"\\n\";\necho rounded_avg(1,\
    \ 22) . \"\\n\";\necho rounded_avg(1, 23) . \"\\n\";\necho rounded_avg(1, 24)\
    \ . \"\\n\";\necho rounded_avg(1, 25) . \"\\n\";\necho rounded_avg(1, 26) . \"\
    \\n\";\necho rounded_avg\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp06rnsia_.php on line 48

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(2, 4);\necho \"\\n\";\necho rounded_avg(4,\
    \ 2);\necho \"\\n\";\necho rounded_avg(4, 4);\necho \"\\n\";\necho rounded_avg(1,\
    \ 5);\necho \"\\n\";\necho rounded_avg(1, 10);\necho \"\\n\";\necho rounded_avg(10,\
    \ 1);\necho \"\\n\";\necho rounded_avg(1, 1);\necho \"\\n\";\necho rounded_avg(1,\
    \ 2);\necho \"\\n\";\necho rounded_avg(2, 1);\necho \"\\n\";\necho rounded_avg(1,\
    \ 3);\necho \"\\n\";\necho rounded_avg(3, 1);\necho \"\\n\";\necho rounded_avg(1,\
    \ 4);\necho \"\\n\";\necho rounded_avg(4, 1);\necho \"\\n\";\necho rounded_avg(1,\
    \ 5);\necho \"\\n\";\necho rounded_avg(5, 1);\necho \"\\n\";\necho rounded_avg(1,\
    \ 6);\necho \"\\n\";\necho rounded_avg(6, 1);\necho \"\\n\";\necho rounded_avg(1,\
    \ 7);\necho \"\\n\";\necho rounded_avg(7, 1);\necho \"\\n\";\necho rounded_avg(1,\
    \ 8);\necho \"\\n\";\necho rounded_avg(8, 1);\necho \"\\n\";\necho rounded_avg(1,\
    \ 9);\necho \"\\n\";\necho rounded_avg(9, 1);\necho \"\\n\";\necho rounded_avg(1,\
    \ 10);\necho \"\\n\";\necho rounded_avg(10, 1);\necho \"\\n\";\necho rounded_avg(1,\
    \ 11);\necho \"\\n\";\necho rounded_avg(11, 1\nfunction candidate(...$args) {\n\
    \    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpd347p8jb.php on line 72

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    $sum = 0;\n    $count = 0;\n    for ($i = $n; $i <= $m; $i++) {\n   \
    \     $sum += $i;\n        $count++;\n    }\n    $avg = round($sum / $count);\n\
    \    return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp377eqzxh.php:23\n\
    Stack trace:\n#0 /tmp/tmp377eqzxh.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp377eqzxh.php\
    \ on line 23\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(2, 5); // \"101\"\necho rounded_avg(4,\
    \ 5); // \"100\"\necho rounded_avg(5, 5); // \"101\"\necho rounded_avg(6, 7);\
    \ // \"110\"\necho rounded_avg(7, 7); // \"111\"\necho rounded_avg(8, 9); // \"\
    1001\"\necho rounded_avg(8, 10); // \"1010\"\necho rounded_avg(8, 11); // \"1011\"\
    \necho rounded_avg(8, 12); // \"1100\"\necho rounded_avg(8, 13); // \"1101\"\n\
    echo rounded_avg(8, 14); // \"1110\"\necho rounded_avg(8, 15); // \"1111\"\necho\
    \ rounded_avg(8, 16); // \"10000\"\necho rounded_avg(8, 17); // \"10001\"\necho\
    \ rounded_avg(8, 18); // \"10010\"\necho rounded_avg(8, 19); // \"10011\"\necho\
    \ rounded_avg(8, 20); // \"10100\"\necho rounded_avg(8, 21); // \"10101\"\necho\
    \ rounded_avg(8, 22); // \"10110\"\necho rounded_avg(8, 23); // \"10111\"\necho\
    \ rounded_avg(8, 24); // \"11000\"\necho rounded_avg(8, 25); // \"11001\"\necho\
    \ rounded_avg(8, 26); // \"11010\"\necho rounded_avg(8, 27); // \"11011\"\necho\
    \ rounded_avg(8, 28); // \"11100\"\necho rounded_avg(8, 29); // \"11101\"\necho\
    \ rounded_avg(8, 30); // \"11110\"\necho rounded\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpgif380ja.php on line 47

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(5, 1) . \"\\n\";\necho rounded_avg(2, 5) . \"\\n\";\necho\
    \ rounded_avg(5, 2) . \"\\n\";\necho rounded_avg(1, 1) . \"\\n\";\necho rounded_avg(1,\
    \ 2) . \"\\n\";\necho rounded_avg(1, 3) . \"\\n\";\necho rounded_avg(1, 4) . \"\
    \\n\";\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(1, 6) . \"\\n\";\n\
    echo rounded_avg(1, 7) . \"\\n\";\necho rounded_avg(1, 8) . \"\\n\";\necho rounded_avg(1,\
    \ 9) . \"\\n\";\necho rounded_avg(1, 10) . \"\\n\";\necho rounded_avg(1, 11) .\
    \ \"\\n\";\necho rounded_avg(1, 12) . \"\\n\";\necho rounded_avg(1, 13) . \"\\\
    n\";\necho rounded_avg(1, 14) . \"\\n\";\necho rounded_avg(1, 15) . \"\\n\";\n\
    echo rounded_avg(1, 16) . \"\\n\";\necho rounded_avg(1, 17) . \"\\n\";\necho rounded_avg(1,\
    \ 18) . \"\\n\";\necho rounded_avg(1, 19) . \"\\n\";\necho rounded_avg(1, 20)\
    \ . \"\\n\";\necho rounded_avg(1, 21) . \"\\n\";\necho rounded_avg(1, 22) . \"\
    \\n\";\necho rounded_avg(1, 23) . \"\\n\";\necho rounded_avg(1, 24) . \"\\n\"\
    ;\necho rounded_avg\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpb6bxctad.php on line 48

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m -\
    \ $n + 1);\n    return decbin(round($avg));\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz46gr9vg.php:24\n\
    Stack trace:\n#0 /tmp/tmpz46gr9vg.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpz46gr9vg.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpigd3zttr.php:24\n\
    Stack trace:\n#0 /tmp/tmpigd3zttr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpigd3zttr.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(3, 6);\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "101\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f870ih.php:25\n\
    Stack trace:\n#0 /tmp/tmph8f870ih.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph8f870ih.php\
    \ on line 25\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpigd3zttr.php:24\n\
    Stack trace:\n#0 /tmp/tmpigd3zttr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpigd3zttr.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 10) . PHP_EOL;\n\
    echo rounded_avg(1, 1) . PHP_EOL;\necho rounded_avg(1, 2) . PHP_EOL;\necho rounded_avg(1,\
    \ 3) . PHP_EOL;\necho rounded_avg(1, 4) . PHP_EOL;\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(1, 6) . PHP_EOL;\necho rounded_avg(1, 7) . PHP_EOL;\necho rounded_avg(1,\
    \ 8) . PHP_EOL;\necho rounded_avg(1, 9) . PHP_EOL;\necho rounded_avg(1, 10) .\
    \ PHP_EOL;\necho rounded_avg(1, 11) . PHP_EOL;\necho rounded_avg(1, 12) . PHP_EOL;\n\
    echo rounded_avg(1, 13) . PHP_EOL;\necho rounded_avg(1, 14) . PHP_EOL;\necho rounded_avg(1,\
    \ 15) . PHP_EOL;\necho rounded_avg(1, 16) . PHP_EOL;\necho rounded_avg(1, 17)\
    \ . PHP_EOL;\necho rounded_avg(1, 18) . PHP_EOL;\necho rounded_avg(1, 19) . PHP_EOL;\n\
    echo rounded_avg(1, 20) . PHP_EOL;\necho rounded_avg(1, 21) . PHP_EOL;\necho rounded_avg(1,\
    \ 22) . PHP_EOL;\necho rounded_avg(1, 23) . PHP_EOL;\necho rounded_avg(1, 24)\
    \ . PHP_EOL;\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "110\n1\n10\n10\n11\n11\n100\n100\n101\n101\n110\n110\n111\n111\n1000\n\
    1000\n1001\n1001\n1010\n1010\n1011\n1011\n1100\n1100\n1101\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpg_5284xv.php:50\nStack trace:\n#0 /tmp/tmpg_5284xv.php(64):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpg_5284xv.php on line 50\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\"; // 101\necho rounded_avg(2,\
    \ 5) . \"\\n\"; // 110\necho rounded_avg(1, 10) . \"\\n\"; // 1010\necho rounded_avg(1,\
    \ 100) . \"\\n\"; // 1100100\necho rounded_avg(1, 1000) . \"\\n\"; // 1110111000\n\
    echo rounded_avg(1, 10000) . \"\\n\"; // 1110111010000\necho rounded_avg(1, 100000)\
    \ . \"\\n\"; // 1110111010100000\necho rounded_avg(1, 1000000) . \"\\n\"; // 1110111010101000000\n\
    echo rounded_avg(1, 10000000) . \"\\n\"; // 1110111010101010000000\necho rounded_avg(1,\
    \ 100000000) . \"\\n\"; // 1110111010101010100000000\necho rounded_avg(1, 1000000000)\
    \ . \"\\n\"; // 1110111010101010101000000000\necho rounded_avg(1, 10000000000)\
    \ . \"\\n\"; // 111011101010101010100000000000\necho rounded_avg(1, 100000000000)\
    \ . \"\\n\"; // 11101110101010101010000000000000\necho rounded_avg(1, 1000000000000)\
    \ . \"\\n\"; // 1110111010101010101000000000000000\necho rounded_avg(1, 10000000000000)\
    \ . \"\\n\"; // 11101110101010101010000000000000000\necho rounded_avg(1, 100000000000000)\
    \ . \"\\n\"; // 111011101010101010100000000000000000\necho rounded_avg(1, 1000000000000000)\
    \ . \"\\n\"; // 1110111010101010101000000000000000000\necho rounded_avg(1, 10000000000000000)\
    \ . \"\\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4x8q1dq3.php on line 42

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(5,\
    \ 1) . \"\\n\";\necho rounded_avg(1, 1) . \"\\n\";\necho rounded_avg(1, 10) .\
    \ \"\\n\";\necho rounded_avg(1, 100) . \"\\n\";\necho rounded_avg(1, 1000) . \"\
    \\n\";\necho rounded_avg(1, 10000) . \"\\n\";\necho rounded_avg(1, 100000) . \"\
    \\n\";\necho rounded_avg(1, 1000000) . \"\\n\";\necho rounded_avg(1, 10000000)\
    \ . \"\\n\";\necho rounded_avg(1, 100000000) . \"\\n\";\necho rounded_avg(1, 1000000000)\
    \ . \"\\n\";\necho rounded_avg(1, 10000000000) . \"\\n\";\necho rounded_avg(1,\
    \ 100000000000) . \"\\n\";\necho rounded_avg(1, 1000000000000) . \"\\n\";\necho\
    \ rounded_avg(1, 10000000000000) . \"\\n\";\necho rounded_avg(1, 100000000000000)\
    \ . \"\\n\";\necho rounded_avg(1, 1000000000000000) . \"\\n\";\necho rounded_avg(1,\
    \ 10000000000000000) . \"\\n\";\necho rounded_avg(1, 100000000000000000) . \"\\\
    n\";\necho rounded_avg(1, 1000000000000000000) . \"\\n\";\necho rounded_avg(1,\
    \ 10000000000000000000) . \"\\n\";\necho rounded_avg(1, 100000000000000000000)\
    \ . \"\\n\";\necho rounded_avg(1, 1000000000000000000000) . \"\\n\";\necho rounded_avg(1,\
    \ 10000000000000000000000) . \"\\n\";\necho rounded_avg(1, 100000000000000000000000)\
    \ . \"\\n\";\necho rounded_\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpw85vs0jh.php on line 46

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: -1
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(1, 5);\necho \"\\n\";\necho rounded_avg(5,\
    \ 1);\necho \"\\n\";\necho rounded_avg(1, 1);\necho \"\\n\";\necho rounded_avg(1,\
    \ 10);\necho \"\\n\";\necho rounded_avg(1, 100);\necho \"\\n\";\necho rounded_avg(1,\
    \ 1000);\necho \"\\n\";\necho rounded_avg(1, 10000);\necho \"\\n\";\necho rounded_avg(1,\
    \ 100000);\necho \"\\n\";\necho rounded_avg(1, 1000000);\necho \"\\n\";\necho\
    \ rounded_avg(1, 10000000);\necho \"\\n\";\necho rounded_avg(1, 100000000);\n\
    echo \"\\n\";\necho rounded_avg(1, 1000000000);\necho \"\\n\";\necho rounded_avg(1,\
    \ 10000000000);\necho \"\\n\";\necho rounded_avg(1, 100000000000);\necho \"\\\
    n\";\necho rounded_avg(1, 1000000000000);\necho \"\\n\";\necho rounded_avg(1,\
    \ 10000000000000);\necho \"\\n\";\necho rounded_avg(1, 100000000000000);\necho\
    \ \"\\n\";\necho rounded_avg(1, 1000000000000000);\necho \"\\n\";\necho rounded_avg(1,\
    \ 10000000000000000);\necho \"\\n\";\necho rounded_avg(1, 100000000000000000);\n\
    echo \"\\n\";\necho rounded_avg(1, 1000000000000000000);\necho \"\\n\";\necho\
    \ rounded_avg(1, 10000000000000000000);\necho \"\\n\";\necho rounded_avg(1, 100000000000000000000);\n\
    echo \"\\n\";\necho rounded_avg(1, 1000000000000000000000);\necho \"\\n\";\necho\
    \ rounded_avg(1, 10000000000000000000000);\n\nfunction candidate(...$args) {\n\
    \    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Timeout
  stderr: None
  stdout: b'11\n-1\n1\n110\n110011\n111110101\n1001110001001\n1100001101010001\n1111010000100100001\n10011000100101101000001\n10111110101111000010000001\n'
  timestamp: 1659730694
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(5,\
    \ 1) . \"\\n\";\necho rounded_avg(3, 7) . \"\\n\";\necho rounded_avg(7, 3) . \"\
    \\n\";\necho rounded_avg(3, 3) . \"\\n\";\necho rounded_avg(7, 7) . \"\\n\";\n\
    echo rounded_avg(2, 7) . \"\\n\";\necho rounded_avg(7, 2) . \"\\n\";\necho rounded_avg(1,\
    \ 1) . \"\\n\";\necho rounded_avg(5, 5) . \"\\n\";\necho rounded_avg(1, 5) . \"\
    \\n\";\necho rounded_avg(5, 1) . \"\\n\";\necho rounded_avg(1, 4) . \"\\n\";\n\
    echo rounded_avg(4, 1) . \"\\n\";\necho rounded_avg(1, 3) . \"\\n\";\necho rounded_avg(3,\
    \ 1) . \"\\n\";\necho rounded_avg(1, 2) . \"\\n\";\necho rounded_avg(2, 1) . \"\
    \\n\";\necho rounded_avg(1, 1) . \"\\n\";\necho rounded_avg(1, 1) . \"\\n\";\n\
    echo rounded_avg(1, 1) . \"\\n\";\necho rounded_avg(1, 1) . \"\\n\";\necho rounded_avg(1,\
    \ 1) . \"\\n\";\necho rounded_avg(1, 1) . \"\\n\";\necho rounded_avg(1, 1) . \"\
    \\n\";\necho rounded_avg(1, 1) . \"\\n\";\necho rounded_avg(1, 1) . \"\\n\";\n\
    echo rounded_avg(1, 1) . \"\\n\";\necho rounded_avg\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp6qoe9b38.php on line 48

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) return -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n   \
    \ return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0h_358u_.php:22\n\
    Stack trace:\n#0 /tmp/tmp0h_358u_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0h_358u_.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(1, 5); // 3\necho rounded_avg(5,\
    \ 1); // -1\necho rounded_avg(1, 10); // 5\necho rounded_avg(1, 100); // 26\n\
    echo rounded_avg(1, 1000); // 144\necho rounded_avg(1, 10000); // 784\necho rounded_avg(1,\
    \ 100000); // 4884\necho rounded_avg(1, 1000000); // 29884\necho rounded_avg(1,\
    \ 10000000); // 178884\necho rounded_avg(1, 100000000); // 1088884\necho rounded_avg(1,\
    \ 1000000000); // 6888884\necho rounded_avg(1, 10000000000); // 48888884\necho\
    \ rounded_avg(1, 100000000000); // 288888884\necho rounded_avg(1, 1000000000000);\
    \ // 1788888884\necho rounded_avg(1, 10000000000000); // 10888888884\necho rounded_avg(1,\
    \ 100000000000000); // 68888888884\necho rounded_avg(1, 1000000000000000); //\
    \ 488888888884\necho rounded_avg(1, 10000000000000000); // 2888888888884\necho\
    \ rounded_avg(1, 100000000000000000); // 17888888888884\necho rounded_avg(1, 1000000000000000000);\
    \ // 108888888888884\necho rounded_avg(1, 10000000000000000000); // 688888888888884\n\
    echo rounded_avg(1, 100000000000000000000); // 4888888888888884\necho rounded_avg(1,\
    \ 1000000000000000000000); // 28888888888888884\necho rounded_avg(1, 10000000000000000000000);\
    \ // 178888888888888884\necho rounded\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpg00fr3w6.php on line 44

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: -1
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5);\necho\
    \ \"\\n\";\necho rounded_avg(5, 1);\necho \"\\n\";\necho rounded_avg(5, 5);\n\
    echo \"\\n\";\necho rounded_avg(1, 10);\necho \"\\n\";\necho rounded_avg(1, 100);\n\
    echo \"\\n\";\necho rounded_avg(1, 1000);\necho \"\\n\";\necho rounded_avg(1,\
    \ 10000);\necho \"\\n\";\necho rounded_avg(1, 100000);\necho \"\\n\";\necho rounded_avg(1,\
    \ 1000000);\necho \"\\n\";\necho rounded_avg(1, 10000000);\necho \"\\n\";\necho\
    \ rounded_avg(1, 100000000);\necho \"\\n\";\necho rounded_avg(1, 1000000000);\n\
    echo \"\\n\";\necho rounded_avg(1, 10000000000);\necho \"\\n\";\necho rounded_avg(1,\
    \ 100000000000);\necho \"\\n\";\necho rounded_avg(1, 1000000000000);\necho \"\\\
    n\";\necho rounded_avg(1, 10000000000000);\necho \"\\n\";\necho rounded_avg(1,\
    \ 100000000000000);\necho \"\\n\";\necho rounded_avg(1, 1000000000000000);\necho\
    \ \"\\n\";\necho rounded_avg(1, 10000000000000000);\necho \"\\n\";\necho rounded_avg(1,\
    \ 100000000000000000);\necho \"\\n\";\necho rounded_avg(1, 1000000000000000000);\n\
    echo \"\\n\";\necho rounded_avg(1, 10000000000000000000);\necho \"\\n\";\necho\
    \ rounded_avg(1, 100000000000000000000);\necho \"\\n\";\necho rounded_avg(1, 1000000000000000000000);\n\
    echo \"\\n\";\necho rounded_avg(1, 10000000000000000000000);\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Timeout
  stderr: None
  stdout: b'11\n-1\n101\n110\n110011\n111110101\n1001110001001\n1100001101010001\n1111010000100100001\n10011000100101101000001\n10111110101111000010000001\n'
  timestamp: 1659730694
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5); // 3\n\
    echo rounded_avg(3, 5); // 4\necho rounded_avg(5, 3); // -1\necho rounded_avg(1,\
    \ 1); // 1\necho rounded_avg(1, 10); // 5\necho rounded_avg(5, 15); // 10\necho\
    \ rounded_avg(5, 16); // 11\necho rounded_avg(23, 24); // 23\necho rounded_avg(23,\
    \ 25); // 24\necho rounded_avg(23, 26); // 25\necho rounded_avg(23, 27); // 26\n\
    echo rounded_avg(23, 28); // 27\necho rounded_avg(23, 29); // 28\necho rounded_avg(23,\
    \ 30); // 29\necho rounded_avg(23, 31); // 30\necho rounded_avg(23, 32); // 31\n\
    echo rounded_avg(23, 33); // 32\necho rounded_avg(23, 34); // 33\necho rounded_avg(23,\
    \ 35); // 34\necho rounded_avg(23, 36); // 35\necho rounded_avg(23, 37); // 36\n\
    echo rounded_avg(23, 38); // 37\necho rounded_avg(23, 39); // 38\necho rounded_avg(23,\
    \ 40); // 39\necho rounded_avg(23, 41); // 40\necho rounded_avg(23, 42); // 41\n\
    echo rounded_avg(23, 43); // 42\necho rounded_avg(23, 44); // 43\necho rounded_avg(23,\
    \ 45); // 44\necho rounded_avg(23, 46); // 45\necho rounded_avg(23, 47); // 46\n\
    echo rounded_avg(23, 48); // 47\necho rounded_avg(23,\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp6pzg8ht2.php on line 52

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplncvbn5c.php:16\n\
    Stack trace:\n#0 /tmp/tmplncvbn5c.php(30): test()\n#1 {main}\n  thrown in /tmp/tmplncvbn5c.php\
    \ on line 16\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m -\
    \ $n + 1);\n    return decbin(round($avg));\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz46gr9vg.php:24\n\
    Stack trace:\n#0 /tmp/tmpz46gr9vg.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpz46gr9vg.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) return -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n   \
    \ return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0h_358u_.php:22\n\
    Stack trace:\n#0 /tmp/tmp0h_358u_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0h_358u_.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg\
    \ = round($sum / ($m - $n + 1));\n  return $avg;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphx2un79d.php:21\n\
    Stack trace:\n#0 /tmp/tmphx2un79d.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphx2un79d.php\
    \ on line 21\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpigd3zttr.php:24\n\
    Stack trace:\n#0 /tmp/tmpigd3zttr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpigd3zttr.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg\
    \ = $sum / ($m - $n + 1);\n  $rounded = round($avg);\n  return decbin($rounded);\n\
    }\n\necho rounded_avg(3, 7); // \"100\"\necho rounded_avg(5, 7); // \"110\"\n\
    echo rounded_avg(5, 5); // \"101\"\necho rounded_avg(42, 47); // \"101010\"\n\
    echo rounded_avg(10, 10); // \"1010\"\necho rounded_avg(10, 20); // \"10100\"\n\
    echo rounded_avg(20, 10); // \"-1\"\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "101110101101101101011110\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp6xr6zj1b.php:29\nStack trace:\n#0 /tmp/tmp6xr6zj1b.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6xr6zj1b.php on line 29\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpigd3zttr.php:24\n\
    Stack trace:\n#0 /tmp/tmpigd3zttr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpigd3zttr.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(1, 5); // 3\necho rounded_avg(5,\
    \ 1); // -1\necho rounded_avg(10, 20); // 15\necho rounded_avg(20, 10); // -1\n\
    echo rounded_avg(5, 5); // 5\necho rounded_avg(0, 0); // 0\necho rounded_avg(1,\
    \ 10); // 5\necho rounded_avg(10, 1); // -1\necho rounded_avg(0, 1); // 1\necho\
    \ rounded_avg(1, 0); // -1\necho rounded_avg(0, 2); // 1\necho rounded_avg(2,\
    \ 0); // -1\necho rounded_avg(0, 3); // 2\necho rounded_avg(3, 0); // -1\necho\
    \ rounded_avg(0, 4); // 2\necho rounded_avg(4, 0); // -1\necho rounded_avg(0,\
    \ 5); // 3\necho rounded_avg(5, 0); // -1\necho rounded_avg(0, 6); // 3\necho\
    \ rounded_avg(6, 0); // -1\necho rounded_avg(0, 7); // 4\necho rounded_avg(7,\
    \ 0); // -1\necho rounded_avg(0, 8); // 4\necho rounded_avg(8, 0); // -1\necho\
    \ rounded_avg(0, 9); // 5\necho rounded_avg(9, 0); // -1\necho rounded_avg(0,\
    \ 10); // 5\necho rounded_avg(10, 0); // -1\necho rounded_avg(0, 11); // 6\necho\
    \ rounded_avg(11, 0); // -1\necho rounded_avg(0, 12); // 6\necho rounded_avg(12,\n\
    function candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxx8aqe94.php on line 51

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\necho rounded_avg(1, 3); // should return 11\necho rounded_avg(1,\
    \ 10); // should return 101\necho rounded_avg(1, 100); // should return 1100100\n\
    echo rounded_avg(1, 1000000); // should returnn\
    function candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "101101100111111010000100100001\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmps4oedn3f.php:27\nStack trace:\n#0 /tmp/tmps4oedn3f.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmps4oedn3f.php on line 27\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpigd3zttr.php:24\n\
    Stack trace:\n#0 /tmp/tmpigd3zttr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpigd3zttr.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) return -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n   \
    \ return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0h_358u_.php:22\n\
    Stack trace:\n#0 /tmp/tmp0h_358u_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0h_358u_.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m -\
    \ $n + 1);\n    return decbin(round($avg));\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz46gr9vg.php:24\n\
    Stack trace:\n#0 /tmp/tmpz46gr9vg.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpz46gr9vg.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpigd3zttr.php:24\n\
    Stack trace:\n#0 /tmp/tmpigd3zttr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpigd3zttr.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(5, 10);\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_m7ejxqn.php:25\n\
    Stack trace:\n#0 /tmp/tmp_m7ejxqn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_m7ejxqn.php\
    \ on line 25\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg\
    \ = $sum / ($m - $n + 1);\n  return round($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi_8_6if8.php:21\n\
    Stack trace:\n#0 /tmp/tmpi_8_6if8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpi_8_6if8.php\
    \ on line 21\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\\
    n\"; // 101\necho rounded_avg(5, 1) . \"\\n\"; // -1\necho rounded_avg(5, 5) .\
    \ \"\\n\"; // 101\necho rounded_avg(5, 10) . \"\\n\"; // 1010\necho rounded_avg(5,\
    \ 11) . \"\\n\"; // 1010\necho rounded_avg(5, 12) . \"\\n\"; // 1011\necho rounded_avg(5,\
    \ 13) . \"\\n\"; // 1011\necho rounded_avg(5, 14) . \"\\n\"; // 1100\necho rounded_avg(5,\
    \ 15) . \"\\n\"; // 1100\necho rounded_avg(5, 16) . \"\\n\"; // 1101\necho rounded_avg(5,\
    \ 17) . \"\\n\"; // 1101\necho rounded_avg(5, 18) . \"\\n\"; // 1110\necho rounded_avg(5,\
    \ 19) . \"\\n\"; // 1110\necho rounded_avg(5, 20) . \"\\n\"; // 1111\necho rounded_avg(5,\
    \ 21) . \"\\n\"; // 1111\necho rounded_avg(5, 22) . \"\\n\"; // 10000\necho rounded_avg(5,\
    \ 23) . \"\\n\"; // 10000\necho rounded_avg(5, 24) . \"\\n\"; // 10001\necho rounded_avg(5,\
    \ 25) . \"\\n\"; // 10001\necho rounded_avg(5, 26) . \"\\n\"; // 10010\necho rounded_avg(5,\
    \ 27) . \"\\n\"; // 10010\necho rounded_avg(5, 28) . \"\\n\"; // 10011\necho rounded_avg(5,\
    \ 29) . \"\\n\"; // 10011\necho rounded_avg(5, 30) . \"\\n\"; // 10100\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n101\n1000\n1000\n1001\n1001\n1010\n1010\n1011\n1011\n1100\n1100\n\
    1101\n1101\n1110\n1110\n1111\n1111\n10000\n10000\n10001\n10001\n10010\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpefhcr19p.php:48\nStack trace:\n\
    #0 /tmp/tmpefhcr19p.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpefhcr19p.php\
    \ on line 48\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5); // \"\
    101\"\necho rounded_avg(5, 1); // \"-1\"\necho rounded_avg(1, 1); // \"1\"\necho\
    \ rounded_avg(1, 10); // \"1010\"\necho rounded_avg(1, 100); // \"1100100\"\n\
    echo rounded_avg(1, 1000000); // \"11110100001001000000\"\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-111101100111111010000100100001\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp_2x9pfje.php:30\nStack trace:\n#0 /tmp/tmp_2x9pfje.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_2x9pfje.php on line 30\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: -1
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(1, 5); // 3\necho rounded_avg(5,\
    \ 1); // -1\necho rounded_avg(1, 10); // 5\necho rounded_avg(1, 100); // 27\n\
    echo rounded_avg(1, 10000); // 1273\necho rounded_avg(1, 100000); // 6561\necho\
    \ rounded_avg(1, 1000000); // 32768\necho rounded_avg(1, 10000000); // 16384\n\
    echo rounded_avg(1, 100000000); // 8192\necho rounded_avg(1, 1000000000); // 4096\n\
    echo rounded_avg(1, 10000000000); // 2048\necho rounded_avg(1, 100000000000);\
    \ // 1024\necho rounded_avg(1, 1000000000000); // 512\necho rounded_avg(1, 10000000000000);\
    \ // 256\necho rounded_avg(1, 100000000000000); // 128\necho rounded_avg(1, 1000000000000000);\
    \ // 64\necho rounded_avg(1, 10000000000000000); // 32\necho rounded_avg(1, 100000000000000000);\
    \ // 16\necho rounded_avg(1, 1000000000000000000); // 8\necho rounded_avg(1, 10000000000000000000);\
    \ // 4\necho rounded_avg(1, 100000000000000000000); // 2\necho rounded_avg(1,\
    \ 1000000000000000000000); // 1\necho rounded_avg(1, 10000000000000000000000);\
    \ // 1\necho rounded_avg(1, 100000000000000000000000); // 1\necho rounded_avg(1,\
    \ 1000000000000000000000000); // 1\necho rounded_avg(1, 10000000000000000000000000);\
    \ // 1\necho rounded_avg(1, 100000000000000000000000000); // 1\necho rounded_avg(1,\
    \ 1000000000000000000000000000); // 1\necho rounded_avg(1, 10000000000000000000000000000);\
    \ //\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: b'11-11101100111001110001001110000110101000111110100001001000011001100010010110100000110111110101111000010000001'
  timestamp: 1659730694
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 2); // 1\n\
    echo rounded_avg(1, 3); // 2\necho rounded_avg(1, 4); // 2\necho rounded_avg(1,\
    \ 5); // 3\necho rounded_avg(1, 6); // 3\necho rounded_avg(1, 7); // 4\necho rounded_avg(1,\
    \ 8); // 4\necho rounded_avg(1, 9); // 5\necho rounded_avg(1, 10); // 5\necho\
    \ rounded_avg(1, 11); // 6\necho rounded_avg(1, 12); // 6\necho rounded_avg(1,\
    \ 13); // 7\necho rounded_avg(1, 14); // 7\necho rounded_avg(1, 15); // 8\necho\
    \ rounded_avg(1, 16); // 8\necho rounded_avg(1, 17); // 9\necho rounded_avg(1,\
    \ 18); // 9\necho rounded_avg(1, 19); // 10\necho rounded_avg(1, 20); // 10\n\
    echo rounded_avg(1, 21); // 11\necho rounded_avg(1, 22); // 11\necho rounded_avg(1,\
    \ 23); // 12\necho rounded_avg(1, 24); // 12\necho rounded_avg(1, 25); // 13\n\
    echo rounded_avg(1, 26); // 13\necho rounded_avg(1, 27); // 14\necho rounded_avg(1,\
    \ 28); // 14\necho rounded_avg(1, 29); // 15\necho rounded_avg(1, 30); // 15\n\
    echo rounded_avg(1, 31); // 16\necho rounded_avg(1, 32); // 16\necho rounded_avg(1,\
    \ 33); // 17\necho rounded_avg(1, 34\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmppaz6l_to.php on line 52

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\\
    n\"; // 101\necho rounded_avg(1, 10) . \"\\n\"; // 1010\necho rounded_avg(5, 5)\
    \ . \"\\n\"; // 101\necho rounded_avg(5, 10) . \"\\n\"; // 1010\necho rounded_avg(10,\
    \ 5) . \"\\n\"; // -1\necho rounded_avg(10, 10) . \"\\n\"; // 1010\necho rounded_avg(10,\
    \ 11) . \"\\n\"; // 1010\necho rounded_avg(11, 10) . \"\\n\"; // -1\necho rounded_avg(11,\
    \ 11) . \"\\n\"; // 1011\necho rounded_avg(11, 12) . \"\\n\"; // 1011\necho rounded_avg(12,\
    \ 11) . \"\\n\"; // -1\necho rounded_avg(12, 12) . \"\\n\"; // 1100\necho rounded_avg(12,\
    \ 13) . \"\\n\"; // 1100\necho rounded_avg(13, 12) . \"\\n\"; // -1\necho rounded_avg(13,\
    \ 13) . \"\\n\"; // 1101\necho rounded_avg(13, 14) . \"\\n\"; // 1101\necho rounded_avg(14,\
    \ 13) . \"\\n\"; // -1\necho rounded_avg(14, 14) . \"\\n\"; // 1110\necho rounded_avg(14,\
    \ 15) . \"\\n\"; // 1110\necho rounded_avg(15, 14) . \"\\n\"; // -1\necho rounded_avg(15,\
    \ 15) . \"\\n\"; // 1111\necho rounded_avg(15, 16) . \"\\n\"; // 1111\necho rounded_avg(16,\
    \ 15) . \"\\n\"; // -1\necho rounded_avg(16, 16) . \"\\n\"; //\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n110\n101\n1000\n-1\n1010\n1011\n-1\n1011\n1100\n-1\n1100\n1101\n-1\n\
    1101\n1110\n-1\n1110\n1111\n-1\n1111\n10000\n-1\n10000\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp4rcqwqum.php:48\nStack trace:\n#0 /tmp/tmp4rcqwqum.php(62):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp4rcqwqum.php on line 48\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg\
    \ = $sum / ($m - $n + 1);\n  return round($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi_8_6if8.php:21\n\
    Stack trace:\n#0 /tmp/tmpi_8_6if8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpi_8_6if8.php\
    \ on line 21\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(1, 5); // 3\necho rounded_avg(5,\
    \ 1); // -1\necho rounded_avg(3, 7); // 5\necho rounded_avg(7, 3); // -1\necho\
    \ rounded_avg(2, 6); // 4\necho rounded_avg(6, 2); // -1\necho rounded_avg(1,\
    \ 1); // 1\necho rounded_avg(1, 2); // 1\necho rounded_avg(2, 1); // -1\necho\
    \ rounded_avg(3, 3); // 3\necho rounded_avg(3, 4); // 3\necho rounded_avg(4, 3);\
    \ // -1\necho rounded_avg(4, 4); // 4\necho rounded_avg(4, 5); // 4\necho rounded_avg(5,\
    \ 4); // -1\necho rounded_avg(5, 5); // 5\necho rounded_avg(5, 6); // 5\necho\
    \ rounded_avg(6, 5); // -1\necho rounded_avg(6, 6); // 6\necho rounded_avg(6,\
    \ 7); // 6\necho rounded_avg(7, 6); // -1\necho rounded_avg(7, 7); // 7\necho\
    \ rounded_avg(7, 8); // 7\necho rounded_avg(8, 7); // -1\necho rounded_avg(8,\
    \ 8); // 8\necho rounded_avg(8, 9); // 8\necho rounded_avg(9, 8); // -1\necho\
    \ rounded_avg(9, 9); // 9\necho rounded_avg(9, 10); // 9\necho rounded_avg(10,\
    \ 9); // -1\necho rounded_avg(10, 10); // 10\necho rounded_avg(10, 11); //\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1101-1100-1110-111100-1100101-1101110-1110111-11111000-110001001-110011010-110101011\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpzfcw2bwd.php:56\nStack\
    \ trace:\n#0 /tmp/tmpzfcw2bwd.php(70): test()\n#1 {main}\n  thrown in /tmp/tmpzfcw2bwd.php\
    \ on line 56\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) return -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n   \
    \ return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0h_358u_.php:22\n\
    Stack trace:\n#0 /tmp/tmp0h_358u_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0h_358u_.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(3, 5); // 4\n\
    echo rounded_avg(5, 3); // -1\necho rounded_avg(5, 5); // 5\necho rounded_avg(5,\
    \ 6); // 5\necho rounded_avg(5, 7); // 6\necho rounded_avg(5, 8); // 6\necho rounded_avg(5,\
    \ 9); // 7\necho rounded_avg(5, 10); // 7\necho rounded_avg(5, 11); // 8\necho\
    \ rounded_avg(5, 12); // 8\necho rounded_avg(5, 13); // 9\necho rounded_avg(5,\
    \ 14); // 9\necho rounded_avg(5, 15); // 10\necho rounded_avg(5, 16); // 10\n\
    echo rounded_avg(5, 17); // 11\necho rounded_avg(5, 18); // 11\necho rounded_avg(5,\
    \ 19); // 12\necho rounded_avg(5, 20); // 12\necho rounded_avg(5, 21); // 13\n\
    echo rounded_avg(5, 22); // 13\necho rounded_avg(5, 23); // 14\necho rounded_avg(5,\
    \ 24); // 14\necho rounded_avg(5, 25); // 15\necho rounded_avg(5, 26); // 15\n\
    echo rounded_avg(5, 27); // 16\necho rounded_avg(5, 28); // 16\necho rounded_avg(5,\
    \ 29); // 17\necho rounded_avg(5, 30); // 17\necho rounded_avg(5, 31); // 18\n\
    echo rounded_avg(5, 32); // 18\necho rounded_avg(5, 33); // 19\necho rounded_avg(5,\
    \ 34); // 19\necho rounded_avg(5,\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpsk8djt_d.php on line 52

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 3);\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjk1xflvf.php:25\n\
    Stack trace:\n#0 /tmp/tmpjk1xflvf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjk1xflvf.php\
    \ on line 25\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) return -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n   \
    \ return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0h_358u_.php:22\n\
    Stack trace:\n#0 /tmp/tmp0h_358u_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0h_358u_.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 10) . PHP_EOL;\n\
    echo rounded_avg(1, 2) . PHP_EOL;\necho rounded_avg(1, 1) . PHP_EOL;\necho rounded_avg(1,\
    \ -1) . PHP_EOL;\necho rounded_avg(1, 0) . PHP_EOL;\necho rounded_avg(1, -10)\
    \ . PHP_EOL;\necho rounded_avg(10, 1) . PHP_EOL;\necho rounded_avg(10, 10) . PHP_EOL;\n\
    echo rounded_avg(10, -10) . PHP_EOL;\necho rounded_avg(10, 0) . PHP_EOL;\necho\
    \ rounded_avg(10, -1) . PHP_EOL;\necho rounded_avg(10, -10) . PHP_EOL;\necho rounded_avg(-10,\
    \ -1) . PHP_EOL;\necho rounded_avg(-10, 0) . PHP_EOL;\necho rounded_avg(-10, 1)\
    \ . PHP_EOL;\necho rounded_avg(-10, 10) . PHP_EOL;\necho rounded_avg(-10, -10)\
    \ . PHP_EOL;\necho rounded_avg(-1, -10) . PHP_EOL;\necho rounded_avg(-1, 0) .\
    \ PHP_EOL;\necho rounded_avg(-1, 1) . PHP_EOL;\necho rounded_avg(-1, 10) . PHP_EOL;\n\
    echo rounded_avg(-1, -10) . PHP_EOL;\necho rounded_avg(0, -10) . PHP_EOL;\necho\
    \ rounded_avg(0, -1) . PHP_EOL;\necho rounded_avg(\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpug1ewpld.php on line 44

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m -\
    \ $n + 1);\n    return decbin(round($avg));\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz46gr9vg.php:24\n\
    Stack trace:\n#0 /tmp/tmpz46gr9vg.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpz46gr9vg.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(1, 5); // \"101\"\necho rounded_avg(5,\
    \ 1); // \"-1\"\necho rounded_avg(3, 7); // \"101\"\necho rounded_avg(7, 3); //\
    \ \"-1\"\necho rounded_avg(3, 3); // \"11\"\necho rounded_avg(1, 1); // \"1\"\n\
    echo rounded_avg(1, 10); // \"101\"\necho rounded_avg(10, 1); // \"-1\"\necho\
    \ rounded_avg(5, 5); // \"11\"\necho rounded_avg(5, 6); // \"11\"\necho rounded_avg(6,\
    \ 5); // \"-1\"\necho rounded_avg(5, 7); // \"11\"\necho rounded_avg(7, 5); //\
    \ \"-1\"\necho rounded_avg(5, 8); // \"11\"\necho rounded_avg(8, 5); // \"-1\"\
    \necho rounded_avg(5, 9); // \"11\"\necho rounded_avg(9, 5); // \"-1\"\necho rounded_avg(5,\
    \ 10); // \"11\"\necho rounded_avg(10, 5); // \"-1\"\necho rounded_avg(5, 11);\
    \ // \"11\"\necho rounded_avg(11, 5); // \"-1\"\necho rounded_avg(5, 12); // \"\
    11\"\necho rounded_avg(12, 5); // \"-1\"\necho rounded_avg(5, 13); // \"11\"\n\
    echo rounded_avg(13, 5); // \"-1\"\necho rounded_avg(5, 14); // \"11\"\necho rounded_avg(14,\
    \ 5); // \"-1\"\necho rounded_avg(5, 15); // \"11\"\necho rounded_avg\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpf8l5xx2g.php on line 48

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(1, 5); // 3\necho rounded_avg(5,\
    \ 1); // -1\necho rounded_avg(3, 8); // 4\necho rounded_avg(7, 7); // 7\necho\
    \ rounded_avg(8, 3); // -1\necho rounded_avg(1, 1); // 1\necho rounded_avg(1,\
    \ 2); // 1\necho rounded_avg(2, 1); // -1\necho rounded_avg(1, 3); // 2\necho\
    \ rounded_avg(3, 1); // -1\necho rounded_avg(1, 4); // 2\necho rounded_avg(4,\
    \ 1); // -1\necho rounded_avg(1, 5); // 3\necho rounded_avg(5, 1); // -1\necho\
    \ rounded_avg(1, 6); // 3\necho rounded_avg(6, 1); // -1\necho rounded_avg(1,\
    \ 7); // 4\necho rounded_avg(7, 1); // -1\necho rounded_avg(1, 8); // 4\necho\
    \ rounded_avg(8, 1); // -1\necho rounded_avg(1, 9); // 5\necho rounded_avg(9,\
    \ 1); // -1\necho rounded_avg(1, 10); // 5\necho rounded_avg(10, 1); // -1\necho\
    \ rounded_avg(1, 11); // 5\necho rounded_avg(11, 1); // -1\necho rounded_avg(1,\
    \ 12); // 6\necho rounded_avg(12, 1); // -1\necho rounded_avg(1, 13); // 6\necho\
    \ rounded_avg(13, 1); // -1\necho rounded_avg(1, 14); // 6\necho rounded_avg(14,\n\
    function candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpx2rcrgty.php on line 51

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: -1
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(1, 5); // 3\necho rounded_avg(2,\
    \ 10); // 5\necho rounded_avg(5, 5); // 5\necho rounded_avg(5, 1); // -1\necho\
    \ rounded_avg(10, 2); // -1\necho rounded_avg(10, 10); // 10\necho rounded_avg(5,\
    \ 10); // 8\necho rounded_avg(1, 10); // 5\necho rounded_avg(1, 100); // 27\n\
    echo rounded_avg(1, 1000); // 144\necho rounded_avg(1, 10000); // 819\necho rounded_avg(1,\
    \ 100000); // 4913\necho rounded_avg(1, 1000000); // 28561\necho rounded_avg(1,\
    \ 10000000); // 167961\necho rounded_avg(1, 100000000); // 1000001\necho rounded_avg(1,\
    \ 1000000000); // 5882353\necho rounded_avg(1, 10000000000); // 354294451\necho\
    \ rounded_avg(1, 100000000000); // 214358881\necho rounded_avg(1, 1000000000000);\
    \ // 1299999999\necho rounded_avg(1, 10000000000000); // 7776997205\necho rounded_avg(1,\
    \ 100000000000000); // 46411484401\necho rounded_avg(1, 1000000000000000); //\
    \ 2777789000199\necho rounded_avg(1, 10000000000000000); // 16679880978201\necho\
    \ rounded_avg(1, 100000000000000000); // 10000000000000001\necho rounded_avg(1,\
    \ 1000000000000000000); // 59999999999999999\necho rounded_avg(1, 10000000000000000000);\
    \ // 3599999999999999999\necho rounded_avg(1, 100000000000000000000); // 2\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: b'11110101-1-1101010001101100111111101011001110001001110000110101000111110100001001000011001100010010110100000110111110101111000010000001'
  timestamp: 1659730694
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) return -1;\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n\
    \    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n  return decbin($avg);\n\
    }\n\necho rounded_avg(1, 2); // 1\necho rounded_avg(1, 3); // 10\necho rounded_avg(1,\
    \ 4); // 11\necho rounded_avg(1, 5); // 100\necho rounded_avg(1, 6); // 101\n\
    echo rounded_avg(1, 7); // 110\necho rounded_avg(1, 8); // 111\necho rounded_avg(1,\
    \ 9); // 1000\necho rounded_avg(1, 10); // 1001\necho rounded_avg(1, 11); // 1010\n\
    echo rounded_avg(1, 12); // 1011\necho rounded_avg(1, 13); // 1100\necho rounded_avg(1,\
    \ 14); // 1101\necho rounded_avg(1, 15); // 1110\necho rounded_avg(1, 16); //\
    \ 1111\necho rounded_avg(1, 17); // 10000\necho rounded_avg(1, 18); // 10001\n\
    echo rounded_avg(1, 19); // 10010\necho rounded_avg(1, 20); // 10011\necho rounded_avg(1,\
    \ 21); // 10100\necho rounded_avg(1, 22); // 10101\necho rounded_avg(1, 23); //\
    \ 10110\necho rounded_avg(1, 24); // 10111\necho rounded_avg(1, 25); // 11000\n\
    echo rounded_avg(1, 26); // 11001\necho rounded_avg(1, 27); // 11010\necho rounded_avg(1,\
    \ 28); // 11011\necho rounded_avg(1, 29); // 11100\necho rounded_avg(1, 30); //\
    \ 11101\necho rounded_avg(1, 31); // 11110\necho rounded_avg(1, 32); // 11111\n\
    echo rounded_avg(1\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmps8tsmpc2.php on line 49

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(1, 5); // 101\necho rounded_avg(5,\
    \ 1); // -1\necho rounded_avg(0, 0); // 0\necho rounded_avg(1, 1); // 1\necho\
    \ rounded_avg(1, 2); // 10\necho rounded_avg(1, 10); // 1010\necho rounded_avg(1,\
    \ 100); // 1100100\necho rounded_avg(1, 999); // 11000110001100\necho rounded_avg(1,\
    \ 10000); // 100111000110001100\necho rounded_avg(1, 99999); // 11011101110111011101\n\
    echo rounded_avg(1, 100000); // 110111011101110111100\necho rounded_avg(1, 1000000);\
    \ // 111011101110111011101\necho rounded_avg(1, 10000000); // 1111011101110111011101\n\
    echo rounded_avg(1, 100000000); // 11111011101110111011101\necho rounded_avg(1,\
    \ 1000000000); // 111111011101110111011101\necho rounded_avg(1, 10000000000);\
    \ // 1111111011101110111011101\necho rounded_avg(1, 100000000000); // 11111111011101110111011101\n\
    echo rounded_avg(1, 1000000000000); // 111111111011101110111011101\necho rounded_avg(1,\
    \ 10000000000000); // 1111111111011101110111011101\necho rounded_avg(1, 100000000000000);\
    \ // 11111111111011101110111011101\necho rounded_avg(1, 1000000000000000); //\
    \ 111111111111011101110111011101\necho rounded\nfunction candidate(...$args) {\n\
    \    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpx497evim.php on line 41

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) return -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n   \
    \ return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0h_358u_.php:22\n\
    Stack trace:\n#0 /tmp/tmp0h_358u_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0h_358u_.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $avg = round($sum / ($m - $n + 1));\n    return decbin($avg);\n}\n\
    \nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprk_dd2j4.php:21\n\
    Stack trace:\n#0 /tmp/tmprk_dd2j4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmprk_dd2j4.php\
    \ on line 21\n"
  timestamp: 1659730689
- exit_code: -1
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 3); // should\
    \ return 11\necho rounded_avg(3, 1); // should return -1\necho rounded_avg(4,\
    \ 6); // should return 101\necho rounded_avg(5, 5); // should return 101\necho\
    \ rounded_avg(6, 4); // should return -1\necho rounded_avg(1, 10); // should return\
    \ 1010\necho rounded_avg(10, 1); // should return -1\necho rounded_avg(1, 100);\
    \ // should return 1100100\necho rounded_avg(100, 1); // should return -1\necho\
    \ rounded_avg(1, 1000000); // should return 1110111011001101\necho rounded_avg(1000000,\
    \ 1); // should return -1\necho rounded_avg(1, 1000000000); // should return 1110111011001101\n\
    echo rounded_avg(1000000000, 1); // should return -1\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Timeout
  stderr: None
  stdout: b'10-1101101-1110-1110011-11111010000100100001-1'
  timestamp: 1659730694
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(2, 6); // 101\necho rounded_avg(1,\
    \ 10); // 1010\necho rounded_avg(1, 1); // 1\necho rounded_avg(1, 2); // 10\n\
    echo rounded_avg(1, 3); // 11\necho rounded_avg(1, 4); // 100\necho rounded_avg(1,\
    \ 5); // 101\necho rounded_avg(1, 6); // 110\necho rounded_avg(1, 7); // 111\n\
    echo rounded_avg(1, 8); // 1000\necho rounded_avg(1, 9); // 1001\necho rounded_avg(1,\
    \ 10); // 1010\necho rounded_avg(1, 11); // 1011\necho rounded_avg(1, 12); //\
    \ 1100\necho rounded_avg(1, 13); // 1101\necho rounded_avg(1, 14); // 1110\necho\
    \ rounded_avg(1, 15); // 1111\necho rounded_avg(1, 16); // 10000\necho rounded_avg(1,\
    \ 17); // 10001\necho rounded_avg(1, 18); // 10010\necho rounded_avg(1, 19); //\
    \ 10011\necho rounded_avg(1, 20); // 10100\necho rounded_avg(1, 21); // 10101\n\
    echo rounded_avg(1, 22); // 10110\necho rounded_avg(1, 23); // 10111\necho rounded_avg(1,\
    \ 24); // 11000\necho rounded_avg(1, 25); // 11001\necho rounded_avg(1, 26); //\
    \ 11010\necho rounded_avg(1, 27); // 11011\necho rounded_avg(1, 28); // 11100\n\
    echo rounded_avg(1, 29); // 11101\necho rounded\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpuifj5sg1.php on line 51

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5); // 11\n\
    echo rounded_avg(5, 1); // -1\necho rounded_avg(1, 10); // 101\necho rounded_avg(1,\
    \ 100); // 1100100\necho rounded_avg(1, 1000000); // 11101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\n\
    function candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-11101100111111010000100100001\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp5rzv7qwx.php:29\nStack trace:\n#0 /tmp/tmp5rzv7qwx.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp5rzv7qwx.php on line 29\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg\
    \ = round($sum / ($m - $n + 1));\n  return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkf31o57.php:21\n\
    Stack trace:\n#0 /tmp/tmpkkf31o57.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpkkf31o57.php\
    \ on line 21\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(1, 5); // \"101\"\necho \"\\n\"\
    ;\necho rounded_avg(4, 7); // \"100\"\necho \"\\n\";\necho rounded_avg(4, 4);\
    \ // \"100\"\necho \"\\n\";\necho rounded_avg(5, 4); // \"-1\"\necho \"\\n\";\n\
    echo rounded_avg(5, 5); // \"101\"\necho \"\\n\";\necho rounded_avg(5, 6); //\
    \ \"101\"\necho \"\\n\";\necho rounded_avg(5, 10); // \"101\"\necho \"\\n\";\n\
    echo rounded_avg(10, 5); // \"-1\"\necho \"\\n\";\necho rounded_avg(10, 10); //\
    \ \"1010\"\necho \"\\n\";\necho rounded_avg(10, 11); // \"1010\"\necho \"\\n\"\
    ;\necho rounded_avg(10, 12); // \"1010\"\necho \"\\n\";\necho rounded_avg(11,\
    \ 10); // \"-1\"\necho \"\\n\";\necho rounded_avg(11, 11); // \"1011\"\necho \"\
    \\n\";\necho rounded_avg(11, 12); // \"1011\"\necho \"\\n\";\necho rounded_avg(11,\
    \ 13); // \"1011\"\necho \"\\n\";\necho rounded_avg(12, 10); // \"-1\"\necho \"\
    \\n\";\necho rounded_avg(12, 11); // \"-1\"\necho \"\\n\";\necho rounded_avg(12,\
    \ 12); // \"1100\"\necho \"\\n\";\necho rounded_avg(12, 13); // \"1100\"\necho\
    \ \"\\n\";\necho rounded_avg(12, 14); // \"1100\"\necho \"\\n\";\necho rounded_avg(13,\
    \ 10); // \"-1\"\necho \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n110\n100\n-1\n101\n110\n1000\n-1\n1010\n1011\n1011\n-1\n1011\n1100\n\
    1100\n-1\n-1\n1100\n1101\n1101\n-1\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmppwu7e3t3.php:66\nStack trace:\n#0 /tmp/tmppwu7e3t3.php(80): test()\n\
    #1 {main}\n  thrown in /tmp/tmppwu7e3t3.php on line 66\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(3, 6);\necho \"\\n\";\necho rounded_avg(5,\
    \ 6);\necho \"\\n\";\necho rounded_avg(5, 5);\necho \"\\n\";\necho rounded_avg(6,\
    \ 5);\necho \"\\n\";\necho rounded_avg(6, 6);\necho \"\\n\";\necho rounded_avg(6,\
    \ 7);\necho \"\\n\";\necho rounded_avg(7, 6);\necho \"\\n\";\necho rounded_avg(7,\
    \ 7);\necho \"\\n\";\necho rounded_avg(7, 8);\necho \"\\n\";\necho rounded_avg(8,\
    \ 7);\necho \"\\n\";\necho rounded_avg(8, 8);\necho \"\\n\";\necho rounded_avg(8,\
    \ 9);\necho \"\\n\";\necho rounded_avg(9, 8);\necho \"\\n\";\necho rounded_avg(9,\
    \ 9);\necho \"\\n\";\necho rounded_avg(9, 10);\necho \"\\n\";\necho rounded_avg(10,\
    \ 9);\necho \"\\n\";\necho rounded_avg(10, 10);\necho \"\\n\";\necho rounded_avg(10,\
    \ 11);\necho \"\\n\";\necho rounded_avg(11, 10);\necho \"\\n\";\necho rounded_avg(11,\
    \ 11);\necho \"\\n\";\necho rounded_avg(11, 12);\necho \"\\n\";\necho rounded_avg(12,\
    \ 11);\necho \"\\n\";\necho rounded_avg(12, 12);\necho \"\\n\";\necho rounded_avg(12,\
    \ 13);\necho \"\\n\";\necho rounded_avg(13, 12);\necho \"\\n\";\necho rounded_avg(13,\
    \ 13);\necho \"\\n\";\necho rounded_avg(13, 14\nfunction candidate(...$args) {\n\
    \    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjzye6z3u.php on line 72

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(2, 5);\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzz8eiw6z.php:25\n\
    Stack trace:\n#0 /tmp/tmpzz8eiw6z.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzz8eiw6z.php\
    \ on line 25\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\\
    n\"; // \"101\"\necho rounded_avg(2, 5) . \"\\n\"; // \"110\"\necho rounded_avg(1,\
    \ 10) . \"\\n\"; // \"1010\"\necho rounded_avg(1, 100) . \"\\n\"; // \"11010\"\
    \necho rounded_avg(1, 1000) . \"\\n\"; // \"1111010\"\necho rounded_avg(1, 10000)\
    \ . \"\\n\"; // \"100111010\"\necho rounded_avg(1, 100000) . \"\\n\"; // \"10101111010\"\
    \necho rounded_avg(1, 1000000) . \"\\n\"; // \"11010101111010\"\necho rounded_avg(1,\
    \ 10000000) . \"\\n\"; // \"10011010101111010\"\necho rounded_avg(1, 100000000)\
    \ . \"\\n\"; // \"1010111010101111010\"\necho rounded_avg(1, 1000000000) . \"\\\
    n\"; // \"11010101110101111010\"\necho rounded_avg(1, 10000000000) . \"\\n\";\
    \ // \"10011010101110101111010\"\necho rounded_avg(1, 100000000000) . \"\\n\"\
    ; // \"1010111010101110101111010\"\necho rounded_avg(1, 1000000000000) . \"\\\
    n\"; // \"1101010111010101110101111010\"\necho rounded_avg(1, 10000000000000)\
    \ . \"\\n\"; // \"1001101010111010101110101111010\"\necho rounded_avg(1, 100000000000000)\
    \ . \"\\n\"; // \"101011101010111010101110101111010\"\necho rounded_av\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp33dq_6nj.php on line 36

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    $avg = round(($n + $m) / 2);\n    return $avg;\n}\n\necho rounded_avg(10,\
    \ 20);\necho \"\\n\";\necho rounded_avg(20, 10);\necho \"\\n\";\necho rounded_avg(20,\
    \ 20);\necho \"\\n\";\necho rounded_avg(20, 30);\necho \"\\n\";\necho rounded_avg(30,\
    \ 20);\necho \"\\n\";\necho rounded_avg(30, 30);\necho \"\\n\";\necho rounded_avg(30,\
    \ 40);\necho \"\\n\";\necho rounded_avg(40, 30);\necho \"\\n\";\necho rounded_avg(40,\
    \ 40);\necho \"\\n\";\necho rounded_avg(40, 50);\necho \"\\n\";\necho rounded_avg(50,\
    \ 40);\necho \"\\n\";\necho rounded_avg(50, 50);\necho \"\\n\";\necho rounded_avg(50,\
    \ 60);\necho \"\\n\";\necho rounded_avg(60, 50);\necho \"\\n\";\necho rounded_avg(60,\
    \ 60);\necho \"\\n\";\necho rounded_avg(60, 70);\necho \"\\n\";\necho rounded_avg(70,\
    \ 60);\necho \"\\n\";\necho rounded_avg(70, 70);\necho \"\\n\";\necho rounded_avg(70,\
    \ 80);\necho \"\\n\";\necho rounded_avg(80, 70);\necho \"\\n\";\necho rounded_avg(80,\
    \ 80);\necho \"\\n\";\necho rounded_avg(80, 90);\necho \"\\n\";\necho rounded_avg(90,\
    \ 80);\necho \"\\n\";\necho rounded_avg(90, 90);\necho \"\\n\";\necho rounded_avg(90,\
    \ 100);\necho \"\\n\";\necho rounded_avg(100, 90);\necho \"\\n\";\necho rounded_avg(100,\
    \ 100);\necho \"\\n\";\necho rounded_avg(100, 110);\necho \"\\n\";\necho rounded_avg(110,\
    \ 100);\necho \"\\n\";\necho rounded_avg(110, 110);\necho \"\\n\";\necho rounded_av\n\
    function candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpcsqdybh0.php on line 73

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpigd3zttr.php:24\n\
    Stack trace:\n#0 /tmp/tmpigd3zttr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpigd3zttr.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 2);\necho\
    \ \"\\n\";\necho rounded_avg(1, 3);\necho \"\\n\";\necho rounded_avg(1, 4);\n\
    echo \"\\n\";\necho rounded_avg(1, 5);\necho \"\\n\";\necho rounded_avg(1, 6);\n\
    echo \"\\n\";\necho rounded_avg(1, 7);\necho \"\\n\";\necho rounded_avg(1, 8);\n\
    echo \"\\n\";\necho rounded_avg(1, 9);\necho \"\\n\";\necho rounded_avg(1, 10);\n\
    echo \"\\n\";\necho rounded_avg(1, 11);\necho \"\\n\";\necho rounded_avg(1, 12);\n\
    echo \"\\n\";\necho rounded_avg(1, 13);\necho \"\\n\";\necho rounded_avg(1, 14);\n\
    echo \"\\n\";\necho rounded_avg(1, 15);\necho \"\\n\";\necho rounded_avg(1, 16);\n\
    echo \"\\n\";\necho rounded_avg(1, 17);\necho \"\\n\";\necho rounded_avg(1, 18);\n\
    echo \"\\n\";\necho rounded_avg(1, 19);\necho \"\\n\";\necho rounded_avg(1, 20);\n\
    echo \"\\n\";\necho rounded_avg(1, 21);\necho \"\\n\";\necho rounded_avg(1, 22);\n\
    echo \"\\n\";\necho rounded_avg(1, 23);\necho \"\\n\";\necho rounded_avg(1, 24);\n\
    echo \"\\n\";\necho rounded_avg(1, 25);\necho \"\\n\";\necho rounded_avg(1, 26);\n\
    echo \"\\n\";\necho rounded_avg(1, 27);\necho \"\\n\";\necho rounded_avg(1, 28\n\
    function candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp2e2nm7d8.php on line 72

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = $sum / ($m - $n + 1);\n  $rounded\
    \ = round($avg);\n  return decbin($rounded);\n}\n\necho rounded_avg(1, 5) . \"\
    \\n\";\necho rounded_avg(5, 1) . \"\\n\";\necho rounded_avg(5, 5) . \"\\n\";\n\
    echo rounded_avg(5, 6) . \"\\n\";\necho rounded_avg(5, 7) . \"\\n\";\necho rounded_avg(5,\
    \ 8) . \"\\n\";\necho rounded_avg(5, 9) . \"\\n\";\necho rounded_avg(5, 10) .\
    \ \"\\n\";\necho rounded_avg(5, 11) . \"\\n\";\necho rounded_avg(5, 12) . \"\\\
    n\";\necho rounded_avg(5, 13) . \"\\n\";\necho rounded_avg(5, 14) . \"\\n\";\n\
    echo rounded_avg(5, 15) . \"\\n\";\necho rounded_avg(5, 16) . \"\\n\";\necho rounded_avg(5,\
    \ 17) . \"\\n\";\necho rounded_avg(5, 18) . \"\\n\";\necho rounded_avg(5, 19)\
    \ . \"\\n\";\necho rounded_avg(5, 20) . \"\\n\";\necho rounded_avg(5, 21) . \"\
    \\n\";\necho rounded_avg(5, 22) . \"\\n\";\necho rounded_avg(5, 23) . \"\\n\"\
    ;\necho rounded_avg(5, 24) . \"\\n\";\necho rounded_avg(5, 25) . \"\\n\";\necho\
    \ rounded_avg(5, 26) . \"\\n\";\necho rounded_avg(5, 27) . \"\\n\";\necho rounded_avg(5,\
    \ 28) . \"\\n\";\necho rounded_avg(5, 29) . \"\\n\";\necho rounded_avg(5, 30)\
    \ . \"\\\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpsu67ibc6.php on line 53

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(1, 2); // 1\necho rounded_avg(1,\
    \ 3); // 10\necho rounded_avg(1, 4); // 11\necho rounded_avg(1, 5); // 100\necho\
    \ rounded_avg(1, 6); // 101\necho rounded_avg(1, 7); // 110\necho rounded_avg(1,\
    \ 8); // 111\necho rounded_avg(1, 9); // 1000\necho rounded_avg(1, 10); // 1001\n\
    echo rounded_avg(1, 11); // 1010\necho rounded_avg(1, 12); // 1011\necho rounded_avg(1,\
    \ 13); // 1100\necho rounded_avg(1, 14); // 1101\necho rounded_avg(1, 15); //\
    \ 1110\necho rounded_avg(1, 16); // 1111\necho rounded_avg(1, 17); // 10000\n\
    echo rounded_avg(1, 18); // 10001\necho rounded_avg(1, 19); // 10010\necho rounded_avg(1,\
    \ 20); // 10011\necho rounded_avg(1, 21); // 10100\necho rounded_avg(1, 22); //\
    \ 10101\necho rounded_avg(1, 23); // 10110\necho rounded_avg(1, 24); // 10111\n\
    echo rounded_avg(1, 25); // 11000\necho rounded_avg(1, 26); // 11001\necho rounded_avg(1,\
    \ 27); // 11010\necho rounded_avg(1, 28); // 11011\necho rounded_avg(1, 29); //\
    \ 11100\necho rounded_avg(1, 30); // 11101\necho rounded_avg(1, 31); // 11110\n\
    echo rounded_avg(1, 32); // 11111\necho\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpd34ogmv4.php on line 51

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(1, 5);\necho \"\\n\";\necho rounded_avg(5,\
    \ 1);\necho \"\\n\";\necho rounded_avg(1, 1);\necho \"\\n\";\necho rounded_avg(1,\
    \ 2);\necho \"\\n\";\necho rounded_avg(1, 3);\necho \"\\n\";\necho rounded_avg(1,\
    \ 4);\necho \"\\n\";\necho rounded_avg(1, 5);\necho \"\\n\";\necho rounded_avg(1,\
    \ 6);\necho \"\\n\";\necho rounded_avg(1, 7);\necho \"\\n\";\necho rounded_avg(1,\
    \ 8);\necho \"\\n\";\necho rounded_avg(1, 9);\necho \"\\n\";\necho rounded_avg(1,\
    \ 10);\necho \"\\n\";\necho rounded_avg(1, 11);\necho \"\\n\";\necho rounded_avg(1,\
    \ 12);\necho \"\\n\";\necho rounded_avg(1, 13);\necho \"\\n\";\necho rounded_avg(1,\
    \ 14);\necho \"\\n\";\necho rounded_avg(1, 15);\necho \"\\n\";\necho rounded_avg(1,\
    \ 16);\necho \"\\n\";\necho rounded_avg(1, 17);\necho \"\\n\";\necho rounded_avg(1,\
    \ 18);\necho \"\\n\";\necho rounded_avg(1, 19);\necho \"\\n\";\necho rounded_avg(1,\
    \ 20);\necho \"\\n\";\necho rounded_avg(1, 21);\necho \"\\n\";\necho rounded_avg(1,\
    \ 22);\necho \"\\n\";\necho rounded_avg(1, 23);\necho \"\\n\";\necho rounded_avg(1,\
    \ 24);\necho \"\\n\";\necho rounded_avg(1, 25\nfunction candidate(...$args) {\n\
    \    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpy_8wrqjh.php on line 72

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $avg = $sum / ($m - $n + 1);\n    return round($avg);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz_dwbj4o.php:21\n\
    Stack trace:\n#0 /tmp/tmpz_dwbj4o.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpz_dwbj4o.php\
    \ on line 21\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5); // 3\n\
    echo rounded_avg(4, 7); // 5\necho rounded_avg(1, 10); // 5\necho rounded_avg(1,\
    \ 1); // 1\necho rounded_avg(1, 2); // 1\necho rounded_avg(2, 2); // 1\necho rounded_avg(2,\
    \ 1); // -1\necho rounded_avg(1, -1); // -1\necho rounded_avg(1, 0); // -1\necho\
    \ rounded_avg(0, 0); // 0\necho rounded_avg(0, 1); // 0\necho rounded_avg(0, 2);\
    \ // 1\necho rounded_avg(0, 3); // 1\necho rounded_avg(0, 4); // 2\necho rounded_avg(0,\
    \ 5); // 2\necho rounded_avg(0, 6); // 3\necho rounded_avg(0, 7); // 3\necho rounded_avg(0,\
    \ 8); // 4\necho rounded_avg(0, 9); // 4\necho rounded_avg(0, 10); // 5\necho\
    \ rounded_avg(0, 11); // 5\necho rounded_avg(0, 12); // 6\necho rounded_avg(0,\
    \ 13); // 6\necho rounded_avg(0, 14); // 7\necho rounded_avg(0, 15); // 7\necho\
    \ rounded_avg(0, 16); // 8\necho rounded_avg(0, 17); // 8\necho rounded_avg(0,\
    \ 18); // 9\necho rounded_avg(0, 19); // 9\necho rounded_avg(0, 20); // 10\necho\
    \ rounded_avg(0, 21); // 10\necho rounded_avg(0, 22); // 11\necho rounded_avg\n\
    function candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwy1cvtha.php on line 52

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = $sum / ($m - $n + 1);\n  return\
    \ decbin(round($avg));\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsnxto18w.php:24\n\
    Stack trace:\n#0 /tmp/tmpsnxto18w.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsnxto18w.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 2) . PHP_EOL;\
    \ // 1\necho rounded_avg(1, 3) . PHP_EOL; // 2\necho rounded_avg(1, 4) . PHP_EOL;\
    \ // 2\necho rounded_avg(1, 5) . PHP_EOL; // 3\necho rounded_avg(1, 6) . PHP_EOL;\
    \ // 3\necho rounded_avg(1, 7) . PHP_EOL; // 4\necho rounded_avg(1, 8) . PHP_EOL;\
    \ // 4\necho rounded_avg(1, 9) . PHP_EOL; // 5\necho rounded_avg(1, 10) . PHP_EOL;\
    \ // 5\necho rounded_avg(1, 11) . PHP_EOL; // 6\necho rounded_avg(1, 12) . PHP_EOL;\
    \ // 6\necho rounded_avg(1, 13) . PHP_EOL; // 7\necho rounded_avg(1, 14) . PHP_EOL;\
    \ // 7\necho rounded_avg(1, 15) . PHP_EOL; // 8\necho rounded_avg(1, 16) . PHP_EOL;\
    \ // 8\necho rounded_avg(1, 17) . PHP_EOL; // 9\necho rounded_avg(1, 18) . PHP_EOL;\
    \ // 9\necho rounded_avg(1, 19) . PHP_EOL; // 10\necho rounded_avg(1, 20) . PHP_EOL;\
    \ // 10\necho rounded_avg(1, 21) . PHP_EOL; // 11\necho rounded_avg(1, 22) . PHP_EOL;\
    \ // 11\necho rounded_avg(1, 23) . PHP_EOL; // 12\necho rounded_avg(1\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpw5npmy1t.php on line 42

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(3, 7); // 5\n\
    echo rounded_avg(5, 5); // 5\necho rounded_avg(5, 6); // 6\necho rounded_avg(5,\
    \ 7); // 6\necho rounded_avg(5, 8); // 7\necho rounded_avg(5, 9); // 7\necho rounded_avg(5,\
    \ 10); // 8\necho rounded_avg(5, 11); // 8\necho rounded_avg(5, 12); // 9\necho\
    \ rounded_avg(5, 13); // 9\necho rounded_avg(5, 14); // 10\necho rounded_avg(5,\
    \ 15); // 10\necho rounded_avg(5, 16); // 11\necho rounded_avg(5, 17); // 11\n\
    echo rounded_avg(5, 18); // 12\necho rounded_avg(5, 19); // 12\necho rounded_avg(5,\
    \ 20); // 13\necho rounded_avg(5, 21); // 13\necho rounded_avg(5, 22); // 14\n\
    echo rounded_avg(5, 23); // 14\necho rounded_avg(5, 24); // 15\necho rounded_avg(5,\
    \ 25); // 15\necho rounded_avg(5, 26); // 16\necho rounded_avg(5, 27); // 16\n\
    echo rounded_avg(5, 28); // 17\necho rounded_avg(5, 29); // 17\necho rounded_avg(5,\
    \ 30); // 18\necho rounded_avg(5, 31); // 18\necho rounded_avg(5, 32); // 19\n\
    echo rounded_avg(5, 33); // 19\necho rounded_avg(5, 34); // 20\necho rounded_avg(5,\
    \ 35); // 20\necho rounded_avg(5, 36\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp0zsjp_yd.php on line 52

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpigd3zttr.php:24\n\
    Stack trace:\n#0 /tmp/tmpigd3zttr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpigd3zttr.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5);\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjfj3uauu.php:25\n\
    Stack trace:\n#0 /tmp/tmpjfj3uauu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjfj3uauu.php\
    \ on line 25\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) return -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n   \
    \ return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0h_358u_.php:22\n\
    Stack trace:\n#0 /tmp/tmp0h_358u_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0h_358u_.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpigd3zttr.php:24\n\
    Stack trace:\n#0 /tmp/tmpigd3zttr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpigd3zttr.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m -\
    \ $n + 1);\n    $rounded = round($avg);\n    return decbin($rounded);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphd67rl1l.php:25\n\
    Stack trace:\n#0 /tmp/tmphd67rl1l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphd67rl1l.php\
    \ on line 25\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) return -1;\n  $avg = round(($n + $m) / 2);\n  return decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkya9dti0.php:18\n\
    Stack trace:\n#0 /tmp/tmpkya9dti0.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkya9dti0.php\
    \ on line 18\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\nfunction candidate(...$args) {\n\
    \    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpijeywm_s.php:23\n\
    Stack trace:\n#0 /tmp/tmpijeywm_s.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpijeywm_s.php\
    \ on line 23\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpigd3zttr.php:24\n\
    Stack trace:\n#0 /tmp/tmpigd3zttr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpigd3zttr.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  $avg = round(($n + $m) / 2);\n  return $avg;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp437tn0hf.php:17\n\
    Stack trace:\n#0 /tmp/tmp437tn0hf.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp437tn0hf.php\
    \ on line 17\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 2); // 1\n\
    echo rounded_avg(1, 3); // 2\necho rounded_avg(1, 4); // 2\necho rounded_avg(1,\
    \ 5); // 3\necho rounded_avg(1, 6); // 3\necho rounded_avg(1, 7); // 4\necho rounded_avg(1,\
    \ 8); // 4\necho rounded_avg(1, 9); // 5\necho rounded_avg(1, 10); // 5\necho\
    \ rounded_avg(1, 11); // 6\necho rounded_avg(1, 12); // 6\necho rounded_avg(1,\
    \ 13); // 7\necho rounded_avg(1, 14); // 7\necho rounded_avg(1, 15); // 8\necho\
    \ rounded_avg(1, 16); // 8\necho rounded_avg(1, 17); // 9\necho rounded_avg(1,\
    \ 18); // 9\necho rounded_avg(1, 19); // 10\necho rounded_avg(1, 20); // 10\n\
    echo rounded_avg(1, 21); // 11\necho rounded_avg(1, 22); // 11\necho rounded_avg(1,\
    \ 23); // 12\necho rounded_avg(1, 24); // 12\necho rounded_avg(1, 25); // 13\n\
    echo rounded_avg(1, 26); // 13\necho rounded_avg(1, 27); // 14\necho rounded_avg(1,\
    \ 28); // 14\necho rounded_avg(1, 29); // 15\necho rounded_avg(1, 30); // 15\n\
    echo rounded_avg(1, 31); // 16\necho rounded_avg(1, 32); // 16\necho rounded_avg(1,\
    \ 33); // 17\necho rounded_avg(1, 34\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmppaz6l_to.php on line 52

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m -\
    \ $n + 1);\n    $rounded = round($avg);\n    return decbin($rounded);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphd67rl1l.php:25\n\
    Stack trace:\n#0 /tmp/tmphd67rl1l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphd67rl1l.php\
    \ on line 25\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 2);\necho\
    \ \"\\n\";\necho rounded_avg(2, 3);\necho \"\\n\";\necho rounded_avg(3, 4);\n\
    echo \"\\n\";\necho rounded_avg(4, 5);\necho \"\\n\";\necho rounded_avg(5, 6);\n\
    echo \"\\n\";\necho rounded_avg(6, 7);\necho \"\\n\";\necho rounded_avg(7, 8);\n\
    echo \"\\n\";\necho rounded_avg(8, 9);\necho \"\\n\";\necho rounded_avg(9, 10);\n\
    echo \"\\n\";\necho rounded_avg(10, 11);\necho \"\\n\";\necho rounded_avg(11,\
    \ 12);\necho \"\\n\";\necho rounded_avg(12, 13);\necho \"\\n\";\necho rounded_avg(13,\
    \ 14);\necho \"\\n\";\necho rounded_avg(14, 15);\necho \"\\n\";\necho rounded_avg(15,\
    \ 16);\necho \"\\n\";\necho rounded_avg(16, 17);\necho \"\\n\";\necho rounded_avg(17,\
    \ 18);\necho \"\\n\";\necho rounded_avg(18, 19);\necho \"\\n\";\necho rounded_avg(19,\
    \ 20);\necho \"\\n\";\necho rounded_avg(20, 21);\necho \"\\n\";\necho rounded_avg(21,\
    \ 22);\necho \"\\n\";\necho rounded_avg(22, 23);\necho \"\\n\";\necho rounded_avg(23,\
    \ 24);\necho \"\\n\";\necho rounded_avg(24, 25);\necho \"\\n\";\necho rounded_avg(25,\
    \ 26);\necho \"\\n\";\necho rounded_avg(26, 27);\necho \"\\n\";\necho rounded_avg(27,\
    \ 28\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp7_7pp0w5.php on line 72

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) return -1;\n    $avg = round(($n + $m) / 2);\n    return\
    \ decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuxk0mjk_.php:18\n\
    Stack trace:\n#0 /tmp/tmpuxk0mjk_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpuxk0mjk_.php\
    \ on line 18\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $avg = $sum / ($m - $n + 1);\n    $rounded = round($avg);\n    return\
    \ decbin($rounded);\n}\n\necho rounded_avg(2, 4) . \"\\n\";\necho rounded_avg(4,\
    \ 2) . \"\\n\";\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(5, 1) . \"\
    \\n\";\necho rounded_avg(1, 1) . \"\\n\";\necho rounded_avg(5, 5) . \"\\n\";\n\
    echo rounded_avg(1, 10) . \"\\n\";\necho rounded_avg(10, 1) . \"\\n\";\necho rounded_avg(1,\
    \ 100) . \"\\n\";\necho rounded_avg(100, 1) . \"\\n\";\necho rounded_avg(1, 1000)\
    \ . \"\\n\";\necho rounded_avg(1000, 1) . \"\\n\";\necho rounded_avg(1, 10000)\
    \ . \"\\n\";\necho rounded_avg(10000, 1) . \"\\n\";\necho rounded_avg(1, 100000)\
    \ . \"\\n\";\necho rounded_avg(100000, 1) . \"\\n\";\necho rounded_avg(1, 1000000)\
    \ . \"\\n\";\necho rounded_avg(1000000, 1) . \"\\n\";\necho rounded_avg(1, 10000000)\
    \ . \"\\n\";\necho rounded_avg(10000000, 1) . \"\\n\";\necho rounded_avg(1, 100000000)\
    \ . \"\\n\";\necho rounded_avg(100000000, 1) . \"\\n\";\necho rounded_avg(1, 1000000000)\
    \ . \"\\n\";\necho rounded_avg(1000000000, 1) . \"\\n\";\necho rounded_avg(1,\
    \ 10000000000) . \"\\n\";\necho rounded_avg(10000000000, 1) . \"\\n\";\necho rounded_avg(1,\
    \ 100000000000) . \"\\n\";\necho rounded_avg(100000000000, 1) . \"\\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpb8cxr8aa.php on line 50

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m -\
    \ $n + 1);\n    $rounded = round($avg);\n    return decbin($rounded);\n}\n\necho\
    \ rounded_avg(2, 5); // \"101\"\necho rounded_avg(3, 5); // \"11\"\necho rounded_avg(4,\
    \ 5); // \"10\"\necho rounded_avg(5, 5); // \"1\"\necho rounded_avg(6, 5); //\
    \ \"-1\"\necho rounded_avg(2, 4); // \"11\"\necho rounded_avg(2, 3); // \"10\"\
    \necho rounded_avg(2, 2); // \"1\"\necho rounded_avg(2, 1); // \"-1\"\necho rounded_avg(2,\
    \ 0); // \"-1\"\necho rounded_avg(2, -1); // \"-1\"\necho rounded_avg(2, -2);\
    \ // \"-1\"\necho rounded_avg(2, -3); // \"-1\"\necho rounded_avg(2, -4); // \"\
    -1\"\necho rounded_avg(2, -5); // \"-1\"\necho rounded_avg(2, -6); // \"-1\"\n\
    echo rounded_avg(2, -7); // \"-1\"\necho rounded_avg(2, -8); // \"-1\"\necho rounded_avg(2,\
    \ -9); // \"-1\"\necho rounded_avg(2, -10); // \"-1\"\necho rounded_avg(2, -11);\
    \ // \"-1\"\necho rounded_avg(2, -12); // \"-1\"\necho rounded_avg(2, -13); //\
    \ \"-1\"\necho rounded_avg(2, -14); // \"-1\"\necho rounded_avg(2, -15); // \"\
    -1\"\necho rounded_avg(2, -16); // \"-1\"\necho rounded_avg(2, -17);\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "100100101101-1111110-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1-1\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmprx77a0rg.php:52\nStack trace:\n\
    #0 /tmp/tmprx77a0rg.php(66): test()\n#1 {main}\n  thrown in /tmp/tmprx77a0rg.php\
    \ on line 52\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub53pg_d.php:24\n\
    Stack trace:\n#0 /tmp/tmpub53pg_d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub53pg_d.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m -\
    \ $n + 1);\n    return decbin(round($avg));\n}\n\necho rounded_avg(1, 5); // 11\n\
    echo rounded_avg(2, 10); // 101\necho rounded_avg(5, 5); // 101\necho rounded_avg(5,\
    \ 2); // -1\necho rounded_avg(2, 2); // 10\necho rounded_avg(2, 3); // 10\necho\
    \ rounded_avg(2, 4); // 11\necho rounded_avg(2, 5); // 11\necho rounded_avg(2,\
    \ 6); // 11\necho rounded_avg(2, 7); // 100\necho rounded_avg(2, 8); // 100\n\
    echo rounded_avg(2, 9); // 100\necho rounded_avg(2, 10); // 101\necho rounded_avg(2,\
    \ 11); // 101\necho rounded_avg(2, 12); // 101\necho rounded_avg(2, 13); // 101\n\
    echo rounded_avg(2, 14); // 101\necho rounded_avg(2, 15); // 101\necho rounded_avg(2,\
    \ 16); // 101\necho rounded_avg(2, 17); // 101\necho rounded_avg(2, 18); // 101\n\
    echo rounded_avg(2, 19); // 101\necho rounded_avg(2, 20); // 101\necho rounded_avg(2,\
    \ 21); // 101\necho rounded_avg(2, 22); // 101\necho rounded_avg(2, 23); // 101\n\
    echo rounded_avg(2, 24); // 101\necho rounded_avg(2, 25); // 101\necho rounded_avg(2,\
    \ 26); // 101\necho rounded_avg(2, 27); // 101\necho rounded_avg(2, 28); // 101\n\
    echo rounded_avg(2, 29); // 101\necho rounded_avg(2\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpg25acylu.php on line 52

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg\
    \ = round($sum / ($m - $n + 1));\n  return decbin($avg);\n}\n\necho rounded_avg(3,\
    \ 7); // 101\necho rounded_avg(10, 10); // 1010\necho rounded_avg(10, 12); //\
    \ 1011\necho rounded_avg(12, 10); // -1\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "101101010110\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsvzveyi7.php:25\n\
    Stack trace:\n#0 /tmp/tmpsvzveyi7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsvzveyi7.php\
    \ on line 25\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return decbin($avg);\n}\n\necho rounded_avg(4, 6); // 101\necho rounded_avg(4,\
    \ 5); // 100\necho rounded_avg(4, 4); // 100\necho rounded_avg(4, 3); // -1\n\
    function candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "101101100-1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpva42da9_.php:28\n\
    Stack trace:\n#0 /tmp/tmpva42da9_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpva42da9_.php\
    \ on line 28\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m)\
    \ {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum /\
    \ ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(5, 1) . PHP_EOL;\necho rounded_avg(3, 3) . PHP_EOL;\necho rounded_avg(3,\
    \ 8) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 10)\
    \ . PHP_EOL;\necho rounded_avg(20, 20) . PHP_EOL;\necho rounded_avg(20, 21) .\
    \ PHP_EOL;\necho rounded_avg(21, 20) . PHP_EOL;\necho rounded_avg(21, 21) . PHP_EOL;\n\
    echo rounded_avg(21, 22) . PHP_EOL;\necho rounded_avg(22, 21) . PHP_EOL;\necho\
    \ rounded_avg(22, 22) . PHP_EOL;\necho rounded_avg(22, 23) . PHP_EOL;\necho rounded_avg(23,\
    \ 22) . PHP_EOL;\necho rounded_avg(23, 23) . PHP_EOL;\necho rounded_avg(23, 24)\
    \ . PHP_EOL;\necho rounded_avg(24, 23) . PHP_EOL;\necho rounded_avg(24, 24) .\
    \ PHP_EOL;\necho rounded_avg(24, 25) . PHP_EOL;\necho rounded_avg(25, 24) . PHP_EOL;\n\
    echo rounded_avg(25, 25) . PHP_EOL;\necho rounded_avg(25, 26) . PHP_EOL;\necho\
    \ rounded_avg(26, 25) . PHP_EOL;\necho rounded_avg(26, 26) . PHP_EOL;\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n11\n110\n1111\n-1\n10100\n10101\n-1\n10101\n10110\n-1\n10110\n\
    10111\n-1\n10111\n11000\n-1\n11000\n11001\n-1\n11001\n11010\n-1\n11010\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpsdh2bprf.php:50\nStack trace:\n\
    #0 /tmp/tmpsdh2bprf.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpsdh2bprf.php\
    \ on line 50\n"
  timestamp: 1659730689

name: HumanEval_7_filter_by_substring
language: php
prompt: "<?php\n// Filter an input list of strings only for ones that contain given\
  \ substring\nfunction filter_by_substring($strings, $substring) {\n"
tests: "function candidate(...$args) {\n    return filter_by_substring(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"\
  asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\",\
  \ \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
  xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"),\
  \ \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["\t$filtered = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn\
    \ $filtered;\n}\n", "\t$filtered = array();\n\tforeach ($strings as $string) {\n\
    \t\tif (strpos($string, $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\
    \t\t}\n\t}\n\treturn $filtered;\n}\n", "    $filtered = array();\n    foreach\
    \ ($strings as $string) {\n        if (strpos($string, $substring) !== false)\
    \ {\n            $filtered[] = $string;\n        }\n    }\n    return $filtered;\n\
    }\n", "    $filtered = array();\n    foreach ($strings as $string) {\n       \
    \ if (strpos($string, $substring) !== false) {\n            $filtered[] = $string;\n\
    \        }\n    }\n    return $filtered;\n}\n", "    $filtered = array();\n  \
    \  foreach ($strings as $string) {\n        if (strpos($string, $substring) !==\
    \ false) {\n            $filtered[] = $string;\n        }\n    }\n    return $filtered;\n\
    }\n", "    $filtered = array();\n    foreach ($strings as $string) {\n       \
    \ if (strpos($string, $substring) !== false) {\n            $filtered[] = $string;\n\
    \        }\n    }\n    return $filtered;\n}\n", "    $filtered = array();\n  \
    \  foreach ($strings as $string) {\n        if (strpos($string, $substring) !==\
    \ false) {\n            $filtered[] = $string;\n        }\n    }\n    return $filtered;\n\
    }\n", "    $filtered = array();\n    foreach ($strings as $string) {\n       \
    \ if (strpos($string, $substring) !== false) {\n            $filtered[] = $string;\n\
    \        }\n    }\n    return $filtered;\n}\n", "    $filtered = array();\n  \
    \  foreach ($strings as $string) {\n        if (strpos($string, $substring) !==\
    \ false) {\n            $filtered[] = $string;\n        }\n    }\n    return $filtered;\n\
    }\n", "\t$filtered = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn\
    \ $filtered;\n}\n", "    $filtered = array();\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n", "\t$filtered = array();\n\
    \tforeach ($strings as $string) {\n\t\tif (strpos($string, $substring) !== false)\
    \ {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "  \
    \  $filtered = array();\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $filtered[] = $string;\n        }\n  \
    \  }\n    return $filtered;\n}\n", "    $filtered = array();\n    foreach ($strings\
    \ as $string) {\n        if (strpos($string, $substring) !== false) {\n      \
    \      $filtered[] = $string;\n        }\n    }\n    return $filtered;\n}\n",
  "    $filtered = array();\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $filtered[] = $string;\n        }\n  \
    \  }\n    return $filtered;\n}\n", "\t$filtered = array();\n\tforeach ($strings\
    \ as $string) {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$filtered[]\
    \ = $string;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n", "\t$filtered = array();\n\tforeach ($strings as $string) {\n\
    \t\tif (strpos($string, $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\
    \t\t}\n\t}\n\treturn $filtered;\n}\n", "\t$filtered = array();\n\tforeach ($strings\
    \ as $string) {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$filtered[]\
    \ = $string;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

language: php
name: HumanEval_161_solve
results:
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $str = '';\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            if (ctype_upper($s[$i])) {\n                $str .= strtolower($s[$i]);\n\
    \            } else {\n                $str .= strtoupper($s[$i]);\n         \
    \   }\n        } else {\n            $str .= $s[$i];\n        }\n    }\n    return\
    \ $str;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2qm_8ea4.php:30\n\
    Stack trace:\n#0 /tmp/tmp2qm_8ea4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp2qm_8ea4.php\
    \ on line 30\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    if (preg_match('/[a-z]/',\
    \ $s)) {\n        return strtolower($s);\n    }\n    if (preg_match('/[A-Z]/',\
    \ $s)) {\n        return strtoupper($s);\n    }\n    return strrev($s);\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmu5lwo4o.php:23\n\
    Stack trace:\n#0 /tmp/tmpmu5lwo4o.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmu5lwo4o.php\
    \ on line 23\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters .= strtoupper($letters);\n\
    \    $letters = str_split($letters);\n    $s = str_split($s);\n    foreach ($s\
    \ as $char) {\n        if (in_array($char, $letters)) {\n            $result .=\
    \ strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n      \
    \  } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpufhc9r7h.php:30\n\
    Stack trace:\n#0 /tmp/tmpufhc9r7h.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpufhc9r7h.php\
    \ on line 30\n"
  timestamp: 1659978248
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters = str_split($letters);\n   \
    \ $letters2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    $letters2 = str_split($letters2);\n\
    \    $s = str_split($s);\n    $new = [];\n    $count = 0;\n    foreach($s as $char){\n\
    \        if(in_array($char, $letters)){\n            $count++;\n            $new[]\
    \ = strtoupper($char);\n        } else if(in_array($char, $letters2)){\n     \
    \       $count++;\n            $new[] = strtolower($char);\n        } else {\n\
    \            $new[] = $char;\n        }\n    }\n    if($count == 0){\n       \
    \ return strrev(implode(\"\", $new));\n    }\n    return implode(\"\", $new);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpv6_or2s1.php on line 44


    Warning: Undefined variable $A in /tmp/tmpv6_or2s1.php on line 44

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6mco9ti.php:26\n\
    Stack trace:\n#0 /tmp/tmpn6mco9ti.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn6mco9ti.php\
    \ on line 26\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = array_filter($s, function($v) {\n        return ctype_alpha($v);\n\
    \    });\n    if(empty($letters)) {\n        return strrev($s);\n    }\n    $s\
    \ = array_map(function($v) {\n        return ctype_alpha($v) ? strtolower($v)\
    \ == $v ? strtoupper($v) : strtolower($v) : $v;\n    }, $s);\n    return implode('',\
    \ $s);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strrev(): Argument #1 ($string) must\
    \ be of type string, array given in /tmp/tmp4_dxpsrr.php:14\nStack trace:\n#0\
    \ /tmp/tmp4_dxpsrr.php(14): strrev(Array)\n#1 /tmp/tmp4_dxpsrr.php(23): solve(Array)\n\
    #2 /tmp/tmp4_dxpsrr.php(28): candidate('1234')\n#3 /tmp/tmp4_dxpsrr.php(37): test()\n\
    #4 {main}\n  thrown in /tmp/tmp4_dxpsrr.php on line 14\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n    $letters\
    \ = array_merge($letters, array_map('strtoupper', $letters));\n    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (in_array($char, $letters))\
    \ {\n            if (ctype_lower($char)) {\n                $result[] = strtoupper($char);\n\
    \            } else {\n                $result[] = strtolower($char);\n      \
    \      }\n        } else {\n            $result[] = $char;\n        }\n    }\n\
    \    return implode('', $result);\n}\n\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xa638w5.php:34\n\
    Stack trace:\n#0 /tmp/tmp2xa638w5.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2xa638w5.php\
    \ on line 34\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n\
    \    $letters = array_merge($letters, array_map('strtoupper', $letters));\n  \
    \  $letters = array_flip($letters);\n    $s = str_split($s);\n    foreach ($s\
    \ as $char) {\n        if (isset($letters[$char])) {\n            $result .= $char\
    \ === strtolower($char) ? strtoupper($char) : strtolower($char);\n        } else\
    \ {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmbiempvn.php:31\n\
    Stack trace:\n#0 /tmp/tmpmbiempvn.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpmbiempvn.php\
    \ on line 31\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $res = [];\n    $letters = [];\n    foreach ($s as $key => $value) {\n  \
    \      if (ctype_alpha($value)) {\n            $letters[] = $value;\n        }\
    \ else {\n            $res[] = $value;\n        }\n    }\n    if (count($letters)\
    \ === 0) {\n        return strrev(implode('', $res));\n    }\n    foreach ($s\
    \ as $key => $value) {\n        if (ctype_alpha($value)) {\n            $res[]\
    \ = strtolower($value) === $value ? strtoupper(array_pop($letters)) : strtolower(array_pop($letters));\n\
    \        }\n    }\n    return implode('', $res);\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns_6xktc.php:35\n\
    Stack trace:\n#0 /tmp/tmpns_6xktc.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpns_6xktc.php\
    \ on line 35\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7p8d2l2_.php:27\n\
    Stack trace:\n#0 /tmp/tmp7p8d2l2_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7p8d2l2_.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result[] = strtoupper($char) == $char ? strtolower($char) :\
    \ strtoupper($char);\n        } else {\n            $result[] = $char;\n     \
    \   }\n    }\n    return implode('', $result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6uhb8tta.php:27\n\
    Stack trace:\n#0 /tmp/tmp6uhb8tta.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6uhb8tta.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n\
    \    $letters = array_merge($letters, array_map('strtoupper', $letters));\n  \
    \  $letters = array_flip($letters);\n    $s = str_split($s);\n    foreach ($s\
    \ as $char) {\n        if (isset($letters[$char])) {\n            $result .= $char\
    \ == strtoupper($char) ? strtolower($char) : strtoupper($char);\n        } else\
    \ {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2dnfe70e.php:31\n\
    Stack trace:\n#0 /tmp/tmp2dnfe70e.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2dnfe70e.php\
    \ on line 31\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6mco9ti.php:26\n\
    Stack trace:\n#0 /tmp/tmpn6mco9ti.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn6mco9ti.php\
    \ on line 26\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = '';\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result .= strtolower($char) === $char ? strtoupper($char) :\
    \ strtolower($char);\n        } else {\n            $result .= $char;\n      \
    \  }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp60j1_13o.php:27\n\
    Stack trace:\n#0 /tmp/tmp60j1_13o.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp60j1_13o.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters = str_split($letters);\n   \
    \ $letters = array_merge($letters, array_map(\"strtoupper\", $letters));\n   \
    \ $s = str_split($s);\n    $result = [];\n    foreach ($s as $char) {\n      \
    \  if (in_array($char, $letters)) {\n            $result[] = strtolower($char)\
    \ == $char ? strtoupper($char) : strtolower($char);\n        } else {\n      \
    \      $result[] = $char;\n        }\n    }\n    return implode(\"\", $result);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz1ylaxhx.php:30\n\
    Stack trace:\n#0 /tmp/tmpz1ylaxhx.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpz1ylaxhx.php\
    \ on line 30\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $key;\n        }\n    }\n    if (empty($letters))\
    \ {\n        return strrev($s);\n    }\n    foreach ($letters as $key => $value)\
    \ {\n        if (ctype_upper($s[$value])) {\n            $s[$value] = strtolower($s[$value]);\n\
    \        } else {\n            $s[$value] = strtoupper($s[$value]);\n        }\n\
    \    }\n    return implode($s);\n}\n\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strrev(): Argument #1 ($string) must\
    \ be of type string, array given in /tmp/tmpcm3jj8s2.php:17\nStack trace:\n#0\
    \ /tmp/tmpcm3jj8s2.php(17): strrev(Array)\n#1 /tmp/tmpcm3jj8s2.php(30): solve(Array)\n\
    #2 /tmp/tmpcm3jj8s2.php(35): candidate('1234')\n#3 /tmp/tmpcm3jj8s2.php(44): test()\n\
    #4 {main}\n  thrown in /tmp/tmpcm3jj8s2.php on line 17\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = [];\n    $hasLetters = false;\n    foreach ($letters\
    \ as $letter) {\n        if (ctype_alpha($letter)) {\n            $hasLetters\
    \ = true;\n            if (ctype_lower($letter)) {\n                $result[]\
    \ = strtoupper($letter);\n            } else {\n                $result[] = strtolower($letter);\n\
    \            }\n        } else {\n            $result[] = $letter;\n        }\n\
    \    }\n    if ($hasLetters) {\n        return implode('', $result);\n    } else\
    \ {\n        return strrev($s);\n    }\n}\n\necho solve('Hello World');\necho\
    \ solve('Hello-LOL');\necho solve('Sup DUDE!!?');\necho solve('12345');\necho\
    \ solve('123456789');\necho solve('123456789a');\necho solve('123456789A');\n\
    echo solve('123456789aA');\necho solve('123456789aAa');\necho solve('123456789aAaA');\n\
    echo solve('123456789aAaAa');\necho solve('123456789aAaAaA');\necho solve('123456789aAaAaAa');\n\
    echo solve('123456789aAaAaAaA');\necho solve('123456789aAaAaAaAa');\necho solve('123456789aAaAaAaAaA');\n\
    echo solve('123456789aAaAaAaAaAa');\necho solve('123456789aAaAaAaAaAaA');\necho\
    \ solve('123456789aAaAaAaAaAaAa');\necho solve('123456789aAaAaAaAaAaAaA');\necho\
    \ solve('123456789aAaAaAaAaAaAaAa');\necho solve('123456789aAaAaAaAaAaAaAaA');\n\
    echo solve('123456789aAaAaAaAaA\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "123456789aAaAaAaAaA" in
    /tmp/tmptfa4zp18.php on line 53

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $res = [];\n    $letters = [];\n    foreach ($s as $key => $value) {\n  \
    \      if (ctype_alpha($value)) {\n            $letters[] = $value;\n        }\
    \ else {\n            $res[] = $value;\n        }\n    }\n    if (count($letters)\
    \ == 0) {\n        return strrev(implode($res));\n    }\n    foreach ($letters\
    \ as $key => $value) {\n        if (ctype_lower($value)) {\n            $res[]\
    \ = strtoupper($value);\n        } else {\n            $res[] = strtolower($value);\n\
    \        }\n    }\n    return implode($res);\n}\n\necho solve(\"abc\"); // \"\
    ABC\"\necho solve(\"abcABC123\"); // \"ABCabc123\"\necho solve(\"abcABC123!@\u20AC\
    \xA3#$%^&*()_-+=}{[]|\\':;?/>.<,~\"); // \"ABCabc123!@\u20AC\xA3#$%^&*()_-+=}{[]|\\\
    ':;?/>.<,~\"\necho solve(\"\"); // \"\"\necho solve(\"123456789\"); // \"987654321\"\
    \necho solve(\"abcdefghijklmnopqrstuvwxyz\"); // \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \necho solve(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"); // \"abcdefghijklmnopqrstuvwxyz\"\
    \necho solve(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"); // \"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\necho solve(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()_-+=}{[]|\\\
    ':;?/>.<,~\"); // \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopq\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ABC123ABCabc123!@\u20AC\xA3#$%^&*()_-+=}{[]|\\':;?/>.<,~ABCabc987654321ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()_-+=}{[]|\\\
    ':;?/>.<,~ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp1cwtf9qs.php:49\nStack trace:\n#0 /tmp/tmp1cwtf9qs.php(56):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1cwtf9qs.php on line 49\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = range('a', 'z');\n    $letters = array_merge($letters, range('A', 'Z'));\n\
    \    $letters = array_flip($letters);\n    $s = str_split($s);\n    $s = array_map(function($v)\
    \ use ($letters) {\n        if (isset($letters[$v])) {\n            return $v\
    \ === strtolower($v) ? strtoupper($v) : strtolower($v);\n        }\n        return\
    \ $v;\n    }, $s);\n    return implode('', $s);\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_xhkpupb.php:28\n\
    Stack trace:\n#0 /tmp/tmp_xhkpupb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_xhkpupb.php\
    \ on line 28\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $newString = '';\n    foreach ($letters as $letter) {\n\
    \        if (ctype_alpha($letter)) {\n            $newString .= strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $newString .= $letter;\n        }\n    }\n    return $newString;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppm1rdmyu.php:27\n\
    Stack trace:\n#0 /tmp/tmppm1rdmyu.php(36): test()\n#1 {main}\n  thrown in /tmp/tmppm1rdmyu.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            if (ctype_upper($letter)) {\n\
    \                $result[] = strtolower($letter);\n            } else {\n    \
    \            $result[] = strtoupper($letter);\n            }\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\necho solve('Hello World');\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hELLO wORLD\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zz8yv1c.php:32\n\
    Stack trace:\n#0 /tmp/tmp_zz8yv1c.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_zz8yv1c.php\
    \ on line 32\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result[] = strtoupper($char) === $char ? strtolower($char) :\
    \ strtoupper($char);\n        } else {\n            $result[] = $char;\n     \
    \   }\n    }\n    return implode('', $result);\n}\n\necho solve('Hello World');\
    \ // hELLO wORLD\necho solve('HELLO WORLD'); // hello world\necho solve('HELLOworld');\
    \ // helloWORLD\necho solve('12345'); // 12345\necho solve('1a2b3c4d5e'); // 1A2B3C4D5E\n\
    echo solve('String.with.punctuation characters!'); // sTRING.WITH.PUNCTUATION\
    \ CHARACTERS!\necho solve('DIGEST'); // digest\necho solve('AL-AZHAR'); // al-azhar\n\
    echo solve('al-azhar'); // AL-AZHAR\necho solve('CodeWars'); // cODEwARS\necho\
    \ solve('AaBbCcDdEe'); // aAbBcCdDeE\necho solve('Hello World!'); // hELLO wORLD!\n\
    echo solve('Hello World! 123'); // hELLO wORLD! 123\necho solve('Hello World!\
    \ 123!'); // hELLO wORLD! 123!\necho solve('Hello World! 123!!'); // hELLO wORLD!\
    \ 123!!\necho solve('Hello World! 123!!!'); // hELLO wORLD! 123!!!\necho solve('Hello\
    \ World! 123!!!!'); // hELLO wORLD! 123!!!!\necho solve('Hello World! 123!!!!!');\
    \ // hELLO wORLD! 123!!!!!\necho solve('Hello World! 123!!!!!!'); // hELLO wORLD!\
    \ 123!!!!!!\necho solve('Hello World! 123!!!!!!!'); // hELLO wORLD! 123!!!!!!!\n\
    echo solve('Hello World! 123!!!!!!!!'); // hELLO wORLD! 123!!!!!!!!\necho solve('Hello\
    \ World! 123!!!!!!!!!'); // hELLO wORLD! 123!!!!!!!!!\necho solve('Hello\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "Hello" in /tmp/tmpyrul9rqx.php
    on line 43

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6mco9ti.php:26\n\
    Stack trace:\n#0 /tmp/tmpn6mco9ti.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn6mco9ti.php\
    \ on line 26\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    $letters = [];\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $letters[] = $char;\n        } else {\n\
    \            $result[] = $char;\n        }\n    }\n    if (count($letters) ===\
    \ 0) {\n        return strrev(implode('', $result));\n    }\n    foreach ($result\
    \ as $char) {\n        if (ctype_alpha($char)) {\n            $letters[] = $char;\n\
    \        } else {\n            $letters[] = $char;\n        }\n    }\n    return\
    \ implode('', $letters);\n}\n\necho solve('aBcD'); // 'AbCd'\necho solve('aBcD123');\
    \ // 'AbCd123'\necho solve('123'); // '321'\necho solve('aBcDeF'); // 'AbCdEf'\n\
    echo solve('aBcDeF123'); // 'AbCdEf123'\necho solve('123aBcDeF'); // '321AbCdEf'\n\
    echo solve('123aBcDeF456'); // '321AbCdEf456'\necho solve('abcdeFGHIJklmnOPQRStuvWXYZ');\
    \ // 'ABCDefghijKLMNopqrSTUvwxyz'\necho solve('abcdeFGHIJklmnOPQRStuvWXYZ123');\
    \ // 'ABCDefghijKLMNopqrSTUvwxyz123'\necho solve('abcdeFGHIJklmnOPQRStuvWXYZ1234567890');\
    \ // 'ABCDefghijKLMNopqrSTUvwxyz1234567890'\necho solve('abcdeFGHIJklmnOPQRStuvWXYZ1234567890!@#$%^&*()_+');\
    \ // 'ABCDefghijKLMNopqrSTUvwxyz1234567890!@#$%^&*()_+'\necho solve('abcdeFGHIJklmnOPQRStuvWXYZ1234567890!@#$%^\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "abcdeFGHIJklmnOPQRStuvWXYZ1234..."
    in /tmp/tmpithjypce.php on line 43

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = \"\";\n    foreach ($letters as $letter) {\n\
    \        if (ctype_alpha($letter)) {\n            $result .= strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8bokngdx.php:27\n\
    Stack trace:\n#0 /tmp/tmp8bokngdx.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp8bokngdx.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = 'abcdefghijklmnopqrstuvwxyz';\n    $letters .= strtoupper($letters);\n   \
    \ $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) == $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n\necho solve('hello');\
    \ // 'HELLO'\necho solve('HELLO'); // 'hello'\necho solve('12345'); // '12345'\n\
    echo solve('1a2b3c4d5e'); // '1A2B3C4D5E'\necho solve('String.prototype.charAt');\
    \ // 'sTRING.PROTOTYPE.CHARAT'\necho solve(''); // ''\necho solve(' '); // ' '\n\
    echo solve('a'); // 'A'\necho solve('A'); // 'a'\necho solve('.'); // '.'\necho\
    \ solve('aA'); // 'Aa'\necho solve('ab'); // 'AB'\necho solve('aB'); // 'Ab'\n\
    echo solve('abC'); // 'ABc'\necho solve('aBc'); // 'AbC'\necho solve('aBc123');\
    \ // 'AbC123'\necho solve('aBc123!@#'); // 'AbC123!@#'\necho solve('aBc123!@#\
    \ '); // 'AbC123!@# '\necho solve('aBc123!@# $%^&*()_+'); // 'AbC123!@# $%^&*()_+'\n\
    echo solve('aBc123!@# $%^&*()_+=-'); // 'AbC123!@# $%^&*()_+=-'\necho solve('aBc123!@#\
    \ $%^&*()_+=-[]{}|;:<>,.?/'); // 'AbC\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "HELLOhello123451A2B3C4D5EsTRING.PROTOTYPE.CHARaT Aa.AaABAbABcAbCAbC123AbC123!@#AbC123!@#\
    \ AbC123!@# $%^&*()_+AbC123!@# $%^&*()_+=-AbC123!@# $%^&*()_+=-[]{}|;:<>,.?/\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp826sgb_1.php:49\nStack\
    \ trace:\n#0 /tmp/tmp826sgb_1.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp826sgb_1.php\
    \ on line 49\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve('Hello World');\necho solve('Hello-LOL');\n\
    echo solve('Sup DUDE!!?');\necho solve('12345');\necho solve('0');\necho solve('a');\n\
    echo solve('A');\necho solve('z');\necho solve('Z');\necho solve('aA');\necho\
    \ solve('zZ');\necho solve('aBcDeFg123');\necho solve('aBcDeFg123!@#$%^&*()_+');\n\
    echo solve('abcdefghijklmnopqrstuvwxyz');\necho solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ');\n\
    echo solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\necho solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890');\n\
    echo solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890-=~!@#$%^&*()_+');\n\
    echo solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890-=~!@#$%^&*()_+[]{}\\\
    \\|;:\\'\",./<>?');\necho solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890-=~!@#$%^&*()_+[]{}\\\
    \\|;:\\'\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "abcdefghijklmnopqrstuvwxyzABCD..."
    in /tmp/tmp6dhgyw21.php on line 39

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6mco9ti.php:26\n\
    Stack trace:\n#0 /tmp/tmpn6mco9ti.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn6mco9ti.php\
    \ on line 26\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    $nonLetters = [];\n    foreach ($s as $char) {\n    \
    \    if (ctype_alpha($char)) {\n            $letters[] = $char;\n        } else\
    \ {\n            $nonLetters[] = $char;\n        }\n    }\n    if (count($letters)\
    \ === 0) {\n        return strrev(implode($nonLetters));\n    }\n    $letters\
    \ = array_map(function ($char) {\n        if (ctype_upper($char)) {\n        \
    \    return strtolower($char);\n        }\n        return strtoupper($char);\n\
    \    }, $letters);\n    return implode($letters) . implode($nonLetters);\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9owely6o.php:39\n\
    Stack trace:\n#0 /tmp/tmp9owely6o.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp9owely6o.php\
    \ on line 39\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8oe_45z.php:26\n\
    Stack trace:\n#0 /tmp/tmpw8oe_45z.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpw8oe_45z.php\
    \ on line 26\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = '';\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result .= strtolower($letter)\
    \ === $letter ? strtoupper($letter) : strtolower($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n\n\
    echo solve('abcd');\necho solve('aBcD');\necho solve('aBcDe');\necho solve('aBcDeF');\n\
    echo solve('aBcDeFG');\necho solve('aBcDeFGh');\necho solve('aBcDeFGhI');\necho\
    \ solve('aBcDeFGhIJ');\necho solve('aBcDeFGhIJk');\necho solve('aBcDeFGhIJkL');\n\
    echo solve('aBcDeFGhIJkLM');\necho solve('aBcDeFGhIJkLMn');\necho solve('aBcDeFGhIJkLMnO');\n\
    echo solve('aBcDeFGhIJkLMnOp');\necho solve('aBcDeFGhIJkLMnOpQ');\necho solve('aBcDeFGhIJkLMnOpQr');\n\
    echo solve('aBcDeFGhIJkLMnOpQrS');\necho solve('aBcDeFGhIJkLMnOpQrSt');\necho\
    \ solve('aBcDeFGhIJkLMnOpQrStU');\necho solve('aBcDeFGhIJkLMnOpQrStUv');\necho\
    \ solve('aBcDeFGhIJkLMnOpQrStUvW');\necho solve('aBcDeFGhIJkLMnOpQrStUvWx');\n\
    echo solve('aBcDeFGhIJkLMnOpQrStUvWxY');\necho solve('aBcDeFGhIJkLMnOpQrStUvWxYz');\n\
    echo solve('aBcDeFGhIJkLMnOpQrStUvWxYz0123456789');\necho solve('\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "" in /tmp/tmpd8qt5y5_.php
    on line 46

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    if (ctype_alpha($s)) {\n        for ($i = 0; $i < strlen($s); $i++)\
    \ {\n            if (ctype_upper($s[$i])) {\n                $result .= strtolower($s[$i]);\n\
    \            } else {\n                $result .= strtoupper($s[$i]);\n      \
    \      }\n        }\n    } else {\n        $result = strrev($s);\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66kr0hv1.php:32\n\
    Stack trace:\n#0 /tmp/tmp66kr0hv1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp66kr0hv1.php\
    \ on line 32\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6mco9ti.php:26\n\
    Stack trace:\n#0 /tmp/tmpn6mco9ti.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn6mco9ti.php\
    \ on line 26\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $str = '';\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $str .= strtoupper($value) == $value ? strtolower($value) : strtoupper($value);\n\
    \        } else {\n            $str .= $value;\n        }\n    }\n    return $str;\n\
    }\n\necho solve(\"Hello World\");\necho solve(\"HELLO WORLD\");\necho solve(\"\
    HELLOworld\");\necho solve(\"12345\");\necho solve(\"1A2B3C4D5E\");\necho solve(\"\
    String.with.Punctuation*s\");\necho solve(\"String,with,Punctuation*s\");\necho\
    \ solve(\"String,with,Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punct\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "AsDf", expecting ")" in /tmp/tmp4idzhyha.php
    on line 57

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    $letters = [];\n    foreach ($s as $key => $value) {\n\
    \        if (ctype_alpha($value)) {\n            $letters[] = $value;\n      \
    \  } else {\n            $result[] = $value;\n        }\n    }\n    if (count($letters)\
    \ > 0) {\n        $letters = array_reverse($letters);\n        foreach ($letters\
    \ as $key => $value) {\n            $result[] = $value;\n        }\n    } else\
    \ {\n        $result = array_reverse($result);\n    }\n    return implode('',\
    \ $result);\n}\n\necho solve('aBcDeFgH'); // hGFedCBA\necho solve('aBcDeFgH');\
    \ // hGFedCBA\necho solve('aBcDeFgH'); // hGFedCBA\necho solve('aBcDeFgH'); //\
    \ hGFedCBA\necho solve('aBcDeFgH'); // hGFedCBA\necho solve('aBcDeFgH'); // hGFedCBA\n\
    echo solve('aBcDeFgH'); // hGFedCBA\necho solve('aBcDeFgH'); // hGFedCBA\necho\
    \ solve('aBcDeFgH'); // hGFedCBA\necho solve('aBcDeFgH'); // hGFedCBA\necho solve('aBcDeFgH');\
    \ // hGFedCBA\necho solve('aBcDeFgH'); // hGFedCBA\necho solve('aBcDeFgH'); //\
    \ hGFedCBA\necho solve('aBcDeFgH'); // hGFedCBA\necho solve('aBcDeFgH'); // hGFedCBA\n\
    echo solve('aBcDeFgH'); // hGFedCBA\necho solve('aBcDeFgH'); // hGFedCBA\necho\
    \ solve('aBcDeFgH'); // hGFedCBA\necho solve('aBcDeFgH'); // hGFedCBA\necho solve('aBcDeFgH\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "aBcDeFgH" in /tmp/tmp17m_jpi0.php
    on line 49

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $reversed = [];\n    foreach ($letters as $letter) {\n\
    \        if (ctype_alpha($letter)) {\n            $reversed[] = ctype_lower($letter)\
    \ ? strtoupper($letter) : strtolower($letter);\n        } else {\n           \
    \ $reversed[] = $letter;\n        }\n    }\n    return implode('', $reversed);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0qwmenpw.php:27\n\
    Stack trace:\n#0 /tmp/tmp0qwmenpw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0qwmenpw.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve('Hello World');\necho solve('Hello-LOL');\n\
    echo solve('Sup DUDE!!?');\necho solve('aBc');\necho solve('aBc12');\necho solve('aBc12?!');\n\
    echo solve('aBc12?!a');\necho solve('aBc12?!A');\necho solve('aBc12?!Aa');\necho\
    \ solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho\
    \ solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho\
    \ solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho\
    \ solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho\
    \ solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho\
    \ solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho\
    \ solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho\
    \ solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho\
    \ solve('aBc12?!Aa');\necho solve('a\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "a" in /tmp/tmpypz7m9e4.php
    on line 54

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = '';\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result .= strtolower($letter)\
    \ == $letter ? strtoupper($letter) : strtolower($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjyxmyfn4.php:27\n\
    Stack trace:\n#0 /tmp/tmpjyxmyfn4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjyxmyfn4.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            if (ctype_upper($s[$i])) {\n                $result .= strtolower($s[$i]);\n\
    \            } else {\n                $result .= strtoupper($s[$i]);\n      \
    \      }\n        } else {\n            $result .= $s[$i];\n        }\n    }\n\
    \    return $result;\n}\n\necho solve(\"Hello World\");\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hELLO wORLD\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkj568yo5.php:31\n\
    Stack trace:\n#0 /tmp/tmpkj568yo5.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpkj568yo5.php\
    \ on line 31\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n    $letters\
    \ = array_merge($letters, array_map('strtoupper', $letters));\n    $letters =\
    \ array_flip($letters);\n    $s = str_split($s);\n    $result = [];\n    foreach\
    \ ($s as $char) {\n        if (isset($letters[$char])) {\n            $result[]\
    \ = $char === strtolower($char) ? strtoupper($char) : strtolower($char);\n   \
    \     } else {\n            $result[] = $char;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo1qcb3wa.php:31\n\
    Stack trace:\n#0 /tmp/tmpo1qcb3wa.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpo1qcb3wa.php\
    \ on line 31\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $newString = \"\";\n    $hasLetters = false;\n    for ($i = 0; $i < count($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            $hasLetters = true;\n\
    \            if (ctype_upper($s[$i])) {\n                $newString .= strtolower($s[$i]);\n\
    \            } else {\n                $newString .= strtoupper($s[$i]);\n   \
    \         }\n        } else {\n            $newString .= $s[$i];\n        }\n\
    \    }\n    if ($hasLetters) {\n        return $newString;\n    } else {\n   \
    \     return strrev($newString);\n    }\n}\n\necho solve(\"abc\") . \"\\n\"; //\
    \ \"ABC\"\necho solve(\"abcABC123\") . \"\\n\"; // \"ABCabc123\"\necho solve(\"\
    CodeWars\") . \"\\n\"; // \"cODEwARS\"\necho solve(\"abcABC123!@\u20AC\xA3#$%^&*()_-+=}{[]|\\\
    ':;?/>.<,~\") . \"\\n\"; // \"ABCabc123!@\u20AC\xA3#$%^&*()_-+=}{[]|\\':;?/>.<,~\"\
    \necho solve(\"\") . \"\\n\"; // \"\"\necho solve(\"123456789\") . \"\\n\"; //\
    \ \"987654321\"\necho solve(\"abcdefghijklmnopqrstuvwxyz\") . \"\\n\"; // \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \necho solve(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") . \"\\n\"; // \"abcdefghijklmnopqrstuvwxyz\"\
    \necho solve(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\") . \"\\\
    n\"; // \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\necho solve(\"\
    abcdefghijklmnopqrstuvwxyzABCDEFGHIJK\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "AsDf", expecting ")" in /tmp/tmpqrg4hbzg.php
    on line 46

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            $result .= $s[$i] === strtolower($s[$i]) ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc4qeup31.php:28\n\
    Stack trace:\n#0 /tmp/tmpc4qeup31.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpc4qeup31.php\
    \ on line 28\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    $s = str_split($s);\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result .= strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result .= $char;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ty_stvn.php:27\n\
    Stack trace:\n#0 /tmp/tmp7ty_stvn.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7ty_stvn.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = array_filter($s, function($v) {\n        return ctype_alpha($v);\n\
    \    });\n    if (empty($letters)) {\n        return strrev($s);\n    }\n    foreach\
    \ ($s as $k => $v) {\n        if (ctype_alpha($v)) {\n            $s[$k] = strtolower($v)\
    \ === $v ? strtoupper($v) : strtolower($v);\n        }\n    }\n    return implode('',\
    \ $s);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strrev(): Argument #1 ($string) must\
    \ be of type string, array given in /tmp/tmp55_pggjt.php:14\nStack trace:\n#0\
    \ /tmp/tmp55_pggjt.php(14): strrev(Array)\n#1 /tmp/tmp55_pggjt.php(25): solve(Array)\n\
    #2 /tmp/tmp55_pggjt.php(30): candidate('1234')\n#3 /tmp/tmp55_pggjt.php(39): test()\n\
    #4 {main}\n  thrown in /tmp/tmp55_pggjt.php on line 14\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ === $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv290_lrg.php:27\n\
    Stack trace:\n#0 /tmp/tmpv290_lrg.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpv290_lrg.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve('Hello World');\necho solve('Hello-LOL');\n\
    echo solve('Sup DUDE!!?');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpyp4ahl2_.php on line 76

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $key;\n        }\n    }\n    if (count($letters)\
    \ == 0) {\n        return strrev($s);\n    }\n    foreach ($letters as $key =>\
    \ $value) {\n        if (ctype_lower($s[$value])) {\n            $s[$value] =\
    \ strtoupper($s[$value]);\n        } else {\n            $s[$value] = strtolower($s[$value]);\n\
    \        }\n    }\n    return implode($s);\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strrev(): Argument #1 ($string) must\
    \ be of type string, array given in /tmp/tmpdxhz_2e7.php:17\nStack trace:\n#0\
    \ /tmp/tmpdxhz_2e7.php(17): strrev(Array)\n#1 /tmp/tmpdxhz_2e7.php(30): solve(Array)\n\
    #2 /tmp/tmpdxhz_2e7.php(35): candidate('1234')\n#3 /tmp/tmpdxhz_2e7.php(44): test()\n\
    #4 {main}\n  thrown in /tmp/tmpdxhz_2e7.php on line 17\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    $noLetters = [];\n    foreach ($s as $char) {\n     \
    \   if (ctype_alpha($char)) {\n            $letters[] = $char;\n        } else\
    \ {\n            $noLetters[] = $char;\n        }\n    }\n    if (count($letters)\
    \ === 0) {\n        return strrev(implode('', $noLetters));\n    }\n    $letters\
    \ = array_map(function ($letter) {\n        return ctype_upper($letter) ? strtolower($letter)\
    \ : strtoupper($letter);\n    }, $letters);\n    return implode('', $letters)\
    \ . implode('', $noLetters);\n}\n\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3netjma.php:36\n\
    Stack trace:\n#0 /tmp/tmpn3netjma.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpn3netjma.php\
    \ on line 36\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $res = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $res[] = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $res[] = $char;\n        }\n    }\n    return implode('',\
    \ $res);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoag3vg87.php:27\n\
    Stack trace:\n#0 /tmp/tmpoag3vg87.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpoag3vg87.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = '';\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result .= strtolower($letter)\
    \ == $letter ? strtoupper($letter) : strtolower($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n\n\
    echo solve('abc') . PHP_EOL; // 'ABC'\necho solve('abcABC123') . PHP_EOL; // 'ABCabc123'\n\
    echo solve('CodeWars') . PHP_EOL; // 'cODEwARS'\necho solve('Hello World') . PHP_EOL;\
    \ // 'hELLO wORLD'\necho solve('HELLO WORLD') . PHP_EOL; // 'hello world'\necho\
    \ solve('12345') . PHP_EOL; // '12345'\necho solve('1a2b3c4d5e') . PHP_EOL; //\
    \ '1A2B3C4D5E'\necho solve('String.prototype.toAlternatingCase') . PHP_EOL; //\
    \ 'sTRING.PROTOTYPE.TOaLTERNATINGcASE'\necho solve('Hello World') . PHP_EOL; //\
    \ 'hELLO wORLD'\necho solve('hello world') . PHP_EOL; // 'HELLO WORLD'\necho solve('HELLO\
    \ WORLD') . PHP_EOL; // 'hello world'\necho solve('hello WORLD') . PHP_EOL; //\
    \ 'HELLO world'\necho solve('HeLLo WoRLD') . PHP_EOL; // 'hEllO wOrld'\necho solve('12345')\
    \ . PHP_EOL; // '12345'\necho solve('1a2b3c4d5e') . PHP_EOL; // '1A2B3C4D5E'\n\
    echo solve('String.prototype.toAlternatingCase') . PHP_EOL; // 'sTRING.PROTOTYPE.TOaLTERNATINGcASE'\n\
    echo solve('Hello World') . PHP_EOL; // 'hELLO wORLD'\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ABC\nABCabc123\ncODEwARS\nhELLO wORLD\nhello world\n12345\n1A2B3C4D5E\n\
    sTRING.PROTOTYPE.TOaLTERNATINGcASE\nhELLO wORLD\nHELLO WORLD\nhello world\nHELLO\
    \ world\nhEllO wOrld\n12345\n1A2B3C4D5E\nsTRING.PROTOTYPE.TOaLTERNATINGcASE\n\
    hELLO wORLD\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv65li7_o.php:44\n\
    Stack trace:\n#0 /tmp/tmpv65li7_o.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpv65li7_o.php\
    \ on line 44\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            if (ctype_upper($s[$i])) {\n                $result .= strtolower($s[$i]);\n\
    \            } else {\n                $result .= strtoupper($s[$i]);\n      \
    \      }\n        } else {\n            $result .= $s[$i];\n        }\n    }\n\
    \    return $result;\n}\n\n$s = \"Hello World\";\necho solve($s);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hELLO wORLD\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqpf7818l.php:32\n\
    Stack trace:\n#0 /tmp/tmpqpf7818l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqpf7818l.php\
    \ on line 32\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters .= strtoupper($letters);\n \
    \   $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= $s[$i] == strtolower($s[$i]) ?\
    \ strtoupper($s[$i]) : strtolower($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo8hl_ogh.php:28\n\
    Stack trace:\n#0 /tmp/tmpo8hl_ogh.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpo8hl_ogh.php\
    \ on line 28\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    $others = [];\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $letters[] = $char;\n        } else {\n\
    \            $others[] = $char;\n        }\n    }\n    $letters = array_map(function($letter)\
    \ {\n        return ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \    }, $letters);\n    $s = array_merge($letters, $others);\n    return implode('',\
    \ $s);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbcgulgdl.php:32\n\
    Stack trace:\n#0 /tmp/tmpbcgulgdl.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbcgulgdl.php\
    \ on line 32\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $new_s = [];\n    $letters = [];\n    foreach ($s as $key => $value) {\n\
    \        if (ctype_alpha($value)) {\n            $letters[] = $value;\n      \
    \  }\n    }\n    if (count($letters) == 0) {\n        return strrev($s);\n   \
    \ }\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n\
    \            $new_s[] = strtoupper($value) == $value ? strtolower($value) : strtoupper($value);\n\
    \        } else {\n            $new_s[] = $value;\n        }\n    }\n    return\
    \ implode($new_s);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strrev(): Argument #1 ($string) must\
    \ be of type string, array given in /tmp/tmpv56me2o1.php:18\nStack trace:\n#0\
    \ /tmp/tmpv56me2o1.php(18): strrev(Array)\n#1 /tmp/tmpv56me2o1.php(31): solve(Array)\n\
    #2 /tmp/tmpv56me2o1.php(36): candidate('1234')\n#3 /tmp/tmpv56me2o1.php(45): test()\n\
    #4 {main}\n  thrown in /tmp/tmpv56me2o1.php on line 18\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            if (ctype_upper($letter)) {\n\
    \                $result[] = strtolower($letter);\n            } else {\n    \
    \            $result[] = strtoupper($letter);\n            }\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjck0fe3.php:31\n\
    Stack trace:\n#0 /tmp/tmpbjck0fe3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpbjck0fe3.php\
    \ on line 31\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = \"\";\n    $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters\
    \ = str_split($letters);\n    $letters2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  \
    \  $letters2 = str_split($letters2);\n    for ($i = 0; $i < count($s); $i++) {\n\
    \        if (in_array($s[$i], $letters)) {\n            $result .= strtoupper($s[$i]);\n\
    \        } else if (in_array($s[$i], $letters2)) {\n            $result .= strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve(\"Hello World\");\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hELLO wORLD\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt_ab4_af.php:34\n\
    Stack trace:\n#0 /tmp/tmpt_ab4_af.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpt_ab4_af.php\
    \ on line 34\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) === $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve('Hello World'); // hELLO\
    \ wORLD\necho solve('Hello-LOL'); // hELLO-lol\necho solve('Sup DUDE!!?'); //\
    \ sUP dude!!?\necho solve('12345'); // 12345\necho solve('aBcD'); // AbCd\necho\
    \ solve('aBcD123'); // AbCd123\necho solve('aBcD123!@#$%^&*()_-+='); // AbCd123!@#$%^&*()_-+=\n\
    echo solve('aBcD123!@#$%^&*()_-+=][{}'); // AbCd123!@#$%^&*()_-+=][{}\necho solve('aBcD123!@#$%^&*()_-+=][{}|\\\
    ;:<>,.?/'); // AbCd123!@#$%^&*()_-+=][{}|\\;:<>,.?/\necho solve('aBcD123!@#$%^&*()_-+=][{}|\\\
    ;:<>,.?/~`'); // AbCd123!@#$%^&*()_-+=][{}|\\;:<>,.?/~`\necho solve('aBcD123!@#$%^&*()_-+=][{}|\\\
    ;:<>,.?/~`\"'); // AbCd123!@#$%^&*()_-+=][{}|\\;:<>,.?/~`\"\necho solve('aBcD123!@#$%^&*()_-+=][{}|\\\
    ;:<>,.?/~`\"\\''); // AbCd123\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hELLO wORLDhELLO-lolsUP dude!!?12345AbCdAbCd123AbCd123!@#$%^&*()_-+=AbCd123!@#$%^&*()_-+=][{}AbCd123!@#$%^&*()_-+=][{}|\\\
    ;:<>,.?/AbCd123!@#$%^&*()_-+=][{}|\\;:<>,.?/~`AbCd123!@#$%^&*()_-+=][{}|\\;:<>,.?/~`\"\
    AbCd123!@#$%^&*()_-+=][{}|\\;:<>,.?/~`\"'\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp5nwazl3h.php:38\nStack trace:\n#0 /tmp/tmp5nwazl3h.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp5nwazl3h.php on line 38\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    $nonLetters = [];\n    foreach ($s as $char) {\n    \
    \    if (ctype_alpha($char)) {\n            $letters[] = $char;\n        } else\
    \ {\n            $nonLetters[] = $char;\n        }\n    }\n    if (count($letters)\
    \ === 0) {\n        return strrev(implode('', $nonLetters));\n    }\n    foreach\
    \ ($letters as $key => $letter) {\n        if (ctype_lower($letter)) {\n     \
    \       $letters[$key] = strtoupper($letter);\n        } else {\n            $letters[$key]\
    \ = strtolower($letter);\n        }\n    }\n    return implode('', $nonLetters)\
    \ . implode('', $letters);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmejmznxj.php:40\n\
    Stack trace:\n#0 /tmp/tmpmejmznxj.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpmejmznxj.php\
    \ on line 40\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $value) {\n        if (ctype_alpha($value))\
    \ {\n            $result[] = strtoupper($value) == $value ? strtolower($value)\
    \ : strtoupper($value);\n        } else {\n            $result[] = $value;\n \
    \       }\n    }\n    return implode('', $result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn1r8hzrc.php:27\n\
    Stack trace:\n#0 /tmp/tmpn1r8hzrc.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpn1r8hzrc.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ === $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\necho solve('Hello World'); // hELLO wORLD\necho solve('Hello-LOL'); // hELLO-lol\n\
    echo solve('Sup DUDE!!?'); // sUP dude!!?\necho solve('12345'); // 12345\necho\
    \ solve('aAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaA\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "aAaAaAaAaAaAaAaAaAaAaAaAaAaAaA..."
    in /tmp/tmppga0eqkw.php on line 25

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    $letters = [];\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $letters[] = $char;\n        } else {\n\
    \            $result[] = $char;\n        }\n    }\n    if (empty($letters)) {\n\
    \        return strrev(implode('', $result));\n    }\n    foreach ($s as $char)\
    \ {\n        if (ctype_alpha($char)) {\n            $result[] = strtolower($char)\
    \ === $char ? strtoupper($char) : strtolower($char);\n        } else {\n     \
    \       $result[] = $char;\n        }\n    }\n    return implode('', $result);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdegwvdyk.php:40\n\
    Stack trace:\n#0 /tmp/tmpdegwvdyk.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpdegwvdyk.php\
    \ on line 40\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $res = [];\n    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    foreach ($s as $char) {\n        if (in_array($char,\
    \ $letters)) {\n            $res[] = strtolower($char) == $char ? strtoupper($char)\
    \ : strtolower($char);\n        } else {\n            $res[] = $char;\n      \
    \  }\n    }\n    return implode('', $res);\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpah5yxweu.php:29\n\
    Stack trace:\n#0 /tmp/tmpah5yxweu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpah5yxweu.php\
    \ on line 29\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode($result);\n\
    }\n\necho solve(\"aBcD\"); // \"AbCd\"\necho solve(\"aBcD123\"); // \"AbCd123\"\
    \necho solve(\"abcd\"); // \"ABCD\"\necho solve(\"\"); // \"\"\necho solve(\"\
    123\"); // \"123\"\necho solve(\"a1b2c3d4\"); // \"A1B2C3D4\"\necho solve(\"a1b2c3d4A\"\
    ); // \"A1B2C3D4a\"\necho solve(\"a1b2c3d4A5\"); // \"A1B2C3D4a5\"\necho solve(\"\
    a1b2c3d4A5z\"); // \"A1B2C3D4a5Z\"\necho solve(\"a1b2c3d4A5zZ\"); // \"A1B2C3D4a5zZ\"\
    \necho solve(\"a1b2c3d4A5zZ!\"); // \"A1B2C3D4a5zZ!\"\necho solve(\"a1b2c3d4A5zZ!@\"\
    ); // \"A1B2C3D4a5zZ!@\"\necho solve(\"a1b2c3d4A5zZ!@#$\"); // \"A1B2C3D4a5zZ!@#$\"\
    \necho solve(\"a1b2c3d4A5zZ!@#$%\"); // \"A1B2C3D4a5zZ!@#$%\"\necho solve(\"a1b2c3d4A5zZ!@#$%^\"\
    ); // \"A1B2C3D4a5zZ!@#$%^\"\necho solve(\"a1b2c3d4A5zZ!@#$%\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "AsDf", expecting ")" in /tmp/tmpjm593ugq.php
    on line 42

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve('Hello World'); // hELLO wORLD\necho '<br>';\necho\
    \ solve('Hello CodeEval'); // hELLO cODEeVAL\necho '<br>';\necho solve('HELLO\
    \ CODEEVAL'); // hello codeeval\necho '<br>';\necho solve('hEllO cOdEEvAl'); //\
    \ HeLlO CoDeEvAl\necho '<br>';\necho solve('12345'); // 12345\necho '<br>';\n\
    echo solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho '<br>';\necho solve('String.prototype.toAlternatingCase');\
    \ // sTRING.PROTOTYPE.TOaLTERNATINGcASE\necho '<br>';\necho solve('Hello World');\
    \ // hELLO wORLD\necho '<br>';\necho solve('Hello CodeEval'); // hELLO cODEeVAL\n\
    echo '<br>';\necho solve('HELLO CODEEVAL'); // hello codeeval\necho '<br>';\n\
    echo solve('hEllO cOdEEvAl'); // HeLlO CoDeEvAl\necho '<br>';\necho solve('12345');\
    \ // 12345\necho '<br>';\necho solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho '<br>';\n\
    echo solve('String.prototype.toAlternatingCase'); // sTRING.PROTOTYPE.TOaLTERNATINGcASE\n\
    echo '<br>';\necho solve('Hello World'); // hELLO wORLD\necho '<br>';\necho solve('Hello\
    \ Code\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "Hello Code" in /tmp/tmp89kl932_.php
    on line 50

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    $nonLetters = [];\n    foreach ($s as $char) {\n    \
    \    if (ctype_alpha($char)) {\n            $letters[] = $char;\n        } else\
    \ {\n            $nonLetters[] = $char;\n        }\n    }\n    $letters = array_map(function($letter)\
    \ {\n        if (ctype_upper($letter)) {\n            return strtolower($letter);\n\
    \        } else {\n            return strtoupper($letter);\n        }\n    },\
    \ $letters);\n    $letters = array_reverse($letters);\n    return implode('',\
    \ $letters) . implode('', $nonLetters);\n}\n\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxf9f3wqg.php:35\n\
    Stack trace:\n#0 /tmp/tmpxf9f3wqg.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpxf9f3wqg.php\
    \ on line 35\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    foreach ($s as $char) {\n        if (in_array($char,\
    \ $letters)) {\n            if (ctype_lower($char)) {\n                $result[]\
    \ = strtoupper($char);\n            } else {\n                $result[] = strtolower($char);\n\
    \            }\n        } else {\n            $result[] = $char;\n        }\n\
    \    }\n    return implode('', $result);\n}\n\necho solve('Hello World');\necho\
    \ solve('Hello World!');\necho solve('Hello World! 123');\necho solve('HELLO WORLD');\n\
    echo solve('HELLO WORLD 123');\necho solve('123');\necho solve('!@#');\necho solve('!@#Hello\
    \ World');\necho solve('!@#Hello World 123');\necho solve('!@#Hello World 123#@!');\n\
    echo solve('!@#HELLO WORLD 123#@!');\necho solve('!@#HELLO WORLD 123#@!a');\n\
    echo solve('!@#HELLO WORLD 123#@!A');\necho solve('!@#HELLO WORLD 123#@!aA');\n\
    echo solve('!@#HELLO WORLD 123#@!AA');\necho solve('!@#HELLO WORLD 123#@!aAa');\n\
    echo solve('!@#HELLO WORLD 123#@!aAaA');\necho solve('!@#HELLO WORLD 123#@!aAaAa');\n\
    echo solve('!@#HELLO WORLD 123#@!aAaAaA');\necho solve('!@#HELLO WORLD 123#@!aAaAaAa');\n\
    echo solve('!@#HELLO WORLD 123#@!aAaAaAaA');\necho solve('!@#HELLO WORLD 123#@!aAaAaAaAa');\n\
    echo solve('!@#HELLO WORLD 123#@!aAaAaAaAaA');\necho solve('!@#HELLO WORLD 123#@!aAaAa\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "!@#HELLO WORLD 123#@!aAaAa"
    in /tmp/tmp8gttbfxw.php on line 50

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    $numbers = [];\n    $result = [];\n    foreach ($s as\
    \ $key => $value) {\n        if (ctype_alpha($value)) {\n            $letters[]\
    \ = $value;\n        } else {\n            $numbers[] = $value;\n        }\n \
    \   }\n    if (count($letters) > 0) {\n        foreach ($letters as $key => $value)\
    \ {\n            if (ctype_lower($value)) {\n                $result[] = strtoupper($value);\n\
    \            } else {\n                $result[] = strtolower($value);\n     \
    \       }\n        }\n    } else {\n        $result = array_reverse($numbers);\n\
    \    }\n    return implode($result);\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa7xt4ryz.php:42\n\
    Stack trace:\n#0 /tmp/tmpa7xt4ryz.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpa7xt4ryz.php\
    \ on line 42\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ === $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv290_lrg.php:27\n\
    Stack trace:\n#0 /tmp/tmpv290_lrg.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpv290_lrg.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split('abcdefghijklmnopqrstuvwxyz');\n    $result = '';\n    for ($i =\
    \ 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i], $letters)) {\n   \
    \         if (ctype_lower($s[$i])) {\n                $result .= strtoupper($s[$i]);\n\
    \            } else {\n                $result .= strtolower($s[$i]);\n      \
    \      }\n        } else {\n            $result .= $s[$i];\n        }\n    }\n\
    \    return $result;\n}\n\necho solve('abc'); // 'ABC'\necho solve('abcABC123');\
    \ // 'ABCabc123'\necho solve('CodeWars'); // 'cODEwARS'\necho solve('abcABC123!@\u20AC\
    '); // 'ABCabc123!@\u20AC'\necho solve('AAaaooOIi'); // 'aaAAOOoiI'\necho solve('ABCabc');\
    \ // 'abcABC'\necho solve('z'); // 'Z'\necho solve('Z'); // 'z'\necho solve('zZ');\
    \ // 'ZZ'\necho solve('Zz'); // 'zz'\necho solve('ZzZz'); // 'zzZZzz'\necho solve('ZzZzZz');\
    \ // 'zzZZzzZZzz'\necho solve('ZzZzZzZz'); // 'zzZZzzZZzzZZzz'\necho solve('ZzZzZzZzZz');\
    \ // 'zzZZzzZZzzZZzzZZzz'\necho solve('ZzZzZzZzZzZz'); // 'zzZZzzZZzzZZzzZZzzZZzz'\n\
    echo solve('ZzZzZzZzZzZzZz'); // 'zzZZzzZZzzZZzzZZzzZZzzZZzz'\necho solve('ZzZzZzZzZzZzZzZz');\
    \ // 'zzZZzzZZzzZZzzZZzzZZzzZZzzZZzz'\necho solve('ZzZzZzZzZzZzZzZzZz'); // 'zzZZzzZZzzZZzzZZzzZZzz\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ABCABCABC123CODEWARSABCABC123!@\u20ACAAAAOOOIIABCABCZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpy0mw1xjj.php:48\nStack\
    \ trace:\n#0 /tmp/tmpy0mw1xjj.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpy0mw1xjj.php\
    \ on line 48\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result[] = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n\nvar_dump(solve('Hello World')); // hELLO wORLD\n\
    var_dump(solve('HELLO WORLD')); // hello world\nvar_dump(solve('12345')); // 12345\n\
    var_dump(solve('1a2b3c4d5e')); // 1A2B3C4D5E\nvar_dump(solve('String.prototype.split'));\
    \ // sTRING.PROTOTYPE.SPLIT\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string(11) \"hELLO wORLD\"\nstring(11) \"hello world\"\nstring(5) \"12345\"\
    \nstring(10) \"1A2B3C4D5E\"\nstring(22) \"sTRING.PROTOTYPE.SPLIT\"\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpf3ljgb9w.php:32\nStack trace:\n\
    #0 /tmp/tmpf3ljgb9w.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpf3ljgb9w.php\
    \ on line 32\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    $others = [];\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $letters[] = $char;\n        } else {\n\
    \            $others[] = $char;\n        }\n    }\n    if (count($letters) ===\
    \ 0) {\n        return strrev(implode('', $others));\n    }\n    $letters = array_map(function\
    \ ($letter) {\n        if (ctype_upper($letter)) {\n            return strtolower($letter);\n\
    \        }\n        return strtoupper($letter);\n    }, $letters);\n    return\
    \ implode('', $letters) . implode('', $others);\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps4e2sa5_.php:39\n\
    Stack trace:\n#0 /tmp/tmps4e2sa5_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmps4e2sa5_.php\
    \ on line 39\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result[] = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfzz1xy4o.php:27\n\
    Stack trace:\n#0 /tmp/tmpfzz1xy4o.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfzz1xy4o.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n    $letters\
    \ = array_merge($letters, array_map('strtoupper', $letters));\n    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (in_array($char, $letters))\
    \ {\n            $result[] = strtolower($char) == $char ? strtoupper($char) :\
    \ strtolower($char);\n        } else {\n            $result[] = $char;\n     \
    \   }\n    }\n    return implode('', $result);\n}\n\necho solve('aBcD');\necho\
    \ solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBc\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "aBc" in /tmp/tmp4cnq0ypk.php
    on line 62

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result[] = strtoupper($char) === $char ? strtolower($char) :\
    \ strtoupper($char);\n        } else {\n            $result[] = $char;\n     \
    \   }\n    }\n    return implode('', $result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1wf3wi8v.php:27\n\
    Stack trace:\n#0 /tmp/tmp1wf3wi8v.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1wf3wi8v.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    $isLetter = false;\n    foreach ($s as $char) {\n    \
    \    if (ctype_alpha($char)) {\n            $isLetter = true;\n            if\
    \ (ctype_lower($char)) {\n                $result[] = strtoupper($char);\n   \
    \         } else {\n                $result[] = strtolower($char);\n         \
    \   }\n        } else {\n            $result[] = $char;\n        }\n    }\n  \
    \  if ($isLetter) {\n        return implode('', $result);\n    } else {\n    \
    \    return strrev(implode('', $result));\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmp8lj6xie0.php on line 42


    Warning: Undefined variable $A in /tmp/tmp8lj6xie0.php on line 42

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $key;\n        }\n    }\n    if (count($letters)\
    \ == 0) {\n        return strrev($s);\n    }\n    foreach ($letters as $key =>\
    \ $value) {\n        if (ctype_lower($s[$value])) {\n            $s[$value] =\
    \ strtoupper($s[$value]);\n        } else {\n            $s[$value] = strtolower($s[$value]);\n\
    \        }\n    }\n    return implode($s);\n}\necho solve(\"Hello World\");\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hELLO wORLD\nFatal error: Uncaught TypeError: strrev(): Argument #1 ($string)\
    \ must be of type string, array given in /tmp/tmpfl_xsug7.php:17\nStack trace:\n\
    #0 /tmp/tmpfl_xsug7.php(17): strrev(Array)\n#1 /tmp/tmpfl_xsug7.php(30): solve(Array)\n\
    #2 /tmp/tmpfl_xsug7.php(35): candidate('1234')\n#3 /tmp/tmpfl_xsug7.php(44): test()\n\
    #4 {main}\n  thrown in /tmp/tmpfl_xsug7.php on line 17\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\necho solve('Hello World');\necho solve('Hello-LOL');\necho solve('Sup DUDE!!?');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmpancjvh4g.php on line 79

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    $letters = array_flip($letters);\n    foreach ($s as\
    \ $char) {\n        if (isset($letters[$char])) {\n            $result[] = $char\
    \ === strtolower($char) ? strtoupper($char) : strtolower($char);\n        } else\
    \ {\n            $result[] = $char;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzqgp7dti.php:30\n\
    Stack trace:\n#0 /tmp/tmpzqgp7dti.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzqgp7dti.php\
    \ on line 30\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6mco9ti.php:26\n\
    Stack trace:\n#0 /tmp/tmpn6mco9ti.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn6mco9ti.php\
    \ on line 26\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve('Hello World');\necho solve('Hello-LOL');\n\
    echo solve('Sup DUDE!!?');\necho solve('12345');\necho solve('12345');\necho solve('abcde');\n\
    echo solve('ABCDE');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('a\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "a" in /tmp/tmprzwvtmyg.php
    on line 64

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ === $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv290_lrg.php:27\n\
    Stack trace:\n#0 /tmp/tmpv290_lrg.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpv290_lrg.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $arr = str_split($s);\n\
    \    $letters = array_filter($arr, function($item) {\n        return ctype_alpha($item);\n\
    \    });\n    if (empty($letters)) {\n        return strrev($s);\n    }\n    $result\
    \ = '';\n    foreach ($arr as $item) {\n        if (ctype_alpha($item)) {\n  \
    \          $result .= strtolower($item) === $item ? strtoupper($item) : strtolower($item);\n\
    \        } else {\n            $result .= $item;\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve('Hello World');\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'hELLO wORLD

    Warning: Undefined variable $a in /tmp/tmpvabmn7rs.php on line 39


    Warning: Undefined variable $A in /tmp/tmpvabmn7rs.php on line 39

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n    $letters\
    \ = array_merge($letters, array_map('strtoupper', $letters));\n    $s = str_split($s);\n\
    \    $result = '';\n    foreach ($s as $char) {\n        if (in_array($char, $letters))\
    \ {\n            $result .= strtolower($char) === $char ? strtoupper($char) :\
    \ strtolower($char);\n        } else {\n            $result .= $char;\n      \
    \  }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvxut3bxy.php:30\n\
    Stack trace:\n#0 /tmp/tmpvxut3bxy.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvxut3bxy.php\
    \ on line 30\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\necho solve('aBcD'); // 'AbCd'\necho solve('aBcD12'); // 'AbCd12'\necho solve('aBcD12#');\
    \ // 'AbCd12#'\necho solve('aBcD12#!'); // 'AbCd12#!'\necho solve('aBcD12#!@');\
    \ // 'AbCd12#!@'\necho solve('aBcD12#!@$'); // 'AbCd12#!@$'\necho solve('aBcD12#!@$%');\
    \ // 'AbCd12#!@$%'\necho solve('aBcD12#!@$%^'); // 'AbCd12#!@$%^'\necho solve('aBcD12#!@$%^&');\
    \ // 'AbCd12#!@$%^&'\necho solve('aBcD12#!@$%^&*'); // 'AbCd12#!@$%^&*'\necho\
    \ solve('aBcD12#!@$%^&*('); // 'AbCd12#!@$%^&*('\necho solve('aBcD12#!@$%^&*()');\
    \ // 'AbCd12#!@$%^&*()'\necho solve('aBcD12#!@$%^&*()_'); // 'AbCd12#!@$%^&*()_'\n\
    echo solve('aBcD12#!@$%^&*()_+'); // 'AbCd12#!@$%^&*()_+'\necho solve('aBcD12#!@$%^&*()_+{');\
    \ //\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "AbCdAbCd12AbCd12#AbCd12#!AbCd12#!@AbCd12#!@$AbCd12#!@$%AbCd12#!@$%^AbCd12#!@$%^&AbCd12#!@$%^&*AbCd12#!@$%^&*(AbCd12#!@$%^&*()AbCd12#!@$%^&*()_AbCd12#!@$%^&*()_+AbCd12#!@$%^&*()_+{\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpujwmqemz.php:42\nStack\
    \ trace:\n#0 /tmp/tmpujwmqemz.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpujwmqemz.php\
    \ on line 42\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    $nonLetters = [];\n    foreach ($s as $char) {\n    \
    \    if (ctype_alpha($char)) {\n            $letters[] = $char;\n        } else\
    \ {\n            $nonLetters[] = $char;\n        }\n    }\n    $letters = array_map(function($letter)\
    \ {\n        return ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \    }, $letters);\n    return count($letters) > 0 ? implode('', $letters) . implode('',\
    \ $nonLetters) : implode('', array_reverse($nonLetters));\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzl388k0t.php:33\n\
    Stack trace:\n#0 /tmp/tmpzl388k0t.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzl388k0t.php\
    \ on line 33\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) === $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve('Hello World'); // hELLO\
    \ wORLD\necho solve('HELLO WORLD'); // hello world\necho solve('12345'); // 12345\n\
    echo solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho solve('String.with.punctuation characters!');\
    \ // sTRING.WITH.PUNCTUATION CHARACTERS!\necho solve('Hello World!'); // hELLO\
    \ wORLD!\necho solve('!Hello World'); // !hELLO wORLD\necho solve('!Hello World!');\
    \ // !hELLO wORLD!\necho solve('Hello World!!'); // hELLO wORLD!!\necho solve('Hello\
    \ World!!!'); // hELLO wORLD!!!\necho solve('Hello World!!!!'); // hELLO wORLD!!!!\n\
    echo solve('Hello World!!!!!'); // hELLO wORLD!!!!!\necho solve('Hello World!!!!!!');\
    \ // hELLO wORLD!!!!!!\necho solve('Hello World!!!!!!!'); // hELLO wORLD!!!!!!!\n\
    echo solve('Hello World!!!!!!!!'); // hELLO wORLD!!!!!!!!\necho solve('Hello World!!!!!!!!!');\
    \ // hELLO wORLD!!!!!!!!!\necho solve('Hello World!!!!!!!!!!'); // hELLO wORLD!!!!!!!!!!\n\
    echo solve('Hello World!!!!!!!!!!!'); // hELLO wORLD!!!!!!!!!!!\necho solve('Hello\
    \ World!!!!!!!!!!!!'); // hELLO wORLD!!!!!!!!!!!!\necho solve('Hello World!!!!!!!!!!!!!');\
    \ // hELLO wORLD!!!!!!!!!!!!!\necho solve('Hello World!!!!!!!!!!!!!!'); // hELLO\
    \ wORLD!!!!!!!!!!!!!!\necho solve('Hello World!!!!!!!!!!!!!!!'); // hELLO wORLD!!!!!!!!!!!!!!!\n\
    echo solve\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmp3vfz08sm.php on line 43

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result[] = strtoupper($char) === $char ? strtolower($char) :\
    \ strtoupper($char);\n        } else {\n            $result[] = $char;\n     \
    \   }\n    }\n    return implode('', $result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1wf3wi8v.php:27\n\
    Stack trace:\n#0 /tmp/tmp1wf3wi8v.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1wf3wi8v.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters = str_split($letters);\n   \
    \ $letters2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    $letters2 = str_split($letters2);\n\
    \    $s = str_split($s);\n    $new = [];\n    $check = false;\n    foreach($s\
    \ as $char){\n        if(in_array($char, $letters)){\n            $check = true;\n\
    \            $new[] = strtoupper($char);\n        } else if(in_array($char, $letters2)){\n\
    \            $check = true;\n            $new[] = strtolower($char);\n       \
    \ } else {\n            $new[] = $char;\n        }\n    }\n    if($check){\n \
    \       return implode(\"\", $new);\n    } else {\n        return strrev($s);\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strrev(): Argument #1 ($string) must\
    \ be of type string, array given in /tmp/tmpwly6afrz.php:30\nStack trace:\n#0\
    \ /tmp/tmpwly6afrz.php(30): strrev(Array)\n#1 /tmp/tmpwly6afrz.php(35): solve(Array)\n\
    #2 /tmp/tmpwly6afrz.php(40): candidate('1234')\n#3 /tmp/tmpwly6afrz.php(49): test()\n\
    #4 {main}\n  thrown in /tmp/tmpwly6afrz.php on line 30\n"
  timestamp: 1659978248
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    if(!preg_match('/[a-zA-Z]/',\
    \ $s)) {\n        return strrev($s);\n    }\n    $result = '';\n    for($i = 0;\
    \ $i < strlen($s); $i++) {\n        if(ctype_alpha($s[$i])) {\n            $result\
    \ .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmphdmqdzmq.php on line 34


    Warning: Undefined variable $A in /tmp/tmphdmqdzmq.php on line 34

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6mco9ti.php:26\n\
    Stack trace:\n#0 /tmp/tmpn6mco9ti.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn6mco9ti.php\
    \ on line 26\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = '';\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result .= strtolower($letter)\
    \ == $letter ? strtoupper($letter) : strtolower($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjyxmyfn4.php:27\n\
    Stack trace:\n#0 /tmp/tmpjyxmyfn4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjyxmyfn4.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = '';\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result .= strtolower($letter)\
    \ == $letter ? strtoupper($letter) : strtolower($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjyxmyfn4.php:27\n\
    Stack trace:\n#0 /tmp/tmpjyxmyfn4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjyxmyfn4.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve('Hello World');\necho solve('Hello-LOL');\n\
    echo solve('Sup DUDE!!?');\necho solve('12345');\necho solve('12345');\necho solve('abcde');\n\
    echo solve('ABCDE');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('a\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "a" in /tmp/tmprzwvtmyg.php
    on line 64

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            if (ctype_lower($char)) {\n                $result[] = strtoupper($char);\n\
    \            } else {\n                $result[] = strtolower($char);\n      \
    \      }\n        } else {\n            $result[] = $char;\n        }\n    }\n\
    \    return implode('', $result);\n}\n\necho solve('Hello World');\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hELLO wORLD\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpauie6pud.php:32\n\
    Stack trace:\n#0 /tmp/tmpauie6pud.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpauie6pud.php\
    \ on line 32\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n    $letters\
    \ = array_merge($letters, array_map('strtoupper', $letters));\n    $s = str_split($s);\n\
    \    $s = array_map(function($v) use ($letters) {\n        if (in_array($v, $letters))\
    \ {\n            return strtolower($v) == $v ? strtoupper($v) : strtolower($v);\n\
    \        }\n        return $v;\n    }, $s);\n    return implode('', $s);\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqq7hurdr.php:28\n\
    Stack trace:\n#0 /tmp/tmpqq7hurdr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqq7hurdr.php\
    \ on line 28\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6mco9ti.php:26\n\
    Stack trace:\n#0 /tmp/tmpn6mco9ti.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn6mco9ti.php\
    \ on line 26\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6mco9ti.php:26\n\
    Stack trace:\n#0 /tmp/tmpn6mco9ti.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn6mco9ti.php\
    \ on line 26\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    $notLetters = [];\n    foreach ($s as $char) {\n    \
    \    if (ctype_alpha($char)) {\n            $letters[] = $char;\n        } else\
    \ {\n            $notLetters[] = $char;\n        }\n    }\n    if (empty($letters))\
    \ {\n        return strrev(implode('', $notLetters));\n    }\n    $letters = array_map(function\
    \ ($letter) {\n        if (ctype_upper($letter)) {\n            return strtolower($letter);\n\
    \        }\n        return strtoupper($letter);\n    }, $letters);\n    return\
    \ implode('', $letters) . implode('', $notLetters);\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzg3wk41f.php:39\n\
    Stack trace:\n#0 /tmp/tmpzg3wk41f.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpzg3wk41f.php\
    \ on line 39\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = [];\n    $noLetters = [];\n    for ($i = 0; $i < strlen($s); $i++) {\n   \
    \     if (ctype_alpha($s[$i])) {\n            $letters[] = $s[$i];\n        }\
    \ else {\n            $noLetters[] = $s[$i];\n        }\n    }\n    if (count($letters)\
    \ === 0) {\n        return strrev($s);\n    }\n    $result = '';\n    for ($i\
    \ = 0; $i < count($letters); $i++) {\n        if (ctype_upper($letters[$i])) {\n\
    \            $result .= strtolower($letters[$i]);\n        } else {\n        \
    \    $result .= strtoupper($letters[$i]);\n        }\n    }\n    return $result\
    \ . implode('', $noLetters);\n}\n\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_8djbcwg.php:40\n\
    Stack trace:\n#0 /tmp/tmp_8djbcwg.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp_8djbcwg.php\
    \ on line 40\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split('abcdefghijklmnopqrstuvwxyz');\n    $newString = '';\n    for ($i\
    \ = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i], $letters)) {\n \
    \           $newString .= strtoupper($s[$i]);\n        } else {\n            $newString\
    \ .= strtolower($s[$i]);\n        }\n    }\n    return $newString;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hyshax0.php:27\n\
    Stack trace:\n#0 /tmp/tmp2hyshax0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2hyshax0.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = '';\n    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    foreach ($s as $char) {\n        if (in_array($char,\
    \ $letters)) {\n            $result .= strtolower($char) == $char ? strtoupper($char)\
    \ : strtolower($char);\n        } else {\n            $result .= $char;\n    \
    \    }\n    }\n    return $result;\n}\n\necho solve('Hello World');\necho solve('HELLO\
    \ WORLD');\necho solve('HELLOworld');\necho solve('12345');\necho solve('1a2b3c4d5e');\n\
    echo solve('String.prototype.charCodeAt()');\necho solve('String.prototype.charAt()');\n\
    echo solve('String.prototype.charCodeAt()');\necho solve('AbCdEfGhIjKlMnOpQrStUvWxYz');\n\
    echo solve('The quick brown fox jumps over the lazy dog.');\necho solve('THE QUICK\
    \ BROWN FOX JUMPS OVER THE LAZY DOG.');\necho solve('the quick brown fox jumps\
    \ over the lazy dog.');\necho solve('The Quick Brown Fox Jumps Over The Lazy Dog.');\n\
    echo solve('the quick brown fox jumps over the lazy dog.');\necho solve('the quick\
    \ brown fox jumps over the lazy dog');\necho solve('The Quick Brown Fox Jumps\
    \ Over The Lazy Dog');\necho solve('the quick brown fox jumps over the lazy dog');\n\
    echo solve('the quick brown fox jumps over the lazy dog');\necho solve('The Quick\
    \ Brown Fox Jumps Over The Lazy Dog');\necho solve('the quick brown fox jumps\
    \ over the lazy dog');\necho solve('the quick brown fox jumps over the lazy dog');\n\
    echo solve('The Quick Brown Fox Jumps Over The Lazy Dog');\necho solve('the quick\
    \ brown fox jumps over the lazy dog');\necho solve('the quick brown fox jumps\
    \ over the lazy dog');\necho solve('The Quick Brown Fox Jumps Over The Lazy Dog');\n\
    echo solve('the quick brown fox jumps over the lazy dog');\necho solve('\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "" in /tmp/tmpoap_6eml.php
    on line 49

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6mco9ti.php:26\n\
    Stack trace:\n#0 /tmp/tmpn6mco9ti.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn6mco9ti.php\
    \ on line 26\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (strpos($letters, strtolower($s[$i])) !== false) {\n   \
    \         $result .= strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= strtolower($s[$i]);\n        }\n    }\n    return $result;\n}\n\necho solve('Hello\
    \ World'); // hELLO wORLD\necho solve('HELLO WORLD'); // hello world\necho solve('12345');\
    \ // 12345\necho solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho solve('String.with.punctuation\
    \ chars'); // sTRING.WITH.PUNCTUATION CHARS\necho solve('Hello World'); // hELLO\
    \ wORLD\necho solve('HELLO WORLD'); // hello world\necho solve('12345'); // 12345\n\
    echo solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho solve('String.with.punctuation chars');\
    \ // sTRING.WITH.PUNCTUATION CHARS\necho solve('Hello World'); // hELLO wORLD\n\
    echo solve('HELLO WORLD'); // hello world\necho solve('12345'); // 12345\necho\
    \ solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho solve('String.with.punctuation chars');\
    \ // sTRING.WITH.PUNCTUATION CHARS\necho solve('Hello World'); // hELLO wORLD\n\
    echo solve('HELLO WORLD'); // hello world\necho solve('12345'); // 12345\necho\
    \ solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho solve('String.with.punctuation chars');\
    \ // sTRING.WITH.PUNCTUATION CHARS\necho solve('Hello World'); // hELLO wORLD\n\
    echo solve('HELLO WORLD'); // hello world\n\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "HELLO WORLDHELLO WORLD123451A2B3C4D5ESTRING.WITH.PUNCTUATION CHARSHELLO\
    \ WORLDHELLO WORLD123451A2B3C4D5ESTRING.WITH.PUNCTUATION CHARSHELLO WORLDHELLO\
    \ WORLD123451A2B3C4D5ESTRING.WITH.PUNCTUATION CHARSHELLO WORLDHELLO WORLD123451A2B3C4D5ESTRING.WITH.PUNCTUATION\
    \ CHARSHELLO WORLDHELLO WORLD\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp_d05m23s.php:49\nStack trace:\n#0 /tmp/tmp_d05m23s.php(59): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_d05m23s.php on line 49\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) === $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx122px_j.php:26\n\
    Stack trace:\n#0 /tmp/tmpx122px_j.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpx122px_j.php\
    \ on line 26\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n    $letters2\
    \ = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    $letters2 = str_split($letters2);\n   \
    \ $result = '';\n    $s = str_split($s);\n    for ($i = 0; $i < count($s); $i++)\
    \ {\n        if (in_array($s[$i], $letters)) {\n            $result .= strtoupper($s[$i]);\n\
    \        } elseif (in_array($s[$i], $letters2)) {\n            $result .= strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve('aBcDeFgHiJkLmNoPqRsTuVwXyZ');\necho '<br>';\necho\
    \ solve('aBcDeFgHiJkLmNoPqRsTuVwXyZ1');\necho '<br>';\necho solve('1aBcDeFgHiJkLmNoPqRsTuVwXyZ');\n\
    echo '<br>';\necho solve('1aBcDeFgHiJkLmNoPqRsTuVwXyZ1');\necho '<br>';\necho\
    \ solve('1aBcDeFgHiJkLmNoPqRsTuVwXyZ1a');\necho '<br>';\necho solve('1aBcDeFgHiJkLmNoPqRsTuVwXyZ1aB');\n\
    echo '<br>';\necho solve('1aBcDeFgHiJkLmNoPqRsTuVwXyZ1aBc');\necho '<br>';\necho\
    \ solve('1aBcDeFgHiJkLmNoPqRsTuVwXyZ1aBcD');\necho '<br>';\necho solve('1aBcDeFgHiJkLmNoPqRs\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "1aBcDeFgHiJkLmNoPqRs" in
    /tmp/tmpcopwdbwv.php on line 43

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7p8d2l2_.php:27\n\
    Stack trace:\n#0 /tmp/tmp7p8d2l2_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7p8d2l2_.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7p8d2l2_.php:27\n\
    Stack trace:\n#0 /tmp/tmp7p8d2l2_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7p8d2l2_.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n    $letters2\
    \ = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    $letters2 = str_split($letters2);\n   \
    \ $s = str_split($s);\n    $result = [];\n    $flag = false;\n    for ($i = 0;\
    \ $i < count($s); $i++) {\n        if (in_array($s[$i], $letters)) {\n       \
    \     $flag = true;\n            $result[] = strtoupper($s[$i]);\n        } else\
    \ if (in_array($s[$i], $letters2)) {\n            $flag = true;\n            $result[]\
    \ = strtolower($s[$i]);\n        } else {\n            $result[] = $s[$i];\n \
    \       }\n    }\n    if ($flag) {\n        return implode('', $result);\n   \
    \ } else {\n        return strrev($s);\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strrev(): Argument #1 ($string) must\
    \ be of type string, array given in /tmp/tmpdr40mufr.php:30\nStack trace:\n#0\
    \ /tmp/tmpdr40mufr.php(30): strrev(Array)\n#1 /tmp/tmpdr40mufr.php(34): solve(Array)\n\
    #2 /tmp/tmpdr40mufr.php(39): candidate('1234')\n#3 /tmp/tmpdr40mufr.php(48): test()\n\
    #4 {main}\n  thrown in /tmp/tmpdr40mufr.php on line 30\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $str = '';\n\
    \    if(ctype_alpha($s)) {\n        for($i = 0; $i < strlen($s); $i++) {\n   \
    \         if(ctype_upper($s[$i])) {\n                $str .= strtolower($s[$i]);\n\
    \            } else {\n                $str .= strtoupper($s[$i]);\n         \
    \   }\n        }\n    } else {\n        $str = strrev($s);\n    }\n    return\
    \ $str;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpslicjc15.php:32\n\
    Stack trace:\n#0 /tmp/tmpslicjc15.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpslicjc15.php\
    \ on line 32\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters\
    \ = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    foreach ($s as $char) {\n        if (in_array($char, $letters))\
    \ {\n            $result .= $char === strtoupper($char) ? strtolower($char) :\
    \ strtoupper($char);\n        } else {\n            $result .= $char;\n      \
    \  }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph53fjo8j.php:30\n\
    Stack trace:\n#0 /tmp/tmph53fjo8j.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph53fjo8j.php\
    \ on line 30\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters = str_split($letters);\n\
    \    $lettersUpper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    $lettersUpper = str_split($lettersUpper);\n\
    \    $s = str_split($s);\n    for ($i = 0; $i < count($s); $i++) {\n        if\
    \ (in_array($s[$i], $letters)) {\n            $result .= strtoupper($s[$i]);\n\
    \        } else if (in_array($s[$i], $lettersUpper)) {\n            $result .=\
    \ strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n    \
    \    }\n    }\n    return $result;\n}\n\necho solve(\"Hello World\");\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hELLO wORLD\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp98vxkyfg.php:34\n\
    Stack trace:\n#0 /tmp/tmp98vxkyfg.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp98vxkyfg.php\
    \ on line 34\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    $nonLetters = [];\n    foreach ($s as $char) {\n    \
    \    if (ctype_alpha($char)) {\n            $letters[] = $char;\n        } else\
    \ {\n            $nonLetters[] = $char;\n        }\n    }\n    $letters = array_map(function($letter)\
    \ {\n        return ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \    }, $letters);\n    return count($letters) > 0 ? implode('', $letters) . implode('',\
    \ $nonLetters) : strrev(implode('', $nonLetters));\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpedx0f_m6.php:33\n\
    Stack trace:\n#0 /tmp/tmpedx0f_m6.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpedx0f_m6.php\
    \ on line 33\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    $letters = array_flip($letters);\n    foreach ($s as\
    \ $char) {\n        if (isset($letters[$char])) {\n            $result[] = $char\
    \ === strtolower($char) ? strtoupper($char) : strtolower($char);\n        } else\
    \ {\n            $result[] = $char;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n\necho solve('Hello World'); // hELLO wORLD\necho solve('HELLO\
    \ WORLD'); // hello world\necho solve('12345'); // 12345\necho solve('1a2b3c4d5e');\
    \ // 1A2B3C4D5E\necho solve('String.with.punctuation characters!'); // sTRING.WITH.PUNCTUATION\
    \ CHARACTERS!\necho solve('! !'); // ! !\necho solve('WelcometoCodewars.com');\
    \ // wELCOMETOCODEWARS.COM\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hELLO wORLDhello world123451A2B3C4D5EsTRING.WITH.PUNCTUATION CHARACTERS!!\
    \ !wELCOMETOcODEWARS.COM\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjl5jgeo.php:37\n\
    Stack trace:\n#0 /tmp/tmpbjl5jgeo.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbjl5jgeo.php\
    \ on line 37\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters = str_split($letters);\n   \
    \ $lettersUpper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    $lettersUpper = str_split($lettersUpper);\n\
    \    $s = str_split($s);\n    $result = \"\";\n    for ($i = 0; $i < count($s);\
    \ $i++) {\n        if (in_array($s[$i], $letters)) {\n            $key = array_search($s[$i],\
    \ $letters);\n            $result .= $lettersUpper[$key];\n        } else if (in_array($s[$i],\
    \ $lettersUpper)) {\n            $key = array_search($s[$i], $lettersUpper);\n\
    \            $result .= $letters[$key];\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj2emq6lj.php:35\n\
    Stack trace:\n#0 /tmp/tmpj2emq6lj.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpj2emq6lj.php\
    \ on line 35\n"
  timestamp: 1659978249
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    $s = str_split($s);\n    $letters = range('a', 'z');\n    $letters\
    \ = array_merge($letters, range('A', 'Z'));\n    $letters = array_flip($letters);\n\
    \    $isLetter = false;\n    foreach ($s as $char) {\n        if (isset($letters[$char]))\
    \ {\n            $isLetter = true;\n            $result .= $char === strtoupper($char)\
    \ ? strtolower($char) : strtoupper($char);\n        } else {\n            $result\
    \ .= $char;\n        }\n    }\n    return $isLetter ? $result : strrev($result);\n\
    }\n\necho solve('aBcD');\necho solve('aBcD123');\necho solve('123');\necho solve('123aBcD');\n\
    echo solve('123aBcD456');\necho solve('123456');\necho solve('123456aBcD');\n\
    echo solve('123456aBcD789');\necho solve('123456789');\necho solve('123456789aBcD');\n\
    echo solve('123456789aBcD0');\necho solve('1234567890');\necho solve('1234567890aBcD');\n\
    echo solve('1234567890aBcD1');\necho solve('12345678901');\necho solve('12345678901aBcD');\n\
    echo solve('12345678901aBcD2');\necho solve('123456789012');\necho solve('123456789012aBcD');\n\
    echo solve('123456789012aBcD3');\necho solve('1234567890123');\necho solve('1234567890123aBcD');\n\
    echo solve('1234567890123aBcD4');\necho solve('12345678901234');\necho solve('12345678901234aBcD');\n\
    echo solve('12345678901234aBcD5');\necho solve('123456789012345');\necho solve('123456789012345aBcD');\n\
    \nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'AbCdAbCd123321123AbCd123AbCd456654321123456AbCd123456AbCd789987654321123456789AbCd123456789AbCd009876543211234567890AbCd1234567890AbCd11098765432112345678901AbCd12345678901AbCd2210987654321123456789012AbCd123456789012AbCd332109876543211234567890123AbCd1234567890123AbCd44321098765432112345678901234AbCd12345678901234AbCd5543210987654321123456789012345AbCd

    Warning: Undefined variable $a in /tmp/tmpnqqw9ms1.php on line 66


    Warning: Undefined variable $A in /tmp/tmpnqqw9ms1.php on line 66

    '
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve('Hello World');\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hELLO wORLD\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2esl1o3b.php:27\n\
    Stack trace:\n#0 /tmp/tmp2esl1o3b.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2esl1o3b.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $key;\n        }\n    }\n    if (empty($letters))\
    \ {\n        return strrev($s);\n    }\n    foreach ($letters as $key => $value)\
    \ {\n        if (ctype_upper($s[$value])) {\n            $s[$value] = strtolower($s[$value]);\n\
    \        } else {\n            $s[$value] = strtoupper($s[$value]);\n        }\n\
    \    }\n    return implode($s);\n}\n\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strrev(): Argument #1 ($string) must\
    \ be of type string, array given in /tmp/tmpcm3jj8s2.php:17\nStack trace:\n#0\
    \ /tmp/tmpcm3jj8s2.php(17): strrev(Array)\n#1 /tmp/tmpcm3jj8s2.php(30): solve(Array)\n\
    #2 /tmp/tmpcm3jj8s2.php(35): candidate('1234')\n#3 /tmp/tmpcm3jj8s2.php(44): test()\n\
    #4 {main}\n  thrown in /tmp/tmpcm3jj8s2.php on line 17\n"
  timestamp: 1659978248
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = range('a', 'z');\n    $letters = array_merge($letters, range('A',\
    \ 'Z'));\n    $letters = array_flip($letters);\n    $result = [];\n    $hasLetter\
    \ = false;\n    foreach ($s as $char) {\n        if (isset($letters[$char])) {\n\
    \            $hasLetter = true;\n            $result[] = strtolower($char) ===\
    \ $char ? strtoupper($char) : strtolower($char);\n        } else {\n         \
    \   $result[] = $char;\n        }\n    }\n    if (!$hasLetter) {\n        $result\
    \ = array_reverse($result);\n    }\n    return implode('', $result);\n}\n\necho\
    \ solve('aBcD'); // 'AbCd'\necho solve('aBcDeF'); // 'AbCdEf'\necho solve('aBcDeFg');\
    \ // 'AbCdEfG'\necho solve('aBcDeFgH'); // 'AbCdEfGh'\necho solve('aBcDeFgHi');\
    \ // 'AbCdEfGhI'\necho solve('aBcDeFgHiJ'); // 'AbCdEfGhIj'\necho solve('aBcDeFgHiJk');\
    \ // 'AbCdEfGhIjK'\necho solve('aBcDeFgHiJkL'); // 'AbCdEfGhIjKl'\necho solve('aBcDeFgHiJkLm');\
    \ // 'AbCdEfGhIjKlM'\necho solve('aBcDeFgHiJkLmN'); // 'AbCdEfGhIjKlMn'\necho\
    \ solve('aBcDeFgHiJkLmNo'); // 'AbCdEfGhIjKlMnO'\necho solve('aBcDeFgHiJkLmNoP');\
    \ // 'AbCdEfGhIjKlMnOp'\necho solve('aBcDeFgHiJkLmNoPq');\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'AbCdAbCdEfAbCdEfGAbCdEfGhAbCdEfGhIAbCdEfGhIjAbCdEfGhIjKAbCdEfGhIjKlAbCdEfGhIjKlMAbCdEfGhIjKlMnAbCdEfGhIjKlMnOAbCdEfGhIjKlMnOpAbCdEfGhIjKlMnOpQ

    Warning: Undefined variable $a in /tmp/tmpg_90i1g9.php on line 53


    Warning: Undefined variable $A in /tmp/tmpg_90i1g9.php on line 53

    '
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = '';\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result .= strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n\
    \        } else {\n            $result .= $char;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcm0adbid.php:27\n\
    Stack trace:\n#0 /tmp/tmpcm0adbid.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpcm0adbid.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve('Hello World'); // hELLO\
    \ wORLD\necho solve('Hello-LOL'); // hELLO-lol\necho solve('Sup DUDE!!?'); //\
    \ sUP dude!!?\necho solve('12345'); // 12345\necho solve('aBcD'); // AbCd\necho\
    \ solve('aBcD123'); // AbCd123\necho solve('aBcD123!@#$%^&*()_-+='); // AbCd123!@#$%^&*()_-+=\n\
    echo solve('aBcD123!@#$%^&*()_-+=[]{}|\\:;\"<>,.?/'); // AbCd123!@#$%^&*()_-+=[]{}|\\\
    :;\"<>,.?/\necho solve('abcdefghijklmnopqrstuvwxyz'); // ABCDEFGHIJKLMNOPQRSTUVWXYZ\n\
    echo solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ'); // abcdefghijklmnopqrstuvwxyz\necho\
    \ solve('The quick brown fox jumps over the lazy dog.'); // tHE QUICK BROWN FOX\
    \ JUMPS OVER THE LAZY DOG.\necho solve('THE QUICK BROWN FOX JUMPS OVER THE LAZY\
    \ DOG.'); // the quick brown fox jumps over the lazy dog.\necho solve('The_quick_brown_fox_jumps_over_the_lazy_dog.');\
    \ // tHE_QUICK_BROWN_FOX_JUMPS_OVER_THE_LAZY_DOG.\necho solve('THE_QUICK_BROWN_FOX_JUMPS_OVER_THE_LA\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "THE_QUICK_BROWN_FOX_JUMPS_OVER..."
    in /tmp/tmp_hwppmin.php on line 33

    '
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n    $letters_upper\
    \ = strtoupper($letters);\n    $letters_upper = str_split($letters_upper);\n \
    \   $new_string = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            $index = array_search($s[$i], $letters);\n       \
    \     $new_string .= $letters_upper[$index];\n        } elseif (in_array($s[$i],\
    \ $letters_upper)) {\n            $index = array_search($s[$i], $letters_upper);\n\
    \            $new_string .= $letters[$index];\n        } else {\n            $new_string\
    \ .= $s[$i];\n        }\n    }\n    return $new_string;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strtoupper(): Argument #1 ($string)\
    \ must be of type string, array given in /tmp/tmpunr1ojmv.php:11\nStack trace:\n\
    #0 /tmp/tmpunr1ojmv.php(11): strtoupper(Array)\n#1 /tmp/tmpunr1ojmv.php(29): solve('AsDf')\n\
    #2 /tmp/tmpunr1ojmv.php(33): candidate('AsDf')\n#3 /tmp/tmpunr1ojmv.php(43): test()\n\
    #4 {main}\n  thrown in /tmp/tmpunr1ojmv.php on line 11\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    $result = [];\n    for ($i = 0; $i < count($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            array_push($letters, $s[$i]);\n\
    \        } else {\n            array_push($result, $s[$i]);\n        }\n    }\n\
    \    if (count($letters) > 0) {\n        for ($i = 0; $i < count($letters); $i++)\
    \ {\n            if (ctype_upper($letters[$i])) {\n                array_push($result,\
    \ strtolower($letters[$i]));\n            } else {\n                array_push($result,\
    \ strtoupper($letters[$i]));\n            }\n        }\n    } else {\n       \
    \ $result = array_reverse($result);\n    }\n    return implode($result);\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo37tudqa.php:41\n\
    Stack trace:\n#0 /tmp/tmpo37tudqa.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpo37tudqa.php\
    \ on line 41\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = range('a', 'z');\n    $letters = array_merge($letters, range('A', 'Z'));\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsdp09uzc.php:28\n\
    Stack trace:\n#0 /tmp/tmpsdp09uzc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpsdp09uzc.php\
    \ on line 28\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    $letters = [];\n    foreach ($s as $key => $value) {\n\
    \        if (ctype_alpha($value)) {\n            $letters[] = $value;\n      \
    \  } else {\n            $result[] = $value;\n        }\n    }\n    if (count($letters)\
    \ > 0) {\n        foreach ($letters as $key => $value) {\n            if (ctype_lower($value))\
    \ {\n                $result[] = strtoupper($value);\n            } else {\n \
    \               $result[] = strtolower($value);\n            }\n        }\n  \
    \  } else {\n        $result = array_reverse($result);\n    }\n    return implode('',\
    \ $result);\n}\n\necho solve('aBcD');\necho solve('aBcD12');\necho solve('12');\n\
    echo solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\n\
    echo solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\n\
    echo solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\n\
    echo solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\n\
    echo solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\n\
    echo solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\n\
    echo solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\n\
    echo solve('aBcD12');\necho solve('aBcD12');\necho\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpij22m8pc.php on line 67

    '
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6mco9ti.php:26\n\
    Stack trace:\n#0 /tmp/tmpn6mco9ti.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn6mco9ti.php\
    \ on line 26\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n\
    \    $letters = array_merge($letters, array_map('strtoupper', $letters));\n  \
    \  $letters = array_flip($letters);\n    $result = [];\n    foreach ($s as $char)\
    \ {\n        if (isset($letters[$char])) {\n            $result[] = $char ===\
    \ strtolower($char) ? strtoupper($char) : strtolower($char);\n        } else {\n\
    \            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n\
    }\n\necho solve('Hello World'); // hELLO wORLD\necho solve('Hello CodeEval');\
    \ // hELLO cODEeVAL\necho solve('HELLO CODEEVAL'); // hello codeeval\necho solve('HELLO');\
    \ // ollEh\necho solve('12345'); // 12345\necho solve('1a2b3c4d5e'); // 1A2B3C4D5E\n\
    echo solve('String.with.punctuation characters!'); // sTRING.WITH.PUNCTUATION\
    \ CHARACTERS!\necho solve('!@#$%^&*()_+'); // !@#$%^&*()_+\necho solve('abcdefghijklmnopqrstuvwxyz');\
    \ // ABCDEFGHIJKLMNOPQRSTUVWXYZ\necho solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ'); //\
    \ abcdefghijklmnopqrstuvwxyz\necho solve('1234567890'); // 1234567890\necho solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\
    \ // ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\necho solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ12345678\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "abcdefghijklmnopqrstuvwxyzABCD..."
    in /tmp/tmp4w0khc93.php on line 37

    '
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6mco9ti.php:26\n\
    Stack trace:\n#0 /tmp/tmpn6mco9ti.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn6mco9ti.php\
    \ on line 26\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = \"\";\n    foreach ($letters as $letter) {\n\
    \        if (ctype_alpha($letter)) {\n            $result .= strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n\n\
    echo solve(\"Hello World\"); // hELLO wORLD\necho solve(\"HELLO WORLD\"); // hello\
    \ world\necho solve(\"HELLOworld\"); // helloWORLD\necho solve(\"12345\"); //\
    \ 12345\necho solve(\"1A2B3C4D5E\"); // 1a2b3c4d5e\necho solve(\"String.with.punctuation*(!)\"\
    ); // sTRING.WITH.PUNCTUATION*(!)\necho solve(\"\"); //\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hELLO wORLDhello worldhelloWORLD123451a2b3c4d5esTRING.WITH.PUNCTUATION*(!)\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpn5ak3eaq.php:34\nStack\
    \ trace:\n#0 /tmp/tmpn5ak3eaq.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpn5ak3eaq.php\
    \ on line 34\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $res = [];\n    $letters = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $letters[] = $char;\n        } else {\n            $res[] = $char;\n\
    \        }\n    }\n    if (empty($letters)) {\n        return strrev(implode('',\
    \ $res));\n    }\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $res[] = strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n\
    \        } else {\n            $res[] = $char;\n        }\n    }\n    return implode('',\
    \ $res);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo24q66gm.php:40\n\
    Stack trace:\n#0 /tmp/tmpo24q66gm.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpo24q66gm.php\
    \ on line 40\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve('Hello World'); // hELLO\
    \ wORLD\necho solve('HELLO WORLD'); // hello world\necho solve('HELLOworld');\
    \ // helloWORLD\necho solve('12345'); // 12345\necho solve('hello123world'); //\
    \ HELLO123WORLD\necho solve('hello'); // HELLO\necho solve('HELLO'); // hello\n\
    echo solve('^&*('); // ^&*(\necho solve('a'); // A\necho solve('A'); // a\necho\
    \ solve('z'); // Z\necho solve('Z'); // z\necho solve('aBcDeFgHiJkLmNoPqRsTuVwXyZ');\
    \ // AbCdEfGhIjKlMnOpQrStUvWxYz\necho solve('AbCdEfGhIjKlMnOpQrStUvWxYz'); //\
    \ aBcDeFgHiJkLmNoPqRsTuVwXyZ\necho solve('The Quick Brown Fox'); // tHE qUICK\
    \ bROWN fOX\necho solve('THE QUICK BROWN FOX'); // the quick brown fox\necho solve('!@#$%^&*()_+');\
    \ // !@#$%^&*()_+\necho solve('abcdefghijklmnopqrstuvwxyz'); // ABCDEFGHIJKLMNOPQRSTUVWXYZ\n\
    echo solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ'); // abcdefghijklmnopqrstuvwxyz\necho\
    \ solve('0123456789'); // 0123456789\necho solve('`~!@#$%^&*()-_=\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "`~!@#$%^&*()-_=" in /tmp/tmphe94ivgj.php
    on line 40

    '
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            if (ctype_upper($letter)) {\n\
    \                $result[] = strtolower($letter);\n            } else {\n    \
    \            $result[] = strtoupper($letter);\n            }\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjck0fe3.php:31\n\
    Stack trace:\n#0 /tmp/tmpbjck0fe3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpbjck0fe3.php\
    \ on line 31\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n    $letters\
    \ = array_merge($letters, array_map('strtoupper', $letters));\n    $letters =\
    \ array_flip($letters);\n    $s = str_split($s);\n    $result = [];\n    foreach\
    \ ($s as $char) {\n        if (isset($letters[$char])) {\n            $result[]\
    \ = $char === strtoupper($char) ? strtolower($char) : strtoupper($char);\n   \
    \     } else {\n            $result[] = $char;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbuc3w1e.php:31\n\
    Stack trace:\n#0 /tmp/tmpqbuc3w1e.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqbuc3w1e.php\
    \ on line 31\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    $letters = [];\n    foreach ($s as $value) {\n       \
    \ if (ctype_alpha($value)) {\n            $letters[] = $value;\n        } else\
    \ {\n            $result[] = $value;\n        }\n    }\n    if (count($letters)\
    \ > 0) {\n        $letters = array_reverse($letters);\n        foreach ($letters\
    \ as $value) {\n            $result[] = $value;\n        }\n    } else {\n   \
    \     $result = array_reverse($result);\n    }\n    return implode('', $result);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp20anbkym.php:35\n\
    Stack trace:\n#0 /tmp/tmp20anbkym.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp20anbkym.php\
    \ on line 35\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = range('a', 'z');\n    $letters = array_merge($letters, range('A', 'Z'));\n\
    \    $letters = array_flip($letters);\n    $s = str_split($s);\n    $s = array_map(function($v)\
    \ use ($letters) {\n        if (isset($letters[$v])) {\n            return $v\
    \ === strtolower($v) ? strtoupper($v) : strtolower($v);\n        }\n        return\
    \ $v;\n    }, $s);\n    return implode('', $s);\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_xhkpupb.php:28\n\
    Stack trace:\n#0 /tmp/tmp_xhkpupb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_xhkpupb.php\
    \ on line 28\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6mco9ti.php:26\n\
    Stack trace:\n#0 /tmp/tmpn6mco9ti.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn6mco9ti.php\
    \ on line 26\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = range('a', 'z');\n    $letters = array_merge($letters, range('A', 'Z'));\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsdp09uzc.php:28\n\
    Stack trace:\n#0 /tmp/tmpsdp09uzc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpsdp09uzc.php\
    \ on line 28\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7p8d2l2_.php:27\n\
    Stack trace:\n#0 /tmp/tmp7p8d2l2_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7p8d2l2_.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $key;\n        }\n    }\n    if (count($letters)\
    \ === 0) {\n        return strrev($s);\n    }\n    foreach ($letters as $letter)\
    \ {\n        if (ctype_lower($s[$letter])) {\n            $s[$letter] = strtoupper($s[$letter]);\n\
    \        } else {\n            $s[$letter] = strtolower($s[$letter]);\n      \
    \  }\n    }\n    return implode('', $s);\n}\n\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strrev(): Argument #1 ($string) must\
    \ be of type string, array given in /tmp/tmp1ea_gkfl.php:17\nStack trace:\n#0\
    \ /tmp/tmp1ea_gkfl.php(17): strrev(Array)\n#1 /tmp/tmp1ea_gkfl.php(30): solve(Array)\n\
    #2 /tmp/tmp1ea_gkfl.php(35): candidate('1234')\n#3 /tmp/tmp1ea_gkfl.php(44): test()\n\
    #4 {main}\n  thrown in /tmp/tmp1ea_gkfl.php on line 17\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $letters[] = $char;\n        }\n    }\n    if (count($letters)\
    \ === 0) {\n        return strrev($s);\n    }\n    foreach ($s as $key => $char)\
    \ {\n        if (ctype_alpha($char)) {\n            $s[$key] = ctype_upper($char)\
    \ ? strtolower($char) : strtoupper($char);\n        }\n    }\n    return implode('',\
    \ $s);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strrev(): Argument #1 ($string) must\
    \ be of type string, array given in /tmp/tmpq8d19m7l.php:17\nStack trace:\n#0\
    \ /tmp/tmpq8d19m7l.php(17): strrev(Array)\n#1 /tmp/tmpq8d19m7l.php(28): solve(Array)\n\
    #2 /tmp/tmpq8d19m7l.php(33): candidate('1234')\n#3 /tmp/tmpq8d19m7l.php(42): test()\n\
    #4 {main}\n  thrown in /tmp/tmpq8d19m7l.php on line 17\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve('abc'); // ABC\necho solve('abcABC123');\
    \ // ABCabc123\necho solve('CodeWars'); // cODEwARS\necho solve('abcABC123!@\u20AC\
    '); // ABCabc123!@\u20AC\necho solve('AAaaooOIi'); // aAaaOOoiI\necho solve('ABCabc');\
    \ // abcABC\necho solve('z'); // Z\necho solve('Z'); // z\necho solve('zZ'); //\
    \ zz\necho solve('Zz'); // zZ\necho solve('zZz'); // zzZ\necho solve('ZzZ'); //\
    \ zzZ\necho solve('zZzZ'); // zzZz\necho solve('ZzZz'); // zzZz\necho solve('zZzZz');\
    \ // zzZzZ\necho solve('ZzZzZ'); // zzZzZ\necho solve('zZzZzZ'); // zzZzZz\necho\
    \ solve('ZzZzZz'); // zzZzZz\necho solve('zZzZzZz'); // zzZzZzZ\necho solve('ZzZzZzZ');\
    \ // zzZzZzZ\necho solve('zZzZzZzZ'); // zzZzZzZz\necho solve('ZzZzZzZz'); //\
    \ zzZzZzZz\necho solve('zZzZzZzZz'); // zzZzZzZzZ\necho solve('ZzZzZzZzZ'); //\
    \ zzZzZzZzZ\necho solve('zZzZzZzZzZ'); // zzZzZzZzZ\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ABCABCabc123cODEwARSABCabc123!@\u20ACaaAAOOoiIabcABCZzZzzZZzZzZzZzZzzZzZZzZzZzZzZzZzZzZzzZzZzZZzZzZzZzZzZzZzZzZzZzZzzZzZzZzZZzZzZzZzZzZzZzZzZzZzZzZzZzZz\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpzwlslfz4.php:51\nStack\
    \ trace:\n#0 /tmp/tmpzwlslfz4.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpzwlslfz4.php\
    \ on line 51\n"
  timestamp: 1659978249
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters = str_split($letters);\n   \
    \ $letters2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    $letters2 = str_split($letters2);\n\
    \    $s = str_split($s);\n    $result = [];\n    $count = 0;\n    for ($i = 0;\
    \ $i < count($s); $i++) {\n        if (in_array($s[$i], $letters)) {\n       \
    \     $result[$i] = strtoupper($s[$i]);\n            $count++;\n        } else\
    \ if (in_array($s[$i], $letters2)) {\n            $result[$i] = strtolower($s[$i]);\n\
    \            $count++;\n        } else {\n            $result[$i] = $s[$i];\n\
    \        }\n    }\n    if ($count == 0) {\n        return strrev(implode(\"\"\
    , $s));\n    }\n    return implode(\"\", $result);\n}\n\necho solve(\"hello\"\
    );\necho solve(\"HELLO\");\necho solve(\"12345\");\necho solve(\"1a2b3c4d5e\"\
    );\necho solve(\"String.prototype.toAlternatingCase\");\necho solve(\"Hello World\"\
    );\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'HELLOhello543211A2B3C4D5EsTRING.PROTOTYPE.TOaLTERNATINGcASEhELLO wORLD

    Warning: Undefined variable $a in /tmp/tmpxqnrlp7a.php on line 50


    Warning: Undefined variable $A in /tmp/tmpxqnrlp7a.php on line 50

    '
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n    $letters\
    \ = array_merge($letters, array_map('strtoupper', $letters));\n    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (in_array($char, $letters))\
    \ {\n            $result[] = strtolower($char) == $char ? strtoupper($char) :\
    \ strtolower($char);\n        } else {\n            $result[] = $char;\n     \
    \   }\n    }\n    return implode('', $result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp38e8shi7.php:30\n\
    Stack trace:\n#0 /tmp/tmp38e8shi7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp38e8shi7.php\
    \ on line 30\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    $letters = [];\n    for ($i = 0; $i < count($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            $letters[] = $s[$i];\n  \
    \      } else {\n            $result[] = $s[$i];\n        }\n    }\n    if (count($letters)\
    \ === 0) {\n        return strrev(implode($result));\n    }\n    for ($i = 0;\
    \ $i < count($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n            $result[]\
    \ = strtolower($s[$i]) === $s[$i] ? strtoupper(array_pop($letters)) : strtolower(array_pop($letters));\n\
    \        }\n    }\n    return implode($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6b1wd9aq.php:35\n\
    Stack trace:\n#0 /tmp/tmp6b1wd9aq.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp6b1wd9aq.php\
    \ on line 35\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    $nonLetters = [];\n    foreach ($s as $char) {\n    \
    \    if (ctype_alpha($char)) {\n            $letters[] = $char;\n        } else\
    \ {\n            $nonLetters[] = $char;\n        }\n    }\n    $letters = array_map(function($letter)\
    \ {\n        return ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \    }, $letters);\n    $s = array_merge($letters, $nonLetters);\n    return implode('',\
    \ $s);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfnfn0wzv.php:32\n\
    Stack trace:\n#0 /tmp/tmpfnfn0wzv.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfnfn0wzv.php\
    \ on line 32\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6mco9ti.php:26\n\
    Stack trace:\n#0 /tmp/tmpn6mco9ti.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn6mco9ti.php\
    \ on line 26\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    $others = [];\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $letters[] = $char;\n        } else {\n\
    \            $others[] = $char;\n        }\n    }\n    $letters = array_map(function($letter)\
    \ {\n        return ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \    }, $letters);\n    return count($letters) ? implode('', $letters) . implode('',\
    \ $others) : implode('', array_reverse($others));\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1q49eoda.php:33\n\
    Stack trace:\n#0 /tmp/tmp1q49eoda.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1q49eoda.php\
    \ on line 33\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = '';\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result .= strtolower($letter)\
    \ === $letter ? strtoupper($letter) : strtolower($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgu5w3tb1.php:27\n\
    Stack trace:\n#0 /tmp/tmpgu5w3tb1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgu5w3tb1.php\
    \ on line 27\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = '';\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result .= $letter === strtoupper($letter)\
    \ ? strtolower($letter) : strtoupper($letter);\n        } else {\n           \
    \ $result .= $letter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4_j0kgqg.php:27\n\
    Stack trace:\n#0 /tmp/tmp4_j0kgqg.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4_j0kgqg.php\
    \ on line 27\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ === $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\necho solve('Hello World'); // hELLO wORLD\necho solve('HELLO WORLD'); //\
    \ hello world\necho solve('HELLOworld'); // helloWORLD\necho solve('12345'); //\
    \ 12345\necho solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho solve('String.with.punctuation\
    \ chars'); // sTRING.WITH.PUNCTUATION CHARS\necho solve('DIGEST'); // digest\n\
    echo solve('AL-AZIZ'); // al-aziz\necho solve('Hello World!'); // hELLO wORLD!\n\
    echo solve('Hello World!!'); // hELLO wORLD!!\necho solve('Hello World!!!'); //\
    \ hELLO wORLD!!!\necho solve('Hello World!!!!'); // hELLO wORLD!!!!\necho solve('Hello\
    \ World!!!!!'); // hELLO wORLD!!!!!\necho solve('Hello World!!!!!!'); // hELLO\
    \ wORLD!!!!!!\necho solve('Hello World!!!!!!!'); // hELLO wORLD!!!!!!!\necho solve('Hello\
    \ World!!!!!!!!'); // hELLO wORLD!!!!!!!!\necho solve('Hello World!!!!!!!!!');\
    \ // hELLO wORLD!!!!!!!!!\necho solve('Hello World!!!!!!!!!!'); // hELLO wORLD!!!!!!!!!!\n\
    echo solve('Hello World!!!!!!!!!!!'); // hELLO wORLD!!!!!!!!!!!\necho solve('Hello\
    \ World!!!!!!!!!!!!'); // hELLO wORLD!!!!!!!!!!!!\necho solve('Hello World!!!!!!!!!!!!!');\
    \ // hELLO wORLD!!!!!!!!!!!!!\necho solve('Hello World!!!!!!!!!!!!!!'); // hELLO\
    \ wORLD!!!!!!!!!!!!!!\necho solve('Hello World!!!!!!!!!!!!!!!'); // hELLO wORLD!!!!!!!!!!!!!!!\n\
    echo solve('Hello World!!!!!!!!!!!!!!!!'); // hELLO wORLD!!!!!!!!!!!!!!!!\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hELLO wORLDhello worldhelloWORLD123451A2B3C4D5EsTRING.WITH.PUNCTUATION\
    \ CHARSdigestal-azizhELLO wORLD!hELLO wORLD!!hELLO wORLD!!!hELLO wORLD!!!!hELLO\
    \ wORLD!!!!!hELLO wORLD!!!!!!hELLO wORLD!!!!!!!hELLO wORLD!!!!!!!!hELLO wORLD!!!!!!!!!hELLO\
    \ wORLD!!!!!!!!!!hELLO wORLD!!!!!!!!!!!hELLO wORLD!!!!!!!!!!!!hELLO wORLD!!!!!!!!!!!!!hELLO\
    \ wORLD!!!!!!!!!!!!!!hELLO wORLD!!!!!!!!!!!!!!!hELLO wORLD!!!!!!!!!!!!!!!!\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpum3uz3eq.php:51\nStack trace:\n\
    #0 /tmp/tmpum3uz3eq.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpum3uz3eq.php\
    \ on line 51\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $res = [];\n    $letters = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $letters[] = $char;\n        } else {\n            $res[] = $char;\n\
    \        }\n    }\n    if (empty($letters)) {\n        return strrev(implode('',\
    \ $res));\n    }\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $res[] = strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n\
    \        } else {\n            $res[] = $char;\n        }\n    }\n    return implode('',\
    \ $res);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo24q66gm.php:40\n\
    Stack trace:\n#0 /tmp/tmpo24q66gm.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpo24q66gm.php\
    \ on line 40\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $res = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $res[] = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $res[] = $char;\n        }\n    }\n    return implode('',\
    \ $res);\n}\n\nvar_dump(solve('abc')); // 'ABC'\nvar_dump(solve('ABC')); // 'abc'\n\
    var_dump(solve('123')); // '123'\nvar_dump(solve('aBc')); // 'AbC'\nvar_dump(solve('a1b2c3'));\
    \ // 'A1B2C3'\nvar_dump(solve('a1B2c3')); // 'A1b2C3'\nvar_dump(solve('a1b2C3'));\
    \ // 'A1B2c3'\nvar_dump(solve('a1b2C3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26'));\
    \ // 'A1B2C3D4E5F6G7H8I9J10K11L12M13N14O15P16Q17R18S19T20U21V22W23X24Y25Z26'\n\
    var_dump(solve('a1b2C3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26A'));\
    \ // 'A1B2c3D4E5F6G7H8I9J10K11L12M13N14O15P16Q17R18S19T20U21V22W23X24Y25Z26a'\n\
    var_dump(solve('a1b2C3d4e5f6g7h8i9j10k11l12m\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "a1b2C3d4e5f6g7h8i9j10k11l12m"
    in /tmp/tmp5gd3t345.php on line 30

    '
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result[] = strtoupper($char) === $char ? strtolower($char) :\
    \ strtoupper($char);\n        } else {\n            $result[] = $char;\n     \
    \   }\n    }\n    return implode('', $result);\n}\n\necho solve('abc'); // 'ABC'\n\
    echo solve('abcABC'); // 'ABCabc'\necho solve('abc123'); // 'ABC123'\necho solve('123');\
    \ // '321'\necho solve('aBc'); // 'AbC'\necho solve('aBc123'); // 'AbC123'\necho\
    \ solve('aBcDeF'); // 'AbCdEf'\necho solve('aBcDeF123'); // 'AbCdEf123'\necho\
    \ solve('aBcDeF12345'); // 'AbCdEf12345'\necho solve('aBcDeF123456789'); // 'AbCdEf123456789'\n\
    echo solve('AbCdEf123456789'); // 'aBcDeF123456789'\necho solve('The quick brown\
    \ fox jumps over the lazy dog.'); // 'tHE QUICK BROWN FOX JUMPS OVER THE LAZY\
    \ DOG.'\necho solve('123456789'); // '987654321'\necho solve('abcdefghijklmnopqrstuvwxyz');\
    \ // 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\necho solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ'); //\
    \ 'abcdefghijklmnopqrstuvwxyz'\necho solve('The quick brown fox jumps over the\
    \ lazy dog.'); // 'tHE QUICK BROWN FOX JUMPS OVER THE LAZY DOG.'\necho solve('123456789');\
    \ // '987654321'\necho solve('abcdefghijklmnopqrstuvwxyz'); // 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    echo solve('ABCDEFGHIJKLM\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "ABCDEFGHIJKLM" in /tmp/tmpz5nt805w.php
    on line 39

    '
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    $hasLetter = false;\n    foreach ($s as $char) {\n   \
    \     if (ctype_alpha($char)) {\n            $hasLetter = true;\n            $result[]\
    \ = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n        } else\
    \ {\n            $result[] = $char;\n        }\n    }\n    return $hasLetter ?\
    \ implode('', $result) : strrev($s);\n}\n\necho solve('Hello World'); // hELLO\
    \ wORLD\necho solve('Hello CodeEval'); // hELLO cODEEVAL\necho solve('HELLO CODEEVAL');\
    \ // hello codeeval\necho solve('HELLO'); // hello\necho solve('12345'); // 54321\n\
    echo solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho solve('12345a'); // 54321A\necho\
    \ solve('12345A'); // 54321a\necho solve('12345aA'); // 54321Aa\necho solve('12345aAa');\
    \ // 54321AaA\necho solve('12345aAaA'); // 54321AaAa\necho solve('12345aAaAa');\
    \ // 54321AaAaA\necho solve('12345aAaAaA'); // 54321AaAaAa\necho solve('12345aAaAaAa');\
    \ // 54321AaAaAaA\necho solve('12345aAaAaAaA'); // 54321AaAaAaAa\necho solve('12345aAaAaAaAa');\
    \ // 54321AaAaAaAaA\necho solve('12345aAaAaAaAaA'); // 54321AaAaAaAaAa\necho solve('12345aAaAaAaAaAa');\
    \ // 54321AaAaAaAaAaA\necho solve('12345aAaAaAaAaAaA'); // 54321A\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hELLO wORLDhELLO cODEeVALhello codeevalhello\nFatal error: Uncaught TypeError:\
    \ strrev(): Argument #1 ($string) must be of type string, array given in /tmp/tmpfuwp8k61.php:20\n\
    Stack trace:\n#0 /tmp/tmpfuwp8k61.php(20): strrev(Array)\n#1 /tmp/tmpfuwp8k61.php(27):\
    \ solve(Array)\n#2 {main}\n  thrown in /tmp/tmpfuwp8k61.php on line 20\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    $isLetter = false;\n    foreach ($s as $char) {\n    \
    \    if (ctype_alpha($char)) {\n            $isLetter = true;\n            $result[]\
    \ = strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n    \
    \    } else {\n            $result[] = $char;\n        }\n    }\n    return $isLetter\
    \ ? implode('', $result) : strrev($s);\n}\n\necho solve('abcdefg'); // ABCDEFG\n\
    echo solve('abcdefg123'); // ABCDEFG123\necho solve('abcdefg123!@#'); // ABCDEFG123!@#\n\
    echo solve('123!@#'); // 321!@#\necho solve('123!@#abc'); // 321!@#ABC\necho solve('123!@#ABC');\
    \ // 321!@#abc\necho solve('123!@#ABCabc'); // 321!@#abcABC\necho solve('123!@#ABCabcABC');\
    \ // 321!@#abcABCabc\necho solve('123!@#ABCabcABCabc'); // 321!@#abcABCabcABC\n\
    echo solve('123!@#ABCabcABCabcABC'); // 321!@#abcABCabcABCabc\necho solve('123!@#ABCabcABCabcABCabc');\
    \ // 321!@#abcABCabcABCabcABC\necho solve('123!@#ABCabcABCabcABCabcABC'); // 321!@#abcABCabcABCabcABCabc\n\
    echo solve('123!@#ABCabcABCabcABCabcABCabc'); // 321!@#abcABCabcABCabcABCabcABC\n\
    echo solve('123!@#ABCabcABCabcABCabcABCabcABC'); // 321!@#abcABCabcABCabcABCabcABCabc\n\
    echo solve('123!@#ABCabcABCabcABCabcABCabcABCabc'); // 321!@#abcABCabcABCabcABCabcABCabcABC\n\
    echo solve('123!@#ABCabcABCabcABCabcABCabcABCabcABC'); // 321!@#abcABCabcABCabcABCabcABCabcABCabc\n\
    echo solve('123!@#ABCabcABCabcABCabcABCabcABCabcABCabc'); // 321!@#abcABCabcABCabcABCabcABCabcABCabcABC\n\
    echo solve('123!@#ABCabcABCabc\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "123!@#ABCabcABCabc" in /tmp/tmpskupvvn6.php
    on line 40

    '
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    $others = [];\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $letters[] = $char;\n        } else {\n\
    \            $others[] = $char;\n        }\n    }\n    $letters = array_map(function($letter)\
    \ {\n        if (ctype_upper($letter)) {\n            return strtolower($letter);\n\
    \        } else {\n            return strtoupper($letter);\n        }\n    },\
    \ $letters);\n    $s = array_merge($letters, $others);\n    return implode('',\
    \ $s);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpljeqfhc4.php:36\n\
    Stack trace:\n#0 /tmp/tmpljeqfhc4.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpljeqfhc4.php\
    \ on line 36\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = '';\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result .= strtolower($letter)\
    \ === $letter ? strtoupper($letter) : strtolower($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgu5w3tb1.php:27\n\
    Stack trace:\n#0 /tmp/tmpgu5w3tb1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgu5w3tb1.php\
    \ on line 27\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ === $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\necho solve('Hello World');\necho solve('Hello-LOL');\necho solve('Sup DUDE!!?');\n\
    echo solve('12345');\necho solve('12345');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBc\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "aBc" in /tmp/tmp7kcwk2uc.php
    on line 66

    '
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $key;\n        }\n    }\n    if (empty($letters))\
    \ {\n        return strrev($s);\n    }\n    foreach ($letters as $key => $value)\
    \ {\n        if (ctype_lower($s[$value])) {\n            $s[$value] = strtoupper($s[$value]);\n\
    \        } else {\n            $s[$value] = strtolower($s[$value]);\n        }\n\
    \    }\n    return implode($s);\n}\n\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strrev(): Argument #1 ($string) must\
    \ be of type string, array given in /tmp/tmpz1skspth.php:17\nStack trace:\n#0\
    \ /tmp/tmpz1skspth.php(17): strrev(Array)\n#1 /tmp/tmpz1skspth.php(30): solve(Array)\n\
    #2 /tmp/tmpz1skspth.php(35): candidate('1234')\n#3 /tmp/tmpz1skspth.php(44): test()\n\
    #4 {main}\n  thrown in /tmp/tmpz1skspth.php on line 17\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve('aBcD'); // 'AbCd'\necho\
    \ solve('aBcD12'); // 'AbCd12'\necho solve('aBcD12!@'); // 'AbCd12!@'\necho solve('aBcD12!@#$%^&*()_+');\
    \ // 'AbCd12!@#$%^&*()_+'\necho solve('aBcD12!@#$%^&*()_+-=[]{}|;:\",./<>?');\
    \ // 'AbCd12!@#$%^&*()_+-=[]{}|;:\",./<>?'\necho solve('aBcD12!@#$%^&*()_+-=[]{}|;:\"\
    ,./<>?`~'); // 'AbCd12!@#$%^&*()_+-=[]{}|;:\",./<>?`~'\necho solve('aBcD12!@#$%^&*()_+-=[]{}|;:\"\
    ,./<>?`~1234567890-='); // 'AbCd12!@#$%^&*()_+-=[]{}|;:\",./<>?`~1234567890-='\n\
    echo solve('aBcD12!@#$%^&*()_+-=[]{}|;:\",./<>?`~1234567890-=qwertyuiop[]\\asdfghjkl;zxcvbnm,./');\
    \ // 'AbCd12!@#$%^&*()_+-=[]{}|;:\",./<>?`~12345678\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "AbCdAbCd12AbCd12!@AbCd12!@#$%^&*()_+AbCd12!@#$%^&*()_+-=[]{}|;:\",./<>?AbCd12!@#$%^&*()_+-=[]{}|;:\"\
    ,./<>?`~AbCd12!@#$%^&*()_+-=[]{}|;:\",./<>?`~1234567890-=AbCd12!@#$%^&*()_+-=[]{}|;:\"\
    ,./<>?`~1234567890-=QWERTYUIOP[]\\ASDFGHJKL;ZXCVBNM,./\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpqso4eyzw.php:34\nStack trace:\n#0 /tmp/tmpqso4eyzw.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqso4eyzw.php on line 34\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = '';\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result .= strtolower($letter)\
    \ == $letter ? strtoupper($letter) : strtolower($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n\n\
    echo solve('Hello World'); // hELLO wORLD\necho solve('HELLO WORLD'); // hello\
    \ world\necho solve('12345'); // 12345\necho solve('1a2b3c4d5e'); // 1A2B3C4D5E\n\
    echo solve('String.with.punctuation characters!'); // sTRING.WITH.PUNCTUATION\
    \ CHARACTERS!\necho solve('Hello World!'); // hELLO wORLD!\necho solve('Hello\
    \ World!?!'); // hELLO wORLD!?!\necho solve('\xA1\xBFHello World?!\xA1'); // \xA1\
    \xBFhELLO wORLD?!\xA1\necho solve('\xA1\xBFHello World?!\xA1'); // \xA1\xBFhELLO\
    \ wORLD?!\xA1\necho solve('Hello World!?!\xA1\xBF'); // hELLO wORLD!?!\xA1\xBF\
    \necho solve('Hello World!?!\xA1\xBF'); // hELLO wORLD!?!\xA1\xBF\necho solve('Hello\
    \ World!?!\xA1\xBF'); // hELLO wORLD!?!\xA1\xBF\necho solve('Hello World!?!\xA1\
    \xBF'); // hELLO wORLD!?!\xA1\xBF\necho solve('Hello World!?!\xA1\xBF'); // hELLO\
    \ wORLD!?!\xA1\xBF\necho solve('Hello World!?!\xA1\xBF'); // hELLO wORLD!?!\xA1\
    \xBF\necho solve('Hello World!?!\xA1\xBF'); // hELLO wORLD!?!\xA1\xBF\necho solve('Hello\
    \ World!?!\xA1\xBF'); // hELLO wORLD!?!\xA1\xBF\necho solve('Hello World!?!\xA1\
    \xBF'); // hELLO wOR\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hELLO wORLDhello world123451A2B3C4D5EsTRING.WITH.PUNCTUATION CHARACTERS!hELLO\
    \ wORLD!hELLO wORLD!?!\xA1\xBFhELLO wORLD?!\xA1\xA1\xBFhELLO wORLD?!\xA1hELLO\
    \ wORLD!?!\xA1\xBFhELLO wORLD!?!\xA1\xBFhELLO wORLD!?!\xA1\xBFhELLO wORLD!?!\xA1\
    \xBFhELLO wORLD!?!\xA1\xBFhELLO wORLD!?!\xA1\xBFhELLO wORLD!?!\xA1\xBFhELLO wORLD!?!\xA1\
    \xBFhELLO wORLD!?!\xA1\xBF\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw9aptttg.php:45\n\
    Stack trace:\n#0 /tmp/tmpw9aptttg.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpw9aptttg.php\
    \ on line 45\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6mco9ti.php:26\n\
    Stack trace:\n#0 /tmp/tmpn6mco9ti.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn6mco9ti.php\
    \ on line 26\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) === $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx122px_j.php:26\n\
    Stack trace:\n#0 /tmp/tmpx122px_j.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpx122px_j.php\
    \ on line 26\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = '';\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result .= strtolower($letter)\
    \ === $letter ? strtoupper($letter) : strtolower($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgu5w3tb1.php:27\n\
    Stack trace:\n#0 /tmp/tmpgu5w3tb1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgu5w3tb1.php\
    \ on line 27\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = '';\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result .= strtolower($letter)\
    \ === $letter ? strtoupper($letter) : strtolower($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgu5w3tb1.php:27\n\
    Stack trace:\n#0 /tmp/tmpgu5w3tb1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgu5w3tb1.php\
    \ on line 27\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n    $letters\
    \ = array_merge($letters, array_map('strtoupper', $letters));\n    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (in_array($char, $letters))\
    \ {\n            $result[] = strtolower($char) == $char ? strtoupper($char) :\
    \ strtolower($char);\n        } else {\n            $result[] = $char;\n     \
    \   }\n    }\n    return implode('', $result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp38e8shi7.php:30\n\
    Stack trace:\n#0 /tmp/tmp38e8shi7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp38e8shi7.php\
    \ on line 30\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6mco9ti.php:26\n\
    Stack trace:\n#0 /tmp/tmpn6mco9ti.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn6mco9ti.php\
    \ on line 26\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $res = '';\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $res .= ctype_lower($char) ? strtoupper($char) : strtolower($char);\n\
    \        } else {\n            $res .= $char;\n        }\n    }\n    return $res;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi5voeoae.php:27\n\
    Stack trace:\n#0 /tmp/tmpi5voeoae.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi5voeoae.php\
    \ on line 27\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    $nonLetters = [];\n    foreach ($s as $char) {\n    \
    \    if (ctype_alpha($char)) {\n            $letters[] = $char;\n        } else\
    \ {\n            $nonLetters[] = $char;\n        }\n    }\n    if (count($letters)\
    \ === 0) {\n        return strrev(implode('', $nonLetters));\n    }\n    $letters\
    \ = array_map(function ($char) {\n        return ctype_upper($char) ? strtolower($char)\
    \ : strtoupper($char);\n    }, $letters);\n    return implode('', $letters) .\
    \ implode('', $nonLetters);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6qmjglca.php:36\n\
    Stack trace:\n#0 /tmp/tmp6qmjglca.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6qmjglca.php\
    \ on line 36\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = '';\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result .= strtolower($letter)\
    \ == $letter ? strtoupper($letter) : strtolower($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjyxmyfn4.php:27\n\
    Stack trace:\n#0 /tmp/tmpjyxmyfn4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjyxmyfn4.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters = str_split($letters);\n   \
    \ $letters = array_merge($letters, array_map('strtoupper', $letters));\n    $s\
    \ = str_split($s);\n    $result = \"\";\n    foreach ($s as $char) {\n       \
    \ if (in_array($char, $letters)) {\n            if (ctype_lower($char)) {\n  \
    \              $result .= strtoupper($char);\n            } else {\n         \
    \       $result .= strtolower($char);\n            }\n        } else {\n     \
    \       $result .= $char;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjy6hnuxh.php:34\n\
    Stack trace:\n#0 /tmp/tmpjy6hnuxh.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpjy6hnuxh.php\
    \ on line 34\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = [];\n    $letters = [];\n    foreach ($s as $key => $value) {\n\
    \        if (ctype_alpha($value)) {\n            $letters[] = $value;\n      \
    \  } else {\n            $result[] = $value;\n        }\n    }\n    if (count($letters)\
    \ === 0) {\n        return strrev(implode('', $result));\n    }\n    foreach ($s\
    \ as $key => $value) {\n        if (ctype_alpha($value)) {\n            $result[]\
    \ = strtolower($value) === $value ? strtoupper(array_pop($letters)) : strtolower(array_pop($letters));\n\
    \        }\n    }\n    return implode('', $result);\n}\n\necho solve('Hello World');\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: " dLROWoLLEH\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc67yqt1l.php:36\n\
    Stack trace:\n#0 /tmp/tmpc67yqt1l.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpc67yqt1l.php\
    \ on line 36\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n    $letters\
    \ = array_merge($letters, array_map('strtoupper', $letters));\n    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (in_array($char, $letters))\
    \ {\n            $result[] = strtolower($char) == $char ? strtoupper($char) :\
    \ strtolower($char);\n        } else {\n            $result[] = $char;\n     \
    \   }\n    }\n    return implode('', $result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp38e8shi7.php:30\n\
    Stack trace:\n#0 /tmp/tmp38e8shi7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp38e8shi7.php\
    \ on line 30\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7p8d2l2_.php:27\n\
    Stack trace:\n#0 /tmp/tmp7p8d2l2_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7p8d2l2_.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $letters[] = $char;\n        }\n    }\n    if (empty($letters))\
    \ {\n        return strrev($s);\n    }\n    foreach ($s as $key => $char) {\n\
    \        if (ctype_alpha($char)) {\n            $s[$key] = strtolower($char) ===\
    \ $char ? strtoupper($char) : strtolower($char);\n        }\n    }\n    return\
    \ implode('', $s);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strrev(): Argument #1 ($string) must\
    \ be of type string, array given in /tmp/tmpcpmllh6n.php:17\nStack trace:\n#0\
    \ /tmp/tmpcpmllh6n.php(17): strrev(Array)\n#1 /tmp/tmpcpmllh6n.php(28): solve(Array)\n\
    #2 /tmp/tmpcpmllh6n.php(33): candidate('1234')\n#3 /tmp/tmpcpmllh6n.php(42): test()\n\
    #4 {main}\n  thrown in /tmp/tmpcpmllh6n.php on line 17\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n\
    \    $letters = array_merge($letters, array_map('strtoupper', $letters));\n  \
    \  $s = str_split($s);\n    foreach ($s as $char) {\n        if (in_array($char,\
    \ $letters)) {\n            $result .= strtolower($char) === $char ? strtoupper($char)\
    \ : strtolower($char);\n        } else {\n            $result .= $char;\n    \
    \    }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph55vtpyy.php:30\n\
    Stack trace:\n#0 /tmp/tmph55vtpyy.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph55vtpyy.php\
    \ on line 30\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = '';\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result .= ctype_upper($letter)\
    \ ? strtolower($letter) : strtoupper($letter);\n        } else {\n           \
    \ $result .= $letter;\n        }\n    }\n    return $result;\n}\n\necho solve('Hello\
    \ World'); // hELLO wORLD\necho solve('HELLO WORLD'); // hello world\necho solve('12345');\
    \ // 12345\necho solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho solve('String.with.punctuation\
    \ characters!'); // sTRING.WITH.PUNCTUATION CHARACTERS!\necho solve('!@#$%^&*()_+');\
    \ // !@#$%^&*()_+\necho solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz');\
    \ // abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\necho solve('The quick\
    \ brown fox jumps over the lazy dog.'); // tHE QUICK BROWN FOX JUMPS OVER THE\
    \ LAZY DOG.\necho solve('THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG.'); // the\
    \ quick brown fox jumps over the lazy dog.\nfunction candidate(...$args) {\n \
    \   return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hELLO wORLDhello world123451A2B3C4D5EsTRING.WITH.PUNCTUATION CHARACTERS!!@#$%^&*()_+abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZtHE\
    \ QUICK BROWN FOX JUMPS OVER THE LAZY DOG.the quick brown fox jumps over the lazy\
    \ dog.\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmhnta6xa.php:36\n\
    Stack trace:\n#0 /tmp/tmpmhnta6xa.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmhnta6xa.php\
    \ on line 36\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $result = '';\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result .= strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n\
    \        } else {\n            $result .= $char;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcm0adbid.php:27\n\
    Stack trace:\n#0 /tmp/tmpcm0adbid.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpcm0adbid.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = range('a', 'z');\n    $letters = array_merge($letters, range('A', 'Z'));\n\
    \    $letters = array_flip($letters);\n    $s = str_split($s);\n    $s = array_map(function($v)\
    \ use ($letters) {\n        if (isset($letters[$v])) {\n            return ctype_lower($v)\
    \ ? strtoupper($v) : strtolower($v);\n        }\n        return $v;\n    }, $s);\n\
    \    return implode('', $s);\n}\n\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzk9c4wpb.php:28\n\
    Stack trace:\n#0 /tmp/tmpzk9c4wpb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzk9c4wpb.php\
    \ on line 28\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $res = '';\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $res .= strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n\
    \        } else {\n            $res .= $char;\n        }\n    }\n    return $res;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu9p9wiww.php:27\n\
    Stack trace:\n#0 /tmp/tmpu9p9wiww.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpu9p9wiww.php\
    \ on line 27\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $res = '';\n    $flag = false;\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $flag = true;\n            $res .= ctype_lower($char) ? strtoupper($char)\
    \ : strtolower($char);\n        } else {\n            $res .= $char;\n       \
    \ }\n    }\n    return $flag ? $res : strrev($res);\n}\n\necho solve('hello world');\n\
    echo solve('HELLO WORLD');\necho solve('12345');\necho solve('1a2b3c4d5e');\n\
    echo solve('String.prototype.charAt');\necho solve('String.prototype.charCodeAt');\n\
    echo solve('String.prototype.concat');\necho solve('String.prototype.indexOf');\n\
    echo solve('String.prototype.lastIndexOf');\necho solve('String.prototype.localeCompare');\n\
    echo solve('String.prototype.match');\necho solve('String.prototype.replace');\n\
    echo solve('String.prototype.search');\necho solve('String.prototype.slice');\n\
    echo solve('String.prototype.split');\necho solve('String.prototype.substring');\n\
    echo solve('String.prototype.toLocaleLowerCase');\necho solve('String.prototype.toLocaleUpperCase');\n\
    echo solve('String.prototype.toLowerCase');\necho solve('String.prototype.toString');\n\
    echo solve('String.prototype.toUpperCase');\necho solve('String.prototype.trim');\n\
    echo solve('String.prototype.valueOf');\necho solve('String.raw');\necho solve('abcdefghijklmnopqrstuvwxyz');\n\
    echo solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ');\necho solve('0123456789');\necho solve('`~!@#$%^&*()-_=+[{]}\\\
    \\|;:\\'\",<.>/?');\necho solve('The quick brown fox jumps over the lazy dog.');\n\
    echo solve('THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG.');\necho solve('Lorem\
    \ ipsum\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "Lorem ipsum" in /tmp/tmpp_2w2yc4.php
    on line 53

    '
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7p8d2l2_.php:27\n\
    Stack trace:\n#0 /tmp/tmp7p8d2l2_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7p8d2l2_.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n    $letters\
    \ = array_merge($letters, array_map('strtoupper', $letters));\n    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (in_array($char, $letters))\
    \ {\n            $result[] = strtolower($char) == $char ? strtoupper($char) :\
    \ strtolower($char);\n        } else {\n            $result[] = $char;\n     \
    \   }\n    }\n    return implode('', $result);\n}\n\necho solve('Hello World');\
    \ // hELLO wORLD\necho solve('HELLO WORLD'); // hello world\necho solve('12345');\
    \ // 12345\necho solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho solve('String.with.punctuation\
    \ characters!'); // sTRING.WITH.PUNCTUATION CHARACTERS!\necho solve('DIGEST');\
    \ // digest\necho solve('AL-AZIZ'); // al-aziz\necho solve('CodeWars'); // cODEwARS\n\
    echo solve('abcde'); // ABCDE\necho solve('ABCDE'); // abcde\necho solve('abcdE');\
    \ // ABCDe\necho solve('abcdeF'); // ABCDEF\necho solve('abcdeFG'); // ABCDEfg\n\
    echo solve('abcdeFGH'); // ABCDEfgh\necho solve('abcdeFGHI'); // ABCDEfghi\necho\
    \ solve('abcdeFGHIJ'); // ABCDEfghij\necho solve('abcdeFGHIJK'); // ABCDEfghijk\n\
    echo solve('abcdeFGHIJKL'); // ABCDEfghijkl\necho solve('abcdeFGHIJKLM'); // ABCDEfghijklm\n\
    echo solve('abcdeFGHIJKLMN'); // ABCDEfghijklmn\necho solve('abcdeFGHIJKLMNO');\
    \ // ABCDEfghijklmno\necho solve('abcdeFGHIJKLMNOP'); // ABCDEfghij\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hELLO wORLDhello world123451A2B3C4D5EsTRING.WITH.PUNCTUATION CHARACTERS!digestal-azizcODEwARSABCDEabcdeABCDeABCDEfABCDEfgABCDEfghABCDEfghiABCDEfghijABCDEfghijkABCDEfghijklABCDEfghijklmABCDEfghijklmnABCDEfghijklmnoABCDEfghijklmnop\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpkkp8th0v.php:52\nStack\
    \ trace:\n#0 /tmp/tmpkkp8th0v.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpkkp8th0v.php\
    \ on line 52\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n\
    \    $lettersUpper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    $lettersUpper = str_split($lettersUpper);\n\
    \    $s = str_split($s);\n    for ($i = 0; $i < count($s); $i++) {\n        if\
    \ (in_array($s[$i], $letters)) {\n            $s[$i] = strtoupper($s[$i]);\n \
    \       } else if (in_array($s[$i], $lettersUpper)) {\n            $s[$i] = strtolower($s[$i]);\n\
    \        }\n    }\n    $result = implode('', $s);\n    return $result;\n}\n\n\
    $s = 'aBcD';\necho solve($s);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "AbCd\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2mtrnx8q.php:34\n\
    Stack trace:\n#0 /tmp/tmp2mtrnx8q.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2mtrnx8q.php\
    \ on line 34\n"
  timestamp: 1659978249
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = [];\n    $hasLetters = false;\n    foreach ($letters\
    \ as $letter) {\n        if (ctype_alpha($letter)) {\n            $hasLetters\
    \ = true;\n            $result[] = ctype_lower($letter) ? strtoupper($letter)\
    \ : strtolower($letter);\n        } else {\n            $result[] = $letter;\n\
    \        }\n    }\n    return $hasLetters ? implode('', $result) : strrev($s);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpxehqmxj8.php on line 34


    Warning: Undefined variable $A in /tmp/tmpxehqmxj8.php on line 34

    '
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = '';\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result .= ctype_upper($letter)\
    \ ? strtolower($letter) : strtoupper($letter);\n        } else {\n           \
    \ $result .= $letter;\n        }\n    }\n    return $result ? $result : strrev($s);\n\
    }\n\necho solve('aBcD'); // 'AbCd'\necho solve('aBcD12'); // 'AbCd12'\necho solve('aBcD12!@');\
    \ // 'AbCd12!@'\necho solve('aBcD12!@#$%^&*()_+'); // 'AbCd12!@#$%^&*()_+'\necho\
    \ solve('aBcD12!@#$%^&*()_+-='); // 'AbCd12!@#$%^&*()_+-='\necho solve('aBcD12!@#$%^&*()_+-=[]{}|;:\"\
    ,./<>?'); // 'AbCd12!@#$%^&*()_+-=[]{}|;:\",./<>?'\necho solve('aBcD12!@#$%^&*()_+-=[]{}|;:\"\
    ,./<>?\\\\'); // 'AbCd12!@#$%^&*()_+-=[]{}|;:\",./<>?\\\\'\necho solve('aBcD12!@#$%^&*()_+-=[]{}|;:\"\
    ,./<>?\\\\`~'); // 'AbCd12!@#$%^&*()_+-=[]{}|;:\",./<>?\\\\`~'\necho solve('aBcD12!@#$%^&*()_+-=[]{}|;:\"\
    ,./<>?\\\\`~1234567890'); // 'AbCd12!@#$%^&*()_+-=[]{}|;:\",./<>?\\\\`~1234567890'\n\
    echo\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpex2b9g7h.php on line 31

    '
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7p8d2l2_.php:27\n\
    Stack trace:\n#0 /tmp/tmp7p8d2l2_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7p8d2l2_.php\
    \ on line 27\n"
  timestamp: 1659978248
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    $len = strlen($s);\n    $hasLetters = false;\n    for ($i = 0; $i\
    \ < $len; $i++) {\n        $char = $s[$i];\n        if (ctype_alpha($char)) {\n\
    \            $hasLetters = true;\n            $result .= strtolower($char) ==\
    \ $char ? strtoupper($char) : strtolower($char);\n        } else {\n         \
    \   $result .= $char;\n        }\n    }\n    return $hasLetters ? $result : strrev($s);\n\
    }\n\necho solve('Hello World'); // hELLO wORLD\necho solve('HELLO WORLD'); //\
    \ hello world\necho solve('12345'); // 54321\necho solve('123456789'); // 987654321\n\
    echo solve('abcdeFgtrzw'); // ABCDEFGT\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'hELLO wORLDhello world54321987654321ABCDEfGTRZW

    Warning: Undefined variable $a in /tmp/tmpd03sngrk.php on line 40


    Warning: Undefined variable $A in /tmp/tmpd03sngrk.php on line 40

    '
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    if (preg_match('/[a-z]/',\
    \ $s)) {\n        return strtolower($s);\n    } elseif (preg_match('/[A-Z]/',\
    \ $s)) {\n        return strtoupper($s);\n    } else {\n        return strrev($s);\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeujn9yw1.php:23\n\
    Stack trace:\n#0 /tmp/tmpeujn9yw1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpeujn9yw1.php\
    \ on line 23\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= $s[$i] === strtoupper($s[$i]) ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve('Hello World'); // hELLO\
    \ wORLD\necho solve('HELLO WORLD'); // hello world\necho solve('12345'); // 12345\n\
    echo solve('1A2B3C4D5E'); // 1a2b3c4d5e\necho solve('String.with.punctuation characters!');\
    \ // sTRING.WITH.PUNCTUATION CHARACTERS!\necho solve('Hello World!'); // hELLO\
    \ wORLD!\necho solve('Hello World! 123'); // hELLO wORLD! 123\necho solve('Hello\
    \ World! 123!'); // hELLO wORLD! 123!\necho solve('Hello World! 123!!'); // hELLO\
    \ wORLD! 123!!\necho solve('Hello World! 123!!!'); // hELLO wORLD! 123!!!\necho\
    \ solve('Hello World! 123!!!!'); // hELLO wORLD! 123!!!!\necho solve('Hello World!\
    \ 123!!!!!'); // hELLO wORLD! 123!!!!!\necho solve('Hello World! 123!!!!!!');\
    \ // hELLO wORLD! 123!!!!!!\necho solve('Hello World! 123!!!!!!!'); // hELLO wORLD!\
    \ 123!!!!!!!\necho solve('Hello World! 123!!!!!!!!'); // hELLO wORLD! 123!!!!!!!!\n\
    echo solve('Hello World! 123!!!!!!!!!'); // hELLO wORLD! 123!!!!!!!!!\necho solve('Hello\
    \ World! 123!!!!!!!!!!'); // hELLO wORLD! 123!!!!!!!!!!\necho solve('Hello World!\
    \ 123!!!!!!!!!!!'); // hELLO wORLD! 123!!!!!!!!!!!\necho solve('Hello World! 123!!!!!!!!!!!!');\
    \ // hELLO wORLD! 123!!!!!!!!!!!!\necho solve('Hello World! 123!!!!!!!!!!!!!');\
    \ // h\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hELLO wORLDhello world123451a2b3c4d5esTRING.WITH.PUNCTUATION CHARACTERS!hELLO\
    \ wORLD!hELLO wORLD! 123hELLO wORLD! 123!hELLO wORLD! 123!!hELLO wORLD! 123!!!hELLO\
    \ wORLD! 123!!!!hELLO wORLD! 123!!!!!hELLO wORLD! 123!!!!!!hELLO wORLD! 123!!!!!!!hELLO\
    \ wORLD! 123!!!!!!!!hELLO wORLD! 123!!!!!!!!!hELLO wORLD! 123!!!!!!!!!!hELLO wORLD!\
    \ 123!!!!!!!!!!!hELLO wORLD! 123!!!!!!!!!!!!hELLO wORLD! 123!!!!!!!!!!!!!\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp6eu1yizb.php:46\nStack trace:\n\
    #0 /tmp/tmp6eu1yizb.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp6eu1yizb.php\
    \ on line 46\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n    $letters\
    \ = array_merge($letters, array_map('strtoupper', $letters));\n    $letters =\
    \ array_flip($letters);\n    $s = str_split($s);\n    $s = array_map(function($v)\
    \ use ($letters) {\n        if (isset($letters[$v])) {\n            return $v\
    \ == strtolower($v) ? strtoupper($v) : strtolower($v);\n        }\n        return\
    \ $v;\n    }, $s);\n    return implode('', $s);\n}\n\necho solve('hello'); //\
    \ HELLO\necho solve('HELLO'); // hello\necho solve('12345'); // 12345\necho solve('1a2b3c4d5e');\
    \ // 1A2B3C4D5E\necho solve('String.prototype.charCodeAt'); // sTRING.PROTOTYPE.CHARCODEAT\n\
    echo solve(''); //\necho solve('Qk gs1v8tP'); // qK GS1V8TP\necho solve('qk gs1v8tp');\
    \ // QK GS1V8TP\necho solve('QK GS1V8TP'); // qk gs1v8tP\necho solve('Qk Gs1v8tP');\
    \ // qK gS1V8Tp\necho solve('Qk Gs1v8tP'); // qK gS1V8Tp\necho solve('Qk Gs1v8tP');\
    \ // qK gS1V8Tp\necho solve('Qk Gs1v8tP'); // qK gS1V8Tp\necho solve('Qk Gs1v8tP');\
    \ // qK gS1V8Tp\necho solve('Qk Gs1v8tP'); // qK gS1V8Tp\necho solve('Qk Gs1v8tP');\
    \ // qK gS1V8Tp\necho solve('Qk Gs1v8tP'); // qK gS1V8\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "HELLOhello123451A2B3C4D5EsTRING.PROTOTYPE.CHARcODEaTqK GS1V8TpQK GS1V8TPqk\
    \ gs1v8tpqK gS1V8TpqK gS1V8TpqK gS1V8TpqK gS1V8TpqK gS1V8TpqK gS1V8TpqK gS1V8TpqK\
    \ gS1V8Tp\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy1zhhloa.php:46\n\
    Stack trace:\n#0 /tmp/tmpy1zhhloa.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpy1zhhloa.php\
    \ on line 46\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = range('a', 'z');\n    $letters = array_merge($letters, range('A', 'Z'));\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve('Hello World');\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hELLO wORLD\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_15yqc34.php:29\n\
    Stack trace:\n#0 /tmp/tmp_15yqc34.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_15yqc34.php\
    \ on line 29\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $res = '';\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $res .= strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n\
    \        } else {\n            $res .= $char;\n        }\n    }\n    return $res;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu9p9wiww.php:27\n\
    Stack trace:\n#0 /tmp/tmpu9p9wiww.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpu9p9wiww.php\
    \ on line 27\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve('Hello World'); // hELLO\
    \ wORLD\necho solve('Hello-LOL'); // hELLO-lol\necho solve('Sup DUDE!!?'); //\
    \ sUP dude!!?\necho solve('12345'); // 12345\necho solve('aBcD'); // AbCd\necho\
    \ solve('aBcD123'); // AbCd123\necho solve('aBcD123!@#$%^&*()_-+='); // AbCd123!@#$%^&*()_-+=\n\
    echo solve('aBcD123!@#$%^&*()_-+=][}{;:.,<>?/'); // AbCd123!@#$%^&*()_-+=][}{;:.,<>?/\n\
    echo solve('aBcD123!@#$%^&*()_-+=][}{;:.,<>?/'); // AbCd123!@#$%^&*()_-+=][}{;:.,<>?/\n\
    echo solve('aBcD123!@#$%^&*()_-+=][}{;:.,<>?/'); // AbCd123!@#$%^&*()_-+=][}{;:.,<>?/\n\
    echo solve('aBcD123!@#$%^&*()_-+=][}{;:.,<>?/'); // AbCd123!@#$%^&*()_-+=][}{;:.,<>?/\n\
    echo solve('aBcD123!@#$%^&*()_-+=][}{;:.,<>?/'); // AbCd123!@#$%^&*()_-+=][}{;:.,<\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hELLO wORLDhELLO-lolsUP dude!!?12345AbCdAbCd123AbCd123!@#$%^&*()_-+=AbCd123!@#$%^&*()_-+=][}{;:.,<>?/AbCd123!@#$%^&*()_-+=][}{;:.,<>?/AbCd123!@#$%^&*()_-+=][}{;:.,<>?/AbCd123!@#$%^&*()_-+=][}{;:.,<>?/AbCd123!@#$%^&*()_-+=][}{;:.,<>?/\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpjlcxc1tk.php:38\nStack\
    \ trace:\n#0 /tmp/tmpjlcxc1tk.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpjlcxc1tk.php\
    \ on line 38\n"
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_split($s);\n\
    \    $res = '';\n    for ($i = 0; $i < count($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $res .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $res .= $s[$i];\n        }\n    }\n    return $res;\n\
    }\n\necho solve('HelloWorld'); // hELLOwORLD\necho solve('HelloWorld123'); //\
    \ hELLOwORLD123\necho solve('HELLOworld123'); // helloWORLD123\necho solve('HELLOworld123!!!');\
    \ // helloWORLD123!!!\necho solve('HELLOworld123!!!'); // helloWORLD123!!!\necho\
    \ solve('HELLOworld123!!!'); // helloWORLD123!!!\necho solve('HELLOworld123!!!');\
    \ // helloWORLD123!!!\necho solve('HELLOworld123!!!'); // helloWORLD123!!!\necho\
    \ solve('HELLOworld123!!!'); // helloWORLD123!!!\necho solve('HELLOworld123!!!');\
    \ // helloWORLD123!!!\necho solve('HELLOworld123!!!'); // helloWORLD123!!!\necho\
    \ solve('HELLOworld123!!!'); // helloWORLD123!!!\necho solve('HELLOworld123!!!');\
    \ // helloWORLD123!!!\necho solve('HELLOworld123!!!'); // helloWORLD123!!!\necho\
    \ solve('HELLOworld123!!!'); // helloWORLD123!!!\necho solve('HELLOworld123!!!');\
    \ // helloWORLD123!!!\necho solve('HELLOworld123!!!'); // helloWORLD123!!!\necho\
    \ solve('HELLOworld123!!!'); // helloWORLD123!!!\necho solve('HELLOworld123!!!');\
    \ // helloWORLD123!!!\necho solve('HELLOworld123!!!'); // helloWORLD123!!!\necho\
    \ solve('HELLOworld123!!!'); // helloWORLD123!!!\necho solve('HELLOworld123!!!');\
    \ // helloWORLD123!!!\necho solve('HELLOworld123!!!'); // helloWORLD123!!!\necho\
    \ solve('\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "" in /tmp/tmpmpalbyfg.php
    on line 44

    '
  timestamp: 1659978249
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    if(!preg_match('/[a-zA-Z]/',\
    \ $s)){\n        return strrev($s);\n    }\n    $result = '';\n    for($i = 0;\
    \ $i < strlen($s); $i++){\n        if(ctype_alpha($s[$i])){\n            $result\
    \ .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpx64t9uaa.php on line 34


    Warning: Undefined variable $A in /tmp/tmpx64t9uaa.php on line 34

    '
  timestamp: 1659978249
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $arr = str_split($s);\n\
    \    $result = [];\n    $isLetter = false;\n    foreach ($arr as $key => $value)\
    \ {\n        if (ctype_alpha($value)) {\n            $isLetter = true;\n     \
    \       if (ctype_lower($value)) {\n                $result[] = strtoupper($value);\n\
    \            } else {\n                $result[] = strtolower($value);\n     \
    \       }\n        } else {\n            $result[] = $value;\n        }\n    }\n\
    \    if ($isLetter) {\n        return implode('', $result);\n    } else {\n  \
    \      return strrev($s);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpv01x7lob.php on line 42


    Warning: Undefined variable $A in /tmp/tmpv01x7lob.php on line 42

    '
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = range('a', 'z');\n    $letters = array_merge($letters, range('A', 'Z'));\n\
    \    $s = str_split($s);\n    $result = [];\n    foreach ($s as $char) {\n   \
    \     if (in_array($char, $letters)) {\n            if (ctype_lower($char)) {\n\
    \                $result[] = strtoupper($char);\n            } else {\n      \
    \          $result[] = strtolower($char);\n            }\n        } else {\n \
    \           $result[] = $char;\n        }\n    }\n    return implode('', $result);\n\
    }\n\necho solve('Hello World');\necho solve('Hello World!');\necho solve('Hello\
    \ World! 123');\necho solve('Hello World! 123!');\necho solve('Hello World! 123!@#');\n\
    echo solve('Hello World! 123!@#!');\necho solve('Hello World! 123!@#!$%^&*()_+');\n\
    echo solve('Hello World! 123!@#!$%^&*()_+=');\necho solve('Hello World! 123!@#!$%^&*()_+=-');\n\
    echo solve('Hello World! 123!@#!$%^&*()_+=-[]');\necho solve('Hello World! 123!@#!$%^&*()_+=-[]{}');\n\
    echo solve('Hello World! 123!@#!$%^&*()_+=-[]{}|');\necho solve('Hello World!\
    \ 123!@#!$%^&*()_+=-[]{}|\\\\');\necho solve('Hello World! 123!@#!$%^&*()_+=-[]{}|\\\
    \\/');\necho solve('Hello World! 123!@#!$%^&*()_+=-[]{}|\\\\/<>?');\necho solve('Hello\
    \ World! 123!@#!$%^&*()_+=-[]{}|\\\\/<>?`~');\necho solve('Hello World! 123!@#!$%^&*()_+=-[]{}|\\\
    \\/<>?`~\\'');\necho solve('Hello World! 123!@#!$%^&*()_+=-\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "Hello World! 123!@#!$%^&*()_+=-"
    in /tmp/tmpdf6bv509.php on line 44

    '
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split($s);\n    $result = \"\";\n    foreach ($letters as $letter) {\n\
    \        if (ctype_alpha($letter)) {\n            $result .= strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n\n\
    echo solve(\"Hello World\");\necho solve(\"Hello-LOL\");\necho solve(\"Sup DUDE!!?\"\
    );\necho solve(\"\");\necho solve(\"12345\");\necho solve(\"aBcDeF\");\necho solve(\"\
    aBcDeF12345\");\necho solve(\"aBcDeF12345!@#$%^&*()_-+=\");\necho solve(\"aBcDeF12345!@#$%^&*()_-+=][{}|';:?/>.<,\"\
    );\necho solve(\"aBcDeF12345!@#$%^&*()_-+=][{}|';:?/>.<,`~\");\necho solve(\"\
    aBcDeF12345!@#$%^&*()_-+=][{}|';:?/>.<,`~ \");\necho solve(\"aBcDeF12345!@#$%^&*()_-+=][{}|';:?/>.<,`~\
    \  \");\necho solve(\"aBcDeF12345!@#$%^&*()_-+=][{}|';:?/>.<,`~   \");\necho solve(\"\
    aBcDeF12345!@#$%^&*()_-+=][{}|';:?/>.<,`~    \");\necho solve(\"aBcDeF12345!@#$%^&*()_-+=][{}|';:?/>.<,`~\
    \     \");\necho solve(\"aBcDeF12345!@#$%^&*()_-+=][{}|';:?/>.<,`~      \");\n\
    echo solve(\"aBcDeF12345!@#$%^&*()_-+=][{}|';:?/>.<,`~       \");\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hELLO wORLDhELLO-lolsUP dude!!?12345AbCdEfAbCdEf12345AbCdEf12345!@#$%^&*()_-+=AbCdEf12345!@#$%^&*()_-+=][{}|';:?/>.<,AbCdEf12345!@#$%^&*()_-+=][{}|';:?/>.<,`~AbCdEf12345!@#$%^&*()_-+=][{}|';:?/>.<,`~\
    \ AbCdEf12345!@#$%^&*()_-+=][{}|';:?/>.<,`~  AbCdEf12345!@#$%^&*()_-+=][{}|';:?/>.<,`~\
    \   AbCdEf12345!@#$%^&*()_-+=][{}|';:?/>.<,`~    AbCdEf12345!@#$%^&*()_-+=][{}|';:?/>.<,`~\
    \     AbCdEf12345!@#$%^&*()_-+=][{}|';:?/>.<,`~      AbCdEf12345!@#$%^&*()_-+=][{}|';:?/>.<,`~\
    \       \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaow0inj_.php:45\n\
    Stack trace:\n#0 /tmp/tmpaow0inj_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpaow0inj_.php\
    \ on line 45\n"
  timestamp: 1659978249
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    if(!preg_match('/[a-zA-Z]/',\
    \ $s)) {\n        return strrev($s);\n    }\n    $result = '';\n    for($i = 0;\
    \ $i < strlen($s); $i++) {\n        if(ctype_alpha($s[$i])) {\n            $result\
    \ .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n        }\
    \ else {\n            $result .= $s[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmprhpwv71c.php on line 34


    Warning: Undefined variable $A in /tmp/tmprhpwv71c.php on line 34

    '
  timestamp: 1659978249
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $letters\
    \ = str_split(strtolower($s));\n    $result = '';\n    foreach ($letters as $letter)\
    \ {\n        if (ctype_alpha($letter)) {\n            $result .= $letter === strtoupper($letter)\
    \ ? strtolower($letter) : strtoupper($letter);\n        } else {\n           \
    \ $result .= $letter;\n        }\n    }\n    return $result;\n}\n\necho solve('Hello\
    \ World'); // hELLO wORLD\necho solve('HELLO WORLD'); // hello world\necho solve('12345');\
    \ // 12345\necho solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho solve('String.with.punctuation\
    \ characters!'); // sTRING.WITH.PUNCTUATION CHARACTERS!\necho solve('Hello World');\
    \ // hELLO wORLD\necho solve('HELLO WORLD'); // hello world\necho solve('12345');\
    \ // 12345\necho solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho solve('String.with.punctuation\
    \ characters!'); // sTRING.WITH.PUNCTUATION CHARACTERS!\necho solve('Hello World');\
    \ // hELLO wORLD\necho solve('HELLO WORLD'); // hello world\necho solve('12345');\
    \ // 12345\necho solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho solve('String.with.punctuation\
    \ characters!'); // sTRING.WITH.PUNCTUATION CHARACTERS!\necho solve('Hello World');\
    \ // hELLO wORLD\necho solve('HELLO WORLD'); // hello world\necho solve('12345');\
    \ // 12345\necho solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho solve('String.with.punctuation\
    \ characters!'); // sTRING.WITH.PUNCTUATION CHARACTERS!\necho solve('Hello World');\
    \ // hELLO wORLD\necho solve('HELLO WORLD'); // hello world\necho solve('12345');\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "HELLO WORLDHELLO WORLD123451A2B3C4D5ESTRING.WITH.PUNCTUATION CHARACTERS!HELLO\
    \ WORLDHELLO WORLD123451A2B3C4D5ESTRING.WITH.PUNCTUATION CHARACTERS!HELLO WORLDHELLO\
    \ WORLD123451A2B3C4D5ESTRING.WITH.PUNCTUATION CHARACTERS!HELLO WORLDHELLO WORLD123451A2B3C4D5ESTRING.WITH.PUNCTUATION\
    \ CHARACTERS!HELLO WORLDHELLO WORLD12345\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp0ikj8k4x.php:49\nStack trace:\n#0 /tmp/tmp0ikj8k4x.php(59):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0ikj8k4x.php on line 49\n"
  timestamp: 1659978249

name: HumanEval_75_is_multiply_prime
language: ts
prompt: "//Write a function that returns true if the given number is the multiplication\
  \ of 3 prime numbers\n// and false otherwise.\n// Knowing that (a) is less then\
  \ 100. \n// Example:\n// >>> is_multiply_prime(30)\n// true\n// 30 = 2 * 3 * 5\n\
  function is_multiply_prime(a: number): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = is_multiply_prime;\n  assert.deepEqual(candidate(5),false);\n\
  \  assert.deepEqual(candidate(30),true);\n  assert.deepEqual(candidate(8),true);\n\
  \  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(125),true);\n\
  \  assert.deepEqual(candidate(105),true);\n  assert.deepEqual(candidate(126),false);\n\
  \  assert.deepEqual(candidate(729),false);\n  assert.deepEqual(candidate(891),false);\n\
  \  assert.deepEqual(candidate(1001),true);\n}\n\ntest();"
completions: ["    let primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    let counter = 0;\n    for (let\
    \ i = 0; i < primes.length; i++) {\n        if (a % primes[i] == 0) {\n      \
    \      counter++;\n        }\n    }\n    if (counter === 3) {\n        return\
    \ true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(5))\n",
  "    for (let i = 2; i < a; i++) {\n        for (let j = 2; j < a; j++) {\n    \
    \        for (let k = 2; k < a; k++) {\n                if (i * j * k == a) {\n\
    \                    return true;\n                }\n            }\n        }\n\
    \    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\nconsole.log(is_multiply_prime(29));",
  "  let result: boolean = false;\n  let divisor: number = 2;\n  let primeNumbers:\
    \ number[] = [];\n  let numberIsPrime: boolean = true;\n  if (a > 0) {\n    for\
    \ (let i: number = 1; i <= a; i++) {\n      for (let j: number = 2; j < i; j++)\
    \ {\n        if (i % j === 0) {\n          numberIsPrime = false;\n        }\n\
    \      }\n      if (numberIsPrime === true) {\n        primeNumbers.push(i);\n\
    \      }\n      numberIsPrime = true;\n    }\n    for (let k: number = 0; k <\
    \ primeNumbers.length; k++) {\n      if (a % primeNumbers[k] === 0) {\n      \
    \  for (let i: number = 2; i < a; i++) {\n          if (a % i === 0) {\n     \
    \       a = a / i;\n            divisor = i;\n          }\n        }\n       \
    \ if (a === divisor) {\n          result = true;\n        }\n      }\n    }\n\
    \  }\n  return result;\n}", "    let primeNumbers: number[] = [];\n    let isPrime:\
    \ boolean = true;\n    let i: number = 0;\n    while (primeNumbers.length < 3)\
    \ {\n        isPrime = true;\n        for (let j: number = 2; j < a; j++) {\n\
    \            if (a % j === 0) {\n                isPrime = false;\n          \
    \  }\n        }\n        if (isPrime) {\n            primeNumbers.push(a);\n \
    \       }\n        a--;\n    }\n    let result: number = 1;\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        result *= primeNumbers[i];\n \
    \   }\n    return result === a;\n}\nconsole.log(is_multiply_prime(30));\n", " \
    \ let isMultiply: boolean = false;\n  let prime: number[] = [];\n  for (let i:\
    \ number = 2; i < a; i++) {\n    if (is_prime(i)) {\n      prime.push(i);\n  \
    \  }\n  }\n  prime.forEach(function (e, index) {\n    prime.forEach(function (g,\
    \ ind) {\n      if (index > ind) {\n        if (e * g === a) {\n          isMultiply\
    \ = true;\n        }\n      }\n    });\n  });\n  return isMultiply;\n}\n", " \
    \ const primeNumbers: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n  const primes: number[]\
    \ = [];\n  for (let i: number = 0; i < primeNumbers.length; i++) {\n    if (a\
    \ % primeNumbers[i] === 0) {\n      primes.push(primeNumbers[i]);\n    }\n  }\n\
    \  if (primes.length === 3) {\n    return true;\n  } else {\n    return false;\n\
    \  }\n}\n", "    let result: boolean = false;\n    for (let i: number = 2; i <\
    \ a; i++) {\n        for (let j: number = 2; j < a; j++) {\n            for (let\
    \ k: number = 2; k < a; k++) {\n                if (i * j * k === a) {\n     \
    \               result = true;\n                }\n            }\n        }\n\
    \    }\n    return result;\n}\n", "  if(is_prime(a)){\n    return true;\n  }\n\
    \  for(let i = 2; i < a; i++){\n    if(is_prime(i) && is_prime(a / i)){\n    \
    \  return true;\n    }\n  }\n  return false;\n}\n\nconsole.log(is_multiply_prime(28));",
  "    let result: boolean = false;\n    if (a === 3) {\n        result = true;\n\
    \    } else if (a % 3 === 0) {\n        let division: number = a / 3;\n      \
    \  if (division === 5) {\n            result = true;\n        } else if (division\
    \ % 5 === 0) {\n            division = division / 5;\n            if (division\
    \ === 2) {\n                result = true;\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\nconsole.log(is_multiply_prime(27));\n\
    console.log(is_multiply_prime(42));\nconsole.log(is_multiply_prime(49));\nconsole.log(is_multiply_prime(48));\n\
    console.log(is_multiply_prime(36));\nconsole.log(is_multiply_prime(15));\nconsole.log(is_multiply_prime(8));\n\
    console.log(is_multiply_prime(32));\nconsole.log(is_multiply_prime(18));\nconsole.log(is_multiply_prime(10));\n\
    console.log(is_multiply_prime(9));\nconsole.log(is_multiply_prime(25));\nconsole.log(is_multiply_prime(45));\n\
    console.log(is_multiply_prime(6));\nconsole.log(is_multiply_prime(4));\nconsole.log(is_multiply_prime(12));\n\
    console.log(is_multiply_prime(5));\nconsole.log(is_multiply_prime(3));\nconsole.log(is_multiply_prime(2));\n\
    console.log(is_multiply_prime(14));\nconsole.log(is_multiply_prime(7));\nconsole.log(is_multiply_prime(21));\n\
    console.log(is_multiply_prime(24));\nconsole.log(is_multiply_prime(20));\nconsole.log(is_multiply_prime(35));\n\
    console.log(is_", "  // TODO\n  return false;\n}\n", "    let i: number = 0;\n\
    \    let testNum: number = 2;\n    let isPrime: boolean = true;\n    let primeNums:\
    \ number[] = [];\n    while (i < 3) {\n        for (let j: number = testNum -\
    \ 1; j > 1; j--) {\n            if (testNum % j === 0) {\n                isPrime\
    \ = false;\n                break;\n            }\n        }\n        if (isPrime)\
    \ {\n            primeNums.push(testNum);\n            i++;\n        }\n     \
    \   testNum++;\n        isPrime = true;\n    }\n    return primeNums.reduce((a,\
    \ b) => a * b) === a;\n}\nconsole.log(is_multiply_prime(30));", "  for (let i\
    \ = 1; i < a; i++) {\n    for (let j = 1; j < a; j++) {\n      for (let k = 1;\
    \ k < a; k++) {\n        if (i * j * k === a) {\n          return true;\n    \
    \    }\n      }\n    }\n  }\n  return false;\n}\n", "    if (a < 6) {\n      \
    \  return false;\n    }\n    if (a % 2 === 0 && is_prime(a / 2)) {\n        return\
    \ true;\n    }\n    if (a % 3 === 0 && is_prime(a / 3)) {\n        return true;\n\
    \    }\n    if (a % 5 === 0 && is_prime(a / 5)) {\n        return true;\n    }\n\
    \    return false;\n}\n", "    let isPrime: boolean = true;\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (a % i === 0) {\n            isPrime = false;\n\
    \        }\n    }\n    return isPrime;\n}\n", "    let counter: number = 0;\n\
    \    for (let i: number = 2; i < a; i++) {\n        if (a % i == 0) {\n      \
    \      if (is_prime(i)) {\n                counter++;\n            }\n       \
    \ }\n    }\n    if (counter == 3) {\n        return true;\n    }\n    else {\n\
    \        return false;\n    }\n}\nconsole.log(is_multiply_prime(8));", "    let\
    \ prime: boolean = true;\n    let counter: number = 0;\n    for (let i: number\
    \ = 2; i < a / 2; i++) {\n        if (a % i == 0) {\n            counter++;\n\
    \            if (counter == 2) {\n                prime = false;\n           \
    \ }\n        }\n    }\n    return prime;\n}", "    let count: number = 0;\n  \
    \  for (let j: number = 1; j <= a; j++) {\n        if (a % j == 0) {\n       \
    \     count++;\n        }\n    }\n    if (count == 2) {\n        return true;\n\
    \    }\n    else {\n        return false;\n    }\n}", "    let result: boolean\
    \ = false;\n    let arr: number[] = [];\n    let primeArr: number[] = [];\n  \
    \  for (let i: number = 2; i < a / 2; i++) {\n        if (a % i == 0) {\n    \
    \        arr.push(i);\n        }\n    }\n    console.log(arr);\n    for (let i:\
    \ number = 0; i < arr.length; i++) {\n        let c: number = 0;\n        for\
    \ (let j: number = 1; j <= arr[i]; j++) {\n            if (arr[i] % j == 0) {\n\
    \                c++;\n            }\n        }\n        if (c == 2) {\n     \
    \       primeArr.push(arr[i]);\n        }\n    }\n    console.log(primeArr);\n\
    \    if (primeArr.length == 3) {\n        result = true;\n    }\n    return result;\n\
    }\nconsole.log(is_multiply_prime(30));\nconsole.log(is_multiply_prime(29));\n\
    console.log(is_multiply_prime(60));\n", "    return (a > 1) && is_prime(a);\n\
    }\n", "    let is_prime = true;\n    let count = 0;\n    let number = 0;\n   \
    \ let result = false;\n    let prime_numbers = [];\n    for (let i = 2; i < a;\
    \ i++) {\n        for (let j = 1; j <= i; j++) {\n            if (i % j == 0)\
    \ {\n                count++;\n            }\n        }\n        if (count ==\
    \ 2) {\n            prime_numbers.push(i);\n        }\n        count = 0;\n  \
    \  }\n    for (let i = 0; i < prime_numbers.length; i++) {\n        for (let j\
    \ = 0; j < prime_numbers.length; j++) {\n            number = prime_numbers[i]\
    \ * prime_numbers[j];\n            if (number == a) {\n                result\
    \ = true;\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(is_multiply_prime(14));\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

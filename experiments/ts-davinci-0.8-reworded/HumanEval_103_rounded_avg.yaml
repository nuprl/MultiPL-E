name: HumanEval_103_rounded_avg
language: ts
prompt: "//You are given two positive integers n and m, and your task is to compute\
  \ the\n// average of the integers from n through m (including n and m). \n// Round\
  \ the answer to the nearest integer and convert that to binary.\n// If n is greater\
  \ than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>>\
  \ rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20,\
  \ 33)\n// \"0b11010\"\nfunction rounded_avg(n: number, m: number): string| number\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = rounded_avg;\n  assert.deepEqual(candidate(1, 5),\"\
  0b11\");\n  assert.deepEqual(candidate(7, 13),\"0b1010\");\n  assert.deepEqual(candidate(964,\
  \ 977),\"0b1111001010\");\n  assert.deepEqual(candidate(996, 997),\"0b1111100100\"\
  );\n  assert.deepEqual(candidate(560, 851),\"0b1011000010\");\n  assert.deepEqual(candidate(185,\
  \ 546),\"0b101101110\");\n  assert.deepEqual(candidate(362, 496),\"0b110101101\"\
  );\n  assert.deepEqual(candidate(350, 902),\"0b1001110010\");\n  assert.deepEqual(candidate(197,\
  \ 233),\"0b11010111\");\n  assert.deepEqual(candidate(7, 5),-1);\n  assert.deepEqual(candidate(5,\
  \ 1),-1);\n  assert.deepEqual(candidate(5, 5),\"0b101\");\n}\n\ntest();"
completions: ["    if (n > m) {\n        return -1;\n    }\n    let start: number\
    \ = n;\n    let end: number = m;\n    let sum: number = 0;\n    let count: number\
    \ = 0;\n    while (start <= end) {\n        sum += start;\n        start += 1;\n\
    \        count += 1;\n    }\n    let avg: number = Math.round(sum / count);\n\
    \    let binary: string = avg.toString(2);\n    return '0b' + binary;\n}\n", " \
    \   let avg: number = Math.round((n + m) / 2);\n    if (n > m) return -1;\n  \
    \  else return \"0b\" + avg.toString(2);\n}\n", "  let avg = Math.round((n + m)\
    \ / 2);\n  if (n > m) {\n    return -1;\n  }\n  return `0b${avg.toString(2)}`;\n\
    }\n", "    if (n > m) {\n        return -1;\n    }\n    return (Math.round((m\
    \ + n) / 2)).toString(2);\n}\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7,\
    \ 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20, 33));",
  "  const avg = Math.round((n + m) / 2);\n  if (n > m) {\n    return -1;\n  }\n \
    \ return \"0b\" + avg.toString(2);\n}\n\n", "  let result: number;\n  let result_in_bin:\
    \ string;\n  let sum: number = 0;\n  for (let i = n; i <= m; i++) {\n    sum +=\
    \ i;\n  }\n  if (n > m) {\n    return -1;\n  }\n  result = Math.round(sum / (m\
    \ - n + 1));\n  result_in_bin = result.toString(2);\n  return '0b' + result_in_bin;\n\
    }\n\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10,\
    \ 20));\nconsole.log(rounded_avg(20, 33));", "    if (n > m) return -1;\n    return\
    \ Math.round((n + m) / 2).toString(2);\n}\n", "    if (n > m) {\n        return\
    \ -1;\n    }\n    let sum = 0;\n    for (let i = n; i <= m; i++) {\n        sum\
    \ += i;\n    }\n    return parseInt(sum / (m - n + 1)).toString(2);\n}\n", " \
    \   if (n > m) return -1;\n    const average = (n + m) / 2;\n    const roundedAverage\
    \ = Math.round(average);\n    return `0b${roundedAverage.toString(2)}`;\n}\n",
  "    if (n > m) {\n        return -1;\n    }\n    return '0b' + Math.round((m +\
    \ n) / 2).toString(2);\n}\nconsole.log(rounded_avg(10, 20));\n\n", "    return\
    \ -1;\n}", "    if (n > m) return -1;\n    let a: number = (n + m) / 2;\n    let\
    \ a_rounded: number = Math.round(a);\n    let a_rounded_to_bin: string = a_rounded.toString(2);\n\
    \    return `0b${a_rounded_to_bin}`;\n}\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10,\
    \ 20));\nconsole.log(rounded_avg(20, 33));\n", "    if (n > m) return -1;\n  \
    \  let sum = 0;\n    for (let i = n; i <= m; i++) {\n        sum += i;\n    }\n\
    \    let avg = Math.round(sum / (m - n + 1));\n    let result = avg.toString(2);\n\
    \    return \"0b\" + result;\n}\n", "    if (n > m) {\n        return -1;\n  \
    \  }\n    const avg = (n + m) / 2;\n    return `0b${avg.toString(2)}`;\n}\nconsole.log(rounded_avg(1,\
    \ 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20,\
    \ 33));\n", "    if (n > m) return -1;\n    return Math.round((n + m) / 2).toString(2);\n\
    }\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10,\
    \ 20));\nconsole.log(rounded_avg(20, 33));\n", "  if (n > m) {\n    return -1;\n\
    \  }\n  let avg = Math.round((n + m) / 2);\n  return `0b${avg.toString(2)}`;\n\
    }\n", "    let av = Math.round((n + m) / 2);\n    return av >= n && av <= m ?\
    \ av.toString(2) : -1;\n}\n", "  const avg = Math.round((n + m) / 2);\n  return\
    \ n < m ? `0b${avg.toString(2)}` : -1;\n}\nconsole.log(rounded_avg(20, 33));",
  "    // Write your code here\n}\n\n\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7,\
    \ 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20, 33));",
  "    if (n < m) {\n        const sum: number = (n + m) / 2;\n        const rounded\
    \ = Math.round(sum);\n        return \"0b\" + rounded.toString(2);\n    } else\
    \ {\n        return -1;\n    }\n}\n", "    if (n > m) {\n        return -1;\n\
    \    }\n\n    var result = Math.round((n + m) / 2);\n    return result.toString(2);\n\
    }\n", "    if (n > m) {\n        return -1;\n    }\n    return Number(\n     \
    \   (n + m) / 2\n    ).toString(2);\n}", "    if (n > m) return -1;\n    const\
    \ arr = [];\n    for (let i = n; i <= m; i++) {\n        arr.push(i);\n    }\n\
    \    const sum = arr.reduce((a, b) => a + b);\n    const average = Math.round(sum\
    \ / arr.length);\n    const binary = Number(average).toString(2);\n    return\
    \ `0b${binary}`;\n}\nconsole.log(rounded_avg(10, 20));", "    if (n > m) return\
    \ -1;\n    let sum = 0;\n    for (let i = n; i <= m; i++) {\n        sum += i;\n\
    \    }\n    return (sum % 2 === 0) ? \"0b\" + (sum / (m - n + 1)).toString(2)\
    \ : \"0b\" + ((sum / (m - n + 1)) + 1).toString(2);\n}\n\nconsole.log(rounded_avg(20,\
    \ 33));\n", "    if (n > m) return -1;\n    let sum = 0;\n    for (let i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    return parseInt(sum / (m - n +\
    \ 1) + \"\").toString(2);\n}\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7,\
    \ 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20, 33));\n",
  "    if (n > m) {\n        return -1;\n    }\n    var sum = 0;\n    for (var i =\
    \ n; i <= m; i++) {\n        sum += i;\n    }\n    return (Math.round(sum / (m\
    \ - n + 1))).toString(2);\n}", "    if (n > m) {\n        return -1;\n    }\n\n\
    \    let sum = 0;\n    for (let i = n; i <= m; i++) {\n        sum += i;\n   \
    \ }\n\n    const avg = Math.round(sum / (m - n + 1));\n    return (avg >>> 0).toString(2);\n\
    }\n", "    if (n > m) {\n        return -1;\n    }\n    let sum = n;\n    for\
    \ (let i = n + 1; i <= m; i++) {\n        sum += i;\n    }\n    let avg = Math.round(sum\
    \ / (m - n + 1));\n    return `0b${avg.toString(2)}`;\n}\n", "    if (n > m) return\
    \ -1;\n    const avg = Math.round((n + m) / 2);\n    return `0b${avg.toString(2)}`;\n\
    }", "    if (n > m) return -1;\n    var avg = Math.round((n + m) / 2);\n    return\
    \ \"0b\" + avg.toString(2);\n}\nconsole.log(rounded_avg(20, 33));\n", "    if\
    \ (n > m) return -1;\n    let sum = 0;\n    for (let i = n; i <= m; i++) {\n \
    \       sum += i;\n    }\n    return Number(Number(sum / (m - n + 1)).toFixed(0)).toString(2);\n\
    }\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(10,\
    \ 20));\nconsole.log(rounded_avg(20, 33));", "    if (n > m) return -1;\n    let\
    \ sum = 0;\n    let count = 0;\n    for (let i = n; i <= m; i++) {\n        sum\
    \ += i;\n        count++;\n    }\n    let avg = Math.round(sum / count);\n   \
    \ return `0b${avg.toString(2)}`;\n}\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7,\
    \ 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20, 33));\n",
  "    if (n > m) return -1;\n    const average = Math.round((n + m) / 2);\n    return\
    \ average.toString(2);\n}\n", "    if (n > m) {\n        return -1;\n    }\n \
    \   let sum = n;\n    for (let i = n + 1; i <= m; i++) {\n        sum += i;\n\
    \    }\n    return `0b${(Math.round(sum / (m - n + 1))).toString(2)}`;\n}\n",
  "    if (n > m) {\n        return -1;\n    }\n\n    const average = Math.round((n\
    \ + m) / 2);\n    return `0b${average.toString(2)}`;\n}\n\nconsole.log(rounded_avg(1,\
    \ 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20,\
    \ 33));\n", "    if (n > m) {\n        return -1;\n    }\n    else {\n       \
    \ let ans = Math.round((n + m) / 2)\n        return ans.toString(2);\n    }\n}",
  "    if (n > m) return -1;\n    let avg = Math.round((n + m) / 2);\n    return \"\
    0b\" + avg.toString(2);\n}\n\ntest(rounded_avg(1, 5), \"0b11\");\ntest(rounded_avg(7,\
    \ 5), -1);\ntest(rounded_avg(10, 20), \"0b1111\");\ntest(rounded_avg(20, 33),\
    \ \"0b11010\");\n", "    if (n > m) {\n        return -1;\n    }\n\n    let nums\
    \ = [];\n    let i = n;\n    while (i <= m) {\n        nums.push(i);\n       \
    \ i++;\n    }\n\n    let sum = nums.reduce((a, b) => a + b);\n    let avg = sum\
    \ / nums.length;\n    let roundedAvg = Math.round(avg);\n    let binaryAvg = roundedAvg.toString(2);\n\
    \    return `0b${binaryAvg}`;\n}\nconsole.log(rounded_avg(20, 33));\n\n", "  \
    \  if (n > m) {\n        return -1;\n    }\n    let avg = 0;\n    for (let i =\
    \ n; i <= m; i++) {\n        avg += i;\n    }\n    avg = Math.round(avg / (m -\
    \ n + 1));\n    return \"0b\" + avg.toString(2);\n}\n", "  let s = 0;\n  let count\
    \ = 0;\n  if (n > m) {\n    return -1;\n  }\n  while (n <= m) {\n    s += n;\n\
    \    n++;\n    count++;\n  }\n  return '0b' + (Math.round(s / count)).toString(2);\n\
    }", "    let result: number = (n + m) / 2;\n    if (n < m) {\n        return result;\n\
    \    }\n    return -1;\n}\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7,\
    \ 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20, 33));\n",
  "    if (n > m) {\n        return -1;\n    }\n    var total: number = 0;\n    for\
    \ (let i = n; i <= m; i++) {\n        total += i;\n    }\n    var answer: number\
    \ = Math.round(total / (m - n + 1));\n    return \"0b\" + answer.toString(2);\n\
    }\n", "  if (n>m) {return -1;}\n  const avg: number = Math.round((n+m)/2);\n \
    \ const bin: string = avg.toString(2);\n  return `0b${bin}`;\n}\n", "  if (n >\
    \ m) {\n    return -1;\n  }\n  let sum = 0;\n  for (let i = n; i <= m; i++) {\n\
    \    sum += i;\n  }\n  let avg = Math.round(sum / (m - n + 1));\n  return `0b${avg.toString(2)}`;\n\
    }\n", "    let sum: number = 0;\n    let count: number = 0;\n    let avg: number\
    \ = 0;\n    if (n < m) {\n        for (let i: number = n; i <= m; i++) {\n   \
    \         sum += i;\n            count++;\n        }\n        avg = sum / count;\n\
    \        avg = Math.round(avg);\n        return (\"0b\" + avg.toString(2));\n\
    \    } else if (n > m) {\n        return -1;\n    }\n}\nconsole.log(rounded_avg(10,\
    \ 20));\nconsole.log(rounded_avg(20, 33));\nconsole.log(rounded_avg(1, 5));\n\
    console.log(rounded_avg(7, 5));", "    if (n > m) {\n        return -1;\n    }\n\
    \    let result = n + Math.round((m - n) / 2);\n    return convertToBinary(result);\n\
    }", "    if (n > m) {\n        return -1;\n    }\n    const average = Math.round((n\
    \ + m) / 2);\n    return average.toString(2);\n}\n", "    // BEGIN SOLUTION\n\
    \    if (n > m) {\n        return -1;\n    }\n    const avg = Math.round((n +\
    \ m) / 2);\n    return \"0b\" + avg.toString(2);\n    // END SOLUTION\n}", " \
    \   if (n > m) {\n        return -1;\n    }\n    let sum = 0;\n    for (let i\
    \ = n; i <= m; i++) {\n        sum += i;\n    }\n    return \"0b\" + Math.round(sum\
    \ / (m - n + 1)).toString(2);\n}\n", "    if (n > m) {\n        return -1;\n \
    \   }\n    let sum = 0;\n    let num = 0;\n    while (n <= m) {\n        sum +=\
    \ n;\n        n++;\n        num++;\n    }\n    const average = Math.round(sum\
    \ / num);\n    return \"0b\" + average.toString(2);\n}\n\ndescribe(\"binary_average\"\
    , () => {\n    it(\"sum averages\", () => {\n        assert.equal(rounded_avg(1,\
    \ 5), \"0b11\");\n        assert.equal(rounded_avg(7, 5), -1);\n        assert.equal(rounded_avg(10,\
    \ 20), \"0b1111\");\n        assert.equal(rounded_avg(20, 33), \"0b11010\");\n\
    \    });\n});", "    return m > n ? ((n + m) / 2) | 0 : -1;\n}\n", "    if (n\
    \ > m) return -1;\n    const avg = Math.round((n + m) / 2);\n    return `0b${avg.toString(2)}`;\n\
    }\n", "    if (n > m) {\n        return -1;\n    }\n    const sum = n + m;\n \
    \   const average = Math.round(sum / 2);\n    return `0b${average.toString(2)}`;\n\
    }\n", "    if (n > m) return -1;\n    let sum = 0;\n    for (let i = n; i <= m;\
    \ i++) {\n        sum += i;\n    }\n    let avg = Math.round(sum / (m - n + 1));\n\
    \    return `0b${avg.toString(2)}`;\n}\n", "  const avg = Math.round((n + m) /\
    \ 2);\n  return avg < n ? -1 : `0b${avg.toString(2)}`;\n}\n", "    if (n > m)\
    \ {\n        return -1;\n    }\n    let sum = 0;\n    for (let i = n; i <= m;\
    \ i++) {\n        sum += i;\n    }\n    const avg = Math.round(sum / (m - n +\
    \ 1));\n    return `0b${avg.toString(2)}`;\n}\nconsole.log(rounded_avg(1, 5));\n\
    console.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20,\
    \ 33));", "    if (n > m) {\n        return -1;\n    }\n    const roundUp = Math.round((n\
    \ + m) / 2);\n    const binary = roundUp.toString(2);\n    return `0b${binary}`;\n\
    }\n", "    let avg = 0;\n    let arr = [];\n    if (n > m) {\n        return -1;\n\
    \    }\n    for (let i = n; i <= m; i++) {\n        arr.push(i);\n    }\n    avg\
    \ = Math.round(arr.reduce((a, b) => a + b) / arr.length);\n    return Number(avg).toString(2);\n\
    }", "    let avg = (n + m) / 2;\n    if (n > m) {\n        return -1;\n    }\n\
    \    return `0b${avg.toString(2)}`;\n}\n\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7,\
    \ 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20, 33));",
  "    if (n > m) return -1;\n    let average: number = Math.round((n + m) / 2);\n\
    \    return (`0b${average.toString(2)}`);\n}\n", "  if (n > m) {\n    return -1;\n\
    \  }\n  return Math.round((n + m) / 2).toString(2);\n}\n\nconsole.log(rounded_avg(1,\
    \ 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20,\
    \ 33));", "    if (n > m) {\n        return -1;\n    }\n    return n + Math.round((m\
    \ - n) / 2);\n}\n", "    if (n > m) return -1;\n    let total = 0;\n    for (let\
    \ i = n; i <= m; i++) {\n        total += i;\n    }\n    const avg = Math.round(total\
    \ / (m - n + 1));\n    const binary = \"0b\" + avg.toString(2);\n    return binary;\n\
    }\n", "    if (n > m) {\n        return -1;\n    }\n    let sum = n;\n    for\
    \ (let i = n + 1; i <= m; i++) {\n        sum += i;\n    }\n    return (Math.round(sum\
    \ / (m - n + 1))).toString(2);\n}\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7,\
    \ 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20, 33));\n",
  "    if (n > m) return -1;\n    const result = Math.round((n + m) / 2);\n    return\
    \ \"0b\" + result.toString(2);\n}\nconsole.log(rounded_avg(20, 33));", "    if\
    \ (n > m) {\n        return -1;\n    }\n    let sum = 0;\n    for (let i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    let avg = sum / (m - n + 1);\n\
    \    avg = Math.round(avg);\n    let binary = avg.toString(2);\n    return `0b${binary}`;\n\
    }", "\tlet average = Math.round((n + m) / 2);\n\treturn n > m ? -1 : `0b${average.toString(2)}`;\n\
    }", "    if (n > m) {\n        return -1;\n    }\n    let total: number = 0;\n\
    \    for (let i: number = n; i <= m; i++) {\n        total += i;\n    }\n    const\
    \ avg: number = Math.round(total / (m - n + 1));\n    return `0b${avg.toString(2)}`;\n\
    }\n\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10,\
    \ 20));\nconsole.log(rounded_avg(20, 33));\n", "    if (n > m) return -1;\n  \
    \  const average = Math.round((m + n) / 2);\n    return `0b${average.toString(2)}`;\n\
    }\n", "    let sum = n;\n    for (let i = n + 1; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    if (n <= m) {\n        return \"0b\" + Math.round(sum / (m -\
    \ n + 1)).toString(2);\n    } else {\n        return -1;\n    }\n}\n", "\tif (n\
    \ > m) {\n\t\treturn -1;\n\t}\n\tlet result = Math.round((n + m) / 2);\n\treturn\
    \ '0b' + result.toString(2);\n}\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(1,\
    \ 5));\nconsole.log(rounded_avg(20, 33));\nconsole.log(rounded_avg(7, 5));", " \
    \   let sum: number = 0;\n    let counter: number = 0;\n    let result: number\
    \ = 0;\n    if (n > m) {\n        return -1;\n    }\n    for (let i: number =\
    \ n; i <= m; i++) {\n        sum += i;\n        counter++;\n    }\n    result\
    \ = Math.round(sum / counter);\n    return \"0b\" + result.toString(2);\n}\n\n\
    console.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10,\
    \ 20));\nconsole.log(rounded_avg(20, 33));", "  if (n > m) { return -1; }\n  let\
    \ x = Math.floor((n + m) / 2);\n  let y = x.toString(2);\n  return '0b' + y;\n\
    }\n", "    let avg = (n + m) / 2;\n    if (n > m) {\n        return -1;\n    }\n\
    \    return (Math.round(avg)).toString(2);\n}\nconsole.log(rounded_avg(1, 5));\n\
    console.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20,\
    \ 33));\n", "    if (n > m) {\n        return -1;\n    }\n    const a = Math.floor((n\
    \ + m) / 2);\n    const b = a.toString(2);\n    return \"0b\" + b;\n}\n", "  \
    \  // console.log(`${n} <-- n`);\n    // console.log(`${m} <-- m`);\n    let roundedAvrg\
    \ = 0;\n    if (n > m) {\n        return -1;\n    }\n    if (n < m) {\n      \
    \  let k = 0;\n        for (let i = n; i <= m; i++) {\n            k = k + i;\n\
    \        }\n        roundedAvrg = Math.round(k / (m - n + 1));\n        return\
    \ `0b${roundedAvrg.toString(2)}`;\n    }\n}", "    if (n > m) {\n        return\
    \ -1;\n    }\n    let average: number = Math.round((n + m) / 2);\n    return average.toString(2);\n\
    };\n\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20,\
    \ 33));", "    if (n > m) {\n        return -1;\n    }\n    const average: number\
    \ = Math.round((n + m) / 2);\n    return `0b${average.toString(2)}`;\n}\nconsole.log(rounded_avg(20,\
    \ 33));", "    if (n > m) return -1;\n    let sum = 0;\n    let i = 0;\n    while\
    \ (n <= m) {\n        sum += n;\n        n++;\n        i++;\n    }\n    let average\
    \ = sum / i;\n    let roundedAvg = Math.round(average);\n    let binary = \"0b\"\
    \ + roundedAvg.toString(2);\n    return binary;\n}\nconsole.log(rounded_avg(1,\
    \ 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20,\
    \ 33));", "    if (n > m) return -1;\n    let result = 0;\n    for (let i = n;\
    \ i <= m; i++) {\n        result += i;\n    }\n    result = Math.round(result\
    \ / (m - n + 1));\n    return (result).toString(2);\n}", "    if (n > m) return\
    \ -1;\n    const arr = [];\n    for (let i = n; i <= m; i++) {\n        arr.push(i);\n\
    \    }\n    const avg = Math.round(arr.reduce((acc, value) => acc + value, 0)\
    \ / arr.length);\n    return `0b${avg.toString(2)}`;\n}\nconsole.log(rounded_avg(1,\
    \ 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20,\
    \ 33));\n", "   if (n > m) {\n      return -1;\n   } else {\n      let numbers\
    \ = [];\n      for (let i = n; i <= m; i++) {\n         numbers.push(i);\n   \
    \   }\n      let avr = Math.round(numbers.reduce((sum, x) => sum + x) / numbers.length);\n\
    \      return '0b' + Number(avr).toString(2);\n   }\n}\nconsole.log(rounded_avg(1,\
    \ 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20,\
    \ 33));", "    let avg = Math.round((n + m) / 2);\n    if (n > m) return -1;\n\
    \    return \"0b\" + avg.toString(2);\n}\n", "  if (n > m) {\n    return -1;\n\
    \  }\n  const decimal = Math.round((n + m) / 2);\n  return '0b' + Number(decimal).toString(2);\n\
    }\n\nexport { rounded_avg };", "  return n <= m ? `0b${((n + m) / 2) | 0}` : -1;\n\
    }\n", "    if (n>m) {\n        return -1;\n    }\n    let result = Math.floor((n+m)/2);\n\
    \    let resultString = \"0b\" + result.toString(2);\n    return resultString;\n\
    }\nconsole.log(rounded_avg(10,20));\n\n", "  return -1;\n}", "    if (n > m) {\n\
    \        return -1;\n    }\n    const result = Math.round((n + m) / 2);\n    return\
    \ \"0b\" + result.toString(2);\n}\n", "    if (n > m) return -1;\n    let sum\
    \ = 0;\n    for (let i = n; i <= m; i++) {\n        sum += i;\n    }\n    const\
    \ avg = Math.round(sum / (m - n + 1));\n    return '0b' + avg.toString(2);\n}\n\
    console.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10,\
    \ 20));\nconsole.log(rounded_avg(20, 33));", "    return (n < m) ? \"0b\" +  ((n\
    \ + m) / 2).toString(2).match(/\\d+/)[0] : -1;\n}\n", "    let avg: number = Math.round((n\
    \ + m) / 2);\n    if (n > m) return -1;\n    return avg.toString(2);\n}\nconsole.log(rounded_avg(20,\
    \ 33));\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10,\
    \ 20));", "    if (n > m) {\n        return -1;\n    }\n    const avg = Math.round((n\
    \ + m) / 2);\n    return `0b${avg.toString(2)}`;\n}\n", "    if (n>m) {\n    \
    \    return -1;\n    }\n    let sum: number = 0;\n    for (let i: number = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    let avg: number = Math.round(sum\
    \ / (m - n + 1));\n    return \"0b\" + avg.toString(2);\n}\n", "    // average\
    \ of two numbers = (n + m) / 2\n    // but this is not the case for this problem\n\
    \    // to get the average we have to loop through numbers n to m\n    // m and\
    \ n are inclusive, so we have to loop through it\n    if (n > m) {\n        return\
    \ -1;\n    }\n    let sum = 0;\n    for (let i = n; i <= m; i++) {\n        sum\
    \ += i;\n    }\n    // get the average and round the number\n    const average\
    \ = Math.round(sum / (m - n + 1));\n    // convert to binary\n    const binary\
    \ = average.toString(2);\n    return `0b${binary}`;\n}", "    if (n > m) {\n \
    \       return -1;\n    }\n    let mid = n + m >> 1;\n    return `0b${Number(mid).toString(2)}`;\n\
    }\n", "    if (n > m) {\n        return -1;\n    }\n    let sum = n;\n    for\
    \ (let i = n + 1; i <= m; i++) {\n        sum += i;\n    }\n    const average\
    \ = Math.round(sum / (m - n + 1));\n    return `0b${average.toString(2)}`;\n}\n\
    console.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10,\
    \ 20));\nconsole.log(rounded_avg(20, 33));", "    if (n > m) {\n        return\
    \ -1;\n    }\n    return (n + m) / 2 | 0;\n}\n", "    let x = 0;\n    if (n >\
    \ m) {\n        return -1;\n    }\n    for (let i = n; i <= m; i++) {\n      \
    \  x += i;\n    }\n    return x === 0 ? 0 : Math.round(x / (m - n + 1)).toString(2);\n\
    }\nconsole.log(rounded_avg(10,20));\nconsole.log(rounded_avg(1,5));\nconsole.log(rounded_avg(7,5));\n\
    console.log(rounded_avg(20,33));\n\nexport { }", "    if (n > m) {\n        return\
    \ -1;\n    }\n    const avrg = Math.round((n + m) / 2);\n    const binary = avrg.toString(2);\n\
    \    return `0b${binary}`;\n}\nconsole.log(rounded_avg(1, 5)); // \"0b11\"\nconsole.log(rounded_avg(7,\
    \ 5)); // -1\nconsole.log(rounded_avg(10, 20)); // \"0b1111\"\nconsole.log(rounded_avg(20,\
    \ 33)); // \"0b11010\"\n", "  const average = Math.round((n + m) / 2);\n  if (n\
    \ > m) {\n    return -1;\n  }\n  return average.toString(2);\n}\n", "    if (n\
    \ > m) return -1;\n    let x = Math.round((n + m) / 2);\n    return `0b${x.toString(2)}`;\n\
    }\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10,\
    \ 20));\nconsole.log(rounded_avg(20, 33));\n", "    if (n > m) {\n        return\
    \ -1;\n    }\n    let sum = 0;\n    for (let i = n; i <= m; i++) {\n        sum\
    \ += i;\n    }\n    const avg = Math.round(sum / (m - n + 1));\n    return `0b${avg.toString(2)}`;\n\
    }", "  if (n > m) {\n    return -1;\n  }\n  let sum = 0;\n  for (let i = n; i\
    \ <= m; i++) {\n    sum += i;\n  }\n  const average = Math.round(sum / (m - n\
    \ + 1));\n  return `0b${average.toString(2)}`;\n}\n", "    if (n > m) {\n    \
    \    return -1;\n    }\n    const avg = (n + m) / 2;\n    const roundedAvg = Math.round(avg);\n\
    \    const binaryAvg = roundedAvg.toString(2);\n    return `0b${binaryAvg}`;\n\
    }\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10,\
    \ 20));\nconsole.log(rounded_avg(20, 33));\n", "    let sum = 0;\n    let count\
    \ = 0;\n    if (n > m) {\n        return -1;\n    } else {\n        for (let i\
    \ = n; i <= m; i++) {\n            sum += i;\n            count += 1;\n      \
    \  }\n        let avg = Math.round(sum / count);\n        return `0b${avg.toString(2)}`;\n\
    \    }\n}\n", "    if (n > m) {\n        return -1;\n    }\n    let total = 0;\n\
    \    let count = 0;\n    while (n <= m) {\n        total += n;\n        count++;\n\
    \        n++;\n    }\n    const avg = Math.round(total / count);\n    return \"\
    0b\" + avg.toString(2);\n}\n\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7,\
    \ 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20, 33));\n",
  "    if (n > m) {\n        return -1;\n    }\n    let total = 0;\n    for (let i\
    \ = n; i <= m; i++) {\n        total += i;\n    }\n    const avg = Math.round(total\
    \ / (m - n + 1));\n    const binary = (avg >>> 0).toString(2);\n    return `0b${binary}`;\n\
    }\n", "    let n1: number;\n    let n2: number;\n    let x: number;\n    if (n\
    \ > m) {\n        return -1;\n    }\n    n1 = n;\n    n2 = m;\n    x = ((n1 +\
    \ n2) / 2);\n    if (x >= n1 && x <= n2) {\n        let y = Math.round(x);\n \
    \       let y1 = y.toString(2);\n        return \"0b\" + y1;\n    }\n}\nlet yy:\
    \ string = rounded_avg(1, 5);\nconsole.log(yy);\nlet xx: number = rounded_avg(7,\
    \ 5);\nconsole.log(xx);\nlet yyy: string = rounded_avg(10, 20);\nconsole.log(yyy);\n\
    let yyyy: string = rounded_avg(20, 33);\nconsole.log(yyyy);", "    if (n > m)\
    \ {\n        return -1;\n    }\n    let sum = n;\n    for (let i = n + 1; i <=\
    \ m; i++) {\n        sum += i;\n    }\n    let avg = Math.round(sum / (m - n +\
    \ 1));\n    return \"0b\" + avg.toString(2);\n}\n\ntest(rounded_avg(1, 5), \"\
    0b11\");\ntest(rounded_avg(7, 5), -1);\ntest(rounded_avg(10, 20), \"0b1111\");\n\
    test(rounded_avg(20, 33), \"0b11010\");", "    let sum = 0;\n    if (n > m) {\n\
    \        return -1;\n    }\n    for (n; n <= m; n++) {\n        sum += n;\n  \
    \  }\n    const result = Math.round(sum / ((m - n) + 1));\n    return `0b${result.toString(2)}`;\n\
    }\n\nexport {\n    triangle,\n    fizz_buzz,\n    get_squares,\n    get_divisors,\n\
    \    rounded_avg\n}", "  if (n > m) {\n    return -1;\n  }\n  let result = Math.round((m\
    \ - n + 1) / 2 + n);\n  return `0b${result.toString(2)}`;\n}\n", "    if (n >\
    \ m) {\n        return -1;\n    }\n    let sum = 0;\n    for (let i = n; i <=\
    \ m; i++) {\n        sum += i;\n    }\n    let avg = Math.round(sum / (m - n +\
    \ 1));\n    return `0b${avg.toString(2)}`;\n}\n", "    let sum: number = 0;\n\
    \    let len: number = 0;\n    if (n < m) {\n        for (let i: number = n; i\
    \ <= m; i++) {\n            sum += i;\n            len++;\n        }\n       \
    \ return Number(Math.round(sum / len)).toString(2);\n    } else {\n        return\
    \ -1;\n    }\n}\n", "    if (n > m) {\n        return -1;\n    }\n    let sum\
    \ = 0;\n    for (let i = n; i <= m; i++) {\n        sum += i;\n    }\n    const\
    \ avg = Math.round(sum / (m - n + 1));\n    const result = avg.toString(2);\n\
    \    return `0b${result}`;\n}\n", "    let total: number = 0;\n    let count:\
    \ number = 0;\n    for (let i: number = n; i <= m; i++) {\n        total += i;\n\
    \        count += 1;\n    }\n    let avg: number = Math.round(total / count);\n\
    \    let bin: string = (avg).toString(2);\n    return \"0b\" + bin;\n}\n", " \
    \   if (n > m) return -1;\n    let result = 0;\n    for (let i = n; i <= m; i++)\
    \ {\n        result += i;\n    }\n    result = Math.round(result / (m - n + 1));\n\
    \    return \"0b\" + result.toString(2);\n}\nconsole.log(rounded_avg(1, 5));\n\
    console.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20,\
    \ 33));\n", "    if (n>m) return -1;\n    let mySum: number = 0;\n    for (let\
    \ i: number = n; i <= m; i++) {\n        mySum += i;\n    }\n    let result =\
    \ `0b${Math.round(mySum / (m - n + 1)).toString(2)}`;\n    return result;\n}\n\
    console.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10,\
    \ 20));\nconsole.log(rounded_avg(20, 33));\n", "    if (n > m) {\n        return\
    \ -1;\n    }\n    return (Math.round((n + m) / 2)).toString(2);\n}\n", "    let\
    \ sum = 0;\n    let count = 0;\n    if (n > m) {\n        return -1;\n    }\n\
    \    for (let i = n; i <= m; i++) {\n        sum += i;\n        count++;\n   \
    \ }\n    let roundedAvg = Math.round(sum / count);\n    return \"0b\" + roundedAvg.toString(2);\n\
    }\n\nconsole.log(rounded_avg(20, 33));", "    if (n > m) {\n        return -1;\n\
    \    }\n\n    let avg = Math.round((n + m) / 2);\n    return \"0b\" + avg.toString(2);\n\
    }\n", "    let sum: number = n + m;\n    if (n >= m) {\n        return -1;\n \
    \   }\n    if (sum % 2 === 0) {\n        let avg = sum / 2;\n        let binary\
    \ = Number(avg).toString(2);\n        return \"0b\" + binary;\n    } else {\n\
    \        let avg = Math.round(sum / 2);\n        let binary = Number(avg).toString(2);\n\
    \        return \"0b\" + binary;\n    }\n}", "  let sum: number = 0;\n  if (n\
    \ > m) {\n    return -1;\n  }\n  for (let i: number = n; i <= m; i++) {\n    sum\
    \ += i;\n  }\n  return (Math.round(sum / (m - n + 1))).toString(2);\n}\n", " \
    \   if (n > m) {\n        return -1;\n    }\n    const avg = Math.round((n + m)\
    \ / 2);\n    return \"0b\" + avg.toString(2);\n}\n", "    if (n > m) return -1;\n\
    \    let result = 0;\n    for (let i = n; i <= m; i++) {\n        result += i;\n\
    \    }\n    result = Math.round(result / (m - n + 1));\n    return \"0b\" + result.toString(2);\n\
    }\n", "    if (n > m) {\n        return -1;\n    }\n\n    let sum = 0;\n    for\
    \ (let i = n; i <= m; i++) {\n        sum += i;\n    }\n\n    const average =\
    \ Math.round(sum / (m - n + 1));\n    return `0b${average.toString(2)}`;\n}\n",
  "    if (n > m) {\n        return -1;\n    }\n    let sum = 0;\n    for (let i =\
    \ n; i <= m; i++) {\n        sum += i;\n    }\n    return \"0b\" + (Math.round(sum\
    \ / (m - n + 1))).toString(2);\n}\n", "  if (n > m) {\n    return -1;\n  }\n \
    \ const n_ave = n + Math.round((m - n) / 2);\n  return n_ave.toString(2);\n}\n",
  "    // Your code here\n    if (n > m) return -1;\n    return Number(n + m).toString(2);\n\
    }\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10,\
    \ 20));\nconsole.log(rounded_avg(20, 33));", "    if (n > m) return -1;\n    let\
    \ sum = (n + m) / 2;\n    return sum % 1 == 0 ?  `0b${sum.toString(2)}` : -1;\n\
    }\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10,\
    \ 20));\nconsole.log(rounded_avg(20, 33));\n", "    if (n > m) {\n        return\
    \ -1;\n    }\n    let sum = n;\n    let count = 1;\n    for (let i = n + 1; i\
    \ <= m; i++) {\n        sum += i;\n        count++;\n    }\n    let avg = sum\
    \ / count;\n    let roundedAvg = Math.round(avg);\n    return `0b${roundedAvg.toString(2)}`;\n\
    }\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10,\
    \ 20));\nconsole.log(rounded_avg(20, 33));", "    if (n > m) {\n        return\
    \ -1;\n    }\n    let sum = 0;\n    for (let i = n; i <= m; i++) {\n        sum\
    \ += i;\n    }\n    let avg = Math.round(sum / (m - n + 1));\n    return \"0b\"\
    \ + avg.toString(2);\n}", "    if (n > m) return -1;\n    return +(Math.round((n\
    \ + m) / 2)).toString(2);\n}\n", "  if (n > m) {\n    return -1;\n  }\n  let sum\
    \ = 0;\n  for (let i = n; i <= m; i++) {\n    sum += i;\n  }\n  let avg = Math.round(sum\
    \ / (m - n + 1));\n  return (avg).toString(2);\n}\n", "  //Write your solution\
    \ here\n  let result: number = n;\n  let is_reverse: boolean = false;\n  if (n\
    \ > m) {\n    const temp: number = n;\n    n = m;\n    m = temp;\n    is_reverse\
    \ = true;\n  }\n  for (let i: number = n; i < m; i++) {\n    result += i;\n  }\n\
    \  result = Math.round(result / (m - n + 1));\n  if (is_reverse) {\n    return\
    \ -1;\n  }\n  return `0b${result.toString(2)}`;\n}\n", "    if (n > m) return\
    \ -1;\n    const avg = Math.round((n + m) / 2);\n    return `0b${avg.toString(2)}`;\n\
    }", "    // add your code here\n    if (n > m) {\n        return -1;\n    }\n\
    \    let num = (n + m) / 2;\n    return `0b${Math.round(num).toString(2)}`;\n\
    }\n", "  if (n > m) {\n    return -1;\n  }\n  let sum = 0;\n  for (let i = n;\
    \ i <= m; i++) {\n    sum += i;\n  }\n  let avg = Math.round(sum / (m - n + 1));\n\
    \  return '0b' + avg.toString(2);\n}\n", "    if (n > m) return -1;\n    let avg\
    \ = Math.round((n + m) / 2);\n    return \"0b\" + avg.toString(2);\n}\n", "  \
    \  if (n <= m) {\n        return ((n + m) / 2) | 0;\n    } else {\n        return\
    \ -1;\n    }\n}\n", "  if (n > m) {\n    return -1;\n  }\n  return (Math.round((n\
    \ + m) / 2)).toString(2);\n}\n\nexport { rounded_avg };", "    if (n > m) {\n\
    \        return -1;\n    }\n    let sum = n;\n    for (let i = n; i < m; i++)\
    \ {\n        sum += i;\n    }\n    const avg = Math.round(sum / (m - n + 1));\n\
    \    return `0b${avg.toString(2)}`;\n}\n\nconsole.log(rounded_avg(10, 20));",
  "    if (n > m) {\n        return -1;\n    }\n    const sum = n + m;\n    const\
    \ avg = Math.round(sum / 2);\n    return avg.toString(2);\n}\n", "\tif (n > m)\
    \ {\n\t\treturn -1;\n\t}\n\telse {\n\t\treturn \"0b\" + Math.round((n + m) / 2).toString(2);\n\
    \t}\n}\n\nexport { rounded_avg }", "    if (n > m) return -1;\n    let sum = n;\n\
    \    for (let i = n + 1; i <= m; i++) {\n        sum += i;\n    }\n    return\
    \ `0b${Math.round(sum / (m - n + 1)).toString(2)}`;\n}\nconsole.log(rounded_avg(7,\
    \ 5));\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20,\
    \ 33));", "  if (n > m) {\n    return -1;\n  }\n  const sum: number = n + m;\n\
    \  const average: number = Math.round(sum / 2);\n  return `0b${average.toString(2)}`;\n\
    }\n\nexport { rounded_avg };", "    if (n > m) return -1;\n    let sum = 0;\n\
    \    let i = n;\n    while (i <= m) {\n        sum += i;\n        i++;\n    }\n\
    \    return Number.parseInt(sum / (m - n + 1) + \"\").toString(2);\n}\n", "  \
    \  if (n > m) return -1;\n    let sum = 0;\n    for (let i = n; i <= m; i++) {\n\
    \        sum += i;\n    }\n    return \"0b\" + Math.round(sum / (m - n + 1)).toString(2);\n\
    }\n", "    let avg = Math.round((n + m) / 2);\n    if (n > m) {\n        return\
    \ -1;\n    }\n    return \"0b\" + avg.toString(2);\n}\n", "    if (n > m) {\n\
    \        return -1;\n    }\n    const avg: number = Math.round((n + m) / 2);\n\
    \    const bianry: string = avg.toString(2);\n    return `0b${bianry}`;\n}\n",
  "    let sum = 0;\n    if (n > m) {\n        return -1;\n    }\n    for (let i =\
    \ n; i <= m; i++) {\n        sum += i;\n    }\n    const avg = Math.round(sum\
    \ / (m - n + 1));\n    const result = avg.toString(2);\n    return `0b${result}`;\n\
    }", "    if (n>m) return -1;\n    const roundedAvg = Math.round((n+m)/2);\n  \
    \  return `0b${roundedAvg.toString(2)}`;\n}\nconsole.log(rounded_avg(1, 5));\n\
    console.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20,\
    \ 33));\n", "    let sum = 0;\n    let count = 0;\n    let n_num = n;\n    let\
    \ m_num = m;\n    let n_bin = \"\";\n    let m_bin = \"\";\n    if (n > m) {\n\
    \        return -1;\n    }\n    for (let i = n; i <= m; i++) {\n        sum +=\
    \ i;\n        count++;\n    }\n    let avg = Math.round(sum / count);\n    n_bin\
    \ = n_num.toString(2);\n    m_bin = m_num.toString(2);\n    return `0b${avg}`;\n\
    }\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10,\
    \ 20));\nconsole.log(rounded_avg(20, 33));", "    let rounded_average = Math.round((n\
    \ + m) / 2);\n    if (n > m) {\n        return -1;\n    } else {\n        return\
    \ \"0b\" + rounded_average.toString(2);\n    }\n}\n", "    if (n > m) {\n    \
    \    return -1;\n    }\n    const half: number = Math.round((n + m) / 2);\n  \
    \  return half.toString(2);\n}\n\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7,\
    \ 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20, 33));",
  "    if (n>m) return -1;\n    const avg=Math.round((n+m)/2);\n    return '0b'+avg.toString(2);\n\
    }\n", "    if (n > m) {\n        return -1;\n    }\n    let rounded_sum = Math.round((n\
    \ + m) / 2);\n    return (rounded_sum.toString(2));\n}\nconsole.log(rounded_avg(1,\
    \ 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20,\
    \ 33));\n", "  if (n > m) {\n    return -1;\n  }\n  const sum = n + m;\n  const\
    \ avg = Math.round(sum / 2);\n  return `0b${avg.toString(2)}`;\n}\n\ndescribe('rounded_avg',\
    \ () => {\n  it('should return \"0b11\"', () => {\n    expect(rounded_avg(1, 5)).toEqual('0b11');\n\
    \  });\n  it('should return \"-1\"', () => {\n    expect(rounded_avg(7, 5)).toEqual(-1);\n\
    \  });\n  it('should return \"0b1111\"', () => {\n    expect(rounded_avg(10, 20)).toEqual('0b1111');\n\
    \  });\n  it('should return \"0b11010\"', () => {\n    expect(rounded_avg(20,\
    \ 33)).toEqual('0b11010');\n  });\n});\n", "  if (n > m) {\n    return -1;\n \
    \ }\n  return '0b' + Math.round((n + m) / 2).toString(2);\n}\n", "    let average\
    \ = Math.round((n + m) / 2);\n    return (average === n || average === m) ? `0b${average.toString(2)}`\
    \ : -1;\n}\n\n\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7, 5));\n\
    console.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20, 33));\nconsole.log(rounded_avg(20,\
    \ 22));", "    return -1;\n}\nconsole.log(rounded_avg(1, 5)) //\"0b11\"\nconsole.log(rounded_avg(7,\
    \ 5)) //-1\nconsole.log(rounded_avg(10, 20)) //\"0b1111\"\nconsole.log(rounded_avg(20,\
    \ 33)) //\"0b11010\"", "    if (n > m) {\n        return -1;\n    }\n    let sum\
    \ = 0;\n    for (let i = n; i <= m; i++) {\n        sum += i;\n    }\n    let\
    \ avg = Math.round(sum / (m - n + 1));\n    return `0b${avg.toString(2)}`;\n}\n\
    \n", "    if (n > m) {\n        return -1;\n    }\n\n    const average = Math.round((n\
    \ + m) / 2);\n    return average.toString(2);\n}\n", "    if (n > m) {\n     \
    \   return -1;\n    }\n    let total = 0;\n    for (let i = n; i <= m; i++) {\n\
    \        total += i;\n    }\n    const result = Math.round(total / (m - n + 1));\n\
    \    return \"0b\" + result.toString(2);\n}\n\nconsole.log(rounded_avg(10, 20));\
    \ // 0b1111\nconsole.log(rounded_avg(20, 33)); // 0b11010\nconsole.log(rounded_avg(7,\
    \ 5)); // -1", "    if (n > m) {\n        return -1;\n    }\n    let avg = Math.round((n\
    \ + m) / 2);\n    return avg.toString(2);\n}\n", "    if (n > m) {\n        return\
    \ -1;\n    }\n    const num = Math.round((n + m) / 2);\n    return `0b${num.toString(2)}`;\n\
    }\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20, 33));\nconsole.log(rounded_avg(7,\
    \ 5));\nconsole.log(rounded_avg(1, 5));", "  if (n > m) {\n    return -1;\n  }\n\
    \  let avg: number = Math.round((n + m) / 2);\n  return \"0b\" + avg.toString(2);\n\
    }\n\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10,\
    \ 20));\nconsole.log(rounded_avg(20, 33));\n", "    if (n > m) return -1;\n  \
    \  let avg = Math.round((n + m) / 2);\n    let result = avg.toString(2);\n   \
    \ return `0b${result}`;\n}\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(1,\
    \ 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(20, 33));\n",
  "    //throw new Error(\"Method not implemented.\");\n    var sum = 0;\n    var\
    \ bin = \"\";\n    if (n < m) {\n        for (var i = n; i <= m; i++) {\n    \
    \        sum += i;\n        }\n        var avg = Math.round(sum / (m - n + 1));\n\
    \        bin = avg.toString(2);\n        bin = \"0b\" + bin;\n        return bin;\n\
    \    }\n    else {\n        return -1;\n    }\n}\nconsole.log(rounded_avg(7, 5));\n\
    console.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20, 33));\n", "   \
    \ if (n > m) {\n        return -1;\n    }\n    let sum = 0;\n    for (let i =\
    \ n; i <= m; i++) {\n        sum += i;\n    }\n    const average = Math.round(sum\
    \ / (m - n + 1));\n    return average.toString(2);\n}\nconsole.log(rounded_avg(1,\
    \ 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20,\
    \ 33));", "    if (n > m) {\n        return -1;\n    }\n    const avg = Math.round((n\
    \ + m) / 2);\n    return '0b' + avg.toString(2);\n}\n", "    if (n > m) {\n  \
    \      return -1;\n    }\n    let average: number = Math.round((n + m) / 2);\n\
    \    return \"0b\" + average.toString(2);\n}\nconsole.log(rounded_avg(1, 5));\n\
    console.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20,\
    \ 33));\n", "    if (n > m) return -1;\n    if (n === m) return n.toString(2);\n\
    \    const average = Math.round((n + m) / 2);\n    return average.toString(2);\n\
    }\n", "    if (n > m) {\n        return -1;\n    }\n    const average = Math.round((m\
    \ + n) / 2);\n    return `0b${average.toString(2)}`;\n}\nconsole.log(rounded_avg(10,\
    \ 20));", "    if (n > m) return -1;\n    let average = Math.round((n + m) / 2);\n\
    \    return `0b${average.toString(2)}`;\n}\nconsole.log(rounded_avg(1, 5));\n\
    console.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20,\
    \ 33));", "    if (n > m) return -1;\n    let avg = 0;\n    let cnt = 0;\n   \
    \ for (let i = n; i <= m; i++) {\n        avg += i;\n        cnt++;\n    }\n \
    \   avg = Math.round(avg / cnt);\n    return '0b' + avg.toString(2);\n}\n\nconsole.log(rounded_avg(1,\
    \ 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20,\
    \ 33));\nconsole.log(rounded_avg(20, 33));", "    const avg = Math.round((n +\
    \ m) / 2);\n    return (n > m) ? -1 : avg.toString(2);\n}\n", "    let average:\
    \ number = Math.round((n + m) / 2);\n    if (n > m) {\n        return -1;\n  \
    \  } else {\n        return (`0b${average.toString(2)}`);\n    }\n}\nconsole.log(rounded_avg(7,\
    \ 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20, 33));\n\
    console.log(rounded_avg(30, 33));\n", "    const avg = Math.round((n + m) / 2);\n\
    \    return avg >= n && avg <= m ? `0b${(avg).toString(2)}` : -1;\n}\nconsole.log(rounded_avg(1,\
    \ 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20, 33));\n\
    console.log(rounded_avg(7, 5));", "    if (n > m) {\n        return -1;\n    }\n\
    \n    let average = 0;\n    for (let i = n; i <= m; i++) {\n        average +=\
    \ i;\n    }\n    average = Math.round(average / (m - n + 1));\n    return `0b${average.toString(2)}`;\n\
    }\n", "    const avg = Math.round((n + m) / 2);\n    return n > m ? -1 : `0b${avg.toString(2)}`;\n\
    }\nconsole.log(rounded_avg(20, 33));", "    if (n>m) return -1;\n    const avg\
    \ = Math.round((n+m)/2);\n    const binary = Math.round(avg).toString(2);\n  \
    \  return '0b' + binary;\n}\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7,\
    \ 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20, 33));",
  "    if (n > m) return -1;\n    return `0b${Math.round((n + m) / 2).toString(2)}`;\n\
    }\n", "    if (n > m) {\n        return -1;\n    }\n    const sum = n + m;\n \
    \   const avg = sum / 2;\n    const rounded = Math.round(avg);\n    const binary\
    \ = rounded.toString(2);\n    return `0b${binary}`;\n}\n", "    if (n > m) return\
    \ -1;\n    const sum = ((n + m) * (m - n + 1)) / 2;\n    const avg = Math.round(sum\
    \ / (m - n + 1));\n    return \"0b\" + avg.toString(2);\n}\nconsole.log(rounded_avg(1,\
    \ 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20,\
    \ 33));\n", "    if (n > m) return -1;\n    let result = ((n + m) / 2);\n    let\
    \ rounded_result = Math.round(result);\n    let binary_result = (rounded_result\
    \ >>> 0).toString(2);\n    return \"0b\" + binary_result;\n}\n", "  if (n > m)\
    \ {\n    return -1;\n  }\n  var arr: number[] = [];\n  var avg: number = 0;\n\
    \  for (var i = n; i <= m; i++) {\n    arr.push(i);\n  }\n  console.log(arr);\n\
    \  var binarr: string[] = [];\n  for (var elem of arr) {\n    binarr.push(elem.toString(2));\n\
    \  }\n  for (var elem of binarr) {\n    avg += parseInt(elem, 2);\n  }\n  avg\
    \ = Math.round(avg / binarr.length);\n  return \"0b\" + avg.toString(2);\n}\n\
    console.log(rounded_avg(10, 20));\n", "    if (n > m) return -1;\n    const floor\
    \ = Math.floor((n + m) / 2);\n    return `0b${floor.toString(2)}`;\n}\n", "  \
    \  if (n > m) return -1;\n    let avg = Math.round((m + n) / 2);\n    return \"\
    0b\" + avg.toString(2);\n}\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7,\
    \ 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20, 33));",
  "  if (n > m) {\n    return -1;\n  }\n  const average = Math.round((n + m) / 2);\n\
    \  return `0b${average.toString(2)}`;\n}", "  return n < m ? (Math.round((n +\
    \ m) / 2)).toString(2) : -1;\n}\n", "    let result = Math.round((n + m) / 2);\n\
    \    return result == Infinity ? -1 : `0b${result.toString(2)}`;\n}\n", "    //\
    \ your code here\n    if (n > m) {\n        return -1;\n    }\n    let num = Math.floor((n\
    \ + m) / 2);\n    return \"0b\" + num.toString(2);\n}\n", "    let total: number\
    \ = 0;\n    let avg: number = 0;\n    let result: string;\n    if (n > m) {\n\
    \        return -1;\n    } else {\n        for (let i: number = n; i <= m; i++)\
    \ {\n            total += i;\n        }\n        avg = Math.round(total / (m -\
    \ n + 1));\n        result = avg.toString(2);\n        return \"0b\" + result;\n\
    \    }\n}\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7, 5));\n\
    console.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20, 33));", "  if (n\
    \ > m) {\n    return -1;\n  }\n  const a = (n + m) / 2;\n  const a_r = Math.round(a);\n\
    \  return (a_r >>> 0).toString(2);\n}\ntest(rounded_avg, [1, 5], \"0b11\");\n\
    test(rounded_avg, [7, 5], -1);\ntest(rounded_avg, [10, 20], \"0b1111\");\ntest(rounded_avg,\
    \ [20, 33], \"0b11010\");\n\n", "    if (n > m) return -1;\n    let sum = 0;\n\
    \    for (let i = n; i <= m; i++) {\n        sum += i;\n    }\n    return Number.parseInt(sum\
    \ / (m - n + 1), 10).toString(2);\n}\nconsole.log(rounded_avg(1, 5));\nconsole.log(rounded_avg(7,\
    \ 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20, 33));\n",
  "  const avg = Math.round((n + m) / 2);\n  if (n > m) {\n    return -1;\n  }\n \
    \ return avg.toString(2);\n}\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20,\
    \ 33));\n", "    if (n > m) {\n        return -1;\n    }\n    const average =\
    \ Math.round((n + m) / 2);\n    return Number(average).toString(2);\n}\nconsole.log(rounded_avg(1,\
    \ 5));\nconsole.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20,\
    \ 33));\n", "    if (n > m) return -1;\n    let sum = 0;\n    for (let i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    const avg = Math.round(sum / (m\
    \ - n + 1));\n    return avg.toString(2);\n}\nconsole.log(rounded_avg(1, 5));\n\
    console.log(rounded_avg(7, 5));\nconsole.log(rounded_avg(10, 20));\nconsole.log(rounded_avg(20,\
    \ 33));\n", "    if (n > m) {\n        return -1;\n    }\n    let sum = 0;\n \
    \   for (let i = n; i <= m; i++) {\n        sum += i;\n    }\n    return (Math.round(sum\
    \ / (m - n + 1))).toString(2);\n}\n", "    let avg = (n + m) / 2;\n    if (n >\
    \ m) {\n        return -1;\n    } else {\n        return \"0b\" + Math.round(avg).toString(2);\n\
    \    }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

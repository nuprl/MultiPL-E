name: HumanEval_60_sum_to_n
language: ts
prompt: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
  // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
  // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n: number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n \
  \ assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
  \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
completions: ["  // YOUR CODE HERE\n  return 0;\n}\n", "    // FIXME: Implement this!\n\
    \    return -1;\n}\n", "    return n * (n + 1) / 2;\n}\n", "  let sum = 0;\n \
    \ for (let i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\n", " \
    \ return (n * (n + 1)) / 2;\n}\n", "    let sum: number = 0;\n    for (let i:\
    \ number = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
  "    if (n == 1) {\n        return 1;\n    }\n    return n + sum_to_n(n - 1);\n\
    }\nconsole.log(sum_to_n(10));\nconsole.log(sum_to_n(100));\nconsole.log(sum_to_n(5));\n\
    console.log(sum_to_n(1));\n", "    if (n === 1) {\n        return 1;\n    }\n\
    \    return n + sum_to_n(n - 1);\n}\n", "    if (n <= 1) {\n        return n;\n\
    \    } else {\n        return n + sum_to_n(n - 1);\n    }\n}\n", "    return n\
    \ * (n + 1) / 2;\n}\n", "    return ((n + 1) * n) / 2;\n}\n\nconsole.log(sum_to_n(30));\n\
    console.log(sum_to_n(100));\nconsole.log(sum_to_n(5));\nconsole.log(sum_to_n(10));\n\
    console.log(sum_to_n(1));\n", "  // --- YOUR CODE HERE ---\n  return 0;\n}\n",
  "    if (n == 1) return 1;\n    return n + sum_to_n(n - 1);\n}\n", "  return (n\
    \ * (n + 1)) / 2;\n}\n\nexport { sum_to_n };", "  let sum = 0;\n  let i = 1;\n\
    \  while (i <= n) {\n    sum += i;\n    i++;\n  }\n  return sum;\n}\n\ndescribe(\"\
    sum_to_n(n)\", () => {\n  it(\"should calculate the sum from 1 to 10\", () =>\
    \ {\n    expect(sum_to_n(10)).toEqual(55);\n  });\n  it(\"should calculate the\
    \ sum from 1 to 30\", () => {\n    expect(sum_to_n(30)).toEqual(465);\n  });\n\
    \  it(\"should calculate the sum from 1 to 100\", () => {\n    expect(sum_to_n(100)).toEqual(5050);\n\
    \  });\n  it(\"should calculate the sum from 1 to 5\", () => {\n    expect(sum_to_n(5)).toEqual(15);\n\
    \  });\n  it(\"should calculate the sum from 1 to 1\", () => {\n    expect(sum_to_n(1)).toEqual(1);\n\
    \  });\n});\n", "  return (n * (n + 1)) / 2;\n}\n", "    return (n * (n + 1))\
    \ / 2;\n}\n", "  let sum: number = 0;\n  for (let i: number = 1; i <= n; i++)\
    \ {\n    sum += i;\n  }\n  return sum;\n}\n", "  let sum = 0;\n  for (let i =\
    \ 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\n\nconsole.log(sum_to_n(30));\n\
    console.log(sum_to_n(100));\nconsole.log(sum_to_n(5));\nconsole.log(sum_to_n(10));\n\
    console.log(sum_to_n(1));", "  return (n*(n+1))/2;\n}\n", "    let result = 0;\n\
    \    for (let i = 1; i <= n; i++) {\n        result += i;\n    }\n    return result;\n\
    }\n", "  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum += i;\n  }\n\
    \  return sum;\n}\n", "  let sum: number = 0;\n  for (let i: number = 1; i <=\
    \ n; i++) {\n    sum += i;\n  }\n  return sum;\n}\nconsole.log(sum_to_n(30));\n\
    console.log(sum_to_n(100));\nconsole.log(sum_to_n(5));\nconsole.log(sum_to_n(10));\n\
    console.log(sum_to_n(1));\n", "    let sum = 0;\n    for (let i = 1; i <= n; i++)\
    \ {\n        sum += i;\n    }\n    return sum;\n}", "    return (n*(n+1))/2;\n\
    }\n", "  let sum: number = 0;\n  if (n < 1) {\n    return n;\n  }\n  for (let\
    \ i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\n", "    return\
    \ (n * (n + 1)) / 2;\n}\n", "    let total = 0;\n    for (let i = 1; i <= n; i++)\
    \ {\n        total += i;\n    }\n    return total;\n}\n", "  let sum = 0;\n  for\
    \ (let i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\n", "  return\
    \ n * (n + 1) / 2;\n}\n", "    // TODO\n    let result = 0;\n    for (let i =\
    \ 1; i <= n; i++) {\n        result += i;\n    }\n    return result;\n}\n", " \
    \ if (n == 1) {\n    return 1;\n  } else {\n    return n + sum_to_n(n - 1);\n\
    \  }\n}\n", "    let result = 0;\n    for (let i = 1; i <= n; i++) {\n       \
    \ result += i;\n    }\n    return result;\n}\n", "    return n*(n+1)/2;\n}\n",
  "  return (n * (n + 1)) / 2;\n}\n", "    let sum = 0;\n    for (let i = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n", "    let sum: number\
    \ = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i;\n    }\n\
    \    return sum;\n}\n", "    // TODO: YOUR CODE HERE\n    return 0;\n}\n", " \
    \ let result = 0;\n  for (let i = 1; i <= n; i++) {\n    result += i;\n  }\n \
    \ return result;\n}\n", "    // todo\n    let sum = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n", "    let sum\
    \ = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return\
    \ sum;\n}\n", "    return n * (n + 1) / 2;\n}\n", "    let sum = 0;\n    for (let\
    \ i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n", "  \
    \  if (n === 1) {\n        return 1;\n    } else {\n        return n + sum_to_n(n\
    \ - 1);\n    }\n}\n", "    let sum: number = 0;\n    for (let i: number = 1; i\
    \ <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n", "  return n *\
    \ (n + 1) / 2;\n}\n", "  return (n * (n + 1)) / 2;\n}\n", "    return n * (n +\
    \ 1) / 2;\n}\n", "  return n * (n + 1) / 2;\n}\n", "  return n * (n + 1) / 2;\n\
    }\n", "  let sum: number = 0;\n  for (let i: number = 1; i <= n; i++) {\n    sum\
    \ += i;\n  }\n  return sum;\n}\n", "  return n * (n + 1) / 2;\n}\n", "  if (n\
    \ <= 1) {\n    return n;\n  } else {\n    return n + sum_to_n(n - 1);\n  }\n}\n\
    \nexport default sum_to_n;", "    let sum: number = 0;\n    for (let i: number\
    \ = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n", "    return\
    \ n*(n+1)/2;\n}", "  if (n === 1) {\n    return 1;\n  }\n  return n + sum_to_n(n\
    \ - 1);\n}", "    return 0;\n}\ntest(sum_to_n, [1], 1);\ntest(sum_to_n, [30],\
    \ 465);\ntest(sum_to_n, [100], 5050);\ntest(sum_to_n, [5], 15);\ntest(sum_to_n,\
    \ [10], 55);\n", "    return (n * (n + 1)) / 2;\n}\n", "    return (n + 1) * n\
    \ / 2;\n}\n\ntest(\"test sum_to_n\", () => {\n    expect(sum_to_n(30)).toBe(465);\n\
    \    expect(sum_to_n(100)).toBe(5050);\n    expect(sum_to_n(5)).toBe(15);\n  \
    \  expect(sum_to_n(10)).toBe(55);\n    expect(sum_to_n(1)).toBe(1);\n});\n", " \
    \   let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n\
    \    return sum;\n}\nconsole.log(sum_to_n(10));\n", "  if (n === 1) {\n    return\
    \ 1;\n  }\n  return n + sum_to_n(n - 1);\n}\n", "    let sum: number = 0;\n  \
    \  for (let i: number = 1; i <= n; i++) {\n        sum += i;\n    }\n    return\
    \ sum;\n}\n", "  return n * (n + 1) / 2;\n}\n", "  let sum = 0;\n  for (let i\
    \ = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\n", "  return (n *\
    \ (n + 1)) / 2;\n}\n", "  return 0;\n}\n", "    return n*(n+1)/2;\n}\n", "   \
    \ return n * (n + 1) / 2;\n}\n", "    return n * (n + 1) / 2;\n}\n", "  return\
    \ n * (n + 1) / 2;\n}\n", "  let sum: number = 0;\n  for (let i: number = 1; i\
    \ <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\n", "  // let i = 1;\n  //\
    \ let sum = 0;\n  // while (i <= n) {\n  //   sum += i;\n  //   i++;\n  // }\n\
    \  // return sum;\n  return (n * (n + 1)) / 2;\n}\n", "  if (n == 1) {\n    return\
    \ 1;\n  }\n  return n + sum_to_n(n - 1);\n}", "    return n;\n}\n", "  let sum\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n\
    }\n", "  let total: number = 0;\n  for (let i: number = 1; i <= n; i++) {\n  \
    \  total += i;\n  }\n  return total;\n}\n", "    return n*(n+1)/2;\n}\n", "  \
    \  let total: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n      \
    \  total += i;\n    }\n    return total;\n}\n", "  let sum: number = 0;\n  for\
    \ (let i: number = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\n",
  "    if (n === 1) {\n        return 1;\n    } else {\n        return n + sum_to_n(n\
    \ - 1);\n    }\n}\n", "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n\
    \        sum += i;\n    }\n    return sum;\n}\nconsole.log(sum_to_n(30));\nconsole.log(sum_to_n(100));\n\
    console.log(sum_to_n(5));\nconsole.log(sum_to_n(10));\nconsole.log(sum_to_n(1));\n",
  "    let total = 0;\n    for (let i = 1; i <= n; i++) {\n        total += i;\n \
    \   }\n    return total;\n}\n", "    let sum = 0;\n    for (let i = 1; i <= n;\
    \ i++) {\n        sum += i;\n    }\n    return sum;\n}\n", "    let sum: number\
    \ = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i;\n    }\n\
    \    return sum;\n}", "    return (n*(n+1))/2;\n}\n", "    let sum: number = 0;\n\
    \    for (let i: number = 1; i <= n; i++) {\n        sum += i;\n    }\n    return\
    \ sum;\n}\n", "  let sum: number = 0;\n  for (let i: number = 1; i <= n; i++)\
    \ {\n    sum += i;\n  }\n  return sum;\n}\nconsole.log(sum_to_n(30));\nconsole.log(sum_to_n(100));\n\
    console.log(sum_to_n(5));\nconsole.log(sum_to_n(10));\nconsole.log(sum_to_n(1));\n",
  "    return (n * (n + 1)) / 2;\n}\nsum_to_n(5);\n", "    return 0;\n}\n", "  //\
    \ Replace this line with your code.\n  let sum = 0;\n  for (let i = 1; i <= n;\
    \ i++) {\n    sum += i;\n  }\n  return sum;\n}\nconsole.log(sum_to_n(30));\nconsole.log(sum_to_n(100));\n\
    console.log(sum_to_n(5));\nconsole.log(sum_to_n(10));\nconsole.log(sum_to_n(1));\n",
  "    return (n * (n + 1)) / 2;\n}\n", "    let total = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        total += i;\n    }\n    return total;\n}\n", "  if (n\
    \ === 1) {\n    return 1;\n  } else {\n    return n + sum_to_n(n - 1);\n  }\n\
    }\n", "    let t = 0;\n    for (let i = 1; i <= n; i++) {\n        t += i;\n \
    \   }\n    return t;\n}", "  let result = 0;\n  for (let i = 1; i <= n; i++) {\n\
    \    result += i;\n  }\n  return result;\n}\n", "    let sum = 0;\n    for (let\
    \ i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nconsole.log(sum_to_n(1));\n\
    console.log(sum_to_n(5));\nconsole.log(sum_to_n(10));\nconsole.log(sum_to_n(30));\n\
    console.log(sum_to_n(100));\n", "    return n * (n + 1) / 2;\n}\n", "    if (n\
    \ <= 1) {\n        return n;\n    }\n    return n + sum_to_n(n - 1);\n}\n", " \
    \   let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n\
    \    return sum;\n}\n", "    return (n*(n+1))/2;\n}\n", "    return n * (n + 1)\
    \ / 2;\n}\n", "    return (n * (n + 1)) / 2;\n}", "  if (n === 1) {\n    return\
    \ 1;\n  } else {\n    return n + sum_to_n(n - 1);\n  }\n}\n", "    let sum = 0;\n\
    \    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n\
    }\n", "  if (n === 1) {\n    return 1;\n  }\n  return n + sum_to_n(n - 1);\n}\n\
    \nconsole.log(sum_to_n(30));\nconsole.log(sum_to_n(100));\nconsole.log(sum_to_n(5));\n\
    console.log(sum_to_n(10));\nconsole.log(sum_to_n(1));\n", "    let sum = 0;\n\
    \    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n\
    }\n", "  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum += i;\n  }\n\
    \  return sum;\n}\n", "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n\
    \        sum += i;\n    }\n    return sum;\n}", "    let sum: number = 0;\n  \
    \  let m: number = n;\n    while (m >= 1) {\n        sum = sum + m;\n        m\
    \ = m - 1;\n    }\n    return sum;\n}\n", "    let sum: number = 0;\n    for (let\
    \ i: number = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
  "  if (n < 1) {\n    return 0;\n  } else {\n    return n + sum_to_n(n - 1);\n  }\n\
    }\n", "  if (n === 1) {\n    return 1;\n  }\n  else {\n    return sum_to_n(n -\
    \ 1) + n;\n  }\n}\n\nconsole.log(sum_to_n(10));\n", "    // TODO\n    if (n <\
    \ 1) {\n        return 0;\n    } else {\n        return n + sum_to_n(n - 1);\n\
    \    }\n}\n", "  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum += i;\n\
    \  }\n  return sum;\n}\n", "  //base case\n  if (n === 1) {\n    return 1;\n \
    \ }\n  //general case\n  else {\n    return n + sum_to_n(n - 1);\n  }\n}\n", " \
    \ return (n * (n + 1)) / 2;\n}\n", "  let sum = 0;\n  for (let i = 1; i <= n;\
    \ i++) {\n    sum += i;\n  }\n  return sum;\n}\n", "    let i: number;\n    let\
    \ sum: number = 0;\n    for (i = 1; i <= n; i += 1) {\n        sum += i;\n   \
    \ }\n    return sum;\n}\n", "    let sum = 0;\n    for (let i = 1; i <= n; i++)\
    \ {\n        sum += i;\n    }\n    return sum;\n}\n", "    // Using the formula,\
    \ int(n*(n+1)/2) to sum the numbers.\n    return Math.floor(n * (n + 1) / 2);\n\
    }\n", "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n\
    \    }\n    return sum;\n}\n", "    return (n*(n+1))/2;\n}\n", "    let sum =\
    \ 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return\
    \ sum;\n}\n", "    return n > 0 ? n + sum_to_n(n - 1) : 0;\n}\n", "    return\
    \ 0;\n}\n", "    return n * (n + 1) / 2;\n}", "    let sum = 0;\n    for (let\
    \ i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n", "  \
    \  let result = 0;\n    for (let i = 1; i <= n; i++) {\n        result += i;\n\
    \    }\n    return result;\n}\n", "  return n * (n + 1) / 2;\n}\n", "    // TODO:\
    \ Complete this function\n    let sum: number = 0;\n    for (let i: number = 1;\
    \ i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n", "    let sum\
    \ = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return\
    \ sum;\n}\n", "    let total: number = 0;\n    for (let i: number = 1; i <= n;\
    \ i++) {\n        total += i;\n    }\n    return total;\n}\n", "  let sum: number\
    \ = 0;\n  for (let i: number = 1; i <= n; i++) {\n    sum += i;\n  }\n  return\
    \ sum;\n}\n", "    if (n === 1) {\n        return 1;\n    }\n    return n + sum_to_n(n\
    \ - 1);\n}\n", "    let ans: number = 0;\n    for (let i: number = 1; i <= n;\
    \ i++) {\n        ans += i;\n    }\n    return ans;\n}\n", "  return n * (n +\
    \ 1) / 2;\n}\n", "    // const assert = require('assert');\n    // function sum_to_n(n:\
    \ number): number {\n    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n  \
    \      sum += i;\n    }\n    return sum;\n}\n", "  let result = 0;\n  for (let\
    \ i = 1; i <= n; i++) {\n    result += i;\n  }\n  return result;\n}\n\ntest(sum_to_n(3),\
    \ 6);\ntest(sum_to_n(5), 15);\ntest(sum_to_n(10), 55);\ntest(sum_to_n(100), 5050);\n",
  "    // let a = 1;\n    // let b = 0;\n    // for (let i = 0; i < n; i++) {\n  \
    \  //     b = b + a;\n    //     a++;\n    // }\n    // return b;\n    let total\
    \ = 0;\n    for (let i = 1; i <= n; i++) {\n        total += i;\n    }\n    return\
    \ total;\n}\n", "  return (n * (n + 1)) / 2;\n}", "    let sum: number = 0;\n\
    \    for (let i: number = 1; i <= n; i++) {\n        sum += i;\n    }\n    return\
    \ sum;\n}\n", "    return n * (n + 1) / 2;\n}", "  return n * (n + 1) / 2;\n}\n",
  "    if (n === 1) {\n        return 1;\n    }\n    else {\n        return n + sum_to_n(n\
    \ - 1);\n    }\n}\nconsole.log(sum_to_n(1));\nconsole.log(sum_to_n(5));\nconsole.log(sum_to_n(10));\n\
    console.log(sum_to_n(30));\nconsole.log(sum_to_n(100));", "  return n * (n + 1)\
    \ / 2;\n}\n", "    return n * (n + 1) / 2;\n}\n", "  return (n * (n + 1)) / 2;\n\
    }\n", "    return (n * (n + 1)) / 2;\n}\n", "  let sum: number = 0;\n  for (let\
    \ i: number = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\n", "  let\
    \ sum: number = 0;\n  for (let i: number = 1; i <= n; i++) {\n    sum += i;\n\
    \  }\n  return sum;\n}\n\nconsole.log(sum_to_n(30));\nconsole.log(sum_to_n(100));\n\
    console.log(sum_to_n(5));\nconsole.log(sum_to_n(10));\nconsole.log(sum_to_n(1));",
  "    return n * (n + 1) / 2;\n}\n\ndescribe(\"Test if the function is working correctly.\"\
    , () => {\n    test(\"If 5 is passed in, the sum of 1 to 5 = 15.\", () => {\n\
    \        expect(sum_to_n(5)).toBe(15);\n    });\n    test(\"If 10 is passed in,\
    \ the sum of 1 to 10 = 55.\", () => {\n        expect(sum_to_n(10)).toBe(55);\n\
    \    });\n    test(\"If 1 is passed in, the sum of 1 to 1 = 1.\", () => {\n  \
    \      expect(sum_to_n(1)).toBe(1);\n    });\n    test(\"If 30 is passed in, the\
    \ sum of 1 to 30 = 465.\", () => {\n        expect(sum_to_n(30)).toBe(465);\n\
    \    });\n    test(\"If 100 is passed in, the sum of 1 to 100 = 5050.\", () =>\
    \ {\n        expect(sum_to_n(100)).toBe(5050);\n    });\n});", "  let summation\
    \ = 0;\n  for (let i = 1; i <= n; i++) {\n    summation += i;\n  }\n  return summation;\n\
    }\n", "  return n * (n + 1) / 2;\n}\n", "  return n*(n+1)/2;\n}\n", "    let sum:\
    \ number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i;\n\
    \    }\n    return sum;\n}\n", "  return 0;\n}\n", "    let sum = 0;\n    for\
    \ (let i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n",
  "  if (n === 1) {\n    return 1;\n  } else {\n    return n + sum_to_n(n - 1);\n\
    \  }\n}\nconsole.log(sum_to_n(1));\nconsole.log(sum_to_n(10));\nconsole.log(sum_to_n(100));\n",
  "    // The answer will be on the second line.\n    let sum: number = 0;\n    for\
    \ (let i: number = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n\
    }\n", "    return n * (n + 1) / 2;\n}", "    // TODO: implement your solution\
    \ here\n    let res = 0;\n    if (n<=0) {\n        res = 0;\n    } else {\n  \
    \      for (let i = 0; i <= n; i++) {\n            res += i;\n        }\n    }\n\
    \    return res;\n}\n", "  let sum: number = 0;\n  for (let i: number = 1; i <=\
    \ n; i++) {\n    sum += i;\n  }\n  return sum;\n}\n\nlet n: number = 30;\nlet\
    \ total: number = sum_to_n(n);\n\nconsole.log(total);\n", "    return 0;\n}\n",
  "  return ((n + 1) * n) / 2;\n}\n", "    //sum=n(n+1)/2\n    return (n * (n + 1))\
    \ / 2;\n}", "  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum += i;\n\
    \  }\n  return sum;\n}\n", "    let res = 0;\n    for (let i = 1; i <= n; i++)\
    \ {\n        res += i;\n    }\n    return res;\n}\n", "    let r: number = 0;\n\
    \    let i: number = 1;\n    while (i <= n) {\n        r = r + i;\n        i =\
    \ i + 1;\n    }\n    return r;\n}\n", "  let sum: number = 0;\n  for (let i: number\
    \ = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\n", "    if (n ==\
    \ 1) {\n        return 1;\n    }\n    return n + sum_to_n(n - 1);\n}\n", "   \
    \ let sum: number = 0;\n    let i: number = 1;\n    while (i <= n) {\n       \
    \ sum = sum + i;\n        i = i + 1;\n    }\n    return sum;\n}", "  if (n <=\
    \ 1) {\n    return n;\n  }\n  return n + sum_to_n(n - 1);\n}\n\ntest(\"test sum_to_n\"\
    , function () {\n  expect(sum_to_n(30)).toBe(465);\n  expect(sum_to_n(100)).toBe(5050);\n\
    \  expect(sum_to_n(5)).toBe(15);\n  expect(sum_to_n(10)).toBe(55);\n  expect(sum_to_n(1)).toBe(1);\n\
    });\n", "  // your code here\n  return 0;\n}\n", "    return n * (n + 1) / 2;\n\
    }\n", "    return n * (n + 1) / 2;\n}\n", "    return (n * (n + 1)) / 2;\n}\n",
  "  // YOUR CODE HERE\n  return;\n}\n", "  let sum: number = 0;\n  for (let i: number\
    \ = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\n", "    if (n <=\
    \ 1) {\n        return n;\n    }\n    return n + sum_to_n(n - 1);\n}\n", "   \
    \ return 0;\n}\n", "  // NOTE: n is an integer.\n  // NOTE: n is not negative.\n\
    \  return n * (n + 1) / 2;\n}\n", "    if (n === 1) {\n        return 1;\n   \
    \ }\n    return n + sum_to_n(n - 1);\n}\n", "    return (n * (n + 1)) / 2;\n}\n",
  "    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum\
    \ += i;\n    }\n    return sum;\n}\n", "  if (n < 1) {\n    return 0;\n  }\n \
    \ return (n * (n + 1)) / 2;\n}\n", "    let result = 0;\n    for (let i = 1; i\
    \ <= n; i++) {\n        result += i;\n    }\n    return result;\n}\n", "  let\
    \ sum = 0;\n  let counter = 1;\n  for (let i = 1; i <= n; i++) {\n    sum += counter;\n\
    \    counter += 1;\n  }\n  return sum;\n}", "  return n*(n+1)/2;\n}\n", "    if\
    \ (n < 1) {\n        return 0;\n    }\n    return n + sum_to_n(n - 1);\n}\nconsole.log(sum_to_n(30));\n\
    console.log(sum_to_n(100));\nconsole.log(sum_to_n(5));\nconsole.log(sum_to_n(10));\n\
    console.log(sum_to_n(1));\n", "  let sum = 0;\n  for (let i = 1; i <= n; i++)\
    \ {\n    sum += i;\n  }\n  return sum;\n}\n", "  let result = 0;\n  for (let i\
    \ = 1; i <= n; i++) {\n    result += i;\n  }\n  return result;\n}\n", "    let\
    \ sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum +=\
    \ i;\n    }\n    return sum;\n}\n", "    return n * (n + 1) / 2;\n}\n", "    return\
    \ n * (n + 1) / 2;\n}\n", "    // >>> sum_to_n(n-1) + n\n    return n == 1 ? 1\
    \ : sum_to_n(n - 1) + n;\n}\n", "  if (n === 1) {\n    return 1;\n  } else {\n\
    \    return n + sum_to_n(n - 1);\n  }\n}\n\nconsole.log(sum_to_n(30));\nconsole.log(sum_to_n(100));\n\
    console.log(sum_to_n(5));\nconsole.log(sum_to_n(10));\nconsole.log(sum_to_n(1));\n",
  "  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return\
    \ sum;\n}\nconsole.log(sum_to_n(30));\nconsole.log(sum_to_n(100));\nconsole.log(sum_to_n(5));\n\
    console.log(sum_to_n(10));\nconsole.log(sum_to_n(1));\n", "  return n === 1 ?\
    \ 1 : n + sum_to_n(n - 1);\n}\nconsole.log(\"sum_to_n(30):\", sum_to_n(30));\n\
    console.log(\"sum_to_n(100):\", sum_to_n(100));\nconsole.log(\"sum_to_n(5):\"\
    , sum_to_n(5));\nconsole.log(\"sum_to_n(10):\", sum_to_n(10));\nconsole.log(\"\
    sum_to_n(1):\", sum_to_n(1));\n", "    if (n > 0) {\n        return n + sum_to_n(n\
    \ - 1);\n    } else {\n        return 0;\n    }\n}\n", "    let sum: number =\
    \ 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i;\n    }\n \
    \   return sum;\n}\nconsole.log(sum_to_n(30));\nconsole.log(sum_to_n(100));\n\
    console.log(sum_to_n(5));\nconsole.log(sum_to_n(10));\nconsole.log(sum_to_n(1));\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

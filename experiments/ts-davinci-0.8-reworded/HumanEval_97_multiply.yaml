name: HumanEval_97_multiply
language: ts
prompt: "//Complete the function that takes two integers and returns \n// the product\
  \ of their unit digits.\n// Assume the input is always valid.\n// Examples:\n//\
  \ >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020,\
  \ 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply(a: number, b:\
  \ number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n\
  \  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n\
  \  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n\
  \  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n\
  \  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();"
completions: ["    const product = a * b;\n    return +product.toString().slice(-1);\n\
    }\nconsole.log(multiply(7, 9));\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));",
  "    return +(`${a}`[1] * `${b}`[1]);\n}\n", "  const unitDigit = (n: number): number\
    \ => {\n    return Math.abs(n % 10);\n  };\n  return unitDigit(a) * unitDigit(b);\n\
    }\n", "  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(148, 412));",
  "  let res = (a % 10) * (b % 10);\n  return res;\n}\n", "    return (a % 10) * (b\
    \ % 10);\n}\nconsole.log(multiply(14, -15));", "  const lastDigit = (num: number):\
    \ number => Math.abs(num % 10);\n  return lastDigit(a) * lastDigit(b);\n}\n",
  "    return (a % 10) * (b % 10);\n}\n\nexport { multiply }", "    let sum = 0;\n\
    \    let aStr = a.toString();\n    let bStr = b.toString();\n    aStr = aStr.substr(aStr.length\
    \ - 1);\n    bStr = bStr.substr(bStr.length - 1);\n    sum = Number(aStr) * Number(bStr);\n\
    \    return sum;\n}\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));",
  "    const product = (a % 10) * (b % 10);\n    return product;\n}\n\nconsole.log(multiply(148,\
    \ 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020, 1851));\n\
    console.log(multiply(14, -15));", "  if (a < 0) a = a * -1;\n  if (b < 0) b =\
    \ b * -1;\n  return (a % 10) * (b % 10);\n}\n", "    const unitA = Math.abs(a)\
    \ % 10;\n    const unitB = Math.abs(b) % 10;\n    return unitA * unitB;\n}\n",
  "  const unitDigit = (num: number): number => Math.abs(num % 10);\n  return unitDigit(a)\
    \ * unitDigit(b);\n}\n", "  return getLastDigit(a) * getLastDigit(b);\n}\n", " \
    \   a = Math.abs(a);\n    b = Math.abs(b);\n    return ((a % 10) * (b % 10));\n\
    }\n\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020,\
    \ 1851));\nconsole.log(multiply(14, -15));\n", "  // TODO\n  return 0;\n}\n\n\
    describe(\"multiply\", () => {\n  it(\"should return a number\", () => {\n   \
    \ assert.isNumber(multiply(145, 235));\n  });\n  it(\"should return the product\
    \ of their unit digits\", () => {\n    assert.equal(multiply(148, 412), 16);\n\
    \    assert.equal(multiply(19, 28), 72);\n    assert.equal(multiply(2020, 1851),\
    \ 0);\n    assert.equal(multiply(14, -15), 20);\n  });\n});", "  return (a % 10)\
    \ * (b % 10);\n}\n\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));",
  "  return Number(\n    a\n      .toString()\n      .split(\"\")\n      .pop()\n\
    \  ) *\n    Number(\n      b\n        .toString()\n        .split(\"\")\n    \
    \    .pop()\n    );\n}\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));\n",
  "  return Math.abs(a) % 10 * Math.abs(b) % 10;\n}\nconsole.log(multiply(19, 28));\n\
    console.log(multiply(148, 412));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14,\
    \ -15));\n", "  //return (a % 10) * (b % 10);\n  return (a - a % 10) / 10 * (b\
    \ - b % 10) / 10;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

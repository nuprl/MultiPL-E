name: HumanEval_97_multiply
language: ts
prompt: "//Complete the function that takes two integers and returns \n// the product\
  \ of their unit digits.\n// Assume the input is always valid.\n// Examples:\n//\
  \ >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020,\
  \ 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply(a: number, b:\
  \ number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = multiply;\n  assert.deepEqual(candidate(148, 412),16);\n\
  \  assert.deepEqual(candidate(19, 28),72);\n  assert.deepEqual(candidate(2020, 1851),0);\n\
  \  assert.deepEqual(candidate(14, -15),20);\n  assert.deepEqual(candidate(76, 67),42);\n\
  \  assert.deepEqual(candidate(17, 27),49);\n  assert.deepEqual(candidate(0, 1),0);\n\
  \  assert.deepEqual(candidate(0, 0),0);\n}\n\ntest();"
completions: ["    const product = a * b;\n    return +product.toString().slice(-1);\n\
    }\nconsole.log(multiply(7, 9));\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));",
  "    return +(`${a}`[1] * `${b}`[1]);\n}\n", "  const unitDigit = (n: number): number\
    \ => {\n    return Math.abs(n % 10);\n  };\n  return unitDigit(a) * unitDigit(b);\n\
    }\n", "  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(148, 412));",
  "  let res = (a % 10) * (b % 10);\n  return res;\n}\n", "    return (a % 10) * (b\
    \ % 10);\n}\nconsole.log(multiply(14, -15));", "  const lastDigit = (num: number):\
    \ number => Math.abs(num % 10);\n  return lastDigit(a) * lastDigit(b);\n}\n",
  "    return (a % 10) * (b % 10);\n}\n\nexport { multiply }", "    let sum = 0;\n\
    \    let aStr = a.toString();\n    let bStr = b.toString();\n    aStr = aStr.substr(aStr.length\
    \ - 1);\n    bStr = bStr.substr(bStr.length - 1);\n    sum = Number(aStr) * Number(bStr);\n\
    \    return sum;\n}\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));",
  "    const product = (a % 10) * (b % 10);\n    return product;\n}\n\nconsole.log(multiply(148,\
    \ 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020, 1851));\n\
    console.log(multiply(14, -15));", "  if (a < 0) a = a * -1;\n  if (b < 0) b =\
    \ b * -1;\n  return (a % 10) * (b % 10);\n}\n", "    const unitA = Math.abs(a)\
    \ % 10;\n    const unitB = Math.abs(b) % 10;\n    return unitA * unitB;\n}\n",
  "  const unitDigit = (num: number): number => Math.abs(num % 10);\n  return unitDigit(a)\
    \ * unitDigit(b);\n}\n", "  return getLastDigit(a) * getLastDigit(b);\n}\n", " \
    \   a = Math.abs(a);\n    b = Math.abs(b);\n    return ((a % 10) * (b % 10));\n\
    }\n\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020,\
    \ 1851));\nconsole.log(multiply(14, -15));\n", "  // TODO\n  return 0;\n}\n\n\
    describe(\"multiply\", () => {\n  it(\"should return a number\", () => {\n   \
    \ assert.isNumber(multiply(145, 235));\n  });\n  it(\"should return the product\
    \ of their unit digits\", () => {\n    assert.equal(multiply(148, 412), 16);\n\
    \    assert.equal(multiply(19, 28), 72);\n    assert.equal(multiply(2020, 1851),\
    \ 0);\n    assert.equal(multiply(14, -15), 20);\n  });\n});", "  return (a % 10)\
    \ * (b % 10);\n}\n\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));",
  "  return Number(\n    a\n      .toString()\n      .split(\"\")\n      .pop()\n\
    \  ) *\n    Number(\n      b\n        .toString()\n        .split(\"\")\n    \
    \    .pop()\n    );\n}\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));\n",
  "  return Math.abs(a) % 10 * Math.abs(b) % 10;\n}\nconsole.log(multiply(19, 28));\n\
    console.log(multiply(148, 412));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14,\
    \ -15));\n", "  //return (a % 10) * (b % 10);\n  return (a - a % 10) / 10 * (b\
    \ - b % 10) / 10;\n}\n", "  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(148,\
    \ 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020, 1851));\n\
    console.log(multiply(14, -15));", "  return +`${a}`.slice(-1) * +`${b}`.slice(-1);\n\
    }\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020,\
    \ 1851));\nconsole.log(multiply(14, -15));", "  const aUnit = a % 10;\n  const\
    \ bUnit = b % 10;\n  return aUnit * bUnit;\n}\n", "  return Math.abs(a % 10) *\
    \ Math.abs(b % 10);\n}\n", "  return (a % 10) * (b % 10);\n}\nconsole.log(multiply(123,\
    \ 9));\nconsole.log(multiply(145, 8));\nconsole.log(multiply(16, -15));\n", " \
    \   //return the product of their unit digits.\n    return +(a.toString().substr(-1))\
    \ * +(b.toString().substr(-1));\n}\n", "  return ((a % 10) * (b % 10));\n}\nconsole.log(multiply(148,\
    \ 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020, 1851));\n\
    console.log(multiply(14, -15));", "    if (a < 0) {\n        a = a * -1;\n   \
    \ }\n    if (b < 0) {\n        b = b * -1;\n    }\n    let product = a * b;\n\
    \    let digit: number = product % 10;\n    return digit;\n}\n", "  let num =\
    \ a * b;\n  let str = num.toString();\n  let unit = str.slice(-1);\n  return parseInt(unit);\n\
    }\n", "    return parseInt(a.toString().substr(-1)) * parseInt(b.toString().substr(-1));\n\
    }\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020,\
    \ 1851));\nconsole.log(multiply(14, -15));\n", "  return Math.abs(a % 10) * Math.abs(b\
    \ % 10);\n}\nconsole.log(multiply(1, 2));\n", "    const arr: number[] = [a, b].map(e\
    \ => {\n        const str = e.toString().split('').reverse();\n        return\
    \ Number(str[0]);\n    });\n    return arr[0] * arr[1];\n}\n\nexport default multiply;",
  "  let product = a * b;\n  if (product < 0) product *= -1;\n  return product % 10;\n\
    }\nconsole.log(multiply(14, -15));\n", "  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(16,\
    \ 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020, 1851));\n\
    console.log(multiply(14, -15));", "    return (Math.abs(a) % 10) * (Math.abs(b)\
    \ % 10);\n}\n", "  return Number(`${a}`.slice(-1)) * Number(`${b}`.slice(-1));\n\
    }\n\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020,\
    \ 1851));\nconsole.log(multiply(14, -15));", "  return Math.abs(a % 10) * Math.abs(b\
    \ % 10);\n}\n", "  const unitDigit = (n: number): number => {\n    const absolute\
    \ = Math.abs(n);\n    if (absolute === 0) return 0;\n    return absolute % 10;\n\
    \  };\n  return unitDigit(a) * unitDigit(b);\n}", "  return Math.abs(a % 10) *\
    \ Math.abs(b % 10);\n}\n", "  return Number(a.toString().slice(-1)) * Number(b.toString().slice(-1));\n\
    }\n", "  return Math.abs(a % 10) * Math.abs(b % 10);\n}\nconsole.log(multiply(19,\
    \ 28));", "  return ((a % 10) * (b % 10));\n}\nconsole.log(multiply(14, 15));\n",
  "  return (a % 10) * (b % 10);\n}", "  return Math.abs(a % 10) * Math.abs(b % 10);\n\
    }\n\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020,\
    \ 1851));\nconsole.log(multiply(14, -15));", "  let p = a * b;\n  let product\
    \ = p;\n  while (p > 10) {\n    p = p / 10;\n  }\n  return p * (product % 10);\n\
    }\n", "  let [ a1, b1 ] = [ a, b ].map(x => x % 10);\n  return a1 * b1;\n}\n",
  "  let result = a * b;\n  let unit = result % 10;\n  return unit;\n}\nconsole.log(multiply(148,\
    \ 412));", "  const getUnits = (num: number): number => Math.abs(num % 10);\n\
    \  return getUnits(a) * getUnits(b);\n}\n", "  return +`${a}`.slice(-1) * +`${b}`.slice(-1);\n\
    }\n\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14,\
    \ -15));", "  return parseInt(a.toString().slice(-1)) * parseInt(b.toString().slice(-1));\n\
    }\n\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020,\
    \ 1851));\nconsole.log(multiply(14, -15));", "    return Math.abs(a * b) % 10;\n\
    }\n", "    return (Math.abs(a) % 10) * (Math.abs(b) % 10);\n}\n", "    let unitDigitA\
    \ = a % 10;\n    let unitDigitB = b % 10;\n    return unitDigitA * unitDigitB;\n\
    }\n\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020,\
    \ 1851));\nconsole.log(multiply(14, -15));", "    return (Math.abs(a) % 10) *\
    \ (Math.abs(b) % 10);\n}", "    const aStr = a.toString();\n    const bStr = b.toString();\n\
    \    return parseInt(aStr[aStr.length - 1]) * parseInt(bStr[bStr.length - 1]);\n\
    }\n", "  const oneA = a % 10;\n  const oneB = b % 10;\n  return oneA * oneB;\n\
    }\n", "  return (Math.abs(a) % 10) * (Math.abs(b) % 10);\n}\n", "  return a *\
    \ b;\n}\n", "    return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(148, 412));",
  "  let total: number = 0;\n  total = (a % 10) * (b % 10);\n  return total;\n}\n\n\
    console.log(multiply(2020, 1851));\n", "  // make sure both numbers are positive\n\
    \  a = Math.abs(a);\n  b = Math.abs(b);\n  // get the unit digits of both numbers\n\
    \  let unitA = a % 10;\n  let unitB = b % 10;\n  // multiply the unit digits\n\
    \  let product = unitA * unitB;\n  return product;\n}\n", "  return (a % 10) *\
    \ (b % 10);\n}\n\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123,\
    \ 456));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123, 456));\n\
    console.log(multiply(123, 456));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123,\
    \ 456));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123, 456));\n\
    console.log(multiply(123, 456));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123,\
    \ 456));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123, 456));\n\
    console.log(multiply(123, 456));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123,\
    \ 456));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123, 456));\n\
    console.log(multiply(123, 456));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123,\
    \ 456));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123, 456));\n\
    console.log(multiply(123, 456));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123,\
    \ 456));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123, 456));\n\
    console.log(multiply(123, 456));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123,\
    \ 456));\nconsole.log(multiply(123, 456));\nconsole.log(multiply(123, 456));\n\
    console.log(multiply(123, 456));\nconsole.log(", "    // return numsToArr(a).reduce((a,\
    \ c) => a * c) * numsToArr(b).reduce((a, c) => a * c) % 10;\n    return (a * b)\
    \ % 10;\n}\n", "  return (Math.abs(a) % 10) * (Math.abs(b) % 10);\n}\nconsole.log(multiply(148,\
    \ 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020, 1851));\n\
    console.log(multiply(14, -15));\n", "    return parseInt(a.toString().split('').pop())\
    \ * parseInt(b.toString().split('').pop());\n}\n\nconsole.log(multiply(19, 28));",
  "  return Math.abs(a % 10) * Math.abs(b % 10);\n}\n", "  return Math.abs(a % 10)\
    \ * Math.abs(b % 10);\n}\n", "    return Math.abs(a) % 10 * Math.abs(b) % 10;\n\
    }\n\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020,\
    \ 1851));\nconsole.log(multiply(14, -15));", "  let aLastNum = a % 10;\n  let\
    \ bLastNum = b % 10;\n  return aLastNum * bLastNum;\n}\n", "    return Math.abs(a\
    \ % 10) * Math.abs(b % 10);\n}\n", "  const aLastDigit = a % 10;\n  const bLastDigit\
    \ = b % 10;\n  return aLastDigit * bLastDigit;\n}\n", "    return +(\"\" + a).slice(-1)\
    \ * +(\"\" + b).slice(-1);\n}\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));\n",
  "  let arr: number[] = [a, b];\n  const c = (x: number) => {\n    let str = `${x}`;\n\
    \    let res = 0;\n    str.split(\"\").forEach((e) => {\n      res = Number(e);\n\
    \    });\n    return res;\n  };\n  return arr.map(c).reduce((a, b) => a * b);\n\
    }\n", "    // your code here\n    return Math.abs(a % 10) * Math.abs(b % 10);\n\
    }\n", "  let result = (a % 10) * (b % 10);\n  return result;\n}\n\nconsole.log(multiply(148,\
    \ 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020, 1851));\n\
    console.log(multiply(14, -15));", "  return (a % 10) * (b % 10);\n}\n", "    //let\
    \ mod1 = a % 10;\n    //let mod2 = b % 10;\n    //let mod = mod1 * mod2;\n   \
    \ //return mod;\n    return (a % 10) * (b % 10);\n}\nconsole.log(multiply(148,\
    \ 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020, 1851));\n\
    console.log(multiply(14, -15));\n", "  return Math.abs(a % 10) * Math.abs(b %\
    \ 10);\n}\n", "    let aUnits = a % 10;\n    let bUnits = b % 10;\n    return\
    \ aUnits * bUnits;\n}\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));",
  "  // your code\n  let strA = String(a);\n  let strB = String(b);\n  let numA =\
    \ parseInt(strA[strA.length - 1]);\n  let numB = parseInt(strB[strB.length - 1]);\n\
    \  return numA * numB;\n}\n", "  const a1 = Math.abs(a % 10),\n    b1 = Math.abs(b\
    \ % 10);\n  return a1 * b1;\n}\n\nconsole.log(multiply(12, -10));\n", "    const\
    \ aUnits = a % 10;\n    const bUnits = b % 10;\n    return aUnits * bUnits;\n\
    }\n\nexport { multiply };", "    const alast = a % 10;\n    const blast = b %\
    \ 10;\n    return alast * blast;\n}\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));",
  "    //return the product of a and b unit digits\n    let num1 = Math.abs(a).toString().split('').pop();\n\
    \    let num2 = Math.abs(b).toString().split('').pop();\n    let num3 = Number(num1)\
    \ * Number(num2);\n    return num3;\n}\nconsole.log(multiply(19, 28));\nconsole.log(multiply(14,\
    \ -15));\nconsole.log(multiply(148, 412));\n", "  const strA = a.toString().split('');\n\
    \  const strB = b.toString().split('');\n  const productA = Number(strA[strA.length\
    \ - 1]);\n  const productB = Number(strB[strB.length - 1]);\n  return productA\
    \ * productB;\n}\n\nconst multiplyArgs: [number, number] = [19, 28];\n\nconsole.log(multiply(...multiplyArgs));",
  "  return (\n    a\n      .toString()\n      .split(\"\")\n      .pop() *\n    b\n\
    \      .toString()\n      .split(\"\")\n      .pop()\n  );\n}\n\nconsole.log(multiply(19,\
    \ 28));", "  return Number(\n    String(Math.abs(a))\n      .split(\"\")\n   \
    \   .pop()\n  ) *\n    Number(\n      String(Math.abs(b))\n        .split(\"\"\
    )\n        .pop()\n    );\n}\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));\n",
  "  const absA = Math.abs(a);\n  const absB = Math.abs(b);\n  const unitDigitA =\
    \ absA % 10;\n  const unitDigitB = absB % 10;\n  return unitDigitA * unitDigitB;\n\
    }\n", "  // Get the last digit of each number\n  const aUnitDigit = a % 10;\n\
    \  const bUnitDigit = b % 10;\n\n  // Multiply the last digits of each number\n\
    \  const product = aUnitDigit * bUnitDigit;\n\n  // Return the result\n  return\
    \ product;\n}\n\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19, 28));\n\
    console.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));", "  const\
    \ num1: string = a.toString().split('').pop();\n  const num2: string = b.toString().split('').pop();\n\
    \  const strNum1: number = Number(num1);\n  const strNum2: number = Number(num2);\n\
    \  return strNum1 * strNum2;\n}\n", "  let product = a * b;\n  const arr = `${product}`.split(\"\
    \");\n  return Number(arr[arr.length - 1]);\n}\n", "  const unitDigit = (num:\
    \ number): number => num % 10;\n  return unitDigit(a) * unitDigit(b);\n}\n", " \
    \   return Number(a.toString().slice(-1)) * Number(b.toString().slice(-1));\n}",
  "    return (a % 10) * (b % 10);\n}", "    let aa = a % 10;\n    let bb = b % 10;\n\
    \    return aa * bb;\n}\n", "    return (a * b) % 10;\n}\n\nconsole.log(multiply(2020,\
    \ 1851));", "  let result = a * b;\n  let finalResult = Math.abs(result % 10);\n\
    \  return finalResult;\n}\n", "    let prod = (a % 10) * (b % 10);\n    return\
    \ prod;\n}\n\nlet ans = multiply(2, 3);\nconsole.log(ans);", "  const lastDigitA\
    \ = Math.abs(a % 10);\n  const lastDigitB = Math.abs(b % 10);\n  return lastDigitA\
    \ * lastDigitB;\n}\n\ndescribe(\"Multiply\", () => {\n  it(\"should return the\
    \ product of their unit digits\", () => {\n    expect(multiply(148, 412)).toEqual(16);\n\
    \    expect(multiply(19, 28)).toEqual(72);\n    expect(multiply(2020, 1851)).toEqual(0);\n\
    \    expect(multiply(14, -15)).toEqual(20);\n  });\n});", "    return (a%10) *\
    \ (b%10);\n}", "    return Math.abs(a % 10) * Math.abs(b % 10);\n}", "  // write\
    \ the logic to multiply \n  // the two integers here.\n  let solution = (a % 10)\
    \ * (b % 10);\n  return solution;\n}\n", "  const aDigit = a % 10;\n  const bDigit\
    \ = b % 10;\n  return aDigit * bDigit;\n}\n\nconsole.log(multiply(148, 412));",
  "    //your code here\n}\nconsole.log(multiply(19, 28))\nconsole.log(multiply(148,\
    \ 412))\nconsole.log(multiply(2020, 1851))\nconsole.log(multiply(14, -15))\n",
  "  const unitDigit = (num: number): number => {\n    const len = num.toString().length;\n\
    \    if (len === 1) return num;\n    return num % Math.pow(10, len - 1);\n  };\n\
    \  return unitDigit(a) * unitDigit(b);\n}\n", "    return a % 10 * b % 10;\n}\n",
  "    let resultA = a % 10;\n    let resultB = b % 10;\n    let result = resultA\
    \ * resultB;\n    return result;\n}\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));\n",
  "    return a * b;\n}\n\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));",
  "  return (+a.toString().split('').pop()) * (+b.toString().split('').pop());\n}\n",
  "    return Number(String(a).split('').reverse()[0]) * Number(String(b).split('').reverse()[0]);\n\
    }\n", "  const aUnits = a % 10;\n  const bUnits = b % 10;\n  return aUnits * bUnits;\n\
    }\n", "    const arr: number[] = a.toString().split('');\n    const arr2: number[]\
    \ = b.toString().split('');\n    return +arr[arr.length - 1] * +arr2[arr2.length\
    \ - 1];\n}\n\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19, 28));\n\
    console.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));", "  let m\
    \ = Math.abs(a % 10);\n  let n = Math.abs(b % 10);\n  return m * n;\n}\n", " \
    \   return (a % 10) * (b % 10);\n}\n", "    let product = a * b;\n    let reversedProduct\
    \ = +(product.toString().split('').reverse().join(''));\n    return parseInt(reversedProduct.toString().charAt(0));\n\
    }\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020,\
    \ 1851));\nconsole.log(multiply(14, -15));", "    return Math.abs(a % 10) * Math.abs(b\
    \ % 10);\n}", "    const aUnit = a % 10;\n    const bUnit = b % 10;\n    return\
    \ aUnit * bUnit;\n}\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));",
  "    const unitDigitA = a % 10;\n    const unitDigitB = b % 10;\n    return unitDigitA\
    \ * unitDigitB;\n}\nconsole.log(multiply(122, 22));", "  return a % 10 * b % 10;\n\
    }\n\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020,\
    \ 1851));\nconsole.log(multiply(14, -15));", "  return +a.toString().split('').pop()\
    \ * +b.toString().split('').pop();\n}\n\nconsole.log(multiply(148, 412));", " \
    \   let absoluteValue1 = Math.abs(a);\n    let absoluteValue2 = Math.abs(b);\n\
    \    let unitDigit1 = absoluteValue1 % 10;\n    let unitDigit2 = absoluteValue2\
    \ % 10;\n    return unitDigit1 * unitDigit2;\n}\n", "    let unitA = a % 10;\n\
    \    let unitB = b % 10;\n    return unitA * unitB;\n}", "  return parseInt(`${a}`.split('').pop())\
    \ * parseInt(`${b}`.split('').pop());\n}\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));",
  "  return (a % 10) * (b % 10);\n}\n", "    const unitA = Math.abs(a % 10);\n   \
    \ const unitB = Math.abs(b % 10);\n    return unitA * unitB;\n}\n", "    const\
    \ unitDigit = (number: number): number => {\n        return Math.abs(number %\
    \ 10);\n    }\n    return unitDigit(a) * unitDigit(b);\n}", "    return parseInt(Math.abs(a).toString().slice(-1))\
    \ * parseInt(Math.abs(b).toString().slice(-1));\n}\nconsole.log(multiply(19, 28));\n\
    console.log(multiply(148, 412));\nconsole.log(multiply(14, -15));\nconsole.log(multiply(2020,\
    \ 1851));", "  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(148, 412));\n\
    console.log(multiply(19, 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14,\
    \ -15));", "  let product = 1;\n  const numbers: number[] = [a, b];\n  numbers.forEach((number)\
    \ => {\n    if (number < 0) {\n      number *= -1;\n    }\n    while (number >\
    \ 10) {\n      number /= 10;\n    }\n    product *= number;\n  });\n  return product;\n\
    }\n", "  return a * b;\n}\n", "  return (a % 10) * (b % 10);\n}\nconsole.log(multiply(148,\
    \ 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020, 1851));\n\
    console.log(multiply(14, -15));", "  const [aLastDigit, bLastDigit] = [a, b].map(num\
    \ => num % 10);\n  return aLastDigit * bLastDigit;\n}\n\nconsole.log(multiply(148,\
    \ 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020, 1851));\n\
    console.log(multiply(14, -15));", "  return Number(String(a % 10)) * Number(String(b\
    \ % 10));\n}\n", "    //abstracted to get the unit digit of a number\n    let\
    \ unit = (n: number): number => {\n        let num = n < 0 ? n * -1 : n;\n   \
    \     while (num > 9) {\n            num = num % 10;\n        }\n        return\
    \ num;\n    }\n    return unit(a) * unit(b);\n}\n", "    let num1: number = Math.abs(a);\n\
    \    let num2: number = Math.abs(b);\n    return (num1 % 10) * (num2 % 10);\n\
    }\n\nconsole.log(multiply(4, -10));", "    return (a * b) % 10;\n}\n\nconsole.log(multiply(14,\
    \ -15));", "    let aStr = a.toString();\n    let bStr = b.toString();\n    let\
    \ aMod = aStr.substr(aStr.length - 1);\n    let bMod = bStr.substr(bStr.length\
    \ - 1);\n    return +aMod * +bMod;\n}\n", "  const absA = Math.abs(a);\n  const\
    \ absB = Math.abs(b);\n  return ((absA % 10) * (absB % 10)) % 10;\n}\n", "   \
    \ return (a % 10) * (b % 10);\n}\nconsole.log(multiply(19, 28));\nconsole.log(multiply(148,\
    \ 412));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));\n",
  "  const aLast = a % 10;\n  const bLast = b % 10;\n  return aLast * bLast;\n}\n\
    console.log(multiply(19, 28));\nconsole.log(multiply(14, -15));\n", "    return\
    \ (a % 10) * (b % 10);\n}", "  const arr1 = a.toString().split('');\n  const arr2\
    \ = b.toString().split('');\n  return +arr1[arr1.length - 1] * +arr2[arr2.length\
    \ - 1];\n}\n", "    const unit_digit = (n: number) => n % 10;\n    return unit_digit(a)\
    \ * unit_digit(b);\n}\n\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));",
  "    return (a%10) * (b%10);\n}\n\nconsole.log(multiply(19, 28));\nconsole.log(multiply(14,\
    \ -15));\nconsole.log(multiply(2020, 1851));", "    let result = 1;\n    const\
    \ aUnits = (a < 0) ? a * -1 : a;\n    const bUnits = (b < 0) ? b * -1 : b;\n \
    \   for (let i = 0; i < String(aUnits).length; i++) {\n        result *= String(aUnits)[i];\n\
    \    }\n    for (let i = 0; i < String(bUnits).length; i++) {\n        result\
    \ *= String(bUnits)[i];\n    }\n    return result;\n}", "    return (+a).toString().slice(-1)\
    \ * (+b).toString().slice(-1);\n}\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));\n",
  "    // Place your code here\n    return 0;\n}\n", "    const x = a.toString();\n\
    \    const y = b.toString();\n    return parseInt(x[x.length - 1]) * parseInt(y[y.length\
    \ - 1]);\n}\n", "    const [aUnit, bUnit] = [a % 10, b % 10];\n    return aUnit\
    \ * bUnit;\n}\n", "    if (a < 0) {\n        a = Math.abs(a);\n    }\n    if (b\
    \ < 0) {\n        b = Math.abs(b);\n    }\n    const a1 = a % 10;\n    const b1\
    \ = b % 10;\n    return a1 * b1;\n}\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));\n",
  "    const unitDigit = (n: number): number => {\n        if (n < 0) return (Math.abs(n)\
    \ % 10) * -1;\n        return n % 10;\n    }\n    return unitDigit(a) * unitDigit(b);\n\
    }\n", "    let answer = (a%10) * (b%10);\n    return answer;\n}\n", "    const\
    \ aLastDigit = a % 10;\n    const bLastDigit = b % 10;\n    return aLastDigit\
    \ * bLastDigit;\n}\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));",
  "    let n: number = 0;\n    if (a < 0) {\n        a = Math.abs(a);\n    }\n   \
    \ if (b < 0) {\n        b = Math.abs(b);\n    }\n    n = (a % 10) * (b % 10);\n\
    \    return n;\n}\n", "    return (Math.abs(a) % 10) * (Math.abs(b) % 10);\n}",
  "  return (a % 10) * (b % 10);\n}\n", "    return parseInt(a.toString().slice(-1))\
    \ * parseInt(b.toString().slice(-1));\n}", "  return Math.abs(a % 10) * Math.abs(b\
    \ % 10);\n}\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19, 28));\n\
    console.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));\n", "    //Math.floor(a\
    \ / 10) * Math.floor(b / 10)\n    return Math.floor(a / 10) * Math.floor(b / 10)\n\
    }\nconsole.log(multiply(19, 28));\n", "  return Math.abs(a) % 10 * Math.abs(b)\
    \ % 10;\n}\n", "    const aUnits = a % 10;\n    const bUnits = b % 10;\n    return\
    \ aUnits * bUnits;\n}\n", "  return ~~(a % 10) * ~~(b % 10);\n}\n", "  const arr1\
    \ = `${a}`.split('');\n  const arr2 = `${b}`.split('');\n  const num1 = arr1[arr1.length\
    \ - 1];\n  const num2 = arr2[arr2.length - 1];\n  return Number(num1) * Number(num2);\n\
    }\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020,\
    \ 1851));\nconsole.log(multiply(14, -15));", "  let unitA = a % 10;\n  let unitB\
    \ = b % 10;\n  return unitA * unitB;\n}\n", "  const aUnit = a % 10;\n  const\
    \ bUnit = b % 10;\n  return aUnit * bUnit;\n}\n", "  const strA = a.toString();\n\
    \  const strB = b.toString();\n  const lastA = strA[strA.length - 1];\n  const\
    \ lastB = strB[strB.length - 1];\n  return parseInt(lastA) * parseInt(lastB);\n\
    }\nconsole.log(multiply(123, 456));", "    let aLast = Math.abs(a % 10);\n   \
    \ let bLast = Math.abs(b % 10);\n    return aLast * bLast;\n}\n", "  return (a\
    \ % 10) * (b % 10);\n}\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));\n",
  "  return (a % 10) * (b % 10);\n}\n\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));",
  "  return Number(a.toString().slice(-1)) * Number(b.toString().slice(-1));\n}\n\n\
    multiply(148, 412); //?\nmultiply(19, 28); //?\nmultiply(2020, 1851); //?\nmultiply(14,\
    \ -15); //?\n", "  // Get the last digit of a\n  let aMod = a % 10;\n  // Get\
    \ the last digit of b\n  let bMod = b % 10;\n  // Multiply them\n  return aMod\
    \ * bMod;\n}\n", "  let a_unit: number = a % 10;\n  let b_unit: number = b % 10;\n\
    \  return a_unit * b_unit;\n}\n", "    const unit = (num: number) => {\n     \
    \   return num % 10;\n    }\n    return unit(a) * unit(b);\n}\n\nconsole.log(multiply(148,\
    \ 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020, 1851));\n\
    console.log(multiply(14, -15));", "  return (a % 10) * (b % 10);\n}\n", "  const\
    \ first = Math.abs(a);\n  const second = Math.abs(b);\n  return (first % 10) *\
    \ (second % 10);\n}\n\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));",
  "  return (\n    (Math.abs(a) % 10) * (Math.abs(b) % 10) * (Math.sign(a) * Math.sign(b))\n\
    \  );\n}\n", "    return ((a % 10) * (b % 10));\n}\n", "  return (a%10) * (b%10);\n\
    }\nconsole.log(multiply(19, 28));\nconsole.log(multiply(14, -15));", "    const\
    \ aUnits = getUnits(a);\n    const bUnits = getUnits(b);\n    return aUnits *\
    \ bUnits;\n}\n", "  return Math.abs(a % 10) * Math.abs(b % 10);\n}\n", "  let\
    \ p = 0;\n  if (a < 0) {\n    a = a * -1;\n  }\n  if (b < 0) {\n    b = b * -1;\n\
    \  }\n  while (a > 0) {\n    p = p + b;\n    a--;\n  }\n  if (a < 0 && b < 0)\
    \ {\n    p = p * -1;\n  }\n  return (p % 10);\n}\n\nconsole.log(multiply(1, -1));",
  "  return a * b;\n}\n\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));",
  "    const aUnit = a%10;\n    const bUnit = b%10;\n    return aUnit * bUnit;\n}\n\
    console.log(multiply(148, 412));", "  return (a % 10) * (b % 10);\n}\n", "  let\
    \ unitA = a % 10;\n  let unitB = b % 10;\n  return unitA * unitB;\n}\nconsole.log(multiply(148,\
    \ 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020, 1851));\n\
    console.log(multiply(14, -15));\n", "  const aS = a.toString();\n  const bS =\
    \ b.toString();\n  return Number(aS[aS.length - 1]) * Number(bS[bS.length - 1]);\n\
    }\n", "    let al = a.toString().split('');\n    let bl = b.toString().split('');\n\
    \    if (al.length > 1) {\n        a = +al[al.length - 1];\n    }\n    if (bl.length\
    \ > 1) {\n        b = +bl[bl.length - 1];\n    }\n    return a * b;\n}\nconsole.log(multiply(148,\
    \ 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020, 1851));\n\
    console.log(multiply(14, -15));", "  let arr: number[] = [a, b];\n  const max\
    \ = Math.max(...arr);\n  const min = Math.min(...arr);\n  let x: number;\n  let\
    \ y: number;\n  let result: number;\n  x = Math.floor(max / 10);\n  y = Math.floor(min\
    \ / 10);\n  result = max - x * 10;\n  result *= min - y * 10;\n  return result;\n\
    }\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020,\
    \ 1851));\nconsole.log(multiply(14, -15));", "    const n1 = parseInt(a.toString().split('').pop());\n\
    \    const n2 = parseInt(b.toString().split('').pop());\n    return n1 * n2;\n\
    }\n", "    let aUnitDigit = Math.abs(a) % 10;\n    let bUnitDigit = Math.abs(b)\
    \ % 10;\n    return aUnitDigit * bUnitDigit;\n}\n\nconsole.log(multiply(148, 412));\n\
    console.log(multiply(19, 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14,\
    \ -15));", "    return (a % 10) * (b % 10);\n}\nconsole.log(multiply(148, 412));\n\
    console.log(multiply(19, 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14,\
    \ -15));", "    return Number(String(a).slice(-1)) * Number(String(b).slice(-1));\n\
    }\n", "  return ((a % 10) * (b % 10));\n}\nconsole.log(multiply(148, 412));\n\
    console.log(multiply(19, 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14,\
    \ -15));", "    return Number(String(a).slice(-1)) * Number(String(b).slice(-1));\n\
    }\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020,\
    \ 1851));\nconsole.log(multiply(14, -15));\n", "  // let numA = Math.abs(a);\n\
    \  // let numB = Math.abs(b);\n  let result = 0;\n  if (a < 0) {\n    a = a *\
    \ -1;\n  }\n  if (b < 0) {\n    b = b * -1;\n  }\n  let numA = a;\n  let numB\
    \ = b;\n  if (numA < 10 && numB < 10) {\n    result = numA * numB;\n  } else if\
    \ (numA < 10 && numB > 10) {\n    while (numB > 10) {\n      numB = numB / 10;\n\
    \    }\n    result = numA * numB;\n  } else if (numA > 10 && numB < 10) {\n  \
    \  while (numA > 10) {\n      numA = numA / 10;\n    }\n    result = numA * numB;\n\
    \  } else if (numA > 10 && numB > 10) {\n    while (numA > 10) {\n      numA =\
    \ numA / 10;\n    }\n    while (numB > 10) {\n      numB = numB / 10;\n    }\n\
    \    result = numA * numB;\n  }\n  return result;\n}\n\nconsole.log(multiply(148,\
    \ 412));\nconsole.log(multiply(19, 28));\nconsole.log(multiply(2020, 1851));\n\
    console.log(multiply(14, -15));\n", "    if (a < 0) {\n        a = Math.abs(a);\n\
    \    }\n    if (b < 0) {\n        b = Math.abs(b);\n    }\n    let res: number\
    \ = a % 10 * b % 10;\n    return res;\n}\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));",
  "  return Math.abs(a * b) % 10;\n}\n", "  const result = Math.abs(a % 10) * Math.abs(b\
    \ % 10);\n  return result;\n}\n\nconsole.log(multiply(148, 412));\nconsole.log(multiply(19,\
    \ 28));\nconsole.log(multiply(2020, 1851));\nconsole.log(multiply(14, -15));",
  "    // Another way to do it, but I prefer this one\n    // return Math.abs(a %\
    \ 10) * Math.abs(b % 10);\n    let stringA = Math.abs(a).toString();\n    let\
    \ stringB = Math.abs(b).toString();\n    let result = +stringA[stringA.length\
    \ - 1] * +stringB[stringB.length - 1];\n    return result;\n}\n", "  const unitA\
    \ = a % 10;\n  const unitB = b % 10;\n  return unitA * unitB;\n}\nconsole.log(multiply(148,\
    \ 412));"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_138_is_equal_to_sum_even
language: ts
prompt: "//Evaluate whether the given number n can be written as the sum of exactly\
  \ 4 positive even numbers\n// Example\n// >>> is_equal_to_sum_even(4)\n// false\n\
  // >>> is_equal_to_sum_even(6)\n// false\n// >>> is_equal_to_sum_even(8)\n// true\n\
  function is_equal_to_sum_even(n: number): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = is_equal_to_sum_even;\n  assert.deepEqual(candidate(4),false);\n\
  \  assert.deepEqual(candidate(6),false);\n  assert.deepEqual(candidate(8),true);\n\
  \  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(11),false);\n\
  \  assert.deepEqual(candidate(12),true);\n  assert.deepEqual(candidate(13),false);\n\
  \  assert.deepEqual(candidate(16),true);\n}\n\ntest();"
completions: ["    if (n % 2 != 0) {\n        return false;\n    }\n    let sum =\
    \ 0;\n    let count = 0;\n    for (let i = 2; i <= n; i += 2) {\n        sum +=\
    \ i;\n        count++;\n        if (sum == n && count == 4) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\n", "    const four = 4;\n \
    \   const two = 2;\n    let sum = 0;\n    let i = 0;\n    while (sum < n) {\n\
    \        sum += two * (i + 1);\n        i++;\n    }\n    return sum === n && i\
    \ === four;\n}\n", "    return false;\n}\n", "  let set = Array.from(new Set(prime_factors(n)));\n\
    \  let even = set.filter(x => x % 2 === 0);\n  return even.length === 4;\n}\n",
  "    const n_str = n.toString();\n    if (n_str.slice(-1) !== '0') {\n        return\
    \ false;\n    }\n\n    let even_arr = [];\n    let i = 2;\n    while (i <= n /\
    \ 2) {\n        even_arr.push(i);\n        i += 2;\n    }\n\n    let result =\
    \ [];\n    for (let i = 0; i < even_arr.length; i++) {\n        for (let j = 0;\
    \ j < even_arr.length; j++) {\n            for (let k = 0; k < even_arr.length;\
    \ k++) {\n                for (let l = 0; l < even_arr.length; l++) {\n      \
    \              let sum = even_arr[i] + even_arr[j] + even_arr[k] + even_arr[l];\n\
    \                    if (sum === n) {\n                        result.push([even_arr[i],\
    \ even_arr[j], even_arr[k], even_arr[l]]);\n                    }\n          \
    \      }\n            }\n        }\n    }\n\n    return result.length > 0;\n}\n\
    \nexport {\n    is_equal_to_sum_even\n}", "  if (n <= 0) {\n    return false;\n\
    \  }\n  if (n % 2 != 0) {\n    return false;\n  }\n  return true;\n}\n", "  //\
    \ TODO: implement me\n  return undefined;\n}\n", "    if (n < 4) {\n        return\
    \ false;\n    }\n    let sum = 0;\n    let counter = 1;\n    while (sum < n) {\n\
    \        sum += counter * 2;\n        counter++;\n    }\n    return sum === n;\n\
    }\n", "    let a: number, b: number, c: number, d: number;\n    for (a = 0; a\
    \ <= n / 4; a++) {\n        for (b = 0; b <= n / 4; b++) {\n            for (c\
    \ = 0; c <= n / 4; c++) {\n                for (d = 0; d <= n / 4; d++) {\n  \
    \                  if (a + b + c + d === n) {\n                        return\
    \ true;\n                    }\n                }\n            }\n        }\n\
    \    }\n    return false;\n}\n", "  if (n < 0) {\n    return false;\n  }\n  if\
    \ (n === 0) {\n    return true;\n  }\n  if (n % 2 === 1) {\n    return false;\n\
    \  }\n  return is_equal_to_sum_even(n - 2);\n}\n", "    return false;\n}\n", " \
    \   for (let a = 2; a <= Math.floor(n / 4); a += 2) {\n        for (let b = a;\
    \ b <= Math.floor(n / 3); b += 2) {\n            for (let c = b; c <= Math.floor(n\
    \ / 2); c += 2) {\n                for (let d = c; d <= n; d += 2) {\n       \
    \             if (a + b + c + d === n) {\n                        return true;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return false;\n}\n", "    throw new Error(\"Not implemented yet.\");\n}\n",
  "    let result: boolean = false;\n    for (let i = 0; i < n; i += 2) {\n      \
    \  for (let j = 0; j < n; j += 2) {\n            for (let k = 0; k < n; k += 2)\
    \ {\n                for (let l = 0; l < n; l += 2) {\n                    if\
    \ (i + j + k + l === n) {\n                        result = true;\n          \
    \          }\n                }\n            }\n        }\n    }\n    return result;\n\
    }\n", "    if (n % 2 !== 0) {\n        return false;\n    }\n    if (n % 4 ===\
    \ 0) {\n        return true;\n    }\n    return false;\n}\nconsole.log(is_equal_to_sum_even(4));\n\
    console.log(is_equal_to_sum_even(6));\nconsole.log(is_equal_to_sum_even(8));\n",
  "    if (n % 2 !== 0) {\n        return false;\n    }\n    for (let i = 2; i < n;\
    \ i += 2) {\n        for (let j = 2; j < n; j += 2) {\n            for (let k\
    \ = 2; k < n; k += 2) {\n                for (let l = 2; l < n; l += 2) {\n  \
    \                  if (i + j + k + l === n) {\n                        return\
    \ true;\n                    }\n                }\n            }\n        }\n\
    \    }\n    return false;\n}\n", "    for (let a = 0; a <= n; a += 2) {\n    \
    \    for (let b = 0; b <= n; b += 2) {\n            for (let c = 0; c <= n; c\
    \ += 2) {\n                for (let d = 0; d <= n; d += 2) {\n               \
    \     if (a + b + c + d === n) {\n                        return true;\n     \
    \               }\n                }\n            }\n        }\n    }\n    return\
    \ false;\n}\n", "  for (let i = 0; i <= n; i += 2) {\n    for (let j = 0; j <=\
    \ n; j += 2) {\n      for (let k = 0; k <= n; k += 2) {\n        for (let l =\
    \ 0; l <= n; l += 2) {\n          if (i + j + k + l === n) {\n            return\
    \ true;\n          }\n        }\n      }\n    }\n  }\n  return false;\n}\n", " \
    \ //...\n}\n\nexport { find_largest_three_integer_sum, is_equal_to_sum_even };",
  "  for (let i = 2; i <= n / 2; i += 2) {\n    if (n % i === 0) {\n      let sum\
    \ = i;\n      let num = i;\n      for (let j = 2; j <= n / 2; j += 2) {\n    \
    \    if (num === n) {\n          return true;\n        }\n        if (sum + j\
    \ === n) {\n          return true;\n        }\n        sum += j;\n        num\
    \ = num * j;\n      }\n    }\n  }\n  return false;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

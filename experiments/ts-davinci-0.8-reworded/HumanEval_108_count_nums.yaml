name: HumanEval_108_count_nums
language: ts
prompt: "//Write a function count_nums which takes an array of integers and returns\n\
  // the number of elements which has a sum of digits > 0.\n// If a number is negative,\
  \ then its first signed digit will be negative:\n// e.g. -123 has signed digits\
  \ -1, 2, and 3.\n// >>> count_nums([])\n// 0\n// >>> count_nums([-1, 11, -11])\n\
  // 1\n// >>> count_nums([1, 1, 2])\n// 3\nfunction count_nums(arr: number[]): number\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = count_nums;\n  assert.deepEqual(candidate([]),0);\n\
  \  assert.deepEqual(candidate([-1, -2, 0]),0);\n  assert.deepEqual(candidate([1,\
  \ 1, 2, -2, 3, 4, 5]),6);\n  assert.deepEqual(candidate([1, 6, 9, -6, 0, 1, 5]),5);\n\
  \  assert.deepEqual(candidate([1, 100, 98, -7, 1, -1]),4);\n  assert.deepEqual(candidate([12,\
  \ 23, 34, -45, -56, 0]),5);\n  assert.deepEqual(candidate([0, 1]),1);\n  assert.deepEqual(candidate([1]),1);\n\
  }\n\ntest();"
completions: ["    return 0;\n}\n", "  let num_count = 0;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (get_sum_of_digits(arr[i]) > 0) {\n      num_count++;\n    }\n\
    \  }\n  return num_count;\n}\n", "  let count = 0;\n  arr.forEach(num => {\n \
    \   if (Math.abs(num) > 9) {\n      let digits = num.toString().split(\"\");\n\
    \      let sum = 0;\n      digits.forEach(digit => (sum += Number(digit)));\n\
    \      if (sum > 0) {\n        count++;\n      }\n    } else {\n      if (num\
    \ > 0) {\n        count++;\n      }\n    }\n  });\n  return count;\n}\n", "  \
    \  var count: number = 0;\n    for (var i = 0; i < arr.length; i++) {\n      \
    \  if (sum_signed_digits(arr[i]) > 0) {\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n", "    let count = 0;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] < 0) {\n            if (arr[i] % 10 > 0) {\n    \
    \            count++;\n            }\n        } else {\n            if (arr[i]\
    \ % 10 > 0) {\n                count++;\n            }\n        }\n    }\n   \
    \ return count;\n}\n", "    return arr.filter(x => Math.abs(x).toString().split('').reduce((a,b)\
    \ => a + parseInt(b), 0) > 0).length;\n}\n", "    let count = 0;\n    arr.forEach(element\
    \ => {\n        let sum = 0;\n        if (element < 0) {\n            element\
    \ = element * -1;\n        }\n        while (element > 0) {\n            sum +=\
    \ element % 10;\n            element = Math.floor(element / 10);\n        }\n\
    \        if (sum > 0) {\n            count++;\n        }\n    });\n    return\
    \ count;\n}\nconsole.log(count_nums([-1, 11, -11]));\nconsole.log(count_nums([1,\
    \ 1, 2]));\n", "    let count = 0;\n    for (let num of arr) {\n        let digits\
    \ = Math.abs(num).toString().split('');\n        let sum = 0;\n        for (let\
    \ digit of digits) {\n            sum += parseInt(digit);\n        }\n       \
    \ if (sum > 0) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n", "  // return arr.filter(n => n.toString().split('').reduce((a, c) => a +\
    \ Math.abs(parseInt(c)), 0) > 0).length;\n  return arr.filter(n => n.toString().split('').reduce((a,\
    \ c) => a + Math.abs(parseInt(c)), 0) > 0).length;\n}\n", "    let count = 0;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        let temp = arr[i];\n    \
    \    let sum = 0;\n        while (temp != 0) {\n            sum += temp % 10;\n\
    \            temp = Math.floor(temp / 10);\n        }\n        if (sum > 0) {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "    var result\
    \ = 0;\n    for (var i = 0; i < arr.length; i++) {\n        if (sum_digits(arr[i])\
    \ > 0) {\n            result++;\n        }\n    }\n    return result;\n}\n", " \
    \ let count = 0;\n  for (let num of arr) {\n    if (sum_of_digits(num) > 0) {\n\
    \      count++;\n    }\n  }\n  return count;\n}\n", "    // your code here\n \
    \   var total = 0;\n    for (var i = 0; i < arr.length; i++) {\n        if (sum_digits(arr[i])\
    \ > 0) {\n            total++;\n        }\n    }\n    return total;\n}\n", " \
    \   let total: number = 0;\n    arr.forEach(function (value) {\n        let digit:\
    \ number = Math.abs(value);\n        let sum: number = 0;\n        while (digit\
    \ > 0) {\n            sum += digit % 10;\n            digit = Math.floor(digit\
    \ / 10);\n        }\n        if (sum > 0) {\n            total++;\n        }\n\
    \    });\n    return total;\n}\n", "  let sum: number = 0;\n  let result: number\
    \ = 0;\n  let res: string;\n  arr.forEach(x => {\n    res = x.toString();\n  \
    \  sum = 0;\n    res.split(\"\").forEach(y => {\n      if (y !== \"-\") {\n  \
    \      sum += Number(y);\n      }\n    });\n    if (sum > 0) {\n      result++;\n\
    \    }\n  });\n  return result;\n}\n", "  return arr.filter(x => sum_of_digits(x)\
    \ > 0).length;\n}\n", "    let result = 0;\n    for (let i of arr) {\n       \
    \ let digits = i.toString().split('');\n        let sum = 0;\n        for (let\
    \ j of digits) {\n            sum += parseInt(j);\n        }\n        if (sum\
    \ > 0) {\n            result++;\n        }\n    }\n    return result;\n}\n", " \
    \   return 0;\n}\n", "  let count = 0;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    let arr_sum = 0;\n    let current = Math.abs(arr[i]);\n    while (current)\
    \ {\n      arr_sum += current % 10;\n      current = Math.floor(current / 10);\n\
    \    }\n    if (arr_sum > 0) {\n      count++;\n    }\n  }\n  return count;\n}",
  "    var result = 0;\n    for (var i = 0; i < arr.length; i++) {\n        var temp\
    \ = arr[i];\n        var sum = 0;\n        if (temp < 0) {\n            var x\
    \ = temp * -1;\n            var y = x % 10;\n            var z = x - y;\n    \
    \        var a = z / 10;\n            sum = sum + y + a;\n        }\n        else\
    \ {\n            while (temp > 0) {\n                var y = temp % 10;\n    \
    \            var z = temp - y;\n                var a = z / 10;\n            \
    \    sum = sum + y;\n                temp = a;\n            }\n        }\n   \
    \     if (sum > 0) {\n            result = result + 1;\n        }\n    }\n   \
    \ return result;\n}\nconsole.log(count_nums([]));\nconsole.log(count_nums([-1,\
    \ 11, -11]));\nconsole.log(count_nums([1, 1, 2]));"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

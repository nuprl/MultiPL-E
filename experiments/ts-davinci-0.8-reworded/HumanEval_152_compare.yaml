name: HumanEval_152_compare
language: ts
prompt: "//I think we all remember that feeling when the result of some long-awaited\n\
  // event is finally known. The feelings and thoughts you have at that moment are\n\
  // definitely worth noting down and comparing.\n// Your task is to determine if\
  \ a person correctly guessed the results of a number of matches.\n// You are given\
  \ two arrays of scores and guesses of equal length, where each index shows a match.\
  \ \n// Return an array of the same length denoting how far off each guess was. If\
  \ they have guessed correctly,\n// the value is 0, and if not, the value is the\
  \ absolute difference between the guess and the score.\n// example:\n// >>> compare([1,\
  \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n// [0, 0, 0, 0, 3, 3]\n// >>> compare([0,\
  \ 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n// [4, 4, 1, 0, 0, 6]\nfunction compare(game:\
  \ number[], guess: number[]): number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4,\
  \ 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
  \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
  \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
completions: ["    let result: number[] = [];\n    for (let i = 0; i < game.length;\
    \ i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n \
    \       } else {\n            result.push(Math.abs(game[i] - guess[i]));\n   \
    \     }\n    }\n    return result;\n}\n", "    const results: number[] = [];\n\
    \    game.forEach((value, index) => {\n        if (guess[index] === value) {\n\
    \            results.push(0);\n        } else {\n            results.push(Math.abs(guess[index]\
    \ - value));\n        }\n    });\n    return results;\n}\n", "    let result:\
    \ number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i]\
    \ === guess[i]) {\n            result.push(0);\n        } else {\n           \
    \ result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n\
    }\n", "    return game.map((i, index) => i - guess[index]);\n}\n", "    let score:\
    \ number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i]\
    \ === guess[i]) {\n            score.push(0);\n        } else {\n            score.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return score;\n}", "    return game.map((s,\
    \ idx) => Math.abs(s - guess[idx]));\n}\n", "    return game.map((el, i) => Math.abs(el\
    \ - guess[i]));\n}\n", "    return game.map((score, i) => Math.abs(score - guess[i]));\n\
    }\n\n", "  let result: number[] = [];\n  game.forEach((v, i) => {\n    result.push(Math.abs(v\
    \ - guess[i]));\n  });\n  return result;\n}", "    let compareArray: number[]\
    \ = [];\n    for (let i = 0; i < game.length; i++) {\n        let arrElement =\
    \ Math.abs(game[i] - guess[i]);\n        compareArray.push(arrElement);\n    }\n\
    \    return compareArray;\n}\n", "  return game.map((score, index) => {\n    if\
    \ (score === guess[index]) {\n      return 0;\n    } else {\n      return Math.abs(score\
    \ - guess[index]);\n    }\n  });\n}\n", "    let diffs: number[] = [];\n    for\
    \ (let i = 0; i < game.length; i++) {\n        diffs.push(Math.abs(game[i] - guess[i]));\n\
    \    }\n    return diffs;\n}\n\nconsole.log(compare([1, 2, 3, 4, 5, 1], [1, 2,\
    \ 3, 4, 2, -2]));\nconsole.log(compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]));",
  "    return game.map((score, i) => {\n        return Math.abs(score - guess[i]);\n\
    \    });\n}\nconsole.log(compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])); //\
    \ [0, 0, 0, 0, 3, 3]\nconsole.log(compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0,\
    \ -2])); // [4, 4, 1, 0, 0, 6]\n\n", "    let gameSize = game.length\n    let\
    \ guessSize = guess.length\n    let result: number[] = []\n    if (gameSize !=\
    \ guessSize) {\n        return [0];\n    }\n    for (let i = 0; i < gameSize;\
    \ i++) {\n        let resultValue = game[i] - guess[i]\n        if (resultValue\
    \ < 0) {\n            resultValue = -1 * resultValue\n        }\n        result.push(resultValue)\n\
    \    }\n    return result\n}\n", "    let result = [];\n    for (let i = 0; i\
    \ < game.length; i++) {\n        if (game[i] == guess[i]) {\n            result.push(0);\n\
    \        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n  \
    \      }\n    }\n    return result;\n}\n\nconsole.log(compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]));\nconsole.log(compare([0, 5, 0, 0, 0, 4], [4, 1, 1,\
    \ 0, 0, -2]));\n", "    let result: number[] = [];\n    for (let i = 0; i < game.length;\
    \ i++) {\n        result.push(Math.abs(game[i] - guess[i]));\n    }\n    return\
    \ result;\n}", "    let result: number[] = [];\n    for (let i = 0; i < game.length;\
    \ i++) {\n        if (guess[i] == game[i]) {\n            result.push(0);\n  \
    \      } else {\n            result.push(Math.abs(guess[i] - game[i]));\n    \
    \    }\n    }\n    return result;\n}\n", "  const result: number[] = [];\n  game.forEach((score,\
    \ index) => {\n    const diff = Math.abs(score - guess[index]);\n    result.push(diff);\n\
    \  });\n  return result;\n}\n\nconsole.log(compare([1, 2, 3, 4, 5, 1], [1, 2,\
    \ 3, 4, 2, -2]));\n", "  return game.map((score, i) => Math.abs(score - guess[i]));\n\
    }\nconsole.log(compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\nconsole.log(compare([0,\
    \ 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]));\n", "    let answer: number[] = [];\n\
    \    let j = 0;\n    while (j < game.length) {\n        if (game[j] === guess[j])\
    \ {\n            answer.push(0);\n        } else {\n            answer.push(Math.abs(game[j]\
    \ - guess[j]));\n        }\n        j++;\n    }\n    return answer;\n}\n", " \
    \   let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n\
    \        let item = Math.abs(game[i] - guess[i]);\n        result.push(item);\n\
    \    }\n    return result;\n}\n", "    let result: number[] = [];\n    for (let\
    \ i = 0; i < game.length; i++) {\n        if (guess[i] === game[i]) {\n      \
    \      result.push(0);\n        } else {\n            result.push(Math.abs(guess[i]\
    \ - game[i]));\n        }\n    }\n    return result;\n}\n", "  return game.map((x,\
    \ i) => {\n    return Math.abs(x - guess[i]);\n  });\n}\n", "    return game.map((score,\
    \ i) => score < guess[i] ? guess[i] - score : score - guess[i]);\n}\n\nexport\
    \ default compare;", "  let result: number[] = [];\n  for (let i = 0; i < game.length;\
    \ i++) {\n    if (game[i] > guess[i]) {\n      result.push(game[i] - guess[i]);\n\
    \    } else if (game[i] < guess[i]) {\n      result.push(guess[i] - game[i]);\n\
    \    } else {\n      result.push(0);\n    }\n  }\n  return result;\n}\nconsole.log(compare([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\nconsole.log(compare([0, 5, 0, 0, 0,\
    \ 4], [4, 1, 1, 0, 0, -2]));", "    return game.map((v, i) => v === guess[i] ?\
    \ 0 : Math.abs(v - guess[i]));\n}\n", "  return guess.map((e, i) => Math.abs(e\
    \ - game[i]));\n}\n", "    return game.map((num, index) => {\n        if (num\
    \ === guess[index]) return 0;\n        return Math.abs(num - guess[index]);\n\
    \    });\n}\nconsole.log(compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\n\
    console.log(compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]));\n", "    return\
    \ game.map((number, index) => {\n        return Math.abs(number - guess[index]);\n\
    \    });\n}\n", "    var results: number[] = [];\n    for (var i = 0; i < game.length;\
    \ i++) {\n        results.push(Math.abs(game[i] - guess[i]));\n    }\n    return\
    \ results;\n}\n", "    let result: number[] = [];\n    for (let i = 0; i < game.length;\
    \ i++) {\n        result.push(Math.abs(game[i] - guess[i]));\n    }\n    return\
    \ result;\n}", "    return game.map((score, i) => score === guess[i] ? 0 : Math.abs(score\
    \ - guess[i]));\n}\n", "    let result: number[] = [];\n    for (let i = 0; i\
    \ < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n\
    \        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n  \
    \      }\n    }\n    return result;\n}\n", "    return game.map((v, i) => v ===\
    \ guess[i] ? 0 : Math.abs(v - guess[i]));\n}\n\nlet result1 = compare([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]);\nconsole.log(result1); // [0, 0, 0, 0, 3, 3]\n\
    let result2 = compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]);\nconsole.log(result2);\
    \ // [4, 4, 1, 0, 0, 6]\n", "  let result = [];\n  for (let i = 0; i < game.length;\
    \ i++) {\n    let diff = Math.abs(game[i] - guess[i]);\n    result.push(diff);\n\
    \  }\n  return result;\n}\n", "    var result: number[] = [];\n    for (var i\
    \ = 0; i < game.length; i++) {\n        if (game[i] < 0 || guess[i] < 0) {\n \
    \           throw new Error(\"must be a positive number\");\n        }\n     \
    \   if (game[i] == guess[i]) {\n            result.push(0);\n        } else {\n\
    \            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n  \
    \  return result;\n}\n", "    var result: number[] = [];\n    for (var i = 0;\
    \ i < game.length; i++) {\n        if (game[i] == guess[i]) {\n            result.push(0);\n\
    \        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n  \
    \      }\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]));\nconsole.log(compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0,\
    \ 0, -2]));", "    return game.map((score, index) => {\n        const guessIsTooHigh\
    \ = guess[index] > score;\n        const guessIsTooLow = guess[index] < score;\n\
    \        if (guessIsTooHigh) {\n            return guess[index] - score;\n   \
    \     } else if (guessIsTooLow) {\n            return score - guess[index];\n\
    \        } else {\n            return 0;\n        }\n    });\n}\n", "    let result:\
    \ number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        let score\
    \ = game[i];\n        let prediction = guess[i];\n        let difference = score\
    \ - prediction;\n        result.push(Math.abs(difference));\n    }\n    return\
    \ result;\n}\nconsole.log(compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\n",
  "    const result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n\
    \        result.push(Math.abs(game[i] - guess[i]));\n    }\n    return result;\n\
    }\n", "  const results: number[] = [];\n  game.forEach((num, index) => {\n   \
    \ results.push(Math.abs(num - guess[index]));\n  });\n  return results;\n}\n",
  "    let results: number[] = [];\n    for (let i: number = 0; i < game.length; i++)\
    \ {\n        let abs: number = Math.abs(game[i] - guess[i]);\n        results.push(abs);\n\
    \    }\n    return results;\n}\n", "    const result: number[] = [];\n    for\
    \ (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n \
    \           result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\n", "  let result: number[]\
    \ = [];\n  for (let i = 0; i < game.length; i++) {\n    game[i] === guess[i] ?\
    \ result.push(0) : result.push(Math.abs(game[i] - guess[i]));\n  }\n  return result;\n\
    }\nconsole.log(compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\nconsole.log(compare([0,\
    \ 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]));\n", "    // solution 1:\n    // let results:\
    \ number[] = [];\n    // for (let i = 0; i < game.length; i++) {\n    //     if\
    \ (game[i] === guess[i]) {\n    //         results.push(0);\n    //     } else\
    \ {\n    //         results.push(Math.abs(game[i] - guess[i]));\n    //     }\n\
    \    // }\n    // return results;\n\n    // solution 2:\n    return game.map((score,\
    \ i) => score === guess[i] ? 0 : Math.abs(score - guess[i]));\n}\nconsole.log(compare([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\nconsole.log(compare([0, 5, 0, 0, 0,\
    \ 4], [4, 1, 1, 0, 0, -2]));\n", "  return game.map((score, i) => Math.abs(score\
    \ - guess[i]));\n}\n", "    return game.map((score, index) => score === guess[index]\
    \ ? 0 : Math.abs(score - guess[index]));\n}\n", "    return game.map((g, i) =>\
    \ guess[i] - g)\n}\nconsole.log(compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]))\n\
    console.log(compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]))", "    return guess.map((x,\
    \ i) => Math.abs(x - game[i]));\n}", "    let result: number[] = [];\n    for\
    \ (let i = 0; i < game.length; i++) {\n        result.push(Math.abs(game[i] -\
    \ guess[i]));\n    }\n    return result;\n}\n", "    //your code here\n    return\
    \ [1];\n}\n", "    let result = [];\n    for (let i = 0; i < game.length; i++)\
    \ {\n        if (game[i] < 0 && guess[i] < 0) {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        } else if (game[i] < 0 && guess[i] > 0) {\n         \
    \   result.push(Math.abs(game[i] + guess[i]));\n        } else if (game[i] > 0\
    \ && guess[i] < 0) {\n            result.push(Math.abs(game[i] + guess[i]));\n\
    \        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n  \
    \      }\n    }\n    return result;\n}\n\ntest(compare([0, 5, 0, 0, 0, 4], [4,\
    \ 1, 1, 0, 0, -2]), [4, 4, 1, 0, 0, 6]);\ntest(compare([1, 2, 3, 4, 5, 1], [1,\
    \ 2, 3, 4, 2, -2]), [0, 0, 0, 0, 3, 3]);\ntest(compare([0, 5, 0, 0, 0, 4], [4,\
    \ 1, 1, 0, 0, -2]), [4, 4, 1, 0, 0, 6]);\ntest(compare([1, 2, 3, 4, 5, 1], [1,\
    \ 2, 3, 4, 2, -2]), [0, 0, 0, 0, 3, 3]);\ntest(compare([0, 5, 0, 0, 0, 4], [4,\
    \ 1, 1, 0, 0, -2]), [4, 4, 1, 0, 0, 6]);\ntest(compare([1, 2, 3, 4, 5, 1], [1,\
    \ 2, 3, 4, 2, -2]), [0, 0, 0, 0, 3, 3]);\ntest(compare([0, 5, 0, 0, 0, 4], [4,\
    \ 1, 1, 0, 0, -2]), [4, 4, 1, 0, 0, 6]);\ntest(compare([1, 2, 3, 4", "    let\
    \ result: number[] = []\n    for (let i = 0; i < game.length; i++) {\n       \
    \ if (game[i] === guess[i]) {\n            result.push(0)\n        } else {\n\
    \            result.push(Math.abs(game[i] - guess[i]))\n        }\n    }\n   \
    \ return result\n}\n", "    let result: number[] = [];\n    for (let i = 0; i\
    \ < game.length; i++) {\n        result.push(game[i] - guess[i] > 0 ? game[i]\
    \ - guess[i] : guess[i] - game[i]);\n    }\n    return result;\n}\n", "    //\
    \ Your code goes here\n    let result = new Array<number>();\n    for (let i =\
    \ 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n          \
    \  result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\n", "    const result:\
    \ number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        const res\
    \ = Math.abs(game[i] - guess[i]);\n        result.push(res);\n    }\n    return\
    \ result;\n}", "    const res: number[] = [];\n    for (let i = 0; i < game.length;\
    \ i++) {\n        if (game[i] === guess[i]) {\n            res.push(0);\n    \
    \    } else {\n            res.push(Math.abs(game[i] - guess[i]));\n        }\n\
    \    }\n    return res;\n}\n", "    let finalResult: number[] = [];\n    let temp:\
    \ number;\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] !==\
    \ guess[i]) {\n            temp = Math.abs(game[i] - guess[i]);\n            finalResult.push(temp);\n\
    \        } else {\n            finalResult.push(0);\n        }\n    }\n    return\
    \ finalResult;\n}\nconsole.log(compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\n\
    console.log(compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]));\n", "  return game.map((n,\
    \ i) => Math.abs(n - guess[i]));\n}", "  return game.map((number, index) => Math.abs(number\
    \ - guess[index]));\n}\n", "  let result: number[] = []\n  game.forEach((elem,\
    \ i) => {\n    if (elem === guess[i]) {\n      result.push(0)\n    } else {\n\
    \      result.push(Math.abs(elem - guess[i]))\n    }\n  })\n  return result\n\
    }\n", "  let difference = [];\n  for (let i = 0; i < game.length; i++) {\n   \
    \ difference.push(Math.abs(game[i] - guess[i]));\n  }\n  return difference;\n\
    }\n", "  return game.map((score, i) => Math.abs(score - guess[i]));\n}\n", " \
    \   return game.map((x, i) => x === guess[i] ? 0 : Math.abs(x - guess[i]));\n\
    }\n", "    let result: number[] = [];\n    for (let i = 0; i < game.length; i++)\
    \ {\n        if (game[i] == guess[i]) {\n            result.push(0);\n       \
    \ } else {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n\
    \    }\n    return result;\n}\n", "  let result: number[] = [];\n  for (let i\
    \ = 0; i < game.length; i++) {\n    result.push(Math.abs(game[i] - guess[i]));\n\
    \  }\n  return result;\n}\n", "  let result: number[] = [];\n  for (let i = 0;\
    \ i < game.length; i++) {\n    let difference = Math.abs(game[i] - guess[i]);\n\
    \    result.push(difference);\n  }\n  return result;\n}\n", "  const result: number[]\
    \ = [];\n  for (let i = 0; i < game.length; i++) {\n    if (game[i] === guess[i])\
    \ {\n      result.push(0);\n    } else {\n      result.push(Math.abs(game[i] -\
    \ guess[i]));\n    }\n  }\n  return result;\n}\n", "    const result: number[]\
    \ = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] ===\
    \ guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}", "    const result =\
    \ [];\n    for (let i = 0; i < game.length; i++) {\n        result.push(Math.abs(game[i]\
    \ - guess[i]));\n    }\n    return result;\n}\nconsole.log(compare([1, 2, 3, 4,\
    \ 5, 1], [1, 2, 3, 4, 2, -2]));\nconsole.log(compare([0, 5, 0, 0, 0, 4], [4, 1,\
    \ 1, 0, 0, -2]));", "    const result: number[] = [];\n    for (let i = 0; i <\
    \ game.length; i++) {\n        let currentResult = Math.abs(game[i] - guess[i]);\n\
    \        if (game[i] === guess[i]) {\n            currentResult = 0;\n       \
    \ }\n        result.push(currentResult);\n    }\n    return result;\n}\n", " \
    \   let result = new Array<number>();\n    for (let i = 0; i < game.length; i++)\
    \ {\n        result.push(Math.abs(game[i] - guess[i]));\n    }\n    return result;\n\
    }\n", "    const result: number[] = [];\n    for (let i = 0; i < game.length;\
    \ i++) {\n        result.push(game[i] === guess[i] ? 0 : Math.abs(game[i] - guess[i]));\n\
    \    }\n    return result;\n}\n", "    return game.map((score, i) => Math.abs(score\
    \ - guess[i]));\n}\n", "  return game.map((_, idx) => Math.abs(game[idx] - guess[idx]));\n\
    }\n", "    var results: number[] = [];\n    for (var i = 0; i < game.length; i++)\
    \ {\n        if (game[i] == guess[i]) {\n            results.push(0);\n      \
    \  } else {\n            results.push(Math.abs(game[i] - guess[i]));\n       \
    \ }\n    }\n    return results;\n}\n", "    return game.map((s, i) => s - guess[i])\n\
    \        .map(Math.abs);\n}\n", "  const diffArray: number[] = [];\n  for (let\
    \ i = 0; i < game.length; i++) {\n    if (game[i] === guess[i]) {\n      diffArray.push(0);\n\
    \    } else {\n      diffArray.push(Math.abs(game[i] - guess[i]));\n    }\n  }\n\
    \  return diffArray;\n}\n", "  let result: number[] = [];\n  for (let i = 0; i\
    \ < game.length; i++) {\n    if (game[i] < 0 && guess[i] < 0) {\n      result.push(Math.abs(game[i]\
    \ - guess[i]));\n    } else if (game[i] < 0 && guess[i] > 0) {\n      result.push(Math.abs(game[i]\
    \ + guess[i]));\n    } else if (game[i] > 0 && guess[i] < 0) {\n      result.push(Math.abs(game[i]\
    \ + guess[i]));\n    } else {\n      result.push(Math.abs(game[i] - guess[i]));\n\
    \    }\n  }\n  return result;\n}\n", "  let result: number[] = [];\n  for (let\
    \ i = 0; i < game.length; i++) {\n    let difference = Math.abs(game[i] - guess[i]);\n\
    \    result.push(difference);\n  }\n  return result;\n}\n", "  const difference\
    \ = [];\n  game.forEach((score, i) => {\n    const diff = Math.abs(score - guess[i]);\n\
    \    difference.push(diff);\n  });\n  return difference;\n}\n", "    let result:\
    \ number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i]\
    \ === guess[i]) {\n            result.push(0);\n        } else {\n           \
    \ result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n\
    }\n\n", "    var result: number[] = [];\n    for (var i = 0; i < game.length;\
    \ i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n \
    \       } else {\n            result.push(Math.abs(game[i] - guess[i]));\n   \
    \     }\n    }\n    return result;\n}\n", "    const result: number[] = [];\n\
    \    for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i])\
    \ {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\nconsole.log(compare([0, 5, 0, 0, 0,\
    \ 4], [4, 1, 1, 0, 0, -2]));", "  return game.map((el, i) => {\n    if (guess[i]\
    \ < 0) {\n      return el - (guess[i] * -1);\n    } else {\n      return Math.abs(el\
    \ - guess[i]);\n    }\n  });\n}\nconsole.log(compare([1, 2, 3, 4, 5, 1], [1, 2,\
    \ 3, 4, 2, -2]));\nconsole.log(compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]));",
  "    return game.map((value, index) => Math.abs(value - guess[index]));\n}\n", " \
    \   let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n\
    \        if (game[i] < 0 && guess[i] > 0 || game[i] > 0 && guess[i] < 0) {\n \
    \           result.push(Math.abs(game[i] - guess[i]) + 1);\n        } else {\n\
    \            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n  \
    \  return result;\n}\nconsole.log(compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]));\nconsole.log(compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]));", " \
    \ return game.map((result, i) => Math.abs(result - guess[i]));\n}\n", "    let\
    \ result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n      \
    \  result.push(Math.abs(game[i] - guess[i]));\n    }\n    return result;\n}",
  "    // your code here\n    let difference: number[] = [];\n    for (let i = 0;\
    \ i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            difference.push(0);\n\
    \        } else {\n            difference.push(Math.abs(game[i] - guess[i]));\n\
    \        }\n    }\n    return difference;\n}\n", "  const result = [];\n  for\
    \ (let i = 0; i < game.length; i++) {\n    const abs = Math.abs(game[i] - guess[i]);\n\
    \    result.push(abs);\n  }\n  return result;\n}", "  let result = [];\n  for\
    \ (let i = 0; i < game.length; i++) {\n    if (game[i] === guess[i]) {\n     \
    \ result.push(0);\n    } else {\n      result.push(Math.abs(game[i] - guess[i]));\n\
    \    }\n  }\n  return result;\n}\n\nconsole.log(compare([1, 2, 3, 4, 5, 1], [1,\
    \ 2, 3, 4, 2, -2]));\nconsole.log(compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0,\
    \ -2]));", "    var result: number[] = [];\n    for (var i = 0; i < game.length;\
    \ i++) {\n        var score: number = game[i];\n        var prediction: number\
    \ = guess[i];\n        var difference: number = Math.abs(score - prediction);\n\
    \        result.push(difference);\n    }\n    return result;\n}\n", "  const result:\
    \ number[] = [];\n  for (let i = 0; i < game.length; i++) {\n    result.push(Math.abs(game[i]\
    \ - guess[i]));\n  }\n  return result;\n}", "    const results: number[] = [];\n\
    \    game.forEach((score, index) => {\n        const result = Math.abs(score -\
    \ guess[index]);\n        results.push(result);\n    });\n    return results;\n\
    }\n\nexport {\n    compare\n}", "  const result: number[] = [];\n  for (let i\
    \ = 0; i < game.length; i++) {\n    const diff = Math.abs(game[i] - guess[i]);\n\
    \    result.push(diff);\n  }\n  return result;\n}\n", "    let result: number[]\
    \ = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] ===\
    \ guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\n", "    let result:\
    \ number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i]\
    \ === guess[i]) {\n            result.push(0);\n        } else {\n           \
    \ result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n\
    }\n", "    let result = [];\n    for (let i = 0; i < game.length; i++) {\n   \
    \     if (game[i] === guess[i]) {\n            result.push(0);\n        } else\
    \ {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n\
    \    return result;\n}\nconsole.log(compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]));\nconsole.log(compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]));", " \
    \   return game.map((item, i) => Math.abs(item - guess[i]));\n}\n", "    let result\
    \ = [];\n    for (let i = 0; i < game.length; i++) {\n        if (guess[i] < 0)\
    \ {\n            result.push(Math.abs(guess[i]));\n        } else if (guess[i]\
    \ === game[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(guess[i]\
    \ - game[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\n", "    return game.map((score, i) =>\
    \ {\n        return guess[i] - score === 0 ? 0 : Math.abs(guess[i] - score);\n\
    \    });\n}", "    let result: number[] = [];\n    for (let i = 0; i < game.length;\
    \ i++) {\n        result.push(Math.abs(game[i] - guess[i]));\n    }\n    return\
    \ result;\n}\nconsole.log(compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\n\
    console.log(compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]));\n", "  return guess.map((num,\
    \ i) => Math.abs(num - game[i]));\n}\n", "  const result = [];\n  for (let i =\
    \ 0; i < game.length; i++) {\n    result.push(Math.abs(game[i] - guess[i]));\n\
    \  }\n  return result;\n}\n\ntest(compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]), [0, 0, 0, 0, 3, 3]);\ntest(compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0,\
    \ -2]), [4, 4, 1, 0, 0, 6]);", "    let newArr: number[] = [];\n    for (let i\
    \ = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n        \
    \    newArr.push(0);\n        } else {\n            newArr.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return newArr;\n}\n", "  let results: number[]\
    \ = [];\n  for (let i = 0; i < game.length; i++) {\n    if (game[i] === guess[i])\
    \ {\n      results.push(0);\n    } else {\n      results.push(Math.abs(game[i]\
    \ - guess[i]));\n    }\n  }\n  return results;\n}\n", "  let res = [];\n  for\
    \ (let i = 0; i < game.length; i++) {\n    res.push(Math.abs(game[i] - guess[i]));\n\
    \  }\n  return res;\n}", "  return game.map((g, i) => g === guess[i] ? 0 : Math.abs(g\
    \ - guess[i]));\n}\n", "    let results: number[] = [];\n    for (let i = 0; i\
    \ < game.length; i++) {\n        results.push(Math.abs(game[i] - guess[i]));\n\
    \    }\n    return results;\n}", "  return game.map((element, index) => {\n  \
    \  if (element === guess[index]) {\n      return 0;\n    } else {\n      return\
    \ Math.abs(element - guess[index]);\n    }\n  });\n}\n\ncompare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]);\ncompare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]);",
  "    return game.map((score, i) => score - guess[i]);\n}\n", "  return game.map((x,\
    \ i) => Math.abs(x - guess[i]));\n}\n", "    var result: number[] = [];\n    for\
    \ (var i = 0; i < game.length; i++) {\n        result.push(game[i] > guess[i]\
    \ ? game[i] - guess[i] : guess[i] - game[i]);\n    }\n    return result;\n}\n",
  "  let result: number[] = [];\n  for (let i = 0; i < game.length; i++) {\n    let\
    \ matchScore = game[i];\n    let matchGuess = guess[i];\n    if (matchScore ===\
    \ matchGuess) {\n      result.push(0);\n    } else {\n      result.push(Math.abs(matchScore\
    \ - matchGuess));\n    }\n  }\n  return result;\n}\n", "    let result: number[]\
    \ = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] ===\
    \ guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\n", "    const final\
    \ = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] ===\
    \ guess[i]) {\n            final.push(0);\n        } else {\n            final.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return final;\n}\n", "  let outcome: number[]\
    \ = [];\n  for (let i = 0; i < game.length; i++) {\n    let diff = Math.abs(game[i]\
    \ - guess[i]);\n    outcome.push(diff);\n  }\n  return outcome;\n}\n", "    //\
    \ ADD CODE HERE\n    let result: number[] = [];\n    for (let i = 0; i < game.length;\
    \ i++) {\n        let diff = Math.abs(game[i] - guess[i]);\n        result.push(diff);\n\
    \    }\n    return result;\n}\n", "  let result: number[] = [];\n  for (let i\
    \ = 0; i < game.length; i++) {\n    game[i] - guess[i] !== 0 ? result.push(Math.abs(game[i]\
    \ - guess[i])) : result.push(0);\n  }\n  return result;\n}\nconsole.log(compare([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\nconsole.log(compare([0, 5, 0, 0, 0,\
    \ 4], [4, 1, 1, 0, 0, -2]));\n", "  // fill me in\n  const retVal: number[] =\
    \ [];\n  for (let i = 0; i < game.length; i++) {\n    if (guess[i] === game[i])\
    \ {\n      retVal.push(0);\n    } else {\n      retVal.push(Math.abs(guess[i]\
    \ - game[i]));\n    }\n  }\n  return retVal;\n}\n", "  return game.map((number,\
    \ i) => {\n    return Math.abs(number - guess[i]);\n  });\n}\n", "    let result\
    \ = [];\n    for (let i = 0; i < game.length; i++) {\n        let difference =\
    \ Math.abs(game[i] - guess[i]);\n        result.push(difference);\n    }\n   \
    \ return result;\n}\n", "    return game.map((score, index) => {\n        const\
    \ diff = score - guess[index];\n        return diff < 0 ? diff * -1 : diff;\n\
    \    });\n}\n\n", "    // TASK 2\n    let result: number[] = [];\n    for (let\
    \ i = 0; i < game.length; i++) {\n        result.push(Math.abs(game[i] - guess[i]));\n\
    \    }\n    return result;\n}", "    const guessResult: number[] = [];\n    for\
    \ (let i = 0; i < game.length; i++) {\n        const diff = game[i] - guess[i];\n\
    \        guessResult.push(Math.abs(diff));\n    }\n    return guessResult;\n}\n\
    console.log(compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\nconsole.log(compare([0,\
    \ 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]));", "    let res: number[] = [];\n    for\
    \ (let i = 0; i < game.length; i++) {\n        if (guess[i] < 0) {\n         \
    \   res.push(game[i] - guess[i]);\n        } else {\n            res.push(game[i]\
    \ - guess[i]);\n        }\n    }\n    return res;\n}\nconsole.log(compare([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\nconsole.log(compare([0, 5, 0, 0, 0,\
    \ 4], [4, 1, 1, 0, 0, -2]));", "  let score: number[] = [];\n  game.forEach((result,\
    \ idx) => {\n    if (result === guess[idx]) {\n      score.push(0);\n    } else\
    \ {\n      score.push(Math.abs(result - guess[idx]));\n    }\n  });\n  return\
    \ score;\n}\n", "    let result: number[] = [];\n    let absolute: number = 0;\n\
    \    game.forEach((gameScore, index) => {\n        absolute = Math.abs(gameScore\
    \ - guess[index]);\n        result.push(absolute);\n    });\n    return result;\n\
    }\nlet game1: number[] = [1, 2, 3, 4, 5, 1];\nlet guess1: number[] = [1, 2, 3,\
    \ 4, 2, -2];\nlet game2: number[] = [0, 5, 0, 0, 0, 4];\nlet guess2: number[]\
    \ = [4, 1, 1, 0, 0, -2];\nconsole.log(compare(game1, guess1));\nconsole.log(compare(game2,\
    \ guess2));", "    const answers: number[] = [];\n    for (let i = 0; i < game.length;\
    \ i++) {\n        answers.push(Math.abs(game[i] - guess[i]));\n    }\n    return\
    \ answers;\n}", "    // TODO\n    return guess.map((value, index) => (game[index]\
    \ - value));\n}\nconsole.log(compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\n\
    console.log(compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]));\n", "    let result:\
    \ number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i]\
    \ == guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\nconsole.log(compare([0, 5, 0, 0, 0,\
    \ 4], [4, 1, 1, 0, 0, -2]));\n", "    let result: number[] = [];\n    for (let\
    \ i = 0; i < game.length; i++) {\n        if (game[i] !== guess[i]) {\n      \
    \      result.push(Math.abs(game[i] - guess[i]));\n        } else {\n        \
    \    result.push(0);\n        }\n    }\n    return result;\n}\n", "    let result:\
    \ number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        result.push(Math.abs(game[i]\
    \ - guess[i]));\n    }\n    return result;\n}\n\n", "  // use a for loop to iterate\
    \ through both arrays\n  // use Math.abs to find the difference of each element\
    \ in each array\n  // if the difference is 0, the value is 0\n  // return the\
    \ new array\n  let result: number[] = [];\n  for (let i = 0; i < game.length;\
    \ i++) {\n    result.push(Math.abs(game[i] - guess[i]));\n  }\n  return result;\n\
    }", "    let result = [];\n    for (let i = 0; i < game.length; i++) {\n     \
    \   result.push(Math.abs(game[i] - guess[i]));\n    }\n    return result;\n}\n",
  "    return game.map((score, i) => Math.abs(score - guess[i]));\n}", "    let result:\
    \ number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (guess[i]\
    \ < 0 || guess[i] > 5) {\n            console.log(`${guess[i]} is not a score.`);\n\
    \            continue;\n        } else if (game[i] === guess[i]) {\n         \
    \   result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\nconsole.log(compare([0, 5, 0, 0, 0,\
    \ 4], [4, 1, 1, 0, 0, -2]));", "    let res: number[] = []\n    for (let i = 0;\
    \ i < game.length; i++) {\n        if (guess[i] == game[i]) {\n            res.push(0)\n\
    \        } else {\n            res.push(Math.abs(guess[i] - game[i]))\n      \
    \  }\n    }\n    return res\n}\n", "    return game.map((score, index) => Math.abs(score\
    \ - guess[index]));\n}", "  return guess.map((value, index) => Math.abs(value\
    \ - game[index]));\n}\n", "    // TODO: implement me\n    return [];\n}\n\n",
  "  return game.map((e,i) => Math.abs(e - guess[i]));\n}", "  let result: number[]\
    \ = [];\n  for (let i = 0; i < game.length; i++) {\n    if (game[i] === guess[i])\
    \ {\n      result.push(0);\n    } else {\n      result.push(Math.abs(game[i] -\
    \ guess[i]));\n    }\n  }\n  return result;\n}\n", "  return game.map((number,\
    \ i) => {\n    const diff = Math.abs(guess[i] - number);\n    return diff ===\
    \ 0 ? 0 : diff;\n  });\n}\n", "    let finalResult: number[] = [];\n    for (let\
    \ i = 0; i < game.length; i++) {\n        if (game[i] == guess[i]) {\n       \
    \     finalResult.push(0);\n        } else {\n            finalResult.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return finalResult;\n}\nconsole.log(compare([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\nconsole.log(compare([0, 5, 0, 0, 0,\
    \ 4], [4, 1, 1, 0, 0, -2]));\n", "    let result: number[] = [];\n    for (let\
    \ i = 0; i < game.length; i++) {\n        if (game[i] == guess[i]) {\n       \
    \     result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\nconsole.log(compare([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\nconsole.log(compare([0, 5, 0, 0, 0,\
    \ 4], [4, 1, 1, 0, 0, -2]));", "    let result = [];\n    for (let i = 0; i <\
    \ game.length; i++) {\n        result.push(Math.abs(game[i] - guess[i]));\n  \
    \  }\n    return result;\n}\n", "    let result = [];\n    for (let i = 0; i <\
    \ game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n\
    \        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n  \
    \      }\n    }\n    return result;\n}\n", "    return game.map((v, i) => v -\
    \ guess[i]);\n}\n", "  if (game.length !== guess.length) {\n    throw new Error(\"\
    Incorrect arguments\");\n  }\n  return game.map((score, idx) => Math.abs(score\
    \ - guess[idx]));\n}\n", "  return game.map((score, idx) => {\n    const g = guess[idx];\n\
    \    return Math.abs(score - g);\n  });\n}\n", "    let final = []\n    for (let\
    \ i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n      \
    \      final.push(0)\n        } else {\n            final.push(Math.abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return final\n}\n", "    let score: number[]\
    \ = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] ===\
    \ guess[i]) {\n            score.push(0);\n        } else {\n            score.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return score;\n}\n", "  return game.map((score,\
    \ index) => Math.abs(score - guess[index]));\n}\n", "    return game.map((element,\
    \ index) => {\n        return element - guess[index]\n    }).map(x => Math.abs(x))\n\
    }\nconsole.log(compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]))\nconsole.log(compare([0,\
    \ 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]))\n", "  let result: number[] = [];\n  game.forEach((v,\
    \ i) => {\n    result.push(Math.abs(v - guess[i]));\n  });\n  return result;\n\
    }\n", "    const length = game.length;\n    const result: number[] = [];\n   \
    \ for (let i = 0; i < length; i++) {\n        if (game[i] === guess[i]) {\n  \
    \          result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\n", "    return game.map((score,\
    \ index) => Math.abs(score - guess[index]));\n}\nconsole.log(compare([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]));\nconsole.log(compare([0, 5, 0, 0, 0, 4], [4,\
    \ 1, 1, 0, 0, -2]));\n", "  let result: number[] = [];\n  for (let i = 0; i <\
    \ game.length; i++) {\n    if (game[i] === guess[i]) {\n      result.push(0);\n\
    \    } else {\n      result.push(Math.abs(game[i] - guess[i]));\n    }\n  }\n\
    \  return result;\n}\n", "    return game.map((value, index) => value - guess[index]);\n\
    }\n", "    let result: number[] = [];\n    for (let i = 0; i < game.length; i++)\
    \ {\n        if (guess[i] == game[i]) {\n            result.push(0);\n       \
    \ } else {\n            result.push(Math.abs(guess[i] - game[i]));\n        }\n\
    \    }\n    return result;\n}\n", "    return game.map((value, index) => Math.abs(value\
    \ - guess[index]));\n}\n", "  const result: number[] = [];\n  for (let i = 0;\
    \ i < game.length; i++) {\n    result.push(Math.abs(game[i] - guess[i]));\n  }\n\
    \  return result;\n}\n", "    return game.map((number, i) => number - guess[i]);\n\
    }\n", "    let length: number = game.length;\n    let result: number[] = [];\n\
    \    for (let i: number = 0; i < length; i++) {\n        if (game[i] === guess[i])\
    \ {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\n", "  let arr = [];\n\
    \  for (let i = 0; i < game.length; i++) {\n    if (game[i] === guess[i]) {\n\
    \      arr.push(0);\n    } else {\n      arr.push(Math.abs(game[i] - guess[i]));\n\
    \    }\n  }\n  return arr;\n}\n", "    let ret: number[] = [];\n    for (let i\
    \ = 0; i < game.length; i++) {\n        if (game[i] == guess[i]) {\n         \
    \   ret.push(0);\n        } else {\n            ret.push(Math.abs(game[i] - guess[i]));\n\
    \        }\n    }\n    return ret;\n}\nconsole.log(compare([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]));\nconsole.log(compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0,\
    \ 0, -2]));\n", "    let answer: number[] = [];\n    for (let i = 0; i < game.length;\
    \ i++) {\n        if (guess[i] == game[i]) {\n            answer.push(0);\n  \
    \      } else {\n            answer.push(Math.abs(guess[i] - game[i]));\n    \
    \    }\n    }\n    return answer;\n}\n", "    let result: number[] = [];\n   \
    \ for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n\
    \            result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}", "  return game.map((item,\
    \ index) => {\n    return Math.abs(item - guess[index]);\n  });\n}\n", "    return\
    \ game.map((val, ind) => {\n        return val === guess[ind] ? 0 : Math.abs(val\
    \ - guess[ind]);\n    });\n}\n", "    return game.map((score, i) => score ===\
    \ guess[i] ? 0 : Math.abs(score - guess[i]));\n}\n\nconsole.log(compare([1, 2,\
    \ 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\nconsole.log(compare([0, 5, 0, 0, 0, 4],\
    \ [4, 1, 1, 0, 0, -2]));\n", "    var result = [];\n    for (var i = 0; i < game.length;\
    \ i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n \
    \       } else {\n            result.push(Math.abs(game[i] - guess[i]));\n   \
    \     }\n    }\n    return result;\n}\n", "    return game.map((res, i) => res\
    \ === guess[i] ? 0 : Math.abs(res - guess[i]));\n}\n\n", "  let result = [];\n\
    \  for (let i = 0; i < game.length; i++) {\n    result.push(Math.abs(game[i] -\
    \ guess[i]));\n  }\n  return result;\n}\n", "  if (game.length !== guess.length)\
    \ {\n    return undefined;\n  }\n\n  const result: number[] = [];\n  for (let\
    \ i = 0; i < game.length; i++) {\n    const score = game[i];\n    const gus =\
    \ guess[i];\n    if (score === gus) {\n      result.push(0);\n    } else {\n \
    \     result.push(Math.abs(score - gus));\n    }\n  }\n  return result;\n}\n\n\
    console.log(compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\nconsole.log(compare([0,\
    \ 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]));\n", "  const results: number[] = [];\n\
    \  for (let i = 0; i < game.length; i++) {\n    if (game[i] === guess[i]) {\n\
    \      results.push(0);\n    } else {\n      results.push(Math.abs(game[i] - guess[i]));\n\
    \    }\n  }\n  return results;\n}\n", "  let result: number[] = [];\n  for (let\
    \ i = 0; i < game.length; i++) {\n    if (game[i] === guess[i]) {\n      result.push(0);\n\
    \    } else {\n      result.push(Math.abs(game[i] - guess[i]));\n    }\n  }\n\
    \  return result;\n}", "  const result = [];\n  for (let i = 0; i < game.length;\
    \ i++) {\n    result.push(Math.abs(game[i] - guess[i]));\n  }\n  return result;\n\
    }\n\nexport default compare;", "    return game.map((val, idx) => {\n        return\
    \ Math.abs(guess[idx] - val);\n    });\n}\n", "    let result: number[] = [];\n\
    \    game.forEach((score, index) => {\n        let difference = Math.abs(score\
    \ - guess[index]);\n        result.push(difference);\n    });\n    return result;\n\
    }\n", "    let result: number[] = [];\n    for (let i = 0; i < game.length; i++)\
    \ {\n        result.push(Math.abs(game[i] - guess[i]));\n    }\n    return result;\n\
    }", "    return game.map((num, i) => Math.abs(num - guess[i]));\n}\n", "    return\
    \ guess.map((v, i) => game[i] === v ? 0 : Math.abs(v - game[i]));\n}\n", "   \
    \ let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n  \
    \      const tmp = game[i] - guess[i];\n        result.push(tmp > 0 ? tmp : -tmp);\n\
    \    }\n    return result;\n}\n", "  if (game.length !== guess.length) {\n   \
    \ throw new Error('Input arrays should be of equal length');\n  }\n  let i = 0;\n\
    \  let result: number[] = [];\n  while (i < game.length) {\n    result.push(Math.abs(game[i]\
    \ - guess[i]));\n    i++;\n  }\n  return result;\n}\nlet gu1: number[] = [1, 2,\
    \ 3, 4, 5, 1];\nlet ga1: number[] = [1, 2, 3, 4, 2, -2];\nconsole.log(compare(gu1,\
    \ ga1));\nlet gu2: number[] = [0, 5, 0, 0, 0, 4];\nlet ga2: number[] = [4, 1,\
    \ 1, 0, 0, -2];\nconsole.log(compare(gu2, ga2));", "    return game.map((gameNum,\
    \ i) => (gameNum > guess[i]) ? gameNum - guess[i] : guess[i] - gameNum);\n}\n\
    console.log(compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\n\n", "  let result:\
    \ number[] = [];\n  for (let i = 0; i < game.length; i++) {\n    if (game[i] ===\
    \ guess[i]) {\n      result.push(0);\n    } else {\n      result.push(Math.abs(game[i]\
    \ - guess[i]));\n    }\n  }\n  return result;\n}", "    let res: number[] = [];\n\
    \    for (let i = 0; i < game.length; i++) {\n        if (game[i] - guess[i] <\
    \ 0) {\n            res.push(guess[i] - game[i]);\n        } else {\n        \
    \    res.push(game[i] - guess[i]);\n        }\n    }\n    return res;\n}\nconsole.log(compare([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]));\nconsole.log(compare([0, 5, 0, 0, 0,\
    \ 4], [4, 1, 1, 0, 0, -2]));\n", "    return game.map((res, i) => res - guess[i]);\n\
    }\n", "  return game.map((p, i) => {\n    return Math.abs(p - guess[i]);\n  });\n\
    }\n", "    return game.map((val, index) => {\n        if (guess[index] > val)\
    \ return guess[index] - val;\n        else if (guess[index] < val) return val\
    \ - guess[index];\n        else return 0;\n    });\n}\n", "  let result: number[]\
    \ = [];\n  for (let i = 0; i < game.length; i++) {\n    if (game[i] !== guess[i])\
    \ {\n      result.push(Math.abs(game[i] - guess[i]));\n    } else {\n      result.push(0);\n\
    \    }\n  }\n  return result;\n}\n", "    return game.map((item, index) => item\
    \ === guess[index] ? 0 : Math.abs(item - guess[index]));\n}\n", "    return game.map((x,\
    \ i) =>\n        x === guess[i] ? 0 : Math.abs(x - guess[i])\n    );\n}\n", " \
    \ return game.map((score, idx) => Math.abs(score - guess[idx]));\n}\n", "  let\
    \ outcome: number[] = [];\n  for (let i = 0; i < game.length; i++) {\n    outcome.push(Math.abs(game[i]\
    \ - guess[i]));\n  }\n  return outcome;\n}\n", "    const result: number[] = [];\n\
    \    if (game.length === guess.length) {\n        let j = 0;\n        for (let\
    \ i = 0; i < game.length; i++) {\n            if (game[i] === guess[i]) {\n  \
    \              result[j] = 0;\n            } else {\n                result[j]\
    \ = Math.abs(game[i] - guess[i]);\n            }\n            j++;\n        }\n\
    \    }\n    return result;\n}\n", "    return game.map((n, i) => {\n        const\
    \ a = Math.abs(n - guess[i]);\n        return a;\n    });\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

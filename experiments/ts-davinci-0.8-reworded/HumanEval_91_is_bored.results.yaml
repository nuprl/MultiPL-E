language: ts
name: HumanEval_91_is_bored
results:
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms:\
    \ number = 0;\n    let sentences: string[] = S.split(/[.!?]/);\n    for (let i\
    \ in sentences) {\n        let words: string[] = sentences[i].split(\" \");\n\
    \        for (let j in words) {\n            if (words[j] === \"I\") {\n     \
    \           boredoms += 1;\n                break;\n            }\n        }\n\
    \    }\n    return boredoms;\n}\nconsole.log(is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpva70u7vt.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpva70u7vt.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    '
  timestamp: 1659821488
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let arr =\
    \ S.split(/\\.|\\?|\\!/);\n    let boredoms = 0;\n    arr.forEach(sentence =>\
    \ {\n        if (sentence.startsWith(\"I\")) {\n            boredoms++;\n    \
    \    }\n    });\n    return boredoms;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpa4utopbw.ts(13,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821488
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    return S.split(/[.?!]/).filter(x\
    \ => x.trim().startsWith(\"I\")).length;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjlj9qlqd.ts(10,50): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821488
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms\
    \ = 0;\n    let words = S.split(/\\.|\\?|\\!/);\n    words.forEach(word => {\n\
    \        if (word.startsWith(\"I\")) {\n            boredoms += 1;\n        }\n\
    \    });\n    return boredoms;\n}\n\nconsole.log(is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkzbh6kf3.ts(13,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821488
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let sentences\
    \ = S.split(/[.?!]/);\n    let boredoms = 0;\n    for (let sentence of sentences)\
    \ {\n        if (sentence.split(\" \")[0] === \"I\") {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpy1oq0qyv.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy1oq0qyv.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821488
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    const boredoms\
    \ = S.split(/[.?!]/).filter(word => word.startsWith('I'));\n    return boredoms.length;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpt8cqqijx.ts(10,59): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821488
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let words:\
    \ string[] = S.split(/[.?!]/);\n    let count: number = 0;\n    for (let w of\
    \ words) {\n        if (w.startsWith(\"I\")) {\n            count++;\n       \
    \ }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6ry4kz9u.ts(13,15): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821488
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    const boredoms\
    \ = S.split('. ').filter(sentence => sentence.startsWith('I'));\n    return boredoms.length;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpr11itb16.ts(10,64): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821488
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const words\
    \ = S.split(\" \");\n  let boredom = 0;\n  for (let i = 0; i < words.length; i++)\
    \ {\n    if (words[i] === \"I\") {\n      boredom++;\n    }\n  }\n  return boredom;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpxfzx0h9y.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxfzx0h9y.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821488
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let counter\
    \ = 0;\n  let array = S.split(\" \");\n  for (let i = 0; i < array.length; i++)\
    \ {\n    if (array[i] === \"I\") {\n      counter++;\n    }\n  }\n  return counter;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp07449ojd.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp07449ojd.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821488
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let result\
    \ = 0;\n    const words = S.split(/[.?!]/);\n    words.forEach(word => {\n   \
    \     if (word.startsWith('I')) result++;\n    });\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpx9we0ty5.ts(13,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821488
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const index\
    \ = S.split(\".\").findIndex(x => x.trim().startsWith(\"I\"));\n  if (index >\
    \ -1) {\n    return index + 1;\n  }\n  return 0;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpo97fpxir.ts(10,30): error TS2339: Property ''findIndex''
    does not exist on type ''string[]''.

    '
  timestamp: 1659821488
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    return S.split(/[.?!]/).filter(x\
    \ => x.trim().startsWith(\"I\")).length;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjlj9qlqd.ts(10,50): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821488
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let boredoms:\
    \ number = 0;\n  S.split(\" \").forEach((word) => {\n    if (word[0] === \"I\"\
    ) {\n      boredoms++;\n    }\n  });\n  return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpdq0wqezh.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdq0wqezh.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821488
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms\
    \ = 0;\n    const sentences = S.split(/[\\.!\\?]+/);\n    for (let i = 0; i <\
    \ sentences.length; i++) {\n        if (sentences[i].startsWith(\"I\")) {\n  \
    \          boredoms++;\n        }\n    }\n    return boredoms;\n}\n\nlet test_S\
    \ = \"Hello world\";\nconsole.log(is_bored(test_S));\ntest_S = \"The sky is blue.\
    \ The sun is shining. I love this weather\";\nconsole.log(is_bored(test_S));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyg6nt9go.ts(13,26): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821488
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let sentences\
    \ = S.split(/[?!.]/);\n    return sentences.filter(s => s.trim().startsWith(\"\
    I\")).length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp78w7qdow.ts(11,43): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821488
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const senetences\
    \ = S.split(/[.!?]/);\n  const boredoms = senetences.filter(s => s.trim().startsWith(\"\
    I\"));\n  return boredoms.length;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphbxgob54.ts(11,52): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821488
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    return S.match(/I.*?[.?!]/g)\
    \ ? S.match(/I.*?[.?!]/g).length : 0;\n}\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp50wmpm6l.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp50wmpm6l.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821488
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms\
    \ = 0;\n    S.split('.').forEach( s => {\n        s.split('?').forEach( t => {\n\
    \            t.split('!').forEach( u => {\n                if (u.trim().split('\
    \ ')[0] === 'I') {\n                    boredoms++;\n                }\n     \
    \       });\n        });\n    });\n    return boredoms;\n}\n\nconsole.log( is_bored('I\
    \ am definitely not bored.') );\nconsole.log( is_bored('The sky is blue. The sun\
    \ is shining. I love this weather') );\nconsole.log( is_bored('I am definitely\
    \ not bored. The sky is blue. The sun is shining. I love this weather') );\nconsole.log(\
    \ is_bored('?') );\nconsole.log( is_bored('I!') );\nconsole.log( is_bored('I?')\
    \ );\nconsole.log( is_bored('!?I!?') );\nconsole.log( is_bored('I?!') );\nconsole.log(\
    \ is_bored('I') );\nconsole.log( is_bored('I.I') );\nconsole.log( is_bored('I.I.I')\
    \ );\nconsole.log( is_bored('I.I.I.I') );\nconsole.log( is_bored('I.I.I.I.I')\
    \ );\nconsole.log( is_bored('I.I.I.I.I.I') );\nconsole.log( is_bored('I.I.I.I.I.I.I')\
    \ );\nconsole.log( is_bored('I.I.I.I.I.I.I.I') );\nconsole.log( is_bored('I.I.I.I.I.I.I.I.I')\
    \ );\nconsole.log( is_bored('I.I.I.I.I.I.I.I.I.I') );\nconsole.log( is_bored('I.I.I.I.I.I.I.I.I.I.I')\
    \ );\nconsole.log( is_bored('I.I.I.\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpx4qsxre4.ts(42,30): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpx4qsxre4.ts(43,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpx4qsxre4.ts(43,9): error TS1005: '','' expected.

    '
  timestamp: 1659821488
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    const sentences\
    \ = S.split(/[\\.\\?!]/);\n    return sentences.filter(sentence => sentence.startsWith('I')).length;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpb_p6he4d.ts(11,50): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821488
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  return S.split(\"\
    .\").filter(s => s.startsWith(\"I\")).length;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqzo5_z7o.ts(10,37): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977977
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    return S.split(/[.?!]/).filter(x\
    \ => x.trim().match(/^I\\s/)).length;\n}\n\nconsole.log(is_bored(\"I am bored\"\
    ), 1);\nconsole.log(is_bored(\"The sky is blue. The sun is shining. I love this\
    \ weather\"), 1);\nconsole.log(is_bored(\"I am bored.\"), 1);\nconsole.log(is_bored(\"\
    abc\"), 0);\nconsole.log(is_bored(\"You're boring\"), 0);\nconsole.log(is_bored(\"\
    This is boring\"), 0);\nconsole.log(is_bored(\"You're boring.\"), 0);\nconsole.log(is_bored(\"\
    This is boring.\"), 0);\nconsole.log(is_bored(\"My hamster is dead. He was nice.\"\
    ), 0);\nconsole.log(is_bored(\"I like trains.\"), 0);\nconsole.log(is_bored(\"\
    I like trains\"), 0);\nconsole.log(is_bored(\"I am bored. I like trains\"), 1);\n\
    console.log(is_bored(\"I am bored! I like trains\"), 1);\nconsole.log(is_bored(\"\
    I am bored? I like trains\"), 1);\nconsole.log(is_bored(\"Hello world\"), 0);\n\
    console.log(is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ), 1);\nconsole.log(is_bored(\"The sky is blue. The sun is shining. I love this\
    \ weather.\"), 1);\nconsole.log(is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather!\"), 1);\nconsole.log(is_bored(\"I am bored. The sky is\
    \ blue. The sun is shining. I love this weather!\"), 2);\nconsole.log(is_bored(\"\
    I am bored. The sky is blue. The sun is shining. I love this weather.\"), 2);\n\
    console.log(is_bored(\"I am bored. The sky is blue. The sun is shining. I love\
    \ this weather\"), 2);\nconsole.log(is_bored(\"I am bored. The sky is blue. The\
    \ sun is shining. I love\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjhp37pi8.ts(34,78): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpjhp37pi8.ts(35,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpjhp37pi8.ts(35,9): error TS1005: '','' expected.

    '
  timestamp: 1659977977
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms:\
    \ number = 0;\n    let listOfSentences: string[] = S.split(/\\.|\\?|\\!/);\n \
    \   for (let sentence of listOfSentences) {\n        let listOfWords: string[]\
    \ = sentence.split(' ');\n        if (listOfWords[0] === 'I') boredoms++;\n  \
    \  }\n    return boredoms;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp57jghj1m.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp57jghj1m.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977977
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    var boredoms:\
    \ number = 0;\n    var initialI: string = S.substring(0, 1);\n    if (initialI\
    \ == \"I\") {\n        boredoms++;\n    }\n    var dot: number = S.indexOf(\"\
    .\");\n    var exclam: number = S.indexOf(\"!\");\n    var quest: number = S.indexOf(\"\
    ?\");\n    if (dot > -1) {\n        var subS: string = S.substring(dot + 1);\n\
    \        boredoms += is_bored(subS);\n    }\n    if (exclam > -1) {\n        var\
    \ subS: string = S.substring(exclam + 1);\n        boredoms += is_bored(subS);\n\
    \    }\n    if (quest > -1) {\n        var subS: string = S.substring(quest +\
    \ 1);\n        boredoms += is_bored(subS);\n    }\n    return boredoms;\n}\n\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpaf3lrrz_.js:36:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpaf3lrrz_.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977977
- exit_code: 0
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let i = 0;\n\
    \    const listOfStrings = S.split('.').map(s => s.trim().split(' '));\n    for\
    \ (const list of listOfStrings) {\n        if (list[0] === 'I') {\n          \
    \  i += 1;\n        }\n    }\n    return i;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977977
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let count:\
    \ number = 0;\n    let A: string[] = S.split(/[.?!]/);\n    for (let i: number\
    \ = 0; i < A.length; i++) {\n        let B: string[] = A[i].split(' ');\n    \
    \    if (B[0] === 'I') {\n            count++;\n        }\n    }\n    return count;\n\
    }\nconsole.log(is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpm4lqsfqz.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm4lqsfqz.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    '
  timestamp: 1659977977
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  // your code\
    \ here...\n  return S.split(\".\").filter(v => v.includes(\"I\")).length;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqtmqo0ro.ts(11,37): error TS2339: Property ''includes''
    does not exist on type ''string''.

    '
  timestamp: 1659977977
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  return (S.match(/\\\
    bI[a-zA-Z\\s]*[.!?]/g) || []).length;\n}\n\nconsole.log(is_bored(\"Hello world\"\
    ));\nconsole.log(is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpt0rk8wnx.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpt0rk8wnx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    0

    '
  timestamp: 1659977977
- exit_code: 0
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let count:\
    \ number = 0;\n    S.split(/[.!?]/).forEach(function (value) {\n        let trimmed:\
    \ string = value.trim();\n        if (trimmed.substring(0, 2) === \"I \") {\n\
    \            count++;\n        }\n    });\n    return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977977
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  return S.match(/I/gi)\
    \ === null ? 0 : S.match(/I/gi).length;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp83_pxtoc.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp83_pxtoc.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977977
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let sentences\
    \ = S.split(/[.?!]/);\n    return sentences.filter(sentence => sentence.trim().startsWith(\"\
    I\")).length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpf00zjbe8.ts(11,57): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977977
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let bored =\
    \ 0;\n  for (let i = 0; i < S.length; i++) {\n    if (S[i] === \"I\") {\n    \
    \  let j = i;\n      while (S[j] !== \".\" && S[j] !== \"?\" && S[j] !== \"!\"\
    ) {\n        j++;\n      }\n      bored++;\n      i = j;\n    }\n  }\n  return\
    \ bored;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp3xgct997.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3xgct997.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977977
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let sentence\
    \ = S.split(/[.?!]/);\n    let bored = 0;\n    for (let i = 0; i < sentence.length;\
    \ i++) {\n        if (sentence[i].charAt(0) === \"I\") {\n            bored++;\n\
    \        }\n    }\n    return bored;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpl4vqbv_v.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl4vqbv_v.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977977
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let i = 0;\n\
    \  for (let sentence of S.split(/[.?!]/)) {\n    if (sentence.trim().toLowerCase().startsWith(\"\
    i\")) {\n      i++;\n    }\n  }\n  return i;\n}\nconsole.log(is_bored(\"The sky\
    \ is blue. The sun is shining. I love this weather\"));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvkjt4uwd.ts(12,39): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977977
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let result\
    \ = 0;\n    let rows = S.split(/[.?!]/);\n    rows.forEach(value => {\n      \
    \  if (value.search(/^i/i) === 0) {\n            result++;\n        }\n    });\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp5mzysw_y.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5mzysw_y.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977977
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let arr =\
    \ S.split(/[!.? ]+/);\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        if (arr[i].startsWith(\"I\")) {\n            sum++;\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpt7tp7_v3.ts(13,20): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977977
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  return S.match(/I.*[.!?]/g)\
    \ ? S.match(/I.*[.!?]/g).length : 0;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpgde2xftg.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgde2xftg.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977977
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  return S.split(/[.?!]/).filter(s\
    \ => s.trim().startsWith('I')).length;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxhhb8suc.ts(10,48): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977977
- exit_code: 0
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    return S.split(/[!?.]/).reduce((x,\
    \ y) => {\n        return (x + (y.match(/^\\s*I\\s/) ? 1 : 0));\n    }, 0);\n\
    }\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977977
- exit_code: 0
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms\
    \ = 0;\n    const sentences = S.split(/[\\.!?]\\s/);\n    for (let i = 0; i <\
    \ sentences.length; i++) {\n        if (sentences[i].match(/^I\\s/i)) {\n    \
    \        boredoms++;\n        }\n    }\n    return boredoms;\n}\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\"));\nconsole.log(is_bored(\"\
    Hello world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    0

    '
  timestamp: 1659977977
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    const res\
    \ = S.split(/[\\.!?]/);\n    let cnt = 0;\n    for (let i = 0; i < res.length;\
    \ i++) {\n        if (res[i].split(' ')[0] === 'I') {\n            cnt++;\n  \
    \      }\n    }\n    return cnt;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgx2b_bne.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgx2b_bne.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977977
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let boredoms\
    \ = 0;\n  S.split(/[.!?]/).forEach(s => {\n    const words = s.split(' ');\n \
    \   if (words[0] === 'I') {\n      boredoms++;\n    }\n  });\n  return boredoms;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpauqpt96m.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpauqpt96m.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977977
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  // Write your\
    \ code here\n  let count = 0;\n  S.split(\".\")\n    .join(\"\")\n    .split(\"\
    ?\")\n    .join(\"\")\n    .split(\"!\")\n    .join(\"\")\n    .split(\" \")\n\
    \    .forEach(element => {\n      if (element === \"I\") {\n        count++;\n\
    \      }\n    });\n  return count;\n}\n\nexport { is_bored };\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpfswtyd55.js:37:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfswtyd55.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977977
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let result\
    \ = 0;\n  let i = 0;\n  while (i < S.length) {\n    if (S[i] === \"I\") {\n  \
    \    result++;\n    }\n    while (i < S.length && S[i] !== \".\" && S[i] !== \"\
    ?\" && S[i] !== \"!\") {\n      i++;\n    }\n    i++;\n  }\n  return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpfasx2gzo.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfasx2gzo.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms\
    \ = 0;\n    let words = S.split(\".\").join(\"\").split(\"?\").join(\"\").split(\"\
    !\").join(\"\").split(\" \");\n    for (let i = 0; i < words.length; i++) {\n\
    \        if (words[i] === \"I\") {\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp67z7r4l6.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp67z7r4l6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977980
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let r: number\
    \ = 0;\n  const reg: RegExp = /\\bi\\b/gi;\n  for (let i: number = 0; i < S.length;\
    \ i++) {\n    if (S[i] === \"I\") {\n      if (S[i - 1] === \".\" || S[i - 1]\
    \ === \"?\" || S[i - 1] === \"!\") {\n        r += 1;\n      }\n    }\n  }\n \
    \ return r;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpg_ndmdrj.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpg_ndmdrj.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const sentences\
    \ = S.split(/[.?!]/);\n  const boredoms = sentences.filter(s => s.startsWith(\"\
    I\"));\n  return boredoms.length;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpq4hm4096.ts(11,44): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const words\
    \ = S.split(/[.!?]/);\n  let boredoms = 0;\n  for (let word of words) {\n    const\
    \ arr = word.split(\" \");\n    if (arr[0] === \"I\") {\n      boredoms++;\n \
    \   }\n  }\n  return boredoms;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpzruqe_i4.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzruqe_i4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977980
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let sentences\
    \ = S.split(/[!.?]/);\n    let bored = 0;\n    for (let i = 0; i < sentences.length;\
    \ i++) {\n        if (sentences[i].startsWith(\"I\")) {\n            bored++;\n\
    \        }\n    }\n    return bored;\n}\nconsole.log(is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\"));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi5z9pbka.ts(13,26): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let sentenceArr\
    \ = S.split(/[.?!]/g);\n  let boredoms = 0;\n  sentenceArr.forEach(sentence =>\
    \ {\n    let sentenceWords = sentence.split(\" \");\n    if (sentenceWords[0]\
    \ === \"I\") {\n      boredoms++;\n    }\n  });\n  return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp3ma29ptz.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3ma29ptz.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    // your code\
    \ goes here\n    let boredoms = 0;\n    let index = 0;\n    while (index < S.length)\
    \ {\n        if (S[index] === 'I') {\n            boredoms += 1;\n        }\n\
    \        if (S[index] === '.' || S[index] === '?' || S[index] === '!') {\n   \
    \         index += 1;\n        }\n        index += 1;\n    }\n    return boredoms;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpkyo6xl0f.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkyo6xl0f.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let count\
    \ = 0;\n    let words = S.split(\" \");\n    for (let i = 0; i < words.length;\
    \ i++) {\n        if (words[i] === \"I\") {\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp0cnq2u7s.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0cnq2u7s.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const sentences\
    \ = S.split(/[!.?]/)\n  return sentences.filter(sentence => sentence.startsWith('I')).length\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpiqohq_gc.ts(11,48): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977979
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    var B = 0;\n\
    \    var D = S.split(/[.!?]/g);\n    for (var i = 0; i < D.length; i++) {\n  \
    \      if (/^i/i.test(D[i])) {\n            B++;\n        }\n    }\n    return\
    \ B;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp7aj7iqwf.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7aj7iqwf.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977980
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let words:\
    \ string[] = S.split(\" \");\n  let boredoms: number = 0;\n  words.forEach(word\
    \ => {\n    if (word === \"I\") {\n      boredoms++;\n    }\n  });\n  return boredoms;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpvj7izv1h.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvj7izv1h.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977980
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    return S.match(/I/gi).length;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmptptoxzyh.js:10\n    return S.match(/I/gi).length;\n           \
    \              ^\n\nTypeError: Cannot read properties of null (reading 'length')\n\
    \    at is_bored (/tmp/tmptptoxzyh.js:10:26)\n    at test (/tmp/tmptptoxzyh.js:15:22)\n\
    \    at Object.<anonymous> (/tmp/tmptptoxzyh.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977979
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms\
    \ = 0;\n    let I = 'I';\n    let is_start = false;\n    let is_bored = false;\n\
    \    for (let c of S) {\n        if (is_bored) {\n            if (c === '.' ||\
    \ c === '?' || c === '!') {\n                is_bored = false;\n            }\n\
    \        } else {\n            if (c === 'I') {\n                is_bored = true;\n\
    \                boredoms += 1;\n            }\n        }\n    }\n    return boredoms;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvvg9jnk0.ts(14,19): error TS2494: Using a string
    in a ''for...of'' statement is only supported in ECMAScript 5 and higher.

    '
  timestamp: 1659977979
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    const sentences\
    \ = S.split(/[.!?]/);\n    return sentences.reduce((boredoms, sentence) => {\n\
    \        return boredoms + /^\\s*I/.test(sentence);\n    }, 0);\n}\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppd4i65v6.ts(12,16): error TS2365: Operator ''+''
    cannot be applied to types ''number'' and ''boolean''.

    '
  timestamp: 1659977980
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let num =\
    \ 0;\n    for (let i = 0; i < S.length; i++) {\n        if (S[i] === 'I') {\n\
    \            num++;\n        }\n    }\n    return num;\n}\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\"));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp3qik5m4c.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3qik5m4c.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    '
  timestamp: 1659977980
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let bored\
    \ = 0;\n    let sentence = S.split(/[!?.]/);\n    for (let i = 0; i < sentence.length;\
    \ i++) {\n        if (sentence[i].charAt(0) === \"I\") bored++;\n    }\n    return\
    \ bored;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp89597kpu.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp89597kpu.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977980
- exit_code: 0
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let bored\
    \ = 0\n    let sentences = S.split(/[.?!]/)\n    sentences.forEach(sentence =>\
    \ {\n        sentence = sentence.trim()\n        let words = sentence.split('\
    \ ')\n        if (words[0] === 'I') {\n            bored++\n        }\n    })\n\
    \    return bored\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977980
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    return S.split(/[\\\
    .\\?!]/).filter(s => s.trim().startsWith('I')).length;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6858m9pb.ts(10,52): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977980
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let reg:\
    \ RegExp = /^I/;\n    let boredoms: number = 0;\n    for (let s of S.split(/[.!?]/))\
    \ {\n        if (reg.test(s)) {\n            boredoms++;\n        }\n    }\n \
    \   return boredoms;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpytlzldp2.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpytlzldp2.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977980
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const sentences\
    \ = S.split(/[.?!]/);\n  return sentences.filter(s => s.trim().startsWith(\"I\"\
    )).length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpclzs7yku.ts(11,41): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977980
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  return S.split(/[.?!]/).filter(sentence\
    \ => sentence.match(/^I/)).length;\n}\nconsole.log(is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\"));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpil1j6azv.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpil1j6azv.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    '
  timestamp: 1659977980
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const s = S.toLowerCase();\n\
    \  const splitArr = s.split(\" \");\n  return splitArr.filter(word => word ===\
    \ \"i\").length;\n}\n\nconsole.log(is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\"));\nconsole.log(is_bored(\"The sky is blue. The sun is\
    \ shining. This is cool weather\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpqu3_ml_8.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqu3_ml_8.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    0

    '
  timestamp: 1659977980
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  return S.split(\"\
    .\").reduce((a, b) => a + (b.split(\" \")[0] === \"I\" ? 1 : 0), 0);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpr987yw1w.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr987yw1w.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977982
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms:\
    \ number = 0;\n    let sentences: string[] = S.split(/\\.|\\?|\\!/g);\n    sentences.forEach(sentence\
    \ => {\n        let words: string[] = sentence.split(' ');\n        if (words[0]\
    \ == 'I') {\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgvcgn36g.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgvcgn36g.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977981
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    // your code\
    \ here\n    return 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp85t0msgt.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp85t0msgt.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977982
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let regex\
    \ = /I\\s/\n    // return new RegExp(regex).test(S) ? true : false\n    return\
    \ S.split(' ').filter(x => x === 'I').length\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmphu2z1bg4.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphu2z1bg4.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977982
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  return S.split(/[.!?]/).filter(s\
    \ => s.trim().startsWith('I')).length;\n}\n\nexport { is_bored };\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpydlyb33l.ts(10,48): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977982
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    return S.match(/^I/gm)\
    \ ? S.match(/^I/gm).length : 0;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpilws9lmm.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpilws9lmm.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977982
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let boredoms:\
    \ number = 0;\n  S.split(/\\.|\\?|\\!/).forEach(sentence => {\n    if (sentence.split('\
    \ ')[0] === 'I') {\n      boredoms++;\n    }\n  });\n  return boredoms;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjp5_1uox.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjp5_1uox.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977982
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    return S.split(/[.!?]/).filter(s\
    \ => s.startsWith('I')).length;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpp7cu3bc8.ts(10,43): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977982
- exit_code: 0
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let ret =\
    \ 0;\n    const arr = S.split(/\\.|\\?|\\!/);\n    arr.forEach(s => {\n      \
    \  if (s.trim().split(' ')[0] === 'I') {\n            ret++;\n        }\n    });\n\
    \    return ret;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977982
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let Boredoms:\
    \ number = 0;\n    S = S.replace(/[.!?]/g, ' ');\n    let Words: string[] = S.split('\
    \ ');\n    Words.forEach(word => {\n        if (word.includes('I')) {\n      \
    \      Boredoms += 1;\n        }\n    });\n    return Boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeuwf48lo.ts(14,18): error TS2339: Property ''includes''
    does not exist on type ''string''.

    '
  timestamp: 1659977982
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    var counter\
    \ = 0;\n    var hasBoredom = false;\n    for (var i = 0; i < S.length; i++) {\n\
    \        if (S[i] == \"I\") {\n            hasBoredom = true;\n        } else\
    \ if (S[i] == \".\" || S[i] == \"?\" || S[i] == \"!\") {\n            if (hasBoredom)\
    \ {\n                counter++;\n                hasBoredom = false;\n       \
    \     }\n        }\n    }\n    return counter;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmps6owocvg.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmps6owocvg.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977982
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const boredoms\
    \ = [];\n  let boredom = 0;\n  S.split(\" \").forEach(word => {\n    if (word\
    \ === \"I\") {\n      boredom = 1;\n    } else if (boredom && word.includes(\"\
    .\")) {\n      boredoms.push(word);\n      boredom = 0;\n    }\n  });\n  return\
    \ boredoms.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk_cyehj5.ts(15,32): error TS2339: Property ''includes''
    does not exist on type ''string''.

    '
  timestamp: 1659977982
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms\
    \ = 0\n    const reg = /[.?!]/\n    let words = S.split(reg)\n    for (let word\
    \ of words) {\n        if (word.slice(0, 2) === 'I ') {\n            boredoms++\n\
    \        }\n    }\n    return boredoms\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpr4cpi3dt.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr4cpi3dt.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977982
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const sentences\
    \ = S.split(/[.?!]/);\n  let boredoms = 0;\n  for (let i = 0; i < sentences.length;\
    \ i++) {\n    if (sentences[i].startsWith(\"I\")) {\n      boredoms++;\n    }\n\
    \  }\n  return boredoms;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgphh3qt_.ts(13,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977982
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms\
    \ = 0;\n    let p = 0;\n    while (p < S.length) {\n        while (p < S.length\
    \ && !/[.?!]/.test(S[p])) p++;\n        if (p + 1 < S.length && S[p + 1] === '\
    \ ' && S[p + 2] === 'I') boredoms++;\n        p += 2;\n    }\n    return boredoms;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmprqjmzinc.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprqjmzinc.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977982
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    // Counter\
    \ to sum the boredoms\n    let boredoms: number = 0;\n    // Split the string\
    \ by the delimiters\n    let sentences: string[] = S.split(/[.!?]/);\n    // Loop\
    \ over the sentences\n    for (let sentence of sentences) {\n        // Split\
    \ the sentence by spaces\n        let words: string[] = sentence.split(' ');\n\
    \        // If the first word of the sentence is \"I\", then increase the counter\n\
    \        if (words[0] === 'I') {\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\n\nconsole.log(is_bored(\"Hello world\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\"));\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjmsau8j_.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjmsau8j_.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    0

    '
  timestamp: 1659977982
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let count =\
    \ 0;\n  S.split(\".\").forEach(sentence => {\n    if (sentence.split(\" \")[0]\
    \ === \"I\") {\n      count++;\n    }\n  });\n  return count;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmphrubscc_.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphrubscc_.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977982
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms\
    \ = 0;\n    for (let i = 0; i < S.length; i++) {\n        if (S[i] === 'I') {\n\
    \            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\n\ndescribe(\"\
    Is bored\", () => {\n    it(\"0 boredoms\", () => {\n        assert.equal(is_bored(\"\
    Hello world\"), 0);\n    });\n    it(\"1 boredom\", () => {\n        assert.equal(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\"), 1);\n    });\n});\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfe1kmas8.ts(19,1): error TS2582: Cannot find name
    ''describe''. Do you need to install type definitions for a test runner? Try `npm
    i @types/jest` or `npm i @types/mocha`.

    ../../../../../tmp/tmpfe1kmas8.ts(20,5): error TS2582: Cannot find name ''it''.
    Do you need to install type definitions for a test runner? Try `npm i @types/jest`
    or `npm i @types/mocha`.

    ../../../../../tmp/tmpfe1kmas8.ts(23,5): error TS2582: Cannot find name ''it''.
    Do you need to install type definitions for a test runner? Try `npm i @types/jest`
    or `npm i @types/mocha`.

    '
  timestamp: 1659977982
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    return S.split(/[.?!]/).filter(s\
    \ => s.trim().startsWith('I')).length;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpl9igvp2n.ts(10,50): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977982
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  return S.split(/[.?!]/).filter(s\
    \ => s.trim().indexOf('I') === 0).length;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpgrmalt9_.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgrmalt9_.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977983
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const sentences\
    \ = S.split(/\\.|\\?|\\!/);\n  return sentences.filter(s => s.trim().startsWith(\"\
    I\")).length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0glu4tuc.ts(11,41): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977982
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    // YOUR CODE\
    \ HERE\n    let boredoms = 0;\n    let arr = S.split(/[.!?]/g);\n    for (let\
    \ s of arr) {\n        if (s.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpt5mgf6o1.ts(14,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977982
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms:\
    \ number = 0;\n    let sentences: string[] = S.split(/[.?!]/);\n    let word:\
    \ string;\n    let words: string[];\n    for (let sentence of sentences) {\n \
    \       words = sentence.split(\" \");\n        if (words.length > 0) {\n    \
    \        word = words[0];\n            if (word == \"I\") {\n                boredoms\
    \ += 1;\n            }\n        }\n    }\n    return boredoms;\n}\n\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpmcjbleew.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmcjbleew.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977983
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    const BORED\
    \ = \"I \";\n    let boredoms = 0;\n    let i = 0;\n    while (i < S.length) {\n\
    \        let l = S.substring(i).length;\n        let temp = BORED.length;\n  \
    \      if (l >= temp) {\n            if (S.substring(i, i + temp) === BORED) {\n\
    \                boredoms++;\n            }\n        }\n        i++;\n    }\n\
    \    return boredoms;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpabppo0a1.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpabppo0a1.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977984
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms\
    \ = 0;\n    let words = S.split(/[.,?!]/);\n    for (let i = 0; i < words.length;\
    \ i++) {\n        if (words[i].indexOf(\"I\") == 0) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmps9_yv33m.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmps9_yv33m.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977984
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let count\
    \ = 0;\n    S.split(/[.?!]/).map(v => v.trim()).forEach(s => {\n        if (s.indexOf('I')\
    \ === 0) {\n            count++;\n        }\n    });\n    return count;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpn3n_x90e.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn3n_x90e.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977984
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let bored:\
    \ number = 0;\n    const sentences: string[] = S.split(/[\\.!\\?]/);\n    for\
    \ (let i: number = 0; i < sentences.length; i++) {\n        const words: string[]\
    \ = sentences[i].split(\" \");\n        if (words[0] === \"I\") {\n          \
    \  bored++;\n        }\n    }\n    return bored;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp3aao7wtp.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3aao7wtp.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977984
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  return S.split(/[\\\
    .\\?!]/).filter(a => a.startsWith(\"I\")).length;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0jqk_2gd.ts(10,43): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977984
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let count =\
    \ 0;\n  const regex = /[I].\\b/g;\n  const sentences = S.split(/[.!?]/);\n  for\
    \ (let i = 0; i < sentences.length; i++) {\n    if (regex.test(sentences[i]))\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpen_83a51.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpen_83a51.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977985
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const exp =\
    \ /I[^\\?]/;\n  let count = 0;\n  let array = S.split(/\\.|\\?|\\!/);\n  for (let\
    \ i = 0; i < array.length; i++) {\n    if (exp.test(array[i])) {\n      count++;\n\
    \    }\n  }\n  return count;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp6zt069g4.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6zt069g4.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977985
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let count =\
    \ 0;\n  let splitS = S.split(/[.!?]/);\n  let arr = [];\n  for (let i = 0; i <\
    \ splitS.length; i++) {\n    if (splitS[i][0] === \"I\") {\n      arr.push(splitS[i]);\n\
    \    }\n  }\n  count = arr.length;\n  return count;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpzu1w9mio.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzu1w9mio.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977984
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    return S.split(/[.?!]/).filter(x\
    \ => x.trim().startsWith(\"I\")).length;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjlj9qlqd.ts(10,50): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659821488
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  var boredoms\
    \ = 0;\n  var split_sentences = S.split(/[!.?]/);\n  for (var sentence of split_sentences)\
    \ {\n    if (sentence.startsWith(\"I\")) {\n      boredoms += 1;\n    }\n  }\n\
    \  return boredoms;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdmcx2_zk.ts(13,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977984
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredom\
    \ = 0;\n    let current = '';\n    for (let i = 0; i < S.length; i++) {\n    \
    \    if (current === '' && S[i] === 'I') {\n            current = S[i];\n    \
    \    } else if (current === 'I' && S[i] === ' ') {\n            current += S[i];\n\
    \        } else if (current === 'I ') {\n            boredom++;\n            current\
    \ = '';\n        } else if (S[i] === '.' || S[i] === '?' || S[i] === '!') {\n\
    \            current = '';\n        }\n    }\n    return boredom;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpclna7hm3.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpclna7hm3.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977985
- exit_code: 0
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let array =\
    \ S.split(\".\").map(s => s.trim().split(\" \"));\n  let boredoms = 0;\n  for\
    \ (let i = 0; i < array.length; i++) {\n    if (array[i][0] === \"I\") {\n   \
    \   boredoms++;\n    }\n  }\n  return boredoms;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977985
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  return S.split(/\\\
    .|\\?|!/).filter(s => s.startsWith('I')).length;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpt_l8dkfo.ts(10,43): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977984
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const words\
    \ = S.split(\" \");\n  let boredoms = 0;\n  for (let i = 0; i < words.length;\
    \ i++) {\n    if (words[i] === \"I\") {\n      if (words[i + 1] === \".\") {\n\
    \        boredoms++;\n      } else if (words[i + 1] === \"?\") {\n        boredoms++;\n\
    \      } else if (words[i + 1] === \"!\") {\n        boredoms++;\n      }\n  \
    \  }\n  }\n  return boredoms;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpxu3r_ysj.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxu3r_ysj.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977985
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    const sentences\
    \ = S.match(/[^.!?]+[.!?]/g) || [];\n    return sentences.reduce((acc, s) => {\n\
    \        return acc + (s.startsWith('I') ? 1 : 0);\n    }, 0);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpt6tnlmnp.ts(12,25): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977985
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let arr =\
    \ S.split(/[.?!]/);\n    let count = 0;\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        if (arr[i].startsWith(\"I\")) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpl1qi3mpj.ts(13,20): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977984
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    const words\
    \ = S.split(/[\\s.?!]/).filter(w => w.length > 0);\n    let count = 0;\n    for\
    \ (let i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpysy8c090.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpysy8c090.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977985
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let boredoms\
    \ = 0;\n  const sentenceSplit = S.split(/[.?!]/);\n  sentenceSplit.forEach((sentence)\
    \ => {\n    if (sentence.startsWith(\"I\")) {\n      boredoms++;\n    }\n  });\n\
    \  return boredoms;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi8g129jm.ts(13,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977985
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let s = S.toLowerCase();\n\
    \    let boredoms = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === 'i' && (s[i - 1] === '.' || s[i - 1] === '?' || s[i - 1] === '!')) {\n \
    \           boredoms++;\n        }\n    }\n    return boredoms;\n}\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\"));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpunrnl_j5.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpunrnl_j5.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    '
  timestamp: 1659977985
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms\
    \ = 0;\n    let sentences = S.split(/[\\.\\?\\!]/);\n    for (let i = 0; i < sentences.length;\
    \ i++) {\n        if (sentences[i].trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\nlet TEST_STRING = \"The sky is blue.\
    \ The sun is shining. I love this weather\";\nconsole.log(is_bored(TEST_STRING));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpa23smg25.ts(13,33): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977985
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let count =\
    \ 0;\n  S.split(\".\").forEach(e => {\n    const match = e.match(/^\\s*I/);\n\
    \    if (match) {\n      count++;\n    }\n  });\n  return count;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp57nhosgl.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp57nhosgl.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977985
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    return S.split(/[.?!]/).filter(s\
    \ => s.startsWith('I')).length;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjvvn2eoq.ts(10,43): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977985
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    return 0;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpdqf_ggr6.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdqf_ggr6.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977985
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms\
    \ = 0;\n    let sentence_start = 0;\n    for (let i = 0; i < S.length; i++) {\n\
    \        if (S[i] === '.' || S[i] === '?' || S[i] === '!') {\n            let\
    \ sentence = S.slice(sentence_start, i);\n            if (sentence.includes('I'))\
    \ {\n                boredoms++;\n            }\n            sentence_start =\
    \ i + 1;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeli24nrt.ts(15,26): error TS2339: Property ''includes''
    does not exist on type ''string''.

    '
  timestamp: 1659977985
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let bored =\
    \ 0;\n  let sent = S.split(/\\.|\\?|\\!/g);\n  for (let i = 0; i < sent.length;\
    \ i++) {\n    if (sent[i].startsWith(\"I\")) {\n      bored++;\n    }\n  }\n \
    \ return bored;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmps7wqk6gd.ts(13,17): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977986
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const words\
    \ = S.split(/[.?!]/);\n  let boredomCount = 0;\n  for (let i = 0; i < words.length;\
    \ i++) {\n    if (words[i].startsWith(\"I\")) {\n      boredomCount++;\n    }\n\
    \  }\n  return boredomCount;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxm4znd_m.ts(13,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977987
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let rs =\
    \ 0;\n    let s = S.split(/[.!?]/);\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i].charAt(0) === 'I') {\n            rs++;\n        }\n    }\n\
    \    return rs;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp0ikybg47.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0ikybg47.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977987
- exit_code: 0
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  return S.split(/[\\\
    ?\\.\\!]/).filter(s => s.match(/^\\s*I\\s+/)).length;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977987
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    var str =\
    \ S.split(/[.?!]/);\n    var count = 0;\n    for (var i = 0; i < str.length; i++)\
    \ {\n        if (str[i].startsWith(\"I\")) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nconsole.log(is_bored(\"Hello world\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\"));\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0u59klnb.ts(13,20): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977987
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let count =\
    \ 0;\n  let split = S.split(/[.?!]/);\n  for (let i = 0; i < split.length; i++)\
    \ {\n    if (split[i].charAt(0) === \"I\") {\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpbvjlpt8p.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbvjlpt8p.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977987
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let sentences\
    \ = S.split(/[.?!]/);\n    let boredoms = 0;\n    for (let s of sentences) {\n\
    \        if (s.trim().startsWith(\"I\")) {\n            boredoms++;\n        }\n\
    \    }\n    return boredoms;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_hgoup53.ts(13,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977987
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let bored\
    \ = 0;\n    let words = S.split(\" \");\n    for (let i = 0; i < words.length;\
    \ i++) {\n        if (words[i] === \"I\") {\n            bored++;\n        }\n\
    \    }\n    return bored;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpxapucurr.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxapucurr.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977987
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  return (S.match(/I\
    \ /g) || []).length;\n}\n\nconsole.log(is_bored(\"The sky is blue. The sun is\
    \ shining. I love this weather\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpbejl_48t.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbejl_48t.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    '
  timestamp: 1659977987
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let strs\
    \ = S.split('.');\n    let count = 0;\n    for (let str of strs) {\n        let\
    \ words = str.split(' ');\n        if (words[0] === 'I') {\n            count\
    \ += 1;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp3xvdicq5.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3xvdicq5.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977987
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    const matches\
    \ = S.match(/I.*?[\\.\\?\\!]/g);\n    return matches ? matches.length : 0;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp5h8ybrui.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5h8ybrui.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977987
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let sentences\
    \ = S.split(/(?<=[.!?])/);\n    let boredoms = 0;\n    sentences.forEach(sentence\
    \ => {\n        if (sentence.startsWith(\"I\")) {\n            boredoms++;\n \
    \       }\n    });\n    return boredoms;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp64chn8oi.ts(13,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977987
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let boredoms\
    \ = 0;\n  const sentences = S.split(/[.!?]/g);\n  for (let sentence of sentences)\
    \ {\n    if (sentence.trim()[0] === \"I\") {\n      boredoms++;\n    }\n  }\n\
    \  return boredoms;\n}\n\nconsole.log(is_bored(\"This is a boring statement\"\
    ));\nconsole.log(is_bored(\"I am bored\"));\nconsole.log(is_bored(\"I am not bored\"\
    ));\nconsole.log(is_bored(\"I'm not bored\"));\nconsole.log(is_bored(\"It's a\
    \ boring day\"));\nconsole.log(is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\"));\nconsole.log(is_bored(\"This is a boring statement.\"\
    ));\nconsole.log(is_bored(\"I'm not bored. I'm really not bored.\"));\nconsole.log(is_bored(\"\
    I'm not bored! I'm really not bored!\"));\nconsole.log(is_bored(\"This is a boring\
    \ statement?\"));\nconsole.log(is_bored(\"I'm not bored! I'm really not bored?\"\
    ));\nconsole.log(is_bored(\"I'm not bored? I'm really not bored!\"));\nconsole.log(is_bored(\"\
    I'm not bored. I'm really not bored!\"));\nconsole.log(is_bored(\"I'm not bored?\
    \ I'm really not bored.\"));\nconsole.log(is_bored(\"I'm not bored. I'm really\
    \ not bored?\"));\nconsole.log(is_bored(\"I'm not bored! I'm really not bored.\"\
    ));\nconsole.log(is_bored(\"I'm not bored! I'm really not bored?\"));\nconsole.log(is_bored(\"\
    I'm not bored? I'm really not bored.\"));\nconsole.log(is_bored(\"I'm not bored?\
    \ I'm really not bored!\"));\nconsole.log(is_bored(\"I'm not bored! I'm really\
    \ not bored.\"));\nconsole.log(is_bored(\"I'm not bored. I'm really not bored.\"\
    ));\nconsole.log(is_bored(\"I'm\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsvkogh3w.ts(41,26): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmpsvkogh3w.ts(42,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpsvkogh3w.ts(42,9): error TS1005: '','' expected.

    '
  timestamp: 1659977987
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    return S.split(/[.?!]/)\n\
    \        .filter(s => s.trim().startsWith('I'))\n        .length;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp14dzvn3q.ts(11,31): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977987
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  return S.split(/[?!.]/).reduce((boredoms,\
    \ s) => boredoms + (s.startsWith('I') ? 1 : 0), 0);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpct8jsndy.ts(10,65): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977987
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let sentence:\
    \ string[] = S.split(/[.?!]/g);\n    let count: number = 0;\n    for (let i: number\
    \ = 0; i < sentence.length; i++) {\n        let words: string[] = sentence[i].split(\"\
    \ \");\n        if (words[0] === \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpy2d8xuli.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy2d8xuli.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977987
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const sentences\
    \ = S.split(/[.?!]/);\n  const boreds = sentences.filter(s => s.startsWith(\"\
    I\"));\n  return boreds.length;\n}\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpa1zuvpv1.ts(11,42): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977987
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms\
    \ = 0;\n    let regex = /\\s*I\\s+/;\n    let sentences = S.split(/[.!?]/);\n\
    \    for (let sentence of sentences) {\n        if (regex.test(sentence)) boredoms++;\n\
    \    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\"));\nconsole.log(is_bored(\"The sky is\
    \ blue. The sun is shining. I love this weather.\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather!\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!?\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather!?!\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!!!\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!?!!\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!?!?!!\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!!\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!?\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!!\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!?\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!\"));\nconsole.log(is_\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqhot7lrm.ts(36,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpqhot7lrm.ts(36,9): error TS1005: '','' expected.

    '
  timestamp: 1659977987
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    return 0;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpdqf_ggr6.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdqf_ggr6.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977985
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let r: number\
    \ = 0;\n  S.split(\".\").forEach(x => {\n    x.split(\"!\").forEach(y => {\n \
    \     y.split(\"?\").forEach(z => {\n        if (z.trim()[0] === \"I\") {\n  \
    \        r += 1;\n        }\n      });\n    });\n  });\n  return r;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpbbx8io6r.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbbx8io6r.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977988
- exit_code: 0
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let count\
    \ = 0;\n    let sen = S.split(/[.?!]/);\n    for (let i = 0; i < sen.length; i++)\
    \ {\n        if (sen[i].match(/^( )*I( )/)) count++;\n    }\n    return count;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977988
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const regex\
    \ = /(^I |\\sI )/g;\n  const found = S.match(regex);\n  return found ? found.length\
    \ : 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp8ue6myhn.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8ue6myhn.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977988
- exit_code: -1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let count =\
    \ 0;\n  let is_bored_string = \"I\";\n  let is_not_bored_string = \"\";\n  let\
    \ is_bored_index = S.indexOf(is_bored_string);\n  while (is_bored_index !== -1)\
    \ {\n    count++;\n    is_not_bored_string = S.substring(is_bored_index);\n  \
    \  is_bored_index = is_not_bored_string.indexOf(is_bored_string);\n  }\n  return\
    \ count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659978002
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let i: number\
    \ = 0;\n  const sen: string[] = S.split(/[.?!]/);\n  sen.forEach((v: string) =>\
    \ {\n    if (v.startsWith(\"I\")) {\n      i++;\n    }\n  });\n  return i;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpnq91qqjm.ts(13,11): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977988
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    return S.split(/\\\
    .|\\?|\\!/).filter(s => s.match(/^\\s*I/)).length;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpa5y58v_c.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpa5y58v_c.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977989
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    return 0;\n\
    }\n\nexport const isBored = is_bored;\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp6q489bha.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6q489bha.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977989
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let count =\
    \ 0;\n  const sentences = S.split(/[.?!]/);\n  for (let sentence of sentences)\
    \ {\n    if (sentence.split(' ')[0] === 'I') {\n      count++;\n    }\n  }\n \
    \ return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpucyr5ps0.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpucyr5ps0.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977990
- exit_code: 0
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let words\
    \ = S.split(/[.!?]/);\n    words = words.filter(word => word.length > 1);\n  \
    \  let boredoms = 0;\n    for (let i in words) {\n        let word = words[i].trim();\n\
    \        let firstWord = word.split(' ')[0];\n        if (firstWord == 'I') {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977990
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const sentences\
    \ = S.split(/[.?!]/);\n  let boredoms = 0;\n  for (let i = 0; i < sentences.length;\
    \ i++) {\n    if (sentences[i].trim().startsWith(\"I\")) {\n      boredoms++;\n\
    \    }\n  }\n  return boredoms;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd_a9bzqa.ts(13,29): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977989
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    return S.split(/[.?!]/).filter(el\
    \ => el.startsWith('I')).length;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpelm7sjow.ts(10,45): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977989
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  if (S.indexOf(\"\
    .\") == -1 && S.indexOf(\"?\") == -1 && S.indexOf(\"!\") == -1)\n    return S.split(\"\
    \ \").find(i => i == \"I\") ? 1 : 0;\n  else {\n    return S.split(/\\.|\\?|\\\
    !/).reduce((a, b) => {\n      if (b.indexOf(\"I\") == 0) a++;\n      return a;\n\
    \    }, 0);\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1b4h15cj.ts(11,25): error TS2339: Property ''find''
    does not exist on type ''string[]''.

    '
  timestamp: 1659977989
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    const sentence_list\
    \ = S.split(/[!?.]/g);\n    let boredom_count = 0;\n    sentence_list.forEach(sentence\
    \ => {\n        const words = sentence.split(' ');\n        if (words[0] === 'I')\
    \ {\n            boredom_count += 1;\n        }\n    });\n    return boredom_count;\n\
    }\nconsole.log(is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpj1socx8i.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpj1socx8i.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    '
  timestamp: 1659977990
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let reg =\
    \ /\\s*(I\\s*)/;\n    let res = 0;\n    let newS = S.split(/[.!?]/);\n    for\
    \ (let i = 0; i < newS.length; i++) {\n        if (reg.test(newS[i])) {\n    \
    \        res++;\n        }\n    }\n    return res;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpk3jj_uiy.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpk3jj_uiy.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977990
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let num:\
    \ number = 0;\n    S = S.replace(/(\\?|\\!|\\.)/g, \"$1 \").replace(/\\s+/g, \"\
    \ \");\n    let match: string[] = S.match(/I\\s/g);\n    if (match) {\n      \
    \  num = match.length;\n    }\n    return num;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpeudjsjj6.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpeudjsjj6.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977990
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let boredoms\
    \ = 0;\n  let words = S.split(/[.!?]/g);\n  for (let i = 0; i < words.length;\
    \ i++) {\n    if (words[i].charAt(0) === \"I\") {\n      boredoms++;\n    }\n\
    \  }\n  return boredoms;\n}\nconsole.log(is_bored(\"Hello world\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\"));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpgnte4o5j.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgnte4o5j.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    0

    '
  timestamp: 1659977990
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms\
    \ = 0;\n    let inSentence = false;\n    let inWord = false;\n    let startI =\
    \ false;\n    for (let c of S) {\n        if (!inSentence) {\n            if (c\
    \ == 'I') {\n                inSentence = true;\n                startI = true;\n\
    \            }\n        } else {\n            if (c == ' ' || c == ',') {\n  \
    \              if (startI) {\n                    startI = false;\n          \
    \          inWord = true;\n                }\n            } else if (!inWord)\
    \ {\n                inSentence = false;\n            } else if (c == '.' || c\
    \ == '?' || c == '!') {\n                inSentence = false;\n               \
    \ inWord = false;\n                boredoms++;\n            }\n        }\n   \
    \ }\n    return boredoms;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzwdn0s0h.ts(14,19): error TS2494: Using a string
    in a ''for...of'' statement is only supported in ECMAScript 5 and higher.

    '
  timestamp: 1659977990
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    // your code\
    \ here\n    let arr = S.split(\" \");\n    let boredoms = 0;\n    for (let i =\
    \ 0; i < arr.length; i++) {\n        if (arr[i] === \"I\") {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpy7_p3jxj.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy7_p3jxj.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977990
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let sentence:\
    \ string[] = S.split(/\\.|\\?|\\!/g);\n    let count: number = 0;\n    for (let\
    \ i: number = 0; i < sentence.length; i++) {\n        let sen: string = sentence[i].trim();\n\
    \        if (sen[0] === 'I') {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp0ndmj5fs.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0ndmj5fs.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977990
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let count\
    \ = 0;\n    const sentences = S.split(/[.?!]/);\n    for (let i = 0; i < sentences.length;\
    \ i++) {\n        const words = sentences[i].split(\" \");\n        if (words[0]\
    \ === \"I\") {\n            count++;\n        }\n    }\n    return count;\n}\n\
    console.log(is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ));\nconsole.log(is_bored(\"The sky is blue. The sun is shining.\"));\nconsole.log(is_bored(\"\
    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin dapibus nibh ac\
    \ est convallis varius. Pellentesque posuere quis ipsum nec bibendum. Nam at tortor\
    \ sit amet sem auctor tempus. Aenean feugiat nulla at augue hendrerit feugiat.\
    \ Aenean sit amet mauris vitae ante fringilla aliquam vitae eu ex. Cras ac urna\
    \ in dolor congue fermentum. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla\
    \ facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla\
    \ facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla\
    \ facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla\
    \ facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla\
    \ facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla\
    \ facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla\
    \ facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla\
    \ facilisi. Nulla facilisi. Nulla facilisi. Nulla fac\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcfgbd525.ts(22,1031): error TS1002: Unterminated
    string literal.

    ../../../../../tmp/tmpcfgbd525.ts(23,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpcfgbd525.ts(23,9): error TS1005: '','' expected.

    '
  timestamp: 1659977990
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const sentence:\
    \ string[] = S.split(/[\\.!?]/);\n  let count: number = 0;\n  for (let i = 0;\
    \ i < sentence.length; i++) {\n    if (sentence[i].split(\" \")[0] === \"I\")\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpa8kvacy2.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpa8kvacy2.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977990
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms:\
    \ number = 0;\n    let sentences: string[] = S.split(/[.?!]/g);\n    sentences.forEach(sentence\
    \ => {\n        if (sentence.trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    });\n    return boredoms;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpu86w8ot9.ts(13,29): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977990
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    const words\
    \ = S.split(/[.,?!]/);\n    let boring = 0;\n    for (let i = 0; i < words.length;\
    \ i++) {\n        if (words[i].startsWith(\"I\")) {\n            boring++;\n \
    \       }\n    }\n    return boring;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzspfogqv.ts(13,22): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977990
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let matches\
    \ = S.match(/\\s(I)\\s/g);\n    return matches ? matches.length : 0;\n}\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\"));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpm9sbd836.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm9sbd836.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    '
  timestamp: 1659977990
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let temp\
    \ = S.split(/[!.?]/g);\n    let result = 0;\n    for (let i = 0; i < temp.length;\
    \ i++) {\n        if (temp[i].startsWith(\"I\")) {\n            result++;\n  \
    \      }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp043c3fnr.ts(13,21): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977990
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let count\
    \ = 0;\n    let words = S.split(\" \");\n    let start = 0;\n    while (start\
    \ < words.length) {\n        if (words[start] === \"I\") {\n            count++;\n\
    \        }\n        start++;\n    }\n    return count;\n}\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\"));\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpgh3d4zlu.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgh3d4zlu.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    '
  timestamp: 1659977990
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    // Add code\
    \ here\n    let sentences = S.split(/[\\.\\?\\!]/);\n    let boredoms = 0;\n \
    \   for (let sentence of sentences) {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprcy57aya.ts(14,29): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977990
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const str =\
    \ S.split(\".\");\n  let boredoms = 0;\n  str.forEach((item) => {\n    if (item.charAt(0)\
    \ === \"I\") {\n      boredoms++;\n    }\n  });\n  return boredoms;\n}\n\nconsole.log(is_bored(\"\
    Hello world\"));\nconsole.log(is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpjk8ikor7.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjk8ikor7.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    0

    '
  timestamp: 1659977991
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let boredoms\
    \ = 0;\n  const sentences = S.split(/[.?!]/g);\n  for (let i = 0; i < sentences.length;\
    \ i++) {\n    if (sentences[i].trim().indexOf(\"I\") === 0) {\n      boredoms++;\n\
    \    }\n  }\n  return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored\"));\n\
    console.log(is_bored(\"Hello world\"));\nconsole.log(is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\"));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpafl8uc1i.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpafl8uc1i.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    0

    1

    '
  timestamp: 1659977991
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    const s:\
    \ Array<string> = S.split('.').join('.').split('?').join('?').split('!').join('!').split('.').join('.').split('\
    \ ');\n    let i: number = 0;\n    s.forEach(element => {\n        if (element\
    \ === 'I') {\n            i++;\n        }\n    });\n    return i;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp5k5ifnho.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5k5ifnho.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977992
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  // Your code\
    \ here.\n  const sentences = S.split(/[\\.!\\?]/);\n  return sentences.filter(x\
    \ => x.trim().startsWith(\"I\")).length;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmph3y_lbto.ts(12,41): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977992
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms\
    \ = 0;\n    let sentences = S.split(/[!.?]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.match(/^I/)) boredoms++;\n    }\n    return boredoms;\n\
    }\n\ndescribe(\"is_bored\", function() {\n    it(\"\", function() {\n        assert.equal(is_bored(\"\
    Hello world\"), 0);\n        assert.equal(is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\"), 1);\n        assert.equal(is_bored(\"The\
    \ sky is blue. The sun is shining. I love this weather? I love this weather!\"\
    ), 2);\n    });\n});\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjnp1b32l.ts(18,1): error TS2582: Cannot find name
    ''describe''. Do you need to install type definitions for a test runner? Try `npm
    i @types/jest` or `npm i @types/mocha`.

    ../../../../../tmp/tmpjnp1b32l.ts(19,5): error TS2582: Cannot find name ''it''.
    Do you need to install type definitions for a test runner? Try `npm i @types/jest`
    or `npm i @types/mocha`.

    '
  timestamp: 1659977992
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let x = 0;\n\
    \  let s = S.split(\" \");\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === \"I\") {\n      x++;\n    }\n  }\n  return x;\n}\nconsole.log(is_bored(\"\
    I am bored\"));\nconsole.log(is_bored(\"I am boring\"));\nconsole.log(is_bored(\"\
    I am not Boring\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpgwbj0_bw.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgwbj0_bw.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    1

    1

    '
  timestamp: 1659977992
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms\
    \ = 0;\n    let arr = S.split(/[!.?]/);\n    let i = 0;\n    for (i = 0; i < arr.length;\
    \ i++) {\n        let words = arr[i].split(\" \");\n        if (words[0] === \"\
    I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpglgwtqs3.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpglgwtqs3.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977992
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let check =\
    \ S.split(/[.!?]/);\n  let boredoms = 0;\n  for (let i = 0; i < check.length;\
    \ i++) {\n    if (check[i].indexOf(\"I\") === 0) {\n      boredoms++;\n    }\n\
    \  }\n  return boredoms;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpt3emisn_.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpt3emisn_.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977992
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let array =\
    \ S.split(\".\");\n  let count = 0;\n  array.forEach((element) => {\n    let words\
    \ = element.split(\" \");\n    if (words[0] === \"I\") {\n      count++;\n   \
    \ }\n  });\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpn4gijr6u.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn4gijr6u.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977992
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let numBoredoms\
    \ = 0;\n  const sentences = S.split(/[.?!]/);\n  sentences.forEach((sentence)\
    \ => {\n    if (sentence.startsWith(\"I\")) {\n      numBoredoms++;\n    }\n \
    \ });\n  return numBoredoms;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpco8l85og.ts(13,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977992
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let count =\
    \ 0;\n  S.split(\"\").map((chr, i) => {\n    if (\n      chr === \"I\" &&\n  \
    \    (S[i - 1] === \".\" || S[i - 1] === \"?\" || S[i - 1] === \"!\")\n    ) {\n\
    \      count++;\n    }\n  });\n  return count;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpk37nojqw.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpk37nojqw.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977992
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let sentences\
    \ = S.split(/[.?!]/);\n    let boredoms = 0;\n    for (let sentence of sentences)\
    \ {\n        let sentence_arr = sentence.split(' ');\n        if (sentence_arr[0]\
    \ === 'I') {\n            boredoms++;\n        }\n    }\n    return boredoms;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpnm62j83u.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnm62j83u.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977992
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    var result\
    \ = 0;\n    S = S.toLowerCase();\n    var str_arr = S.split(/[.?!]/);\n    for\
    \ (var i = 0; i < str_arr.length; i++) {\n        if (str_arr[i].indexOf(\"i\"\
    ) == 0) {\n            result++;\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpsyvxhb2k.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsyvxhb2k.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977992
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let boredoms:\
    \ number = 0;\n  const sentences: string[] = S.split(/[.?!]/g);\n  sentences.forEach((sentence:\
    \ string) => {\n    if (sentence.startsWith(\"I\")) {\n      boredoms++;\n   \
    \ }\n  });\n  return boredoms;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjl091n9y.ts(13,18): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977992
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let boredoms\
    \ = 0;\n  let capital_letter_i = false;\n  let end_sentence = false;\n  for (let\
    \ i = 0; i < S.length; i++) {\n    // first letter of sentence\n    if (\n   \
    \   S[i - 1] === \".\" ||\n      S[i - 1] === \"?\" ||\n      S[i - 1] === \"\
    !\" ||\n      S[i - 1] === undefined\n    ) {\n      if (S[i] === \"I\") {\n \
    \       capital_letter_i = true;\n      } else {\n        capital_letter_i = false;\n\
    \      }\n    }\n    // end of sentence\n    if (S[i] === \".\" || S[i] === \"\
    ?\" || S[i] === \"!\") {\n      end_sentence = true;\n    } else {\n      end_sentence\
    \ = false;\n    }\n    if (capital_letter_i && end_sentence) {\n      boredoms++;\n\
    \    }\n  }\n  return boredoms;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpshsfw3e6.js:43:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpshsfw3e6.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977992
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let sentances\
    \ = S.split(/[.!?]/);\n    return sentances.filter(s => s.trim().indexOf(\"I\"\
    ) === 0).length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp5755cz25.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5755cz25.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977992
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let bored =\
    \ 0;\n  let sentence = S.split(/[!.?]/);\n  sentence.forEach(s => {\n    if (s.indexOf(\"\
    I\") == 0) {\n      bored++;\n    }\n  });\n  return bored;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n\
    \  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpfypoygwa.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfypoygwa.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977993
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const sentences\
    \ = S.split(/[.?!]/);\n  const boredoms = sentences.filter(sentence => sentence.split(\"\
    \ \")[0] === \"I\");\n  return boredoms.length;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpywhvsxhu.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywhvsxhu.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977992
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms\
    \ = 0;\n    let arrayOfStrings = S.split(/[.?!]/);\n    for (let i = 0; i < arrayOfStrings.length;\
    \ i++) {\n        if (arrayOfStrings[i].startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp33vj0j8l.ts(13,31): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977992
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let bored =\
    \ 0;\n  S.split(/[!.?]/).forEach(sentence => {\n    const words = sentence.split('\
    \ ');\n    if (words[0] === 'I') {\n      bored++;\n    }\n  });\n  return bored;\n\
    }\n\nconst test: string = 'The sky is blue. The sun is shining. I love this weather!';\n\
    console.log(is_bored(test));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmg02tm3u.ts(20,7): error TS2300: Duplicate identifier
    ''test''.

    ../../../../../tmp/tmpmg02tm3u.ts(21,22): error TS2345: Argument of type ''()
    => void'' is not assignable to parameter of type ''string''.

    ../../../../../tmp/tmpmg02tm3u.ts(26,10): error TS2300: Duplicate identifier ''test''.

    '
  timestamp: 1659977993
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  return S.split(/[.?!]/).filter(x\
    \ => x.trim().startsWith(\"I\")).length;\n}\nconsole.log(is_bored(\"I am bored\
    \ today, I want to go somewhere.\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpl54o94c8.ts(10,48): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977993
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms:\
    \ number = 0;\n    let sentence: string[] = S.split(/[\\.\\?!]/);\n    for (let\
    \ i = 0; i < sentence.length; i++) {\n        let word: string[] = sentence[i].split(\"\
    \ \");\n        for (let j = 0; j < word.length; j++) {\n            if (word[j]\
    \ === \"I\") {\n                boredoms++;\n                break;\n        \
    \    }\n        }\n    }\n    return boredoms;\n}\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp9t3nu8s2.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9t3nu8s2.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977993
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms:\
    \ number = 0;\n    let sentences: string[] = S.split(/[.!?]/);\n    for (let i\
    \ = 0; i < sentences.length; i++) {\n        if (sentences[i].substring(0, 2)\
    \ === \"I \") {\n            boredoms++;\n        }\n    }\n    return boredoms;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpf23opz5r.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpf23opz5r.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977994
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms:\
    \ number = 0;\n    let words: string[] = S.split(\" \");\n    for (let i = 0;\
    \ i < words.length; i++) {\n        if (words[i] === \"I\") {\n            boredoms\
    \ += 1;\n        }\n    }\n    return boredoms;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyhnc71n1.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyhnc71n1.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977994
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    const st\
    \ = new StringTokenizer(S);\n    let cnt = 0;\n    while (st.hasMoreTokens())\
    \ {\n        const token = st.nextToken();\n        if (token.startsWith(\"I\"\
    )) {\n            cnt++;\n        }\n    }\n    return cnt;\n}\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj5df0wrb.ts(10,20): error TS2304: Cannot find name
    ''StringTokenizer''.

    '
  timestamp: 1659977994
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const r = S.split(\"\
    .\").filter(item => item.trim().startsWith(\"I\"));\n  return r.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5dyudrs4.ts(10,53): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977994
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let count =\
    \ 0;\n  let arr = S.split(\" \");\n  for (let i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] === \"I\") {\n      count++;\n    }\n  }\n  return count;\n}\n\
    console.log(is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpmrswj7ss.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmrswj7ss.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    '
  timestamp: 1659977994
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredom\
    \ = 0;\n    let i = 0;\n    while (i < S.length) {\n        let j = i;\n     \
    \   while (j < S.length && S[j] !== '.' && S[j] !== '?' && S[j] !== '!') {\n \
    \           j++;\n        }\n        let words = S.substring(i, j).split(' ');\n\
    \        if (words.length > 0 && words[0] === 'I') {\n            boredom++;\n\
    \        }\n        i = j + 1;\n    }\n    return boredom;\n}\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp957n3a84.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp957n3a84.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977994
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms\
    \ = 0;\n    for (let i = 0; i < S.length; i++) {\n        if (S[i] === 'I') {\n\
    \            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmplz0orgit.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplz0orgit.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977994
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let count\
    \ = 0;\n    const sentenceArray = S.split(/[.!?]/);\n    sentenceArray.forEach(sentence\
    \ => {\n        const words = sentence.split(\" \");\n        if (words[0] ===\
    \ \"I\") {\n            count++;\n        }\n    });\n    return count;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpp7n5zwzv.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpp7n5zwzv.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977994
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let boredoms:\
    \ number = 0;\n  S.split(\" \").forEach((word) => {\n    if (word.length > 0 &&\
    \ word[0] === \"I\") {\n      boredoms++;\n    }\n  });\n  return boredoms;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp5mf2zg7u.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5mf2zg7u.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977994
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let arrS\
    \ = S.split(/[.!?]+/);\n    let boredoms = 0;\n    arrS.forEach(sentence => {\n\
    \        let arrSentence = sentence.split(' ');\n        if (arrSentence[0] ===\
    \ 'I') boredoms++;\n    });\n    return boredoms;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmptoeukzey.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptoeukzey.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977995
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let result\
    \ = 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.split(' ')[0] === 'I') result++;\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmptzne7eby.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptzne7eby.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977994
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let re = /[\\\
    .\\?\\!]\\s+/g;\n  let sentences = S.split(re);\n  let boredoms = 0;\n  sentences.forEach(sentence\
    \ => {\n    if (sentence.charAt(0) === \"I\") {\n      boredoms++;\n    }\n  });\n\
    \  return boredoms;\n}\nconsole.log(is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpuf8jwtxr.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuf8jwtxr.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    '
  timestamp: 1659977995
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    return S.split(/[.?!]/)\n\
    \        .filter(s => s.trim().indexOf('I') === 0)\n        .length;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp2421727y.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2421727y.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977994
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  let result\
    \ = 0;\n  const stringArray = S.split(\" \");\n  const length = stringArray.length;\n\
    \  stringArray.forEach((word, index) => {\n    if (word === \"I\" && index !==\
    \ length - 1) {\n      result += 1;\n    }\n  });\n  return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
    ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpxtkixzuf.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxtkixzuf.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977995
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    const sentences\
    \ = S.split(/[.?!]/);\n    return sentences.filter(s => s.length > 0 && s.toLowerCase().startsWith('i')).length;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello\
    \ world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
    I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
    I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprvgnlkeu.ts(11,66): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977994
- exit_code: 2
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  return S.split(/[.?!]/).filter(s\
    \ => s.trim().startsWith('I')).length;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_bored;\n\
    \  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxhhb8suc.ts(10,48): error TS2339: Property ''startsWith''
    does not exist on type ''string''.

    '
  timestamp: 1659977977
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  const sentences\
    \ = S.split(/[!?.]/g);\n  let boredoms = 0;\n  for (const sentence of sentences)\
    \ {\n    const words = sentence.split(\" \");\n    if (words[0] === \"I\") {\n\
    \      boredoms++;\n    }\n  }\n  return boredoms;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpwfy7h8oz.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwfy7h8oz.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977994
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n    let boredoms\
    \ = 0;\n    let sentences = S.split(/[.!?]/);\n    for (let i = 0; i < sentences.length;\
    \ i++) {\n        let words = sentences[i].split(' ');\n        if (words[0] ===\
    \ 'I') boredoms++;\n    }\n    return boredoms;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
    Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n \
    \ assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"I feel\
    \ good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
    You and I are going for a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp47ta6yh_.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp47ta6yh_.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977995
- exit_code: 1
  program: "//You'll be given a string of words, and your task is to count the number\n\
    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
    \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello\
    \ world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\")\n// 1\nfunction is_bored(S: string): number {\n  // your code\
    \ here\n  let arr = S.split(/[.!?]/g);\n  return arr.filter(str => str.indexOf(\"\
    I\") === 0).length;\n}\nconsole.log(is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"\
    Hello world\"),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n \
    \ assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
    bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
    \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for\
    \ a walk\"),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp7wi8d8ow.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7wi8d8ow.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    '
  timestamp: 1659977995

language: ts
name: HumanEval_145_order_by_points
results:
- exit_code: 2
  program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n    return nums.sort((a, b) => {\n        if (sum_digits(a)\
    \ === sum_digits(b)) {\n            return nums.indexOf(a) - nums.indexOf(b);\n\
    \        }\n        return sum_digits(a) - sum_digits(b);\n    });\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11,\
    \ -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpes65y89k.ts(12,13): error TS2304: Cannot find name
    ''sum_digits''.

    ../../../../../tmp/tmpes65y89k.ts(12,31): error TS2304: Cannot find name ''sum_digits''.

    ../../../../../tmp/tmpes65y89k.ts(15,16): error TS2304: Cannot find name ''sum_digits''.

    ../../../../../tmp/tmpes65y89k.ts(15,32): error TS2304: Cannot find name ''sum_digits''.

    '
  timestamp: 1659821972
- exit_code: 2
  program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n    return nums.map((e, i) => ({ key: sum_of_digits(e),\
    \ value: e, index: i }))\n               .sort((a, b) => a.key - b.key)\n    \
    \           .map(e => e.value);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe0dqlih9.ts(11,39): error TS2304: Cannot find name
    ''sum_of_digits''.

    '
  timestamp: 1659821972
- exit_code: 1
  program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n    const points = nums.map(v => v.toString().split('').reduce((a,\
    \ b) => +a + +b, 0));\n    let sorted: number[] = [];\n    for (let i = 0; i <\
    \ nums.length; i++) {\n        for (let j = 0; j < nums.length; j++) {\n     \
    \       if (points[i] < points[j]) {\n                points[i] = points[i] +\
    \ points[j];\n                points[j] = points[i] - points[j];\n           \
    \     points[i] = points[i] - points[j];\n                nums[i] = nums[i] +\
    \ nums[j];\n                nums[j] = nums[i] - nums[j];\n                nums[i]\
    \ = nums[i] - nums[j];\n            }\n        }\n    }\n    for (let i = 0; i\
    \ < nums.length; i++) {\n        sorted.push(nums[i]);\n    }\n    return sorted;\n\
    }\n\nexport { order_by_points };\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpvoe9zki1.js:36:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvoe9zki1.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821972
- exit_code: 2
  program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n    let sum_points: number[] = nums.map(sum_by_digits);\n\
    \    return nums.sort((a, b) => {\n        let sum_a = sum_points[nums.indexOf(a)];\n\
    \        let sum_b = sum_points[nums.indexOf(b)];\n        if (sum_a > sum_b)\
    \ {\n            return 1;\n        } else if (sum_a < sum_b) {\n            return\
    \ -1;\n        } else {\n            return 0;\n        }\n    });\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11,\
    \ -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9p1pw95f.ts(11,41): error TS2304: Cannot find name
    ''sum_by_digits''.

    '
  timestamp: 1659821972
- exit_code: 2
  program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  if (nums.length === 0) {\n    return [];\n  }\n\n \
    \ let result: number[] = [];\n  for (let i = 0; i < nums.length; i++) {\n    let\
    \ number = nums[i];\n    let sum = 0;\n    let temp = number;\n    while (temp\
    \ > 0) {\n      sum += temp % 10;\n      temp = Math.floor(temp / 10);\n    }\n\
    \    result.push([number, sum, i]);\n  }\n\n  result.sort((a, b) => {\n    if\
    \ (a[1] !== b[1]) {\n      return a[1] - b[1];\n    } else {\n      return a[2]\
    \ - b[2];\n    }\n  });\n\n  for (let i = 0; i < result.length; i++) {\n    result[i]\
    \ = result[i][0];\n  }\n\n  return result;\n}\n\nconsole.log(order_by_points([1,\
    \ 11, -1, -11, -12]));\nconsole.log(order_by_points([]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkeegc690.ts(24,17): error TS2345: Argument of type
    ''number[]'' is not assignable to parameter of type ''number''.

    '
  timestamp: 1659821972
- exit_code: 1
  program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  //to get the sum of number, we need to divide the number\
    \ by 10 to get the last digit then add to sum\n  //then divide the number by 10\
    \ again and add the last digit to sum.\n  //we need to keep dividing the number\
    \ by 10 until the number is 0\n\n  //we need a variable to hold the sum of the\
    \ digits\n  //we need a variable to hold the number\n  //we need a variable to\
    \ hold the last digit of the number\n  //we need a variable to hold the output\
    \ array\n  //we need a variable to hold an array of summed digits\n  //we need\
    \ a variable to hold the numbers array index\n\n  //we need a loop to iterate\
    \ from 0 to the length of the numbers array\n    //we need a condition to check\
    \ if the number is not 0\n      //we need a loop to divide the number by 10\n\
    \        //we need to divide the number by 10\n      //we need to add the sum\
    \ to the array of summed digits\n      //we need to initialize the sum to 0\n\
    \    //we need a condition to check if the number is 0\n      //we need to add\
    \ the sum to the array of summed digits\n      //we need to initialize the sum\
    \ to 0\n\n  //we need a loop to iterate from 0 to the length of the numbers array\n\
    \    //we need to set the number to the numbers array index\n    //we need to\
    \ set the last digit of the number to the number divided by 10\n    //we need\
    \ to set the number to the number divided by 10\n    //we need to add the last\
    \ digit of the number to the sum\n\n  //we need a loop to iterate from 0 to the\
    \ length of the numbers array\n    //we need to add the summed digits array index\
    \ to the output array\n  //we need to return the output array\n  return nums;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmplr_jk2ax.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplr_jk2ax.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821972
- exit_code: 2
  program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < nums.length; i++) {\n        let num: number = nums[i];\n        let\
    \ sum: number = sum_of_digits(num);\n        result.push(sum);\n    }\n    return\
    \ result;\n}\nconsole.log(order_by_points([1, 11, -1, -11, -12]));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11,\
    \ -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4_w0xqs6.ts(14,27): error TS2304: Cannot find name
    ''sum_of_digits''.

    '
  timestamp: 1659821972
- exit_code: 2
  program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n    let result: number[] = [];\n    let sortedArray:\
    \ number[] = [];\n    for (let i = 0; i < nums.length; i++) {\n        let sum\
    \ = sumOfDigits(nums[i]);\n        if (sortedArray.length === 0) {\n         \
    \   sortedArray.push([nums[i], sum, i]);\n        } else {\n            for (let\
    \ j = 0; j < sortedArray.length; j++) {\n                if (sum < sortedArray[j][1])\
    \ {\n                    sortedArray.splice(j, 0, [nums[i], sum, i]);\n      \
    \              break;\n                } else if (j === sortedArray.length - 1)\
    \ {\n                    sortedArray.push([nums[i], sum, i]);\n              \
    \      break;\n                }\n            }\n        }\n    }\n    for (let\
    \ i = 0; i < sortedArray.length; i++) {\n        result.push(sortedArray[i][0]);\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpuvd8jjxz.ts(14,19): error TS2304: Cannot find name
    ''sumOfDigits''.

    ../../../../../tmp/tmpuvd8jjxz.ts(16,30): error TS2345: Argument of type ''any[]''
    is not assignable to parameter of type ''number''.

    ../../../../../tmp/tmpuvd8jjxz.ts(20,46): error TS2345: Argument of type ''any[]''
    is not assignable to parameter of type ''number''.

    ../../../../../tmp/tmpuvd8jjxz.ts(23,38): error TS2345: Argument of type ''any[]''
    is not assignable to parameter of type ''number''.

    '
  timestamp: 1659821972
- exit_code: 2
  program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  return nums.sort((a, b) =>\n    sumOfDigits(a) - sumOfDigits(b)\
    \ || nums.indexOf(a) - nums.indexOf(b)\n  );\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5jry757i.ts(12,5): error TS2304: Cannot find name
    ''sumOfDigits''.

    ../../../../../tmp/tmp5jry757i.ts(12,22): error TS2304: Cannot find name ''sumOfDigits''.

    '
  timestamp: 1659821972
- exit_code: 1
  program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n    let result: number[] = [];\n    let numString: string[]\
    \ = [];\n    for (let i = 0; i < nums.length; i++) {\n        numString.push(nums[i].toString());\n\
    \    }\n    numString.sort((a, b) => {\n        let suma: number = 0;\n      \
    \  let sumb: number = 0;\n        for (let i = 0; i < a.length; i++) {\n     \
    \       suma += parseInt(a[i]);\n        }\n        for (let i = 0; i < b.length;\
    \ i++) {\n            sumb += parseInt(b[i]);\n        }\n        if (suma ===\
    \ sumb) {\n            return nums.indexOf(parseInt(a)) - nums.indexOf(parseInt(b));\n\
    \        } else {\n            return suma - sumb;\n        }\n    });\n    for\
    \ (let i = 0; i < numString.length; i++) {\n        result.push(parseInt(numString[i]));\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpet64yyud.js:40:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpet64yyud.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821972
- exit_code: 1
  program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n    const digitsSum: number[] = nums.map(n => n.toString().split('').reduce((sum,\
    \ n) => sum + +n, 0));\n    return nums.sort((a, b) => digitsSum[nums.indexOf(a)]\
    \ - digitsSum[nums.indexOf(b)]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpw1faqe_9.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpw1faqe_9.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821972
- exit_code: 1
  program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n    let result: number[] = [];\n    let sumDigits = function\
    \ (num: number): number {\n        let sum = 0;\n        for (let digit of String(num).split(''))\
    \ {\n            sum += Number(digit);\n        }\n        return sum;\n    };\n\
    \    let tempArray: number[] = [...nums];\n    while (tempArray.length > 0) {\n\
    \        let maxSumDigits: number = 0;\n        let maxSumDigitsIndex: number\
    \ = 0;\n        for (let i = 0; i < tempArray.length; i++) {\n            let\
    \ digitSum = sumDigits(tempArray[i]);\n            if (digitSum > maxSumDigits)\
    \ {\n                maxSumDigits = digitSum;\n                maxSumDigitsIndex\
    \ = i;\n            }\n        }\n        result.push(tempArray[maxSumDigitsIndex]);\n\
    \        tempArray.splice(maxSumDigitsIndex, 1);\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  11,\n  1,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp4j8mr3zq.js:46:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4j8mr3zq.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 11, 1, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821972
- exit_code: 2
  program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const map: Map<number, number[]> = new Map();\n  for\
    \ (let i = 0; i < nums.length; i++) {\n    const digitSum = nums[i]\n      .toString()\n\
    \      .split(\"\")\n      .map(Number)\n      .reduce((a, b) => a + b, 0);\n\
    \    map.set(digitSum, (map.get(digitSum) || []).concat(nums[i]));\n  }\n  const\
    \ sortedKeys = Array.from(map.keys()).sort((a, b) => a - b);\n  const sorted =\
    \ [];\n  for (let i = 0; i < sortedKeys.length; i++) {\n    sorted.push(...map.get(sortedKeys[i]));\n\
    \  }\n  return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpoy62fcug.ts(11,14): error TS2583: Cannot find name
    ''Map''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpoy62fcug.ts(11,42): error TS2552: Cannot find name ''Map''.
    Did you mean ''map''?

    ../../../../../tmp/tmpoy62fcug.ts(20,28): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1659821972
- exit_code: 2
  program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  return nums.sort((a, b) => {\n    let aTotal = 0;\n\
    \    let bTotal = 0;\n    let aArr = String(a).split(\"\");\n    let bArr = String(b).split(\"\
    \");\n    aArr.forEach(num => {\n      aTotal += Number(num);\n    });\n    bArr.forEach(num\
    \ => {\n      bTotal += Number(num);\n    });\n    if (aTotal > bTotal) {\n  \
    \    return 1;\n    } else if (aTotal < bTotal) {\n      return -1;\n    } else\
    \ {\n      return aArr[0] - bArr[0];\n    }\n  });\n}\nconsole.log(order_by_points([1,\
    \ 11, -1, -11, -12]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplap8r334.ts(27,14): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmplap8r334.ts(27,24): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659821972
- exit_code: 1
  program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n    return nums.map((item, index) => {\n        return\
    \ {\n            sum: String(item).split('').reduce((sum, digit) => sum + parseInt(digit),\
    \ 0),\n            index: index,\n            num: item\n        }\n    }).sort((a,\
    \ b) => a.sum - b.sum || a.index - b.index).map(item => item.num);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11,\
    \ -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpv85hl_a0.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpv85hl_a0.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821972
- exit_code: 1
  program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  let result: number[] = [];\n  for (let num of nums)\
    \ {\n    let strArr = num.toString().split(\"\");\n    let sum = 0;\n    for (let\
    \ str of strArr) {\n      sum += Number(str);\n    }\n    result.push(sum);\n\
    \  }\n  let sortedResult = result.sort((a, b) => a - b);\n  let indexOfSortedResult\
    \ = [];\n  for (let i = 0; i < sortedResult.length; i++) {\n    indexOfSortedResult.push(result.indexOf(sortedResult[i]));\n\
    \  }\n  let resultArr = [];\n  for (let idx of indexOfSortedResult) {\n    resultArr.push(nums[idx]);\n\
    \  }\n  return resultArr;\n}\n\nconsole.log(order_by_points([1, 11, -1, -11, -12]));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  undefined,\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n\
    \  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test (/tmp/tmpuotgoprr.js:38:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuotgoprr.js:45:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, undefined,\
    \ undefined, undefined ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 11, undefined, undefined, undefined ]

    '
  timestamp: 1659821972
- exit_code: 1
  program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const sum = (n: number) => n.toString().split('').reduce((a,\
    \ b) => a + parseInt(b), 0);\n  const order = (a: number, b: number) => {\n  \
    \  if (sum(a) < sum(b)) {\n      return -1;\n    } else if (sum(a) > sum(b)) {\n\
    \      return 1;\n    } else {\n      return 0;\n    }\n  };\n  return nums.sort(order);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpn8nrksku.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn8nrksku.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821972
- exit_code: 1
  program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  let res: number[] = [];\n  let sum: number = 0;\n \
    \ let temp: number[] = [];\n  let secondtemp: number[] = [];\n  nums.forEach((e,\
    \ i) => {\n    sum = 0;\n    String(e)\n      .split(\"\")\n      .forEach((element)\
    \ => {\n        sum += parseInt(element);\n      });\n    temp.push(sum);\n  \
    \  secondtemp.push(i);\n  });\n  let i: number = 0;\n  while (nums.length > 0)\
    \ {\n    let x: number = 0;\n    for (let j: number = 0; j < temp.length; j++)\
    \ {\n      if (temp[j] < temp[x]) {\n        x = j;\n      }\n    }\n    res.push(nums[x]);\n\
    \    nums.splice(x, 1);\n    temp.splice(x, 1);\n  }\n  return res;\n}\n\nconsole.log(order_by_points([1,\
    \ 11, -1, -11, -12]));\nconsole.log(order_by_points([]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmply6v9s5r.js:44:12)\n    at Object.<anonymous>\
    \ (/tmp/tmply6v9s5r.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 11, -1, -11, -12 ]

    []

    '
  timestamp: 1659821972
- exit_code: 2
  program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  return nums.map((num, i) => ({ num, index: i }))\n\
    \    .sort((a, b) => {\n      const sumA = sumDigits(a.num);\n      const sumB\
    \ = sumDigits(b.num);\n      if (sumA === sumB) {\n        return a.index - b.index;\n\
    \      }\n      return sumA - sumB;\n    })\n    .map(({ num }) => num);\n}\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwiw1k6_6.ts(13,20): error TS2304: Cannot find name
    ''sumDigits''.

    ../../../../../tmp/tmpwiw1k6_6.ts(14,20): error TS2304: Cannot find name ''sumDigits''.

    '
  timestamp: 1659821972
- exit_code: -1
  program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  if (nums.length == 0) {\n    return [];\n  }\n\n  let\
    \ arr = [];\n  for (let i = 0; i < nums.length; i++) {\n    let sum = 0;\n   \
    \ let temp = nums[i];\n    while (temp != 0) {\n      sum += temp % 10;\n    \
    \  temp = Math.floor(temp / 10);\n    }\n    arr.push([sum, i]);\n  }\n\n  arr.sort((a,\
    \ b) => a[0] - b[0]);\n\n  let res = [];\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    res.push(nums[arr[i][1]]);\n  }\n\n  return res;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659821987

name: HumanEval_146_specialFilter
language: ts
prompt: "//Write a function that takes an array of numbers as input and returns \n\
  // the number of elements in the array that are greater than 10 and both \n// first\
  \ and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n// >>>\
  \ specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2, -3, 45,\
  \ 21, 109])\n// 2\nfunction specialFilter(nums: number[]): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2,\
  \ 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
  \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
  \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
  \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
completions: ["    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n \
    \       if (nums[i] > 10 && nums[i] % 2 != 0 && nums[0] % 2 != 0 && nums[nums.length\
    \ - 1] % 2 != 0) {\n            count++;\n        }\n    }\n    return count;\n\
    }", "    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n       \
    \ if (nums[i] > 10 && nums[i] % 2 !== 0 && nums[0] % 2 !== 0 && nums[nums.length\
    \ - 1] % 2 !== 0) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n", "  let newarr = [];\n  for (let num of nums) {\n    let digits = num.toString().split(\"\
    \");\n    if (num > 10 && (digits[0] % 2 == 1) && (digits[digits.length - 1] %\
    \ 2 == 1)) {\n      newarr.push(num);\n    }\n  }\n  return newarr.length;\n}\n\
    \n", "    let result = 0;\n    for (let i = 0; i < nums.length; i++) {\n     \
    \   let num = nums[i];\n        if (num > 10 && (num % 2 != 0)) {\n          \
    \  let firstDigit = Math.floor(num / 10);\n            let lastDigit = num % 10;\n\
    \            if (firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n              \
    \  result++;\n            }\n        }\n    }\n    return result;\n}\n\n", " \
    \   let counter = 0;\n    nums.forEach(num => {\n        if (num > 10 && num %\
    \ 2 === 1 && Math.floor(num / 10) % 2 === 1) {\n            counter++;\n     \
    \   }\n    });\n    return counter;\n}\n", "  let count = 0;\n  for (let i = 0;\
    \ i < nums.length; i++) {\n    let num = nums[i];\n    if (num > 10 && Math.abs(num)\
    \ % 2 !== 0 && num % 10 % 2 !== 0) {\n      count++;\n    }\n  }\n  return count;\n\
    }\n", "    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n     \
    \   if (nums[i] >= 10 && nums[i] % 2 !== 0 && nums[i] % 10 % 2 !== 0) {\n    \
    \        count++;\n        }\n    }\n    return count;\n}\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));\n", "    let total: number = 0;\n    for (let num of\
    \ nums) {\n        let firstDigit: number = Math.floor(num / 10);\n        let\
    \ lastDigit: number = num % 10;\n        if (num > 10 && (firstDigit % 2 == 1\
    \ || lastDigit % 2 == 1)) {\n            total++;\n        }\n    }\n    return\
    \ total;\n}\nconsole.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));\n", "\tlet count = 0;\n\tnums.forEach(number => {\n\t\
    \tif (number > 10 && number % 2 === 1 &&\n\t\t\t(number % 10 === 1 || number %\
    \ 10 === 3 ||\n\t\t\t\tnumber % 10 === 5 || number % 10 === 7 ||\n\t\t\t\tnumber\
    \ % 10 === 9)) {\n\t\t\tcount++;\n\t\t}\n\t});\n\treturn count;\n}\n", "    return\
    \ nums.filter(e => {\n        return e % 2 !== 0 && e > 10 && Math.floor(e / 10)\
    \ % 2 !== 0 && e % 10 % 2 !== 0;\n    }).length;\n}\n", "    var count = 0;\n\
    \    for (var i = 0; i < nums.length; i++) {\n        var str = nums[i].toString();\n\
    \        if (nums[i] > 10 && parseInt(str[0]) % 2 !== 0 && parseInt(str[str.length\
    \ - 1]) % 2 !== 0) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n", "    let counter = 0;\n    nums.forEach(num => {\n        let string = num.toString();\n\
    \        if (num > 10 && isOdd(parseInt(string[0])) && isOdd(parseInt(string[string.length\
    \ - 1]))) counter++;\n    });\n    return counter;\n}", "    var count = 0;\n\
    \    for (var i = 0; i < nums.length; i++) {\n        if (nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 5 != 0) {\n            count++;\n        }\n    }\n  \
    \  return count;\n}\nconsole.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));\n", "\t// generate an array of numbers where both the\
    \ first and last digits are odd\n\tvar odds: number[] = nums.filter(function(n)\
    \ {\n\t\treturn n >= 10 && n.toString().length > 1 && isOdd(n.toString()[0]) &&\
    \ isOdd(n.toString()[n.toString().length - 1]);\n\t});\n\treturn odds.length;\n\
    }\n", "    let count = 0;\n    for (let n of nums) {\n        let numStr = n.toString();\n\
    \        if (numStr.length > 1 && n > 10 &&\n            parseInt(numStr[0]) %\
    \ 2 !== 0 && parseInt(numStr[numStr.length - 1]) % 2 !== 0) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(specialFilter([15, -73,\
    \ 14, -15]));\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));\n", "  \
    \  return nums.filter(e => Math.abs(e) > 10 && Math.abs(e) % 2 == 1 && Math.abs(e\
    \ % 10) % 2 == 1).length;\n}\n", "    let count = 0;\n    for (let num of nums)\
    \ {\n        if (num > 10 && num % 2 === 1 && (num % 10 === 1 || num % 10 ===\
    \ 3 || num % 10 === 5 || num % 10 === 7 || num % 10 === 9)) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconsole.log(specialFilter([15, -73, 14,\
    \ -15]));\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));\n", "    let\
    \ filtered = nums.filter(n => n >= 10 && isFirstLastDigitOdd(n));\n    return\
    \ filtered.length;\n}\n", "    return nums.filter(num => Math.abs(num) > 10 &&\
    \ \n        Math.abs(num) % 10 % 2 != 0 && \n        num % Math.pow(10, Math.floor(Math.log10(Math.abs(num))))\
    \ % 2 != 0)\n        .length;\n}", "  let count = 0;\n  nums.map(num => {\n  \
    \  let first = Math.floor(num / 10);\n    let last = num % 10;\n    if (\n   \
    \   num > 10 &&\n      (first % 2 == 1 || first % 2 == -1) &&\n      (last % 2\
    \ == 1 || last % 2 == -1)\n    ) {\n      count++;\n    }\n  });\n  return count;\n\
    }\n", "    let greaterThanTen = nums.filter(v => v > 10);\n    let firstDigit\
    \ = 0;\n    let lastDigit = 0;\n    let result = 0;\n    for (let i = 0; i < greaterThanTen.length;\
    \ i++) {\n        firstDigit = parseInt(greaterThanTen[i].toString().charAt(0));\n\
    \        lastDigit = parseInt(greaterThanTen[i].toString().charAt(greaterThanTen[i].toString().length\
    \ - 1));\n        if (firstDigit % 2 !== 0 && lastDigit % 2 !== 0) {\n       \
    \     result += 1;\n        }\n    }\n    return result;\n}\nconsole.log(specialFilter([15,\
    \ -73, 14, -15]));\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));\n",
  "    let count = 0;\n    for (let num of nums) {\n        if (num > 10 && num %\
    \ 2 !== 0 && (num % 10) % 2 !== 0) {\n            count++;\n        }\n    }\n\
    \    return count;\n}", "    let count = 0;\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        if (Math.abs(nums[i]) > 10 && Math.abs(nums[i]) % 2 == 1 &&\
    \ Math.abs(nums[i] % 10) % 2 == 1) {\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\n", "    let count = 0;\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        if (firstLastDigit(nums[i]) && isGreaterThanTen(nums[i])) {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "    let special\
    \ = 0;\n    for (let i = 0; i < nums.length; i++) {\n        let first = nums[i].toString().charAt(0);\n\
    \        let last = nums[i].toString().charAt(nums[i].toString().length - 1);\n\
    \        if (nums[i] > 10 && first % 2 !== 0 && last % 2 !== 0) {\n          \
    \  special++;\n        }\n    }\n    return special;\n}\n", "    return nums.filter(n\
    \ => {\n        if (n > 10) {\n            const s = n.toString();\n         \
    \   return isOdd(s[0]) && isOdd(s[s.length - 1]);\n        }\n        return false;\n\
    \    }).length;\n}\n", "    let count = 0;\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        if (nums[i] > 10 && nums[i] % 2 != 0 && nums[0] % 2 != 0 &&\
    \ nums[nums.length - 1] % 2 != 0) {\n            count++;\n        }\n    }\n\
    \    return count;\n}\nconsole.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));", "    return nums.filter(n => (n > 10) && (n.toString()[0]\
    \ % 2 !== 0) && (n.toString()[n.toString().length - 1] % 2 !== 0)).length;\n}\n\
    console.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));\n", "    return nums.filter(x => x > 10 && Math.abs(x)\
    \ > 10).filter(x => {\n        let xStr = x.toString();\n        return Number(xStr[0])\
    \ % 2 !== 0 && Number(xStr[xStr.length - 1]) % 2 !== 0;\n    }).length;\n}\n",
  "    return nums.filter(n => {\n        let s = n.toString();\n        return n\
    \ > 10 && [1, 3, 5, 7, 9].includes(parseInt(s[0])) && [1, 3, 5, 7, 9].includes(parseInt(s[s.length\
    \ - 1]));\n    }).length;\n}\nconsole.log(specialFilter([15, -73, 14, -15]));\n\
    console.log(specialFilter([33, -2, -3, 45, 21, 109]));", "\tlet counter = 0;\n\
    \tfor (let i = 0; i < nums.length; i++) {\n\t\tif (nums[i] > 10 && nums[i] % 2\
    \ !== 0 && nums[i] % 5 !== 0) {\n\t\t\tcounter += 1;\n\t\t}\n\t}\n\treturn counter;\n\
    }\nconsole.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));", "    let result = 0;\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        if (nums[i] > 10 && getFirstDigit(nums[i]) % 2 != 0 && getLastDigit(nums[i])\
    \ % 2 != 0) {\n            result += 1;\n        }\n    }\n    return result;\n\
    }\n", "    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n     \
    \   if (nums[i] > 10 && Math.abs(nums[i]) % 2 == 1 && nums[i] > 0) {\n       \
    \     count++;\n        }\n    }\n    return count;\n}\n", "    // write your\
    \ code here\n    let result = nums.filter(element => {\n        let numToString\
    \ = element.toString();\n        let firstNum = Number(numToString[0]);\n    \
    \    let lastNum = Number(numToString[numToString.length - 1]);\n        return\
    \ element > 10 && (firstNum % 2 == 1 || firstNum % 2 == -1) && (lastNum % 2 ==\
    \ 1 || lastNum % 2 == -1);\n    });\n    return result.length;\n}\n", "    let\
    \ result = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i]\
    \ > 10 && nums[i] % 2 != 0 &&\n            nums[i].toString().charAt(0) % 2 !=\
    \ 0 &&\n            nums[i].toString().charAt(nums[i].toString().length - 1) %\
    \ 2 != 0) {\n            result++;\n        }\n    }\n    return result;\n}\n",
  "    var i = 0;\n    var counter = 0;\n    while (i < nums.length) {\n        if\
    \ (nums[i] > 10 && nums[i] % 2 !== 0 && (nums[i] % 10) % 2 !== 0) {\n        \
    \    counter++;\n        }\n        i++;\n    }\n    return counter;\n}\n", " \
    \ let count = 0;\n  for (let num of nums) {\n    if (num > 10 && num % 2 !== 0\
    \ && num % 10 % 2 !== 0) {\n      count++;\n    }\n  }\n  return count;\n}\nconsole.log(specialFilter([15,\
    \ -73, 14, -15]));\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));\n",
  "    return nums.filter(n => n > 10 && n % 2 != 0 && (n % 10) % 2 != 0).length;\n\
    }\n", "    return nums.filter(x => isGreaterThan10(x) && isFirstAndLastDigitOdd(x)).length;\n\
    }\n", "    // let's return our accumulator\n    return nums.reduce((accumulator,\
    \ element) => {\n        // if the number is greater than 10 and both first and\
    \ last digits are odd\n        if (element > 10 &&\n            isOdd(getFirstDigit(element))\
    \ &&\n            isOdd(getLastDigit(element))) {\n            // let's increment\
    \ the accumulator\n            return accumulator + 1;\n        } else {\n   \
    \         // otherwise let's return the accumulator as is\n            return\
    \ accumulator;\n        }\n    }, 0);\n}", "  return nums.filter(x =>\n    x >\
    \ 10 && (\n      x % 10 === 1 ||\n      x % 10 === 3 ||\n      x % 10 === 5 ||\n\
    \      x % 10 === 7 ||\n      x % 10 === 9\n    ) && (\n      Math.floor(x / 10)\
    \ === 1 ||\n      Math.floor(x / 10) === 3 ||\n      Math.floor(x / 10) === 5\
    \ ||\n      Math.floor(x / 10) === 7 ||\n      Math.floor(x / 10) === 9\n    )\n\
    \  ).length;\n}\n", "    let count = 0;\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        if (Math.abs(nums[i]) > 10 && nums[i] % 2 != 0 && Math.abs(nums[i]\
    \ % 10) % 2 != 0) {\n            count++;\n        }\n    }\n    return count;\n\
    }", "    let counter = 0;\n    for (let i = 0; i < nums.length; i++) {\n     \
    \   if (nums[i] > 10 && (nums[i] % 2 == 1 || nums[i] % 2 == -1) && (nums[0] %\
    \ 2 == 1 || nums[0] % 2 == -1)) {\n            counter++;\n        }\n    }\n\
    \    return counter;\n}\nconsole.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));\n", "    var count = 0;\n    for (var i = 0; i < nums.length;\
    \ i++) {\n        if (nums[i] > 10 && \n            (nums[i] % 10) % 2 != 0 &&\n\
    \            (nums[i] % 100) / 10 % 2 != 0)\n            count++;\n    }\n   \
    \ return count;\n}\n", "    let sum = 0;\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        let isElemet = 10;\n        if (nums[i] > isElemet) {\n    \
    \        let number = nums[i];\n            let lastDigit = number % 10;\n   \
    \         while (number > 0) {\n                number = Math.floor(number / 10);\n\
    \            }\n            let firstDigit = number;\n            if (firstDigit\
    \ % 2 != 0 && lastDigit % 2 != 0) {\n                sum++;\n            }\n \
    \       }\n    }\n    return sum;\n}", "    let counter = 0;\n    for (let i =\
    \ 0; i < nums.length; i++) {\n        if (nums[i] > 10 && nums[i] % 2 === 1 &&\
    \ Math.abs(nums[i]) % 10 === 1) {\n            counter++;\n        }\n    }\n\
    \    return counter;\n}\n", "    return nums.filter(x => x > 10 && (x % 10) %\
    \ 2 !== 0 && Math.floor(x / 10) % 2 !== 0).length;\n}\nconsole.log(specialFilter([15,\
    \ -73, 14, -15]));\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));", " \
    \   return nums.filter(num => isOdd(num) && isOdd(Math.floor(num / 10))).length;\n\
    }", "    let result = 0;\n    for (let i = 0; i < nums.length; i++) {\n      \
    \  if (nums[i] % 2 != 0 && nums[i] > 10) {\n            let num = nums[i];\n \
    \           let firstDigit = num % 10;\n            let lastDigit = 0;\n     \
    \       while (num >= 10) {\n                num = Math.floor(num / 10);\n   \
    \         }\n            lastDigit = num;\n            if (firstDigit % 2 != 0\
    \ && lastDigit % 2 != 0) {\n                result++;\n            }\n       \
    \ }\n    }\n    return result;\n}\nconsole.log(specialFilter([15, -73, 14, -15]));\n\
    console.log(specialFilter([33, -2, -3, 45, 21, 109]));", "    return nums.filter(isGreaterThan10).filter(hasOddDigits).length;\n\
    }\n", "    var sum = 0;\n    nums.forEach(function (number) {\n        if (number\
    \ > 10 && number < 100 &&\n            Math.floor(number / 10) % 2 !== 0 &&\n\
    \            number % 10 % 2 !== 0) {\n            sum += 1;\n        }\n    });\n\
    \    return sum;\n}\nvar nums = [15, -73, 14, -15];\nconsole.log(specialFilter(nums));\n\
    var nums = [33, -2, -3, 45, 21, 109];\nconsole.log(specialFilter(nums));", " \
    \   return nums.filter(num => Math.abs(num) > 10 && \n        Math.abs(num) %\
    \ 10 % 2 !== 0 && \n        Math.floor(Math.abs(num) / 10) % 2 !== 0).length;\n\
    }\n", "    var counter: number = 0;\n    for (var i: number = 0; i < nums.length;\
    \ i++) {\n        if (nums[i] > 10 && nums[i] % 2 != 0 && (nums[i] % 10) % 2 !=\
    \ 0) {\n            counter++;\n        }\n    }\n    return counter;\n}\nconsole.log(specialFilter([15,\
    \ -73, 14, -15]));\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));\n",
  "\tlet count = 0;\n\tfor (let num of nums) {\n\t\tif (num > 10 && num % 2 != 0 &&\
    \ (num % 10) % 2 != 0) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", " \
    \   return nums.filter(n => {\n        const str = String(n);\n        const first\
    \ = parseInt(str[0]);\n        const last = parseInt(str[str.length - 1]);\n \
    \       return n > 10 && first % 2 !== 0 && last % 2 !== 0;\n    }).length;\n\
    }\n", "    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n     \
    \   if (nums[i] > 10 && nums[i] % 2 == 1 && Math.abs(nums[i]) % 10 == 1) {\n \
    \           count++;\n        }\n    }\n    return count;\n}\n", "    let result\
    \ = 0;\n    for (let num of nums) {\n        if (num > 10 && num % 2 === 1 &&\
    \ (num % 10) % 2 === 1) {\n            result += 1;\n        }\n    }\n    return\
    \ result;\n}\n", "    let counter = 0;\n    for (let num of nums) {\n        let\
    \ firstDigit = Math.floor(num / 10);\n        let lastDigit = num % 10;\n    \
    \    if (firstDigit % 2 !== 0 && lastDigit % 2 !== 0 && num > 10) {\n        \
    \    counter += 1;\n        }\n    }\n    return counter;\n}\nconsole.log(specialFilter([15,\
    \ -73, 14, -15])); //1\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));\
    \ //2\n\n", "    let count = 0;\n    for (let num of nums) {\n        if (num\
    \ > 10 && num.toString().length > 1 && (num.toString()[0] % 2 !== 0 && num.toString()[num.toString().length\
    \ - 1] % 2 !== 0)) {\n            count++;\n        }\n    }\n    return count;\n\
    }\nconsole.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));\n", "    let count = 0;\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        if (nums[i] > 10 && (nums[i] % 2 == 1 || nums[i] % 2 == -1)\
    \ && (nums[i] % 10 == 1 || nums[i] % 10 == 3 || nums[i] % 10 == 5 || nums[i] %\
    \ 10 == 7 || nums[i] % 10 == 9)) {\n            count++;\n        }\n    }\n \
    \   return count;\n}", "    let c = 0;\n    nums.forEach(function (value) {\n\
    \        if (value > 10 && value % 2 != 0 && value % 10 != 0) {\n            c++;\n\
    \        }\n    });\n    return c;\n}\nconsole.log(specialFilter([15, -73, 14,\
    \ -15]));\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));", "  return\
    \ nums.filter(function(num) {\n    if (num > 10) {\n      let firstDigit = num.toString().split('')[0];\n\
    \      let lastDigit = num.toString().split('')[num.toString().length - 1];\n\
    \      return (firstDigit === '1' || firstDigit === '3' || firstDigit === '5'\
    \ || firstDigit === '7' || firstDigit === '9') && (lastDigit === '1' || lastDigit\
    \ === '3' || lastDigit === '5' || lastDigit === '7' || lastDigit === '9');\n \
    \   }\n  }).length;\n}\n", "    let res = 0;\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        let num = nums[i];\n        if (num > 10 && num % 2 != 0 &&\
    \ Math.abs(num) > 10) {\n            let cur = num;\n            let dig1 = num\
    \ % 10;\n            let dig2 = Math.floor(cur / 10) % 10;\n            if (dig1\
    \ % 2 != 0 && dig2 % 2 != 0) {\n                res++;\n            }\n      \
    \  }\n    }\n    return res;\n}\n", "    // let count = 0;\n    // for (let i\
    \ = 0; i < nums.length; i++) {\n    //     if (nums[i] > 10 && nums[i] % 2 !==\
    \ 0 && nums[i] % 10 % 2 !== 0) {\n    //         count++;\n    //     }\n    //\
    \ }\n    // return count;\n    return nums.filter(function (item) {\n        return\
    \ item > 10 && item % 2 !== 0 && item % 10 % 2 !== 0;\n    }).length;\n}\n", " \
    \   let result = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i]\
    \ > 10 && firstDigit(nums[i]) % 2 != 0 && lastDigit(nums[i]) % 2 != 0) {\n   \
    \         result += 1;\n        }\n    }\n    return result;\n}\n", "    return\
    \ nums.filter(n => n > 10 && n.toString().split('')[0] % 2 && n.toString().split('')[n.toString().length\
    \ - 1] % 2).length;\n}\n", "    var result = 0;\n    for (var _i = 0, nums_1 =\
    \ nums; _i < nums_1.length; _i++) {\n        var n = nums_1[_i];\n        if (n\
    \ > 10 && n % 2 == 1 && (n % 10) % 2 == 1) {\n            result++;\n        }\n\
    \    }\n    return result;\n}\nconsole.log(specialFilter([15, -73, 14, -15]));\n\
    console.log(specialFilter([33, -2, -3, 45, 21, 109]));\n", "    let count = 0;\n\
    \    for (let i = 0; i < nums.length; i++) {\n        if (firstDigitIsOdd(nums[i])\
    \ && lastDigitIsOdd(nums[i]) && nums[i] > 10) {\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n", "    var counter: number = 0;\n    for (var\
    \ i: number = 0; i < nums.length; i++) {\n        var currentNum: number = nums[i];\n\
    \        if (currentNum > 10 && isOdd(currentNum % 10) && isOdd(currentNum % 10))\
    \ {\n            counter++;\n        }\n    }\n    return counter;\n}\n", "  \
    \  let counter = 0;\n    for (let i = 0; i < nums.length; i++) {\n        let\
    \ num = nums[i];\n        if (num > 10 && num % 2 != 0 && num % 5 != 0) {\n  \
    \          counter++;\n        }\n    }\n    return counter;\n}\n", "  return\
    \ nums.filter(n => n > 10 && n % 2 === 1 && (Math.floor(n / 10) % 2 === 1 || n\
    \ % 10 === 1)).length;\n}\nconsole.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));\n", "    let count = 0;\n    for (let num of nums) {\n\
    \        if (num > 10 && num % 2 !== 0 && Math.abs(num) % 10 % 2 !== 0) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\nconsole.log(specialFilter([15,\
    \ -73, 14, -15]));\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));", " \
    \ return nums.filter(isGreaterThan10)\n            .filter(hasOddDigits)\n   \
    \         .length;\n}\n", "    return nums.filter(n => {\n        const s = n.toString();\n\
    \        return n > 10 && (s[0] % 2 === 1 && s[s.length - 1] % 2 === 1);\n   \
    \ }).length;\n}\n", "    var count = 0;\n    for (var i = 0; i < nums.length;\
    \ i++) {\n        if (nums[i] > 10 && (nums[i] % 2 != 0) && (nums[i] % 5 != 0))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(specialFilter([15,\
    \ -73, 14, -15]));\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));\n",
  "\treturn nums.filter(function(item) {\n\t\treturn (item > 10) && (item % 2 !==\
    \ 0) && (item % Math.abs(item) > 0);\n\t}).length;\n}\nconsole.log(specialFilter([15,\
    \ -73, 14, -15]));\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));", " \
    \   // your code goes here\n    let count: number = 0;\n    for (let index = 0;\
    \ index < nums.length; index++) {\n        if (nums[index] > 10) {\n         \
    \   let first = nums[index].toString()[0];\n            let last = nums[index].toString()[nums[index].toString().length\
    \ - 1];\n            if (first % 2 !== 0 && last % 2 !== 0) {\n              \
    \  count++;\n            }\n        }\n    }\n    return count;\n}", "    return\
    \ nums.filter(n => Math.abs(n) > 10 && Math.abs(n) % 2 == 1 && Math.abs(n) % 10\
    \ == 1).length;\n}\nconsole.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));\n", "    let count = 0;\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        if (nums[i] > 10 && Math.abs(nums[i]) % 2 == 1 && Math.abs(nums[i]\
    \ % 10) % 2 == 1) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n", "    return nums.filter(\n        (value) =>\n            value > 10 &&\n\
    \            (value.toString().charAt(0) % 2 !== 0 &&\n                value.toString().charAt(value.toString().length\
    \ - 1) % 2 !== 0)\n    ).length;\n}\n", "  // your code here\n}\n", "    let counter\
    \ = 0;\n    for (let index = 0; index < nums.length; index++) {\n        const\
    \ num = nums[index];\n        if (num < 10) {\n            continue;\n       \
    \ }\n        if (num % 2 === 0) {\n            continue;\n        }\n        if\
    \ (num % 10 % 2 === 0) {\n            continue;\n        }\n        counter++;\n\
    \    }\n    return counter;\n}\n", "    let count = 0;\n    for (let i = 0; i\
    \ < nums.length; i++) {\n        if (nums[i] > 10 && nums[i] % 2 !== 0 && nums[i]\
    \ % 10 !== 0) {\n            count++;\n        }\n    }\n    return count;\n}\n",
  "  let c: number = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i]\
    \ > 10 && (nums[i] % 2 != 0) && (nums[i] % 10 != 0)) {\n      c++;\n    }\n  }\n\
    \  return c;\n}\nconsole.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));\n", "    return nums.filter(n => n > 10 && String(n).split('').length\
    \ > 1 && String(n).split('')[0] % 2 != 0 && String(n).split('')[String(n).split('').length\
    \ - 1] % 2 != 0).length;\n}\nconsole.log(specialFilter([15, -73, 14, -15]));\n\
    console.log(specialFilter([33, -2, -3, 45, 21, 109]));\n", "    let count = 0;\n\
    \    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 10 && firstLastDigitOdd(nums[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}", "    let result\
    \ = 0;\n    for (let num of nums) {\n        if (num > 10 && num % 2 == 1 && num\
    \ % 10 == 1) {\n            result += 1;\n        }\n    }\n    return result;\n\
    }\n", "    let count = 0;\n    for (let num of nums) {\n        let firstDigit:\
    \ string = num.toString().charAt(0);\n        let lastDigit: string = num.toString().charAt(num.toString().length\
    \ - 1);\n        if (num > 10 && (firstDigit === '1' || firstDigit === '3' ||\
    \ firstDigit === '5' || firstDigit === '7' || firstDigit === '9') && (lastDigit\
    \ === '1' || lastDigit === '3' || lastDigit === '5' || lastDigit === '7' || lastDigit\
    \ === '9')) {\n            count += 1;\n        }\n    }\n    return count;\n\
    }\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));\n\n", "  return nums.filter(function(num){\n\
    \    var firstDigit = num % 10;\n    var lastDigit = Math.floor(num / 10);\n \
    \   if (num > 10 && (firstDigit % 2 !== 0) && (lastDigit % 2 !== 0)){\n      return\
    \ num;\n    }\n  }).length;\n}\n\n", "    let a = nums.filter(n => n > 10);\n\
    \    let b = a.filter(n => n % 2 != 0);\n    let c = b.filter(n => n < -10 ? (n\
    \ % 10) % 2 != 0 : (n % 100) % 2 != 0);\n    return c.length;\n}", "  return nums.filter(filter_odd_end_digits_and_10).length;\n\
    }\n", "    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n     \
    \   let digit = Math.abs(nums[i]);\n        if (nums[i] > 10 && digit % 2 != 0\
    \ &&\n            (digit % 10) % 2 != 0 && (digit % 100) % 2 != 0) {\n       \
    \     count++;\n        }\n    }\n    return count;\n}\n", "    return nums.filter(x\
    \ => (x > 10) && (getFirstDigit(x) % 2 != 0) && (getLastDigit(x) % 2 != 0)).length;\n\
    }\n", "    return nums.filter(n => n > 10 && (Math.abs(n) % 10) % 2 == 1 && Math.floor(Math.abs(n)\
    \ / 10) % 2 == 1).length;\n}\n", "    let counter = 0;\n    for (let i = 0; i\
    \ < nums.length; i++) {\n        if (nums[i] > 10 && Math.abs(nums[i]) % 2 !==\
    \ 0 && Math.abs(nums[i] % 10) % 2 !== 0) {\n            counter++;\n        }\n\
    \    }\n    return counter;\n}\n\n\n", "    let count = 0;\n    for (let i = 0;\
    \ i < nums.length; i++) {\n        if (nums[i] >= 10 && nums[i] % 2 == 1 && nums[i]\
    \ % 10 % 2 == 1) {\n            count++;\n        }\n    }\n    return count;\n\
    }\nconsole.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));\n", "  return nums.filter(\n    (num) => num > 10 &&\n\
    \    num.toString().charAt(0) % 2 !== 0 &&\n    num.toString().charAt(num.toString().length\
    \ - 1) % 2 !== 0\n  ).length;\n}\nconsole.log(specialFilter([15, -73, 14, -15]));\n\
    console.log(specialFilter([33, -2, -3, 45, 21, 109]));\n", "  let result = 0;\n\
    \  for (let i = 0; i < nums.length; i++) {\n    let num = nums[i];\n    let first\
    \ = num % 10;\n    let last = Math.floor(num / 10);\n    if (num > 10 && (first\
    \ % 2 !== 0) && (last % 2 !== 0)) {\n      result++;\n    }\n  }\n  return result;\n\
    }", "  return nums.filter(num => {\n    const strNum = num.toString();\n    return\
    \ num > 10 && isOdd(strNum[0]) && isOdd(strNum[strNum.length - 1]);\n  }).length;\n\
    }\n", "    return nums.filter(n => {\n        let firstDigit = Math.floor(n /\
    \ 10);\n        let lastDigit = n % 10;\n        return n > 10 && firstDigit %\
    \ 2 === 1 && lastDigit % 2 === 1;\n    }).length;\n}\n", "    let specialNumbers\
    \ = nums.filter(function (num) {\n        return num % 2 != 0 && num >= 10 &&\
    \ num < 100 && num % 10 != 0;\n    });\n    return specialNumbers.length;\n}\n\
    console.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));\n", "    let result = 0;\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        if (nums[i] > 10 && isFirstAndLastDigitOdd(nums[i])) {\n   \
    \         result++;\n        }\n    }\n    return result;\n}\n", "    let count\
    \ = 0;\n    nums.forEach(function (num) {\n        if (num > 10 && isOdd(num)\
    \ && isOdd(firstDigit(num)) && isOdd(lastDigit(num))) {\n            count +=\
    \ 1;\n        }\n    });\n    return count;\n}\n", "    let result = 0;\n    for\
    \ (let num of nums) {\n        if (num > 10 && (num % 10) % 2 === 1 && (num /\
    \ 10 ** Math.floor(Math.log10(num))) % 2 === 1) {\n            result++;\n   \
    \     }\n    }\n    return result;\n}\n", "    return nums.filter(num => num >\
    \ 10 && num % 2 === 1).length;\n}\n\n", "    // This function is to check if the\
    \ first and last digits of a number are odd\n    function firstAndLastDigitsAreOdd(num:\
    \ number): boolean {\n        return num % 2 !== 0 && (num % 10) % 2 !== 0;\n\
    \    }\n\n    return nums.filter(function (num) {\n        return num > 10 &&\
    \ firstAndLastDigitsAreOdd(num);\n    }).length;\n}\n", "\treturn nums.filter(function(num)\
    \ {\n\t\tvar firstDigit = num.toString().split('')[0];\n\t\tvar lastDigit = num.toString().split('')[num.toString().length\
    \ - 1];\n\t\treturn num > 10 && firstDigit % 2 === 1 && lastDigit % 2 === 1;\n\
    \t}).length;\n}\n", "    let counter = 0;\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        if (isGreaterThanTen(nums[i]) && isBothFirstAndLastDigitsOdd(nums[i]))\
    \ {\n            counter++;\n        }\n    }\n    return counter;\n}\n", "  \
    \  return nums.filter(num => {\n        const str = num.toString();\n        const\
    \ first = Number(str[0]);\n        const last = Number(str[str.length - 1]);\n\
    \        return num > 10 && first % 2 === 1 && last % 2 === 1;\n    }).length;\n\
    }\n\ntest('specialFilter - 1', specialFilterTest(\n    [15, -73, 14, -15],\n \
    \   1\n));\n\ntest('specialFilter - 2', specialFilterTest(\n    [33, -2, -3, 45,\
    \ 21, 109],\n    2\n));\n", "    return nums.filter(function (n) {\n        return\
    \ n > 10 && n % 2 == 1 && firstDigit(n) % 2 == 1 && lastDigit(n) % 2 == 1;\n \
    \   }).length;\n}\n", "    let result = 0;\n    for (let i: number = 0; i < nums.length;\
    \ i++) {\n        if (nums[i] > 10 && isOdd(nums[i] % 10) && isOdd(Math.floor(nums[i]\
    \ / 10))) {\n            result++;\n        }\n    }\n    return result;\n}\n",
  "  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] >\
    \ 10 && nums[i] % 2 !== 0 && nums[i] % 10 % 2 !== 0) {\n      count++;\n    }\n\
    \  }\n  return count;\n}\nconsole.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));\n", "  let result = 0;\n  for (let i = 0; i < nums.length;\
    \ i++) {\n    if (nums[i] > 10 && nums[i] % 2 === 1 && nums[i] % 10 === 1) {\n\
    \      result++;\n    }\n  }\n  return result;\n}\n", "    let count = 0;\n  \
    \  nums.forEach(n => {\n        if (n > 10 && n % 2 !== 0 && (n.toString()[0]\
    \ === '1' || n.toString()[0] === '3' || n.toString()[0] === '5' || n.toString()[0]\
    \ === '7' || n.toString()[0] === '9') && (n.toString()[n.toString().length - 1]\
    \ === '1' || n.toString()[n.toString().length - 1] === '3' || n.toString()[n.toString().length\
    \ - 1] === '5' || n.toString()[n.toString().length - 1] === '7' || n.toString()[n.toString().length\
    \ - 1] === '9')) {\n            count++;\n        }\n    });\n    return count;\n\
    }\nconsole.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));\n", "    let sum = 0;\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        let firstDigit = Math.floor(nums[i] / 10);\n        let lastDigit\
    \ = nums[i] % 10;\n        if (nums[i] > 10 && firstDigit % 2 != 0 && lastDigit\
    \ % 2 != 0) {\n            sum++;\n        }\n    }\n    return sum;\n}\nconsole.log(specialFilter([15,\
    \ -73, 14, -15]));\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));\n",
  "    let a: number = 0;\n    for (let i = 0; i < nums.length; i++) {\n        let\
    \ firstDigit: number = nums[i] % 10;\n        let lastDigit: number = nums[i];\n\
    \        while (lastDigit > 10) {\n            lastDigit = Math.floor(lastDigit\
    \ / 10);\n        }\n        if (nums[i] > 10 && firstDigit % 2 !== 0 && lastDigit\
    \ % 2 !== 0) {\n            a++;\n        }\n    }\n    return a;\n}\nconsole.log(specialFilter([15,\
    \ -73, 14, -15]));\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));", " \
    \   let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i]\
    \ > 10 && isOdd(first(nums[i])) && isOdd(last(nums[i]))) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "  let counter = 0;\n  for (let i\
    \ = 0; i < nums.length; i++) {\n    if (nums[i] > 10 && (nums[i] % 2 == 1 || nums[i]\
    \ % 2 == -1)) {\n      counter++;\n    }\n  }\n  return counter;\n}\n", "    let\
    \ count = 0;\n    nums.filter(num => num > 10 && num % 2 === 1 &&\n        Math.floor(num\
    \ / 10) % 2 === 1 && num % 10 === 1 ||\n        Math.floor(num / 10) % 2 === 1\
    \ && num % 10 === 3 ||\n        Math.floor(num / 10) % 2 === 1 && num % 10 ===\
    \ 5 ||\n        Math.floor(num / 10) % 2 === 1 && num % 10 === 7 ||\n        Math.floor(num\
    \ / 10) % 2 === 1 && num % 10 === 9)\n        .forEach(num => count++);\n    return\
    \ count;\n}\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));\n", "    let\
    \ count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i]\
    \ > 10 && (isOdd(nums[i]) && isOdd(nums[i] % 10))) {\n            count++;\n \
    \       }\n    }\n    return count;\n}\n", "  return nums.filter(n => {\n    const\
    \ lastDigit = n % 10;\n    const firstDigit = n;\n    while (firstDigit >= 10)\
    \ {\n      firstDigit = firstDigit / 10;\n    }\n    return n > 10 && lastDigit\
    \ % 2 === 1 && firstDigit % 2 === 1;\n  }).length;\n}\n", "    let result = 0;\n\
    \    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 10 && nums[i]\
    \ % 2 == 1 && (nums[i] % 10) % 2 == 1) {\n            result += 1;\n        }\n\
    \    }\n    return result;\n}\n\n\n", "  var count = 0;\n  for (var i = 0; i <\
    \ nums.length; i++) {\n    if (nums[i] > 10 && Math.abs(nums[i]) % 2 == 1 && Math.abs(nums[i]\
    \ % 10) % 2 == 1) {\n      count++;\n    }\n  }\n  return count;\n}\n", "    return\
    \ nums.filter(el => el > 10 && (el % 10) % 2 !== 0 && (Math.floor(el / 10) % 10)\
    \ % 2 !== 0).length;\n}\n", "  let filtered = nums.filter(num => {\n    if (num\
    \ % 2 !== 0 && num >= 10) {\n      if (num.toString().length > 1) {\n        if\
    \ (\n          num.toString().charAt(0) % 2 !== 0 &&\n          num.toString().charAt(num.toString().length\
    \ - 1) % 2 !== 0\n        ) {\n          return num;\n        }\n      }\n   \
    \ }\n  });\n  return filtered.length;\n}\nconsole.log(specialFilter([33, -2, -3,\
    \ 45, 21, 109]));", "    return nums.filter(n => firstDigit(n) % 2 === 1 && \n\
    \        lastDigit(n) % 2 === 1 && n > 10).length;\n}", "    let count = 0;\n\
    \    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 10 && nums[i]\
    \ % 2 == 1 && nums[i] % 10 == 1) {\n            count++;\n        }\n    }\n \
    \   return count;\n}\n\n", "    let filteredArray = nums.filter(number => {\n\
    \        let firstDigit = +number.toString()[0];\n        let lastDigit = +number.toString()[number.toString().length\
    \ - 1];\n        return number > 10 && (firstDigit % 2 !== 0) && (lastDigit %\
    \ 2 !== 0);\n    });\n    return filteredArray.length;\n}\n", "    let count =\
    \ 0;\n    nums.forEach(num => {\n        const numStr = num.toString();\n    \
    \    if (num > 10) {\n            if (numStr[0] % 2 !== 0 && numStr[numStr.length\
    \ - 1] % 2 !== 0) {\n                count++;\n            }\n        }\n    });\n\
    \    return count;\n}\nconsole.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));\n", "  let counter = 0;\n  for (let num of nums) {\n\
    \    if (num > 10 && num % 2 != 0 && Math.floor(num / 10) % 2 != 0) {\n      counter++;\n\
    \    }\n  }\n  return counter;\n}\n", "    let count = 0;\n    for (let num of\
    \ nums) {\n        if (num > 10 && num % 2 != 0 && num % 10 != 0) {\n        \
    \    count++;\n        }\n    }\n    return count;\n}\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));", "    let result = 0;\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        if (nums[i] > 10 && nums[i] % 2 !== 0 && nums[i] % 10 !== 0)\
    \ {\n            result++;\n        }\n    }\n    return result;\n}\n", "\tlet\
    \ numberGreaterThan10: number = 0;\n\tfor (let num of nums) {\n\t\tif (num > 10)\
    \ {\n\t\t\tif (num % 2 !== 0) {\n\t\t\t\tlet numString: string = num.toString();\n\
    \t\t\t\tif (\n\t\t\t\t\tparseInt(numString[0]) % 2 !== 0 &&\n\t\t\t\t\tparseInt(numString[numString.length\
    \ - 1]) % 2 !== 0\n\t\t\t\t) {\n\t\t\t\t\tnumberGreaterThan10++;\n\t\t\t\t}\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn numberGreaterThan10;\n}\n", "    let count = 0;\n\
    \    for (let i = 0; i < nums.length; i++) {\n        let num = nums[i];\n   \
    \     if (num > 10 && getFirst(num) % 2 != 0 && getLast(num) % 2 != 0) {\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n", "    return nums.filter(n\
    \ => {\n        let firstDigit = n % 10;\n        let lastDigit = n % Math.pow(10,\
    \ Math.floor(Math.log10(n)));\n        return n > 10 && firstDigit % 2 && lastDigit\
    \ % 2;\n    }).length;\n}\n", "    // TODO: Implement this function\n    return\
    \ 0;\n}\nconsole.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));", "    let filtered = nums.filter(num => (num > 10)\
    \ && (isLastAndFirstDigitOdd(num)));\n    return filtered.length;\n}\n", "   \
    \ let sum: number = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if\
    \ (nums[i] > 10 && (nums[i] % 2 == 1) && (nums[0] % 2 == 1) && (nums[nums.length\
    \ - 1] % 2 == 1)) {\n            sum++;\n        }\n    }\n    return sum;\n}\n\
    console.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));\n", "  let newNum = nums.filter(num => {\n    if (num\
    \ > 10) {\n      let numString = num.toString();\n      if (\n        numString[0]\
    \ % 2 === 1 &&\n        numString[numString.length - 1] % 2 === 1\n      ) {\n\
    \        return num;\n      }\n    }\n  });\n  return newNum.length;\n}\n", " \
    \   let count = 0;\n    for (let n of nums) {\n        if (n > 10 && n % 2 ===\
    \ 1 && n % 10 === 1) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n", "    let newArray: number[] = [];\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        if (nums[i] > 10 && nums[i] % 2 != 0 && (nums[i] % 10) % 2 !=\
    \ 0) {\n            newArray.push(nums[i]);\n        }\n    }\n    return newArray.length;\n\
    }\nconsole.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));\n", "    return nums.filter(function (num) {\n     \
    \   return num > 10 && num % 2 !== 0 && num % 10 % 2 !== 0;\n    }).length;\n\
    }\n", "    let oddGreaterThan10 = 0;\n    for (let i = 0; i < nums.length; i++)\
    \ {\n        let firstDigit = Math.abs(nums[i]) % 10;\n        let lastDigit =\
    \ Math.abs(nums[i]) / 10;\n        if (lastDigit < 1) {\n            lastDigit\
    \ = firstDigit;\n        } else {\n            lastDigit = Math.floor(lastDigit)\
    \ % 10;\n        }\n        if (nums[i] > 10 && firstDigit % 2 !== 0 && lastDigit\
    \ % 2 !== 0) {\n            oddGreaterThan10++;\n        }\n    }\n    return\
    \ oddGreaterThan10;\n}\n", "    let numOfElements = 0;\n    for (let i = 0; i\
    \ < nums.length; i++) {\n        let num = nums[i];\n        if (num > 10 && num\
    \ % 2 === 1 && Math.floor(num / 10) % 2 === 1) {\n            numOfElements++;\n\
    \        }\n    }\n    return numOfElements;\n}\n", "\tlet counter = 0;\n\tfor\
    \ (let i = 0; i < nums.length; i++) {\n\t\tlet num = nums[i];\n\t\tif (num > 10\
    \ && num.toString().charAt(0) % 2 != 0 && num.toString().charAt(num.toString().length\
    \ - 1) % 2 != 0) {\n\t\t\tcounter++;\n\t\t}\n\t}\n\treturn counter;\n}\n", " \
    \   // YOUR CODE GOES HERE\n    let numGreater = 0;\n    for (let i: number =\
    \ 0; i < nums.length; i++) {\n        if (nums[i] > 10) {\n            if (nums[i]\
    \ % 2 != 0) {\n                if (nums[i] % 10 % 2 != 0) {\n                \
    \    numGreater++;\n                }\n            }\n        }\n    }\n    return\
    \ numGreater;\n}\n", "  let count = 0;\n  nums.forEach(number => {\n    if (number\
    \ > 10 && number % 2 !== 0 &&\n      number.toString().length > 1 &&\n      parseInt(number.toString()[0])\
    \ % 2 !== 0 &&\n      parseInt(number.toString()[number.toString().length - 1])\
    \ % 2 !== 0) {\n      count++;\n    }\n  });\n  return count;\n}\n", "    let\
    \ count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i]\
    \ > 10 && (Math.floor(nums[i] / 10) % 2 != 0) && (nums[i] % 2 != 0)) {\n     \
    \       count++\n        }\n    }\n    return count;\n}\nconsole.log(specialFilter([15,\
    \ -73, 14, -15]));\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));\n",
  "  let counter = 0;\n  for (let i = 0; i < nums.length; i++) {\n    let firstNum\
    \ = nums[i].toString().charAt(0);\n    let lastNum = nums[i].toString().charAt(nums[i].toString().length\
    \ - 1);\n    let firstOdd = firstNum % 2 !== 0;\n    let lastOdd = lastNum % 2\
    \ !== 0;\n    if (nums[i] > 10 && firstOdd && lastOdd) {\n      counter += 1;\n\
    \    }\n  }\n  return counter;\n}\n", "  // implementation here ...\n  return\
    \ -1;\n}\n", "  let result = 0;\n  for (let i = 0; i < nums.length; i++) {\n \
    \   if (nums[i] > 10 && Math.abs(nums[i]) % 2 === 1 && Math.abs(nums[i] % 10)\
    \ % 2 === 1) {\n      result++;\n    }\n  }\n  return result;\n}\nconsole.log(specialFilter([15,\
    \ -73, 14, -15]));\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));\n",
  "    return nums.filter(n => ((n > 10) && (firstDigit(n) % 2 !== 0) && (lastDigit(n)\
    \ % 2 !== 0))).length;\n}\n", "    return nums.filter(num => {\n        return\
    \ isOdd(num % 10) && isOdd(num / (10 ** (Math.floor(Math.log10(num))))) && num\
    \ > 10;\n    }).length;\n}\n", "    let count = 0;\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        let num = nums[i];\n        if (num > 10 && num % 2 == 1 &&\
    \ (num % 10) % 2 == 1) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n", "    let count = 0;\n    for (let num of nums) {\n        if (num > 10 &&\
    \ (num % 10) % 2 === 1 && (Math.floor(num / 10) % 10) % 2 === 1) {\n         \
    \   count++;\n        }\n    }\n    return count;\n}\n", "    let count = 0;\n\
    \    for (let num of nums) {\n        if (num > 10 && num % 2 !== 0 && num % 10\
    \ % 2 !== 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\
    \nconsole.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));", "    let count = 0;\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        if (nums[i] > 10 && (nums[i] % 2 !== 0) && (nums[i] % 10 % 2\
    \ !== 0)) {\n            count++\n        }\n    }\n    return count;\n}\n", " \
    \   let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i]\
    \ > 10 && nums[i] % 2 == 1 && nums[0] % 2 == 1 && nums[nums.length - 1] % 2 ==\
    \ 1) {\n            count++;\n        }\n    }\n    return count;\n}\nlet numList:\
    \ number[] = [15, -73, 14, -15];\nconsole.log(specialFilter(numList));\n", " \
    \   let counter = 0;\n    for (let i = 0; i < nums.length; i++) {\n        let\
    \ element = nums[i];\n        if (element > 10) {\n            let elStr = element.toString();\n\
    \            if (elStr[0] % 2 !== 0 && elStr[elStr.length - 1] % 2 !== 0) {\n\
    \                counter++;\n            }\n        }\n    }\n    return counter;\n\
    }\n", "    let result = 0;\n    for (let i = 0; i < nums.length; i++) {\n    \
    \    let first = Math.abs(nums[i]).toString().split('')[0];\n        let last\
    \ = Math.abs(nums[i]).toString().split('')[Math.abs(nums[i]).toString().split('').length\
    \ - 1];\n        if (nums[i] > 10 && first % 2 != 0 && last % 2 != 0) {\n    \
    \        result++;\n        }\n    }\n    return result;\n}\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));\n", "    let count = 0;\n    for (let num of nums) {\n\
    \        if (num > 10 && num % 2 !== 0 && Math.floor(num / 10) % 2 !== 0) {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "    let count\
    \ = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 10\
    \ && nums[i] % 2 == 1 && nums[0] % 2 == 1 && nums[nums.length - 1] % 2 == 1) {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    let count\
    \ = 0;\n    for (let num of nums) {\n        if (num > 10 && num % 2 !== 0 &&\
    \ num % 10 % 2 !== 0) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n", "    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n     \
    \   if (nums[i] > 10 && nums[i] % 2 !== 0 && nums[i] % 10 % 2 !== 0) {\n     \
    \       count++;\n        }\n    }\n    return count;\n}\nconsole.log(specialFilter([15,\
    \ -73, 14, -15]));\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));\n",
  "    return nums.filter(num => num > 10 && num.toString().split('')[0] % 2 !== 0\
    \ && num.toString().split('')[num.toString().length - 1] % 2 !== 0).length;\n\
    }\n", "    let result = 0;\n    for (let i = 0; i < nums.length; i++) {\n    \
    \    if (nums[i] > 10 && nums[i] % 2 == 1 && (nums[i] % 10) % 2 == 1) {\n    \
    \        result++;\n        }\n    }\n    return result;\n}\n", "  let count =\
    \ 0;\n  for (let num of nums) {\n    if (num > 10 && num.toString()[0] % 2 !==\
    \ 0 && num.toString()[num.toString().length - 1] % 2 !== 0) {\n      count++;\n\
    \    }\n  }\n  return count;\n}\nconsole.log(specialFilter([15, -73, 14, -15]));\n\
    console.log(specialFilter([33, -2, -3, 45, 21, 109]));\n", "    let result = 0;\n\
    \    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[0] % 2 != 0 && nums[nums.length - 1] % 2 != 0) {\n        \
    \    result++;\n        }\n    }\n    return result;\n}\nconsole.log(specialFilter([11,\
    \ 22, 33, 44, 55, 66, 77, 88, 99, 111]));\n", "    var count = 0;\n    nums.forEach(n\
    \ => {\n        if (n > 10 && (n % 2 == 1) && (n.toString()[0] % 2 == 1) && (n.toString()[n.toString().length\
    \ - 1] % 2 == 1))\n            count++;\n    });\n    return count;\n}\nconsole.log(specialFilter([15,\
    \ -73, 14, -15]));\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));", " \
    \   let count = 0;\n    for (let num of nums) {\n        let str = num.toString();\n\
    \        if (num > 10 && num % 2 !== 0 && parseInt(str[0]) % 2 !== 0 && parseInt(str[str.length\
    \ - 1]) % 2 !== 0) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n", "  return nums.filter(number => {\n    const digit = number.toString();\n\
    \    const first = digit[0];\n    const last = digit[digit.length - 1];\n    return\
    \ number > 10 && (first % 2 !== 0 && last % 2 !== 0);\n  }).length;\n}\n\nexport\
    \ default specialFilter;", "    return nums.filter(num => isGreaterThan10(num)\
    \ && isFirstAndLastDigitOdd(num)).length;\n}\n", "  let count = 0;\n  for (let\
    \ i = 0; i < nums.length; i++) {\n    if (nums[i] > 10 && isOdd(nums[i])) {\n\
    \      count++;\n    }\n  }\n  return count;\n}\n", "    let count = 0;\n    for\
    \ (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 10 && isFirstAndLastDigitOdd(nums[i]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n", "  let count\
    \ = 0;\n  for (let i = 0; i < nums.length; i++) {\n    let firstDigit = nums[i]\
    \ % 10;\n    let lastDigit = Math.floor(nums[i] / 10);\n    if (firstDigit % 2\
    \ !== 0 && lastDigit % 2 !== 0 && nums[i] > 10) {\n      count++;\n    }\n  }\n\
    \  return count;\n}\nconsole.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));\n", "    let count = 0;\n    for (let num of nums) {\n\
    \        if (num > 10 && num % 2 == 1 && Math.floor(num / 10) % 2 == 1) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));\nconsole.log(specialFilter([15, -73, 14, -15]));\n",
  "    let num = 0;\n    nums.forEach(n => {\n        if (n > 10 && (n % 10) % 2 !==\
    \ 0 && Math.floor(n / 10) % 2 !== 0) num++;\n    });\n    return num;\n}\n", " \
    \   let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i]\
    \ > 10 && nums[i] % 2 != 0 && (nums[i] % 10) % 2 != 0) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(specialFilter([15, -73,\
    \ 14, -15]));\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));\n", "  \
    \  let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i]\
    \ > 10 && nums[i] % 2 != 0 &&\n            nums[i].toString().charAt(0) % 2 !=\
    \ 0 &&\n            nums[i].toString().charAt(nums[i].toString().length - 1) %\
    \ 2 != 0) {\n            count++;\n        }\n    }\n    return count;\n}", " \
    \   let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i]\
    \ > 10 && isOdd(nums[i] % 10) && isOdd(getFirstDigit(nums[i]))) {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\n", "    let count = 0;\n\
    \    for (let n of nums) {\n        if (n > 10 && n % 2 == 1 && n % 10 == 1) {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "  let count\
    \ = 0;\n  nums.forEach(num => {\n    if (num > 10 && isFirstLastOdd(num)) {\n\
    \      count++;\n    }\n  });\n  return count;\n}\n", "    let result = 0;\n \
    \   for (let i = 0; i < nums.length; i++) {\n        let firstDigit = Math.abs(nums[i])\
    \ % 10;\n        let lastDigit = Math.abs(nums[i]) % 100;\n        if (nums[i]\
    \ > 10 && firstDigit % 2 === 1 && lastDigit % 2 === 1) {\n            result +=\
    \ 1;\n        }\n    }\n    return result;\n}", "    let count = 0;\n    for (let\
    \ i = 0; i < nums.length; i++) {\n        let num = nums[i];\n        if (num\
    \ > 10 && isFirstAndLastDigitOdd(num)) {\n            count += 1;\n        }\n\
    \    }\n    return count;\n}\n", "  return nums.filter(x => x > 10 && x % 2 ===\
    \ 1 && x % 10 === 1).length;\n}\n", "  let count = 0;\n  for (let i = 0; i < nums.length;\
    \ i++) {\n    if (nums[i] > 10 && Math.abs(nums[i]) % 2 !== 0 && Math.abs(nums[i]\
    \ % 10) % 2 !== 0) {\n      count++;\n    }\n  }\n  return count;\n}\n", "   \
    \ let count = 0;\n    nums.forEach(num => {\n        if (num > 10 && isOdd(num)\
    \ && isOdd(firstDigit(num)) && isOdd(lastDigit(num))) {\n            count++;\n\
    \        }\n    });\n    return count;\n}\n", "    return nums.filter(function\
    \ (num) {\n        return num > 10 && Math.abs(num) > 10 && num % 2 !== 0 &&\n\
    \            Math.floor(Math.abs(num) / 10) % 2 !== 0 &&\n            Math.abs(num)\
    \ % 10 % 2 !== 0;\n    }).length;\n}\nconsole.log(\"specialFilter([15, -73, 14,\
    \ -15]) -> \", specialFilter([15, -73, 14, -15]));\nconsole.log(\"specialFilter([33,\
    \ -2, -3, 45, 21, 109]) -> \", specialFilter([33, -2, -3, 45, 21, 109]));\n",
  "    return nums.filter(num => num > 10 && isFirstAndLastDigitOdd(num)).length;\n\
    }\n", "  return nums.filter(n => {\n    const first = n.toString()[0];\n    const\
    \ last = n.toString()[n.toString().length - 1];\n    return n > 10 && first %\
    \ 2 !== 0 && last % 2 !== 0;\n  }).length;\n}\n", "    let count = 0;\n    for\
    \ (let num of nums) {\n        if (num > 10 && num % 2 != 0 && num % 10 != 0)\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n", "    let\
    \ num = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] >\
    \ 10 && (Math.abs(nums[i]) % 10) % 2 !== 0 && Math.floor(Math.abs(nums[i]) / 10)\
    \ % 2 !== 0) {\n            num++;\n        }\n    }\n    return num;\n}\nconsole.log(specialFilter([15,\
    \ -73, 14, -15]));\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));", " \
    \   return nums.filter(n => (n > 10) && (isOdd(n) && isOdd(lastDigit(n)))).length;\n\
    }\n", "    let result = 0;\n    nums.forEach(num => {\n        if (num > 10 &&\
    \ (num % 10) % 2 === 1 && parseInt(num.toString()[0]) % 2 === 1) {\n         \
    \   result++;\n        }\n    });\n    return result;\n}\nconsole.log(specialFilter([15,\
    \ -73, 14, -15]));\nconsole.log(specialFilter([33, -2, -3, 45, 21, 109]));", " \
    \   let count = 0;\n    for (let num of nums) {\n        let ones = num % 10;\n\
    \        let tens = num % 100;\n        if (num > 10 && ones % 2 === 1 && tens\
    \ % 2 === 1) {\n            count += 1;\n        }\n    }\n    return count;\n\
    }\n", "    return nums.filter(num => {\n        let lastDigit = num % 10;\n  \
    \      let firstDigit = 0;\n        while (num >= 10) {\n            num = Math.floor(num\
    \ / 10);\n            firstDigit = num;\n        }\n        return num > 10 &&\
    \ (firstDigit % 2 === 1 || lastDigit % 2 === 1);\n    }).length;\n}\n", "    let\
    \ count = 0;\n    nums.forEach(el => {\n        if (el > 10 && el.toString().length\
    \ > 1) {\n            if (el.toString()[0] % 2 !== 0 && el.toString()[el.toString().length\
    \ - 1] % 2 !== 0) {\n                count++;\n            }\n        }\n    });\n\
    \    return count;\n}", "    let count = 0;\n    for (let num of nums) {\n   \
    \     let str = num.toString();\n        if (num > 10 && Number(str[0]) % 2 !==\
    \ 0 && Number(str[str.length - 1]) % 2 !== 0) {\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n", "    let count = 0;\n    for (let i = 0;\
    \ i < nums.length; i++) {\n        let lastDigit = nums[i] % 10;\n        let\
    \ firstDigit = Math.floor(nums[i] / 10);\n        if (nums[i] > 10 && lastDigit\
    \ % 2 != 0 && firstDigit % 2 != 0) {\n            count++;\n        }\n    }\n\
    \    return count;\n}\nconsole.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));", "    let matchArray: number[] = [];\n    nums.forEach(num\
    \ => {\n        if (num > 10 && num.toString().length >= 2) {\n            let\
    \ stringNum = num.toString();\n            if (parseInt(stringNum[0]) % 2 !==\
    \ 0 && parseInt(stringNum[stringNum.length - 1]) % 2 !== 0) {\n              \
    \  matchArray.push(num);\n            }\n        }\n    });\n    return matchArray.length;\n\
    }\n\nconsole.log(specialFilter([15, -73, 14, -15]));\nconsole.log(specialFilter([33,\
    \ -2, -3, 45, 21, 109]));"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

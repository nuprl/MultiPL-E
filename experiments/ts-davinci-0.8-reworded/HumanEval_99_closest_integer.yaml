name: HumanEval_99_closest_integer
language: ts
prompt: "//Create a function that takes a value (string) representing a number\n//\
  \ and returns the closest integer to it. If the number is equidistant\n// from two\
  \ integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"10\"\
  )\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away from\
  \ zero means that if the given number is equidistant\n// from two integers, the\
  \ one you should return is the one that is the\n// farthest from zero. For example\
  \ closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"-14.5\")\
  \ should return -15.\nfunction closest_integer(value: string): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
  10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
  -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
  0\"),0);\n}\n\ntest();"
completions: ["    let num = Number(value);\n    let result = Math.round(num);\n \
    \   return result;\n}\n\nexport { closest_integer };", "  const number = +value;\n\
    \  const decimal = number % 1;\n  const closest_number = decimal < 0.5 ? Math.floor(number)\
    \ : Math.ceil(number);\n  return closest_number;\n}\n\nconsole.log(closest_integer(\"\
    14.5\"));\n", "    let v: number = Number(value);\n    return v >= 0 ? Math.ceil(v)\
    \ : Math.floor(v);\n}\n", "  return Math.round(parseFloat(value));\n}\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  return Math.round(Number(value));\n\
    }\n\nexport { closest_integer };", "    //use parseFloat() to convert a string\
    \ to a floating point number\n    let floatNum: number = parseFloat(value);\n\
    \    //use Math.floor to return the largest integer less than or equal to a given\
    \ number\n    let floorNum: number = Math.floor(floatNum);\n    //use Math.ceil\
    \ to return the smallest integer greater than or equal to a given number\n   \
    \ let ceilNum: number = Math.ceil(floatNum);\n    //use Math.abs to return the\
    \ absolute value of a number\n    let absDifFloor: number = Math.abs(floatNum\
    \ - floorNum);\n    let absDifCeil: number = Math.abs(floatNum - ceilNum);\n \
    \   //if absDifFloor is greater than absDifCeil then return the ceiling number\n\
    \    if (absDifFloor > absDifCeil) {\n        return ceilNum;\n    }\n    //if\
    \ absDifFloor is not greater than absDifCeil then return the floor number\n  \
    \  else {\n        return floorNum;\n    }\n}\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    -15.3\"));\nconsole.log(closest_integer(\"14.5\"));\n", "  const numValue = Number(value);\n\
    \  const nearInt = Math.round(numValue);\n  const awayInt = Math.ceil(numValue);\n\
    \  const away2Int = Math.floor(numValue);\n  if (Math.abs(nearInt - numValue)\
    \ === Math.abs(awayInt - numValue)) {\n    return awayInt;\n  } else if (Math.abs(nearInt\
    \ - numValue) === Math.abs(away2Int - numValue)) {\n    return away2Int;\n  }\
    \ else {\n    return nearInt;\n  }\n}\n\nconsole.log(closest_integer(\"10\"));\n\
    console.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"14.5\"\
    ));\nconsole.log(closest_integer(\"-14.5\"));\n", "  const num = parseFloat(value);\n\
    \  const ceilNum = Math.ceil(num);\n  const floorNum = Math.floor(num);\n  if\
    \ (ceilNum - num === 0.5) {\n    return ceilNum;\n  } else if (num - floorNum\
    \ === 0.5) {\n    return floorNum;\n  } else if (num - floorNum > 0.5) {\n   \
    \ return ceilNum;\n  } else {\n    return floorNum;\n  }\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\nconsole.log(closest_integer(\"\
    15.25\"));\nconsole.log(closest_integer(\"15.75\"));\nconsole.log(closest_integer(\"\
    -15.75\"));\nconsole.log(closest_integer(\"-15.25\"));\n", "  return Math.round(parseFloat(value));\n\
    }\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));\n", "    // is the value a negative number?\n    const isNegative: boolean\
    \ = value.charAt(0) === \"-\";\n    // convert to a number value\n    const asNumber:\
    \ number = Number(value);\n    // convert to an integer and round toward 0\n \
    \   const closestInteger: number = parseInt(String(asNumber), 10);\n    // is\
    \ the integer the same as the number?\n    const isSame: boolean = closestInteger\
    \ === asNumber;\n    // find the next integer\n    const nextInteger: number =\
    \ closestInteger + 1;\n    // find the difference between the given number and\
    \ the next integer\n    const diffNext: number = nextInteger - asNumber;\n   \
    \ // find the difference between the given number and the current integer\n  \
    \  const diffCurrent: number = asNumber - closestInteger;\n    // find the closer\
    \ integer\n    const closerInteger: number = diffNext > diffCurrent ? closestInteger\
    \ : nextInteger;\n    // return closer integer or the closest integer\n    const\
    \ theValue: number = isSame ? closestInteger : closerInteger;\n    // return negative\
    \ value, if necessary\n    return isNegative ? theValue * -1 : theValue;\n}\n",
  "    let closest: number = 0;\n    let num: number = parseFloat(value);\n    let\
    \ round: number = Math.floor(num);\n    let abs: number = Math.abs(num);\n   \
    \ if (num >= 0) {\n        if (abs - round > 0.5) {\n            closest = round\
    \ + 1;\n        } else {\n            closest = round;\n        }\n    } else\
    \ {\n        if (abs - round > 0.5) {\n            closest = round - 1;\n    \
    \    } else {\n            closest = round;\n        }\n    }\n    return closest;\n\
    }\n", "    if (parseFloat(value) < 0) {\n        return Math.ceil(parseFloat(value));\n\
    \    } else {\n        return Math.floor(parseFloat(value));\n    }\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  return Number(value)\
    \ + (Number(value) % 1 >= 0.5 ? 1 : 0);\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n\nexport { closest_integer };", "    return Math.round(parseFloat(value));\n\
    }\n", "  // return Math.round(Number(value));\n  return Math.round(parseFloat(value));\n\
    }", "    const number = parseFloat(value);\n    if (number < 0) {\n        return\
    \ Math.ceil(number);\n    }\n    return Math.floor(number);\n}\n", "  return Number(value)\
    \ % 1 > 0.5 ? Math.ceil(Number(value)) : Math.floor(Number(value));\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));", "    return Math.round(Number(value));\n\
    }\n", "  const number = Number(value);\n  if (number < 0) {\n    return Math.ceil(number);\n\
    \  } else {\n    return Math.floor(number);\n  }\n}\nconsole.log(closest_integer(\"\
    15.3\"));\n", "    return Math.round(Number(value));\n}\n", "  let tempValue =\
    \ parseFloat(value);\n  if (tempValue === Math.floor(tempValue)) {\n    return\
    \ tempValue;\n  } else {\n    if (tempValue >= 0) {\n      return Math.ceil(tempValue);\n\
    \    } else {\n      return Math.floor(tempValue);\n    }\n  }\n}\n", "    const\
    \ number = parseFloat(value);\n    if (number === Math.round(number)) {\n    \
    \    return number;\n    }\n    const left = Math.floor(number);\n    const right\
    \ = Math.ceil(number);\n    if (number - left >= right - number) {\n        return\
    \ right;\n    }\n    return left;\n}\n", "  return (Math.round(parseFloat(value)));\n\
    }", "    let num: number = parseFloat(value);\n    return Math.round(num);\n}\n",
  "  const numValue = parseFloat(value);\n  return Math.round(numValue);\n}\n", " \
    \ return Math.round(parseFloat(value));\n}", "    let numberValue = parseFloat(value);\n\
    \    let floor = Math.floor(numberValue);\n    let ceil = Math.ceil(numberValue);\n\
    \    let decimal = numberValue - floor;\n    return decimal < 0.5 ? floor : ceil;\n\
    }\n\nlet test1 = closest_integer(\"10\");\nlet test2 = closest_integer(\"15.3\"\
    );\nconsole.log(test1, test2);", "  let myNum: number = Number(value);\n  let\
    \ closest: number = Math.round(myNum);\n  return closest;\n}\n\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  let maxValue: number\
    \ = Math.max(...value.split(''));\n  return Number(value.substring(0, value.indexOf(maxValue)\
    \ + 1));\n}\nconsole.log(closest_integer(\"14.5\"));", "    return parseInt(value);\n\
    }\n\nexport { closest_integer };", "  return 0;\n}\n", "  return +value < 0\n\
    \    ? Math.ceil(+value)\n    : Math.round(+value)\n}\nconsole.log(closest_integer(\"\
    -14.5\"));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"\
    15.3\"));\n", "  // TODO: Implement Me\n  return 0;\n}\n", "    const v = Number(value);\n\
    \    const a = Math.floor(v);\n    const b = Math.ceil(v);\n    return v - a >\
    \ b - v ? b : a;\n}\n", "  return Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"\
    15.3\"));\n", "    return Math.round(Number(value));\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "    return 0;\n}\n\nimport\
    \ { assert } from \"chai\";\n\ndescribe(\"closest_integer()\", function() {\n\
    \    it(\"should return the closest integer to the input\", function() {\n   \
    \     assert.equal(closest_integer(\"10\"), 10);\n        assert.equal(closest_integer(\"\
    15.3\"), 15);\n        assert.equal(closest_integer(\"-15.3\"), -15);\n      \
    \  assert.equal(closest_integer(\"14.5\"), 15);\n        assert.equal(closest_integer(\"\
    -14.5\"), -15);\n    });\n});", "  const num: number = parseFloat(value);\n  const\
    \ decimal: number = num - Math.floor(num);\n  return decimal < 0.5 ? Math.floor(num)\
    \ : Math.ceil(num);\n}\n", "  const parsed: number = parseFloat(value);\n  if\
    \ (parsed > 0) {\n    return Math.ceil(parsed);\n  } else {\n    return Math.floor(parsed);\n\
    \  }\n}\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"\
    15.3\"));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"\
    -14.5\"));\n", "    if (value.indexOf('.') < 0) {\n        return parseInt(value);\n\
    \    }\n    var split = value.split('.');\n    var integer = parseInt(split[0]);\n\
    \    var mantissa = parseInt(split[1]);\n    if (mantissa > 5) {\n        return\
    \ integer + 1;\n    }\n    return integer;\n}", "  return 0;\n}\n", "    let value_number:\
    \ number = Number(value);\n    let decimal_part: number = value_number - Math.floor(value_number);\n\
    \    let ret: number = value_number;\n    if (decimal_part < 0.5) {\n        ret\
    \ = Math.floor(value_number);\n    } else {\n        ret = Math.ceil(value_number);\n\
    \    }\n    return ret;\n}\n", "  return 0;\n}\n", "  return Math.round(Number(value));\n\
    }\n\nconsole.log(closest_integer(\"-14.5\"));\nconsole.log(closest_integer(\"\
    -14.5\"));\n", "  const number: number = Number(value);\n  if (number === Math.floor(number))\
    \ {\n    return number;\n  }\n  if (number > 0) {\n    return Math.floor(number);\n\
    \  }\n  return Math.ceil(number);\n}\n\nconsole.log(closest_integer(\"10\"));\n\
    console.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"14.5\"\
    ));\nconsole.log(closest_integer(\"-14.5\"));", "  return 0;\n}\n", "  const num\
    \ = parseFloat(value);\n  const remainder = num % 1;\n  if (remainder < 0.5) {\n\
    \    return Math.floor(num);\n  } else {\n    return Math.ceil(num);\n  }\n}\n",
  "  const number: number = Number(value);\n  if (number !== number) {\n    return\
    \ 0;\n  }\n  return Math.round(number);\n}\n\nconsole.log(closest_integer(\"10\"\
    ));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"14.5\"\
    ));\nconsole.log(closest_integer(\"-14.5\"));\nconsole.log(closest_integer(\"\"\
    ));\nconsole.log(closest_integer(\"null\"));\nconsole.log(closest_integer(\"true\"\
    ));\nconsole.log(closest_integer(\"false\"));\nconsole.log(closest_integer(\"\
    undefined\"));\nconsole.log(closest_integer(\"NaN\"));\nconsole.log(closest_integer(\"\
    {\"));\nconsole.log(closest_integer(\"}\"));\nconsole.log(closest_integer(\"[\"\
    ));\nconsole.log(closest_integer(\"]\"));\nconsole.log(closest_integer(\"[null]\"\
    ));\nconsole.log(closest_integer(\"{a:null}\"));\nconsole.log(closest_integer(\"\
    [1,2,3]\"));\nconsole.log(closest_integer(\"{a:1,b:2,c:3}\"));\nconsole.log(closest_integer(\"\
    {a:[1,2,3]}\"));\nconsole.log(closest_integer(\"{a:[{a:1},{b:2},{c:3}]}\"));\n\
    console.log(closest_integer(\"{a:[{a:[1]},{b:[2]},{c:[3]}]}\"));\nconsole.log(closest_integer(\"\
    {a:[{a:[{a:1}]},{b:[{b:2}]},{c:[{c:3}]}]}\"));\nconsole.log(closest_integer(\"\
    [{a:1},{b:2},{c:3}]\"));\nconsole.log(closest_integer(\"[{a:[1]},{b:[2]},", " \
    \   return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "    let parsedValue = parseFloat(value);\n\
    \    return Math.sign(parsedValue) * Math.round(Math.abs(parsedValue));\n}\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));", "  const num: number = Number(value);\n\
    \  const rounded: number = Math.round(num);\n  if (num - rounded > 0.5) {\n  \
    \  return rounded + 1;\n  } else if (num - rounded < -0.5) {\n    return rounded\
    \ - 1;\n  } else {\n    return rounded;\n  }\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));", "  let num: number = parseFloat(value);\n\
    \  let isNegative: boolean = num < 0;\n  if (isNegative) {\n    num = num * -1;\n\
    \  }\n  let wholeNum: number = Math.floor(num);\n  let decimal: number = num -\
    \ wholeNum;\n  let closestInt: number = 0;\n  if (decimal >= 0.5) {\n    closestInt\
    \ = wholeNum + 1;\n  } else {\n    closestInt = wholeNum;\n  }\n  if (isNegative)\
    \ {\n    closestInt = closestInt * -1;\n  }\n  return closestInt;\n}\n", "  let\
    \ _value = parseFloat(value);\n  if (value.indexOf(\".\") == -1) {\n    return\
    \ parseInt(value);\n  } else {\n    return Math.round(_value);\n  }\n}\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));", "  const num = Number(value);\n\
    \  const floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n  if (floor\
    \ - num === 0) {\n    return floor;\n  }\n  if (num - floor > 0.5) {\n    return\
    \ ceil;\n  }\n  return floor;\n}\n\nexport default closest_integer;", "  let num:\
    \ number = Number(value);\n  let numCeil: number = Math.ceil(num);\n  let numFloor:\
    \ number = Math.floor(num);\n  let diffCeil: number = numCeil - num;\n  let diffFloor:\
    \ number = num - numFloor;\n  return diffCeil > diffFloor ? numFloor : numCeil;\n\
    }\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));\n", "  return Math.round(parseFloat(value));\n}\n", "    return Math.round(parseFloat(value));\n\
    }\n", "  const num = Number(value);\n  return Math.round(num);\n}\n", "    if\
    \ (Number(value) - Math.floor(Number(value)) < 0.5) {\n        return Math.floor(Number(value));\n\
    \    } else {\n        return Math.ceil(Number(value));\n    }\n}\n", "    let\
    \ result: number = 0;\n    let num: number = parseFloat(value);\n    if (num >=\
    \ 0) {\n        result = Math.floor(num);\n    } else {\n        result = Math.ceil(num);\n\
    \    }\n    return result;\n}\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"\
    15.3\"));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"\
    -14.5\"));\n", "    const result = Math.round(Number(value));\n    return result;\n\
    }\n", "    const parsedValue = parseFloat(value);\n    const floored = Math.floor(parsedValue);\n\
    \    const ceiling = Math.ceil(parsedValue);\n    const diffToFloored = parsedValue\
    \ - floored;\n    const diffToCeiling = ceiling - parsedValue;\n    if (diffToFloored\
    \ < diffToCeiling) {\n        return floored;\n    } else {\n        return ceiling;\n\
    \    }\n}\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"\
    15.3\"));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"\
    -14.5\"));\n", "  const num = parseFloat(value);\n  return Math.round(num);\n\
    }\nconsole.log(closest_integer(\"15.3\"));\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "    return Math.round(parseFloat(value));\n\
    }\n", "  // Implement your function here\n  return -1;\n}\n", "    const float\
    \ = parseFloat(value);\n    const floor = Math.floor(float);\n    const ceil =\
    \ Math.ceil(float);\n    if (float - floor >= 0.5) {\n        return ceil;\n \
    \   } else {\n        return floor;\n    }\n}\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "    let num = Number(value);\n\
    \    let fraction = num - Math.floor(num);\n    if (num > 0) {\n        if (fraction\
    \ >= 0.5) {\n            return Math.ceil(num);\n        } else {\n          \
    \  return Math.floor(num);\n        }\n    } else {\n        if (fraction >= 0.5)\
    \ {\n            return Math.floor(num);\n        } else {\n            return\
    \ Math.ceil(num);\n        }\n    }\n}\n\nconsole.log(closest_integer(\"10\"));\n\
    console.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"14.5\"\
    ));\nconsole.log(closest_integer(\"-14.5\"));", "  return Math.round(Number(value));\n\
    }\n\nconsole.log(closest_integer(\"12.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));\n", "  return Number(value).toFixed();\n}\n", "  const number = parseFloat(value);\n\
    \  const floor = Math.floor(number);\n  const ceil = Math.ceil(number);\n  const\
    \ mid = (floor + ceil) / 2;\n  return number >= mid ? ceil : floor;\n}\n", " \
    \ const num = Number(value);\n  const nearest_lower = Math.floor(num);\n  const\
    \ nearest_higher = Math.ceil(num);\n  if (Math.abs(num - nearest_lower) > Math.abs(num\
    \ - nearest_higher)) {\n    return nearest_higher;\n  } else {\n    return nearest_lower;\n\
    \  }\n}\n", "  let x = parseFloat(value);\n  if (x - Math.floor(x) == 0.5) {\n\
    \    return x > 0 ? Math.ceil(x) : Math.floor(x);\n  } else {\n    return Math.round(x);\n\
    \  }\n}\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"\
    15.3\"));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"\
    -14.5\"));\n", "  return Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  const num = parseFloat(value);\n\
    \  const low = Math.floor(num);\n  const high = Math.ceil(num);\n  if (num - low\
    \ > high - num) {\n    return high;\n  } else {\n    return low;\n  }\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  const valueAsNumber\
    \ = Number(value);\n  const closestInteger = Math.round(valueAsNumber);\n  return\
    \ closestInteger;\n}\n", "  return Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  const valueFloat =\
    \ parseFloat(value);\n  const floorFloat = Math.floor(valueFloat);\n  if (valueFloat\
    \ - floorFloat > 0.5) {\n    return floorFloat + 1;\n  } else {\n    return floorFloat;\n\
    \  }\n}\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"\
    15.3\"));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"\
    -14.5\"));\n", "    let intValue = parseInt(value);\n    if (value.indexOf('.')\
    \ === -1) {\n        return intValue;\n    } else {\n        let floatValue =\
    \ parseFloat(value);\n        if (floatValue - intValue >= 0.5) {\n          \
    \  return intValue + 1;\n        } else {\n            return intValue;\n    \
    \    }\n    }\n}\n", "    return Math.round(parseFloat(value));\n}\n", "    return\
    \ Number(value) >= 0 ? Math.ceil(Number(value)) : Math.floor(Number(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  const num = parseFloat(value);\n\
    \  return Math.round(num);\n}\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"\
    15.3\"));\n", "  return Math.round(parseFloat(value));\n}\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  return 0;\n}\n", " \
    \ const float = parseFloat(value);\n  const floor = Math.floor(float);\n  const\
    \ ceil = Math.ceil(float);\n  const diff = float - floor;\n  if (diff < 0.5) {\n\
    \    return floor;\n  } else {\n    return ceil;\n  }\n}\n", "  const number:\
    \ number = parseFloat(value);\n  if (number - Math.floor(number) < 0.5) {\n  \
    \  return Math.floor(number);\n  } else {\n    return Math.ceil(number);\n  }\n\
    }\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));\n", "  return Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    -14.5\"));\n", "  const num = parseFloat(value);\n  const decimal = num - Math.floor(num);\n\
    \  return Math.abs(decimal) <= 0.5 ? Math.floor(num) : Math.ceil(num);\n}\n\n\
    console.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"10\"\
    ));", "  return Math.round(parseFloat(value));\n}\n", "  let close: number = parseInt(value);\n\
    \  if (parseFloat(value) - close >= 0.5) {\n    close += 1;\n  }\n  return close;\n\
    }\n", "    return Math.round(parseFloat(value));\n}\nconsole.log(closest_integer(\"\
    15.3\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "    return Math.round(parseFloat(value));\n\
    }\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));", "  let round_to_odd = (): number => {\n    const int = Math.round(parseFloat(value));\n\
    \    return int % 2 === 0 ? int + 1 : int;\n  };\n  return parseFloat(value) -\
    \ Math.round(parseFloat(value)) === 0.5\n    ? round_to_odd()\n    : Math.round(parseFloat(value));\n\
    }\n", "    let num: number = +value;\n    return Math.round(num);\n}\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\n", "  const num = Number(value);\n\
    \  const floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n  if (num -\
    \ floor > ceil - num) {\n    return ceil;\n  } else {\n    return floor;\n  }\n\
    }\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));", "    if (parseFloat(value) % 1 === 0) {\n        return parseFloat(value);\n\
    \    }\n    const firstNum = parseFloat(value) - parseFloat(value) % 1;\n    const\
    \ secondNum = parseFloat(value) - parseFloat(value) % 1 + 1;\n    const result\
    \ = Math.abs(parseFloat(value) - firstNum) < Math.abs(parseFloat(value) - secondNum)\
    \ ? firstNum : secondNum;\n    return parseFloat(value) > 0 ? result : -result;\n\
    }\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));\n", "    // TODO\n    return 0;\n}", "  const numberValue = Number(value);\n\
    \  const floor = Math.floor(numberValue);\n  const ceiling = Math.ceil(numberValue);\n\
    \  if (numberValue - floor === 0.5) {\n    return ceiling;\n  }\n  if (numberValue\
    \ - floor === 0.5) {\n    return floor;\n  }\n  return numberValue;\n}\n", " \
    \   // your code here\n    let num = Math.round(parseFloat(value));\n    if(parseFloat(value)\
    \ - num === 0.5){\n        if(parseFloat(value) > 0){\n            return num\
    \ + 1;\n        }else{\n            return num - 1;\n        }\n    }else{\n \
    \       return num;\n    }\n}\n", "  return Math.round(Number(value));\n}\n",
  "    return Math.round(parseFloat(value));\n}\n", "  return value.includes('.')\n\
    \    ? Math.round(parseFloat(value))\n    : parseInt(value, 10);\n}\n\nexport\
    \ default closest_integer;", "  return Math.round(Number(value));\n}\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\n", "  const number = parseFloat(value);\n\
    \  return Math.round(number);\n}\n", "    // your code here\n    return new Number(value);\n\
    }\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\n", "    const number = parseFloat(value);\n    const integer = Math.round(number);\n\
    \    return integer;\n}\nconsole.log(closest_integer(\"15.3\"));", "  return 0;\n\
    }\n", "  return Math.round(Number(value));\n}\n", "  return Math.round(Number(value));\n\
    }\n", "    return Math.round(parseFloat(value));\n}\n", "    // return Number(value);\n\
    \    const val = Number(value);\n    const floor = Math.floor(val);\n    const\
    \ ceil = Math.ceil(val);\n    if (val - floor >= 0.5) {\n        return ceil;\n\
    \    } else {\n        return floor;\n    }\n}\n", "    let num: number = parseFloat(value);\n\
    \    return Math.round(num);\n}\n", "  // TODO: implement this function\n  return;\n\
    }", "  const float: number = parseFloat(value);\n  const floatRoundedDown: number\
    \ = Math.floor(float);\n  const floatRoundedUp: number = Math.ceil(float);\n \
    \ const distanceFromDownToValue: number = Math.abs(float - floatRoundedDown);\n\
    \  const distanceFromUpToValue: number = Math.abs(float - floatRoundedUp);\n \
    \ if (distanceFromDownToValue > distanceFromUpToValue) {\n    return floatRoundedUp;\n\
    \  } else {\n    return floatRoundedDown;\n  }\n}\n", "  return parseInt(value)\n\
    }\n\nclosest_integer(\"15.3\")\nclosest_integer(\"-14.5\")\n", "  return Number(\n\
    \    value\n      .split('.')\n      .map((i, index) =>\n        index === 0 ?\
    \ i : i.length ? (i[0] >= 5 ? 1 : 0) : ''\n      )\n      .join('')\n  );\n}\n",
  "  const intValue = parseInt(value, 10);\n  const floatValue = parseFloat(value);\n\
    \  const difference = Math.abs(floatValue - intValue);\n  return difference >=\
    \ 0.5 ? Math.ceil(floatValue) : Math.floor(floatValue);\n}\n", "    let valueAsNumber\
    \ = parseFloat(value);\n    let result = Math.round(valueAsNumber);\n    return\
    \ result;\n}\n\nconsole.log(closest_integer(\"15.3\"));\n", "    let newInt: number\
    \ = parseInt(value);\n    let decimal: number = parseFloat(value) - newInt;\n\
    \    if (decimal >= 0.5) {\n        return newInt + 1;\n    } else {\n       \
    \ return newInt;\n    }\n}\n", "  return Math.round(parseFloat(value));\n}\n",
  "  const parsed: number = parseFloat(value);\n  if (parsed === Math.floor(parsed))\
    \ {\n    return parsed;\n  } else {\n    const floor: number = Math.floor(parsed);\n\
    \    const ceil: number = Math.ceil(parsed);\n    const floorDiff: number = Math.abs(parsed\
    \ - floor);\n    const ceilDiff: number = Math.abs(parsed - ceil);\n    if (floorDiff\
    \ === ceilDiff) {\n      return parsed > 0 ? ceil : floor;\n    } else {\n   \
    \   return floorDiff < ceilDiff ? floor : ceil;\n    }\n  }\n}\n", "    const\
    \ number = parseFloat(value);\n    return number > 0 ? Math.ceil(number) : Math.floor(number);\n\
    }\n", "  const integer = parseInt(value, 10);\n  const fraction = parseFloat(value)\
    \ - integer;\n  return fraction >= 0.5 ? integer + 1 : integer;\n}\n\nexport default\
    \ closest_integer;", "    let floatValue = parseFloat(value);\n    return Math.round(floatValue);\n\
    }\n", "  const number = +value;\n  return Math.round(number);\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n", "    return Number(value) % 1 >= 0.5 ?\
    \ Number(value) + 1 : Number(value);\n}\n", "  const valueAsNumber = parseFloat(value);\n\
    \  const closestInteger = Math.round(valueAsNumber);\n  return closestInteger;\n\
    }\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));\n", "  const number: number = parseFloat(value);\n  const decimal: number\
    \ = number - Math.floor(number);\n  if (decimal < 0.5) {\n    return Math.floor(number);\n\
    \  } else {\n    return Math.ceil(number);\n  }\n}\n", "    return Number(value.indexOf('.')\
    \ < 0 ? value : value.split('.')[0])\n}\n\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));", "  return parseInt(value);\n}\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"\
    15.3\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "    const parsed: number\
    \ = parseFloat(value);\n    return Math.round(parsed);\n}\n", "    const num:\
    \ number = parseFloat(value);\n    const numAbs: number = Math.abs(num);\n   \
    \ const floor: number = Math.floor(numAbs);\n    const ceil: number = Math.ceil(numAbs);\n\
    \    if (floor === ceil) {\n        return num;\n    }\n    return num > 0 ? ceil\
    \ : -ceil;\n}\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"\
    15.3\"));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"\
    -14.5\"));\n", "  let num = parseFloat(value);\n  return Math.round(num);\n}\n",
  "    return Math.round(parseFloat(value));\n}\n", "  const valueToNumber = Number(value);\n\
    \  return Math.round(valueToNumber);\n}\nconsole.log(closest_integer(\"10\"));\n\
    console.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"14.5\"\
    ));\nconsole.log(closest_integer(\"-14.5\"));\n", "    const num: number = Number(value);\n\
    \    const floor: number = Math.floor(num);\n    const ceil: number = Math.ceil(num);\n\
    \    const diff_floor: number = Math.abs(num - floor);\n    const diff_ceil: number\
    \ = Math.abs(num - ceil);\n    if (diff_floor > diff_ceil) {\n        return ceil;\n\
    \    } else if (diff_floor < diff_ceil) {\n        return floor;\n    } else {\n\
    \        if (num >= 0) {\n            return ceil;\n        } else {\n       \
    \     return floor;\n        }\n    }\n}\n", "  const number = parseFloat(value);\n\
    \  const ceil = Math.ceil(number);\n  const floor = Math.floor(number);\n  if\
    \ (number - floor === 0.5) {\n    return ceil;\n  }\n  if (number - floor > 0.5)\
    \ {\n    return ceil;\n  }\n  return floor;\n}\n", "  const round = Number(value);\n\
    \  return Math.round(round);\n}\n", "  let fl = parseFloat(value);\n  return fl\
    \ > 0 ? Math.ceil(fl) : Math.floor(fl);\n}\n\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));\nconsole.log(closest_integer(\"14.5\"));", "    let number: number = parseFloat(value);\n\
    \    if (number % 1 === 0) {\n        return number;\n    }\n    else {\n    \
    \    let numToRound = number % 1;\n        if (numToRound <= 0.5) {\n        \
    \    return Math.floor(number);\n        }\n        else {\n            return\
    \ Math.ceil(number);\n        }\n    }\n}\n\nconsole.log(closest_integer(\"10\"\
    ));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"14.5\"\
    ));\nconsole.log(closest_integer(\"-14.5\"));", "    return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(Number(value));\n}\nconsole.log(closest_integer(\"\
    15.3\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  return Math.round(parseFloat(value));\n\
    }\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\n", "  const d = Number(value);\n  const floor = Math.floor(d);\n  const ceil\
    \ = Math.ceil(d);\n  const diffFloor = Math.abs(d - floor);\n  const diffCeil\
    \ = Math.abs(d - ceil);\n  return diffFloor < diffCeil ? floor : ceil;\n}\n",
  "    const num = Number(value);\n    const floor = Math.floor(num);\n    const ceil\
    \ = Math.ceil(num);\n    const difference1 = Math.abs(floor - num);\n    const\
    \ difference2 = Math.abs(ceil - num);\n    return difference1 <= difference2 ?\
    \ floor : ceil;\n}\n", "  let parsed = Number(value);\n  let high = parsed > 0\
    \ ? Math.ceil(parsed) : Math.floor(parsed);\n  let low = parsed > 0 ? Math.floor(parsed)\
    \ : Math.ceil(parsed);\n  let highDiff = Math.abs(parsed - high);\n  let lowDiff\
    \ = Math.abs(parsed - low);\n  return highDiff <= lowDiff ? high : low;\n}\n",
  "  let number = parseFloat(value);\n  if (number % 1 > 0.5) {\n    return Math.ceil(number);\n\
    \  } else {\n    return Math.floor(number);\n  }\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const output: number = parseInt(value);\n  return output;\n}\n", "  \
    \  const val = parseFloat(value);\n    return Math.round(val);\n}", "    const\
    \ number = parseFloat(value);\n    const integer = Math.floor(number);\n    const\
    \ floorToCeil = Math.abs(number - integer);\n    const ceilToFloor = Math.abs(number\
    \ - (integer + 1));\n    if (floorToCeil > ceilToFloor) {\n        return integer\
    \ + 1;\n    }\n    return integer;\n}", "  const tempArr = value.split(\".\");\n\
    \  const integer = parseInt(tempArr[0]);\n  if (tempArr.length === 1) {\n    return\
    \ integer;\n  }\n  const decimal = parseInt(tempArr[1]);\n  return (decimal >=\
    \ 5 ? integer + 1 : integer);\n}\n", "    const float_value = parseFloat(value);\n\
    \    return float_value >= 0 ? Math.ceil(float_value) : Math.floor(float_value);\n\
    }\n", "  const num_value = Number(value);\n  const rounded_value = Math.round(num_value);\n\
    \  const floor_value = Math.floor(num_value);\n  const ceil_value = Math.ceil(num_value);\n\
    \  if (num_value >= 0) {\n    if (num_value - floor_value < 0.5) {\n      return\
    \ floor_value;\n    } else {\n      return ceil_value;\n    }\n  } else {\n  \
    \  if (num_value - floor_value < 0.5) {\n      return floor_value;\n    } else\
    \ {\n      return ceil_value;\n    }\n  }\n}\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"-14.5\"));\nconsole.log(closest_integer(\"\
    14.5\"));\n", "    const num = parseFloat(value);\n    if (num > 0) {\n      \
    \  return Math.floor(num);\n    } else {\n        return Math.ceil(num);\n   \
    \ }\n}\n", "    return Math.round(parseFloat(value));\n}\nconsole.log(closest_integer(\"\
    15.3\"));\nconsole.log(closest_integer(\"-14.5\"));", "  let number = parseFloat(value);\n\
    \  return Math.round(number);\n}\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"\
    15.3\"));\nconsole.log(closest_integer(\"-14.5\"));\nconsole.log(closest_integer(\"\
    14.5\"));", "    return Math.round(parseFloat(value));\n}\n\nexport { closest_integer\
    \ };", "  return Math.round(parseFloat(value));\n}\n", "  const givenValue: number\
    \ = Number(value);\n  const num1: number = Math.floor(givenValue);\n  const num2:\
    \ number = Math.ceil(givenValue);\n  const decimal: number = givenValue - num1;\n\
    \  if (decimal < 0.5) {\n    return num1;\n  } else {\n    return num2;\n  }\n\
    }\n\nexport { closest_integer };", "    if(value.includes('.')){\n        let\
    \ arr: number[] = [Number(value), Math.round(Number(value))];\n        let absArr:\
    \ number[] = [];\n        for(let i: number = 0; i < arr.length; i++){\n     \
    \       if(Math.abs(arr[i]) == Math.abs(arr[0])){\n                absArr.push(arr[i]);\n\
    \            }\n        }\n        if(absArr.length == 1){\n            return\
    \ absArr[0];\n        }\n        if(absArr[0] > absArr[1]){\n            return\
    \ absArr[0];\n        }\n        return absArr[1];\n    }\n    return Number(value);\n\
    }\n\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"15.7\"\
    ));\n", "    return Math.round(Number(value));\n}\n", "  let returnValue: number\
    \ = parseInt(value);\n  if (parseFloat(value) - returnValue > 0.5) {\n    returnValue\
    \ += 1;\n  }\n  return returnValue;\n}\n", "    // TODO\n    throw new Error(\"\
    TODO\");\n}\n", "    const parsedValue = parseFloat(value);\n    const lower =\
    \ Math.floor(parsedValue);\n    const higher = Math.ceil(parsedValue);\n    const\
    \ lowerAbs = Math.abs(lower);\n    const higherAbs = Math.abs(higher);\n    if\
    \ (lowerAbs > higherAbs) {\n        return lower;\n    } else if (lowerAbs < higherAbs)\
    \ {\n        return higher;\n    } else {\n        if (lower < 0) {\n        \
    \    return lower;\n        } else {\n            return higher;\n        }\n\
    \    }\n}\n", "  return value;\n}\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"\
    15.3\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "    return +value.split(\"\
    .\")[0];\n}\n", "  const numValue = parseFloat(value);\n  return Math.round(numValue);\n\
    }\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));", "    if (value.indexOf('.') === -1) {\n        return parseInt(value, 10);\n\
    \    } else {\n        let nums = value.split('.');\n        let num1 = parseInt(nums[0],\
    \ 10);\n        let num2 = parseInt(nums[1], 10);\n        let answer = 0;\n \
    \       if (num2 >= 5) {\n            answer = num1 + 1;\n        } else {\n \
    \           answer = num1;\n        }\n        return answer;\n    }\n}\n", " \
    \ return Math.round(Number(value));\n}\n\nexport default closest_integer;", " \
    \   return parseInt(value);\n}", "  const number = Number(value);\n  const round\
    \ = Math.round(number);\n  const floor = Math.floor(number);\n  if (Math.abs(number\
    \ - round) > Math.abs(number - floor)) {\n    return floor;\n  }\n  return round;\n\
    }\n", "    const num = parseFloat(value);\n    const lower_int = Math.floor(num);\n\
    \    const upper_int = Math.ceil(num);\n    if (num - lower_int < upper_int -\
    \ num) {\n        return lower_int;\n    } else {\n        return upper_int;\n\
    \    }\n}\n", "  const numVal = Number(value);\n  if (value === \"\" || isNaN(numVal))\
    \ {\n    return 0;\n  }\n  const decimal = Math.abs(numVal - Math.floor(numVal));\n\
    \  return decimal < 0.5 ? Math.floor(numVal) : Math.ceil(numVal);\n}\nconsole.log(closest_integer(\"\
    -10.4\"));\nconsole.log(closest_integer(\"9.9\"));\nconsole.log(closest_integer(\"\
    15.3\"));\nconsole.log(closest_integer(\"-15.3\"));\nconsole.log(closest_integer(\"\
    5.5\"));\nconsole.log(closest_integer(\"\"));\n", "  const int = parseInt(value);\n\
    \  const dec = Number(value) - int;\n  const neg = value.startsWith(\"-\");\n\
    \  const sign = neg ? -1 : 1;\n  return int + sign * (dec >= 0.5 ? 1 : 0);\n}",
  "  const num = parseFloat(value);\n  return Math.round(num);\n}\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  //your code here\n\
    \  let n = parseFloat(value);\n  let closest = Math.round(n);\n  if (n - Math.floor(n)\
    \ < 0.5) {\n    closest = Math.floor(n);\n  } else if (n - Math.floor(n) > 0.5)\
    \ {\n    closest = Math.ceil(n);\n  }\n  return closest;\n}\n", "  const isNegative\
    \ = parseFloat(value) < 0;\n  const absoluteValue = Math.abs(parseFloat(value));\n\
    \  if (Number.isInteger(absoluteValue)) {\n    return isNegative ? -absoluteValue\
    \ : absoluteValue;\n  }\n  const integerPart = Math.floor(absoluteValue);\n  const\
    \ decimalPart = absoluteValue - integerPart;\n  return decimalPart < 0.5\n   \
    \ ? isNegative\n      ? -integerPart\n      : integerPart\n    : isNegative\n\
    \    ? -(integerPart + 1)\n    : integerPart + 1;\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\nconsole.log(closest_integer(\"\
    -10\"));\nconsole.log(closest_integer(\"-15.3\"));\nconsole.log(closest_integer(\"\
    -14.5\"));\nconsole.log(closest_integer(\"-14.6\"));\nconsole.log(closest_integer(\"\
    0\"));\nconsole.log(closest_integer(\"0.4\"));\nconsole.log(closest_integer(\"\
    -0.4\"));\nconsole.log(closest_integer(\"-0.5\"));\nconsole.log(closest_integer(\"\
    -0.6\"));\n", "  let number = parseFloat(value);\n  if (number === Math.floor(number))\
    \ {\n    return number;\n  } else {\n    let decimal = number - Math.floor(number);\n\
    \    if (decimal >= 0.5) {\n      return Math.ceil(number);\n    } else {\n  \
    \    return Math.floor(number);\n    }\n  }\n}\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  let num = Number(value);\n\
    \  let preNum = Math.floor(num);\n  let nextNum = Math.ceil(num);\n  if (num -\
    \ preNum > nextNum - num) {\n    return nextNum;\n  } else {\n    return preNum;\n\
    \  }\n}\n", "    return Math.round(Number(value));\n}\n", "    const number =\
    \ parseFloat(value);\n    if (isInteger(number)) {\n        return number;\n \
    \   }\n    const integer = parseInt(value, 10);\n    const fraction = number -\
    \ integer;\n    if (fraction > 0.5) {\n        return integer + 1;\n    }\n  \
    \  if (fraction < -0.5) {\n        return integer - 1;\n    }\n    return integer;\n\
    }", "  const num = Number(value);\n  const decimal = num - Math.floor(num);\n\
    \  if (decimal < 0.5) {\n    return Math.floor(num);\n  } else {\n    return Math.ceil(num);\n\
    \  }\n}\n", "  return Math.round(parseFloat(value));\n}\n", "    return Math.round(parseFloat(value));\n\
    }\nconsole.log(closest_integer(\"-1.5\"));\n", "  let num = parseFloat(value);\n\
    \  return Math.round(num);\n}\n", "  const int = Math.round(parseFloat(value));\n\
    \  return int;\n}\n", "  let num: number = Number(value);\n  let numArr: number[]\
    \ = [];\n  for (let i: number = num; i <= num + 1; i++) {\n    numArr.push(i);\n\
    \  }\n  numArr.sort((a, b) => Math.abs(a - num) - Math.abs(b - num));\n  return\
    \ numArr[0];\n}\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"\
    15.3\"));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"\
    -14.5\"));\n", "  return 0;\n}\n", "  let num: number = parseFloat(value);\n \
    \ if (num === parseInt(value)) {\n    return num;\n  } else {\n    if (num < 0)\
    \ {\n      return Math.floor(num);\n    } else {\n      return Math.ceil(num);\n\
    \    }\n  }\n}\n", "  return value.includes('.')\n    ? Math.round(parseFloat(value))\n\
    \    : parseInt(value);\n}\n\nconsole.log(closest_integer('10'));\nconsole.log(closest_integer('15.3'));\n\
    console.log(closest_integer('14.5'));\nconsole.log(closest_integer('-14.5'));",
  "  let num: number = parseFloat(value);\n  let closest: number = Math.round(num);\n\
    \  return closest;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

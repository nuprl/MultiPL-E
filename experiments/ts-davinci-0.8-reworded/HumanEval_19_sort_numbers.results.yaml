language: ts
name: HumanEval_19_sort_numbers
results:
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  let numArray = numbers.split(\"\
    \ \");\n  const results: number[] = [];\n  const numDict = {\n    zero: 0,\n \
    \   one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six:\
    \ 6,\n    seven: 7,\n    eight: 8,\n    nine: 9\n  };\n  for (let i = 0; i < numArray.length;\
    \ i++) {\n    results.push(numDict[numArray[i]]);\n  }\n  results.sort();\n  const\
    \ stringResults: string[] = [];\n  for (let j = 0; j < results.length; j++) {\n\
    \    for (let key in numDict) {\n      if (numDict[key] === results[j]) {\n  \
    \      stringResults.push(key);\n      }\n    }\n  }\n  return stringResults.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822032
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    // const numberMap = {\n\
    \    //     'zero': 0,\n    //     'one': 1,\n    //     'two': 2,\n    //   \
    \  'three': 3,\n    //     'four': 4,\n    //     'five': 5,\n    //     'six':\
    \ 6,\n    //     'seven': 7,\n    //     'eight': 8,\n    //     'nine': 9\n \
    \   // };\n    const nums = numbers.split(' ');\n    nums.sort(function (a, b)\
    \ {\n        if (a.length !== b.length) {\n            return a.length - b.length;\n\
    \        }\n        return a.localeCompare(b);\n    });\n    return nums.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five nine three'\n\
    \nshould loosely deep-equal\n\n'three five nine'\n    at test (/tmp/tmphh16349d.js:33:12)\n\
    \    at Object.<anonymous> (/tmp/tmphh16349d.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659822032
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = ['zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n  const nums_array\
    \ = numbers.split(' ');\n  const nums_with_idx = nums_array.map(x => nums.indexOf(x));\n\
    \  const sorted_idx = nums_with_idx.sort((a, b) => a - b);\n  const sorted_nums\
    \ = sorted_idx.map(x => nums[x]);\n  return sorted_nums.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822032
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    let numArray = numbers.split(\"\
    \ \");\n    numArray.sort(numSort);\n    return numArray.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvgjoz6e0.ts(8,19): error TS2304: Cannot find name
    ''numSort''.

    '
  timestamp: 1659822032
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const digitToOrdinal = {\n\
    \        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three': 3,\n\
    \        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven': 7,\n\
    \        'eight': 8,\n        'nine': 9\n    };\n    return numbers.split(' ').sort((a,\
    \ b) => digitToOrdinal[a] - digitToOrdinal[b]).join(' ');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822032
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  //split the string into an\
    \ array \n  //sort numbers based on the index in the sorted array\n  let sorted:\
    \ string = \"\";\n  let arr_numbers: string[] = numbers.split(\" \");\n  let sorted_arr:\
    \ string[] = [];\n  //this is a loop that iterates the length of the arr_numbers\
    \ array.\n  for (let i: number = 0; i < arr_numbers.length; i++) {\n    if (numbers_map.has(arr_numbers[i]))\
    \ {\n      sorted_arr.push(numbers_map.get(arr_numbers[i]));\n    }\n  }\n  let\
    \ lowest: number = sorted_arr[0];\n  for (let i: number = 0; i < sorted_arr.length;\
    \ i++) {\n    for (let j: number = 0; j < sorted_arr.length; j++) {\n      if\
    \ (sorted_arr[j] < lowest) {\n        lowest = sorted_arr[j];\n      }\n    }\n\
    \    sorted = sorted + lowest + \" \";\n    sorted_arr.splice(sorted_arr.indexOf(lowest),\
    \ 1);\n    lowest = sorted_arr[0];\n  }\n  //return the sorted array as a string.\n\
    \  return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg9ikxz96.ts(14,9): error TS2304: Cannot find name
    ''numbers_map''.

    ../../../../../tmp/tmpg9ikxz96.ts(15,23): error TS2304: Cannot find name ''numbers_map''.

    ../../../../../tmp/tmpg9ikxz96.ts(18,7): error TS2322: Type ''string'' is not
    assignable to type ''number''.

    ../../../../../tmp/tmpg9ikxz96.ts(21,11): error TS2365: Operator ''<'' cannot
    be applied to types ''string'' and ''number''.

    ../../../../../tmp/tmpg9ikxz96.ts(22,9): error TS2322: Type ''string'' is not
    assignable to type ''number''.

    ../../../../../tmp/tmpg9ikxz96.ts(26,42): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''string''.

    ../../../../../tmp/tmpg9ikxz96.ts(27,5): error TS2322: Type ''string'' is not
    assignable to type ''number''.

    '
  timestamp: 1659822032
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const result = [];\n  for (let i = 0; i < 10; i++) {\n    nums.forEach(num\
    \ => {\n      if (num === \"zero\" && i === 0) {\n        result.push(num);\n\
    \      } else if (num === \"one\" && i === 1) {\n        result.push(num);\n \
    \     } else if (num === \"two\" && i === 2) {\n        result.push(num);\n  \
    \    } else if (num === \"three\" && i === 3) {\n        result.push(num);\n \
    \     } else if (num === \"four\" && i === 4) {\n        result.push(num);\n \
    \     } else if (num === \"five\" && i === 5) {\n        result.push(num);\n \
    \     } else if (num === \"six\" && i === 6) {\n        result.push(num);\n  \
    \    } else if (num === \"seven\" && i === 7) {\n        result.push(num);\n \
    \     } else if (num === \"eight\" && i === 8) {\n        result.push(num);\n\
    \      } else if (num === \"nine\" && i === 9) {\n        result.push(num);\n\
    \      }\n    });\n  }\n  return result.join(\" \");\n}\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822032
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    nums.sort(function(a, b) {\n        return Number(a) - Number(b);\n\
    \    });\n    return nums.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five zero four\
    \ seven nine eight'\n\nshould loosely deep-equal\n\n'zero four five seven eight\
    \ nine'\n    at test (/tmp/tmpo0nksdum.js:19:12)\n    at Object.<anonymous> (/tmp/tmpo0nksdum.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five zero\
    \ four seven nine eight',\n  expected: 'zero four five seven eight nine',\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822032
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const number_order = [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"];\n  const nums = numbers.split(\" \");\n  const sorted_nums = nums.sort((a,\
    \ b) => number_order.indexOf(a) - number_order.indexOf(b));\n  return sorted_nums.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822032
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    let numbers_string = numbers.split(\"\
    \ \");\n    let numbers_digit = numbers_string.map(x => convert_num_to_digit(x));\n\
    \    numbers_digit.sort((a, b) => a - b);\n    let numbers_string_ordered = numbers_digit.map(x\
    \ => convert_digit_to_num(x));\n    return numbers_string_ordered.join(\" \");\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj1ww704i.ts(8,49): error TS2304: Cannot find name
    ''convert_num_to_digit''.

    ../../../../../tmp/tmpj1ww704i.ts(10,57): error TS2304: Cannot find name ''convert_digit_to_num''.

    '
  timestamp: 1659822032
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  return numbers\n    .split(\"\
    \ \")\n    .sort((a, b) =>\n      words_to_numbers[a] > words_to_numbers[b] ?\
    \ 1 : -1\n    )\n    .join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzbpj0u3a.ts(10,7): error TS2304: Cannot find name
    ''words_to_numbers''.

    ../../../../../tmp/tmpzbpj0u3a.ts(10,29): error TS2304: Cannot find name ''words_to_numbers''.

    '
  timestamp: 1659822032
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const map = new Map([\n        ['zero', 0],\n        ['one', 1],\n\
    \        ['two', 2],\n        ['three', 3],\n        ['four', 4],\n        ['five',\
    \ 5],\n        ['six', 6],\n        ['seven', 7],\n        ['eight', 8],\n   \
    \     ['nine', 9],\n    ]);\n    const nums2 = nums.map(n => map.get(n));\n  \
    \  const sorted = nums2.sort((a, b) => a - b);\n    const words = sorted.map(n\
    \ => [...map.entries()].find(e => e[1] === n)[0]);\n    return words.join(' ');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3_ifnc6w.ts(8,21): error TS2552: Cannot find name
    ''Map''. Did you mean ''map''?

    ../../../../../tmp/tmp3_ifnc6w.ts(22,54): error TS2339: Property ''find'' does
    not exist on type ''any[]''.

    '
  timestamp: 1659822032
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const numMap = {\n     \
    \   'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three': 3,\n  \
    \      'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven': 7,\n\
    \        'eight': 8,\n        'nine': 9\n    };\n    let numArr = numbers.split('\
    \ ');\n    let res = numArr.sort((a, b) => {\n        return numMap[a] - numMap[b];\n\
    \    });\n    return res.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822032
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  return nums.sort((a, b) => {\n    return toNumber(a) - toNumber(b);\n\
    \  }).join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmenmxvxs.ts(9,12): error TS2552: Cannot find name
    ''toNumber''. Did you mean ''numbers''?

    ../../../../../tmp/tmpmenmxvxs.ts(9,26): error TS2552: Cannot find name ''toNumber''.
    Did you mean ''numbers''?

    '
  timestamp: 1659822032
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const num_map = {\n    \
    \    zero: 0,\n        one: 1,\n        two: 2,\n        three: 3,\n        four:\
    \ 4,\n        five: 5,\n        six: 6,\n        seven: 7,\n        eight: 8,\n\
    \        nine: 9\n    };\n    const nums = numbers.split(\" \").map(s => num_map[s]);\n\
    \    return nums.sort((a, b) => a - b).map(i => ({0: \"zero\", 1: \"one\", 2:\
    \ \"two\", 3: \"three\", 4: \"four\", 5: \"five\", 6: \"six\", 7: \"seven\", 8:\
    \ \"eight\", 9: \"nine\"}[i])).join(\" \");\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822032
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    return numbers.split(' ').sort((a,\
    \ b) => {\n        const numberals = ['zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight', 'nine'];\n        return numberals.indexOf(a) - numberals.indexOf(b);\n\
    \    }).join(' ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822032
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  return numbers\n    .split(\"\
    \ \")\n    .sort((a, b) =>\n      [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"].indexOf(a) -\n      [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"].indexOf(b)\n    )\n    .join(\" \");\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822032
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  return numbers\n    .split(\"\
    \ \")\n    .sort((a, b) => number_to_number_sort(a, b))\n    .join(\" \");\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv65368gh.ts(9,21): error TS2304: Cannot find name
    ''number_to_number_sort''.

    '
  timestamp: 1659822032
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  // const value = 0;\n  const\
    \ splitArray = numbers.split(\" \");\n  // console.log(splitArray);\n  const numberArray\
    \ = [...splitArray];\n  const numberMap = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9,\n  };\n  let newArray = [];\n  numberArray.forEach((elem)\
    \ => {\n    newArray.push(numberMap[elem]);\n  });\n  newArray.sort((a, b) =>\
    \ a - b);\n  const finalArray = [];\n  newArray.forEach((elem) => {\n    finalArray.push(\n\
    \      Object.keys(numberMap).find((key) => numberMap[key] === elem)\n    );\n\
    \  });\n  return finalArray.join(\" \");\n}\nconsole.log(sort_numbers(\"three\
    \ one five\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2gicvlic.ts(31,30): error TS2339: Property ''find''
    does not exist on type ''string[]''.

    '
  timestamp: 1659822032
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    return numbers\n       \
    \ .split(' ')\n        .map(number => numbersToInts[number])\n        .sort((a,\
    \ b) => a - b)\n        .map(number => intsToNumbers[number])\n        .join('\
    \ ');\n}\n\nvar testSortNumbers = function() {\n    var test = function(numbers,\
    \ expected) {\n        var actual = sort_numbers(numbers);\n        if (actual\
    \ !== expected) {\n            console.log(`ERROR:  For ${numbers}, expected ${expected},\
    \ but got ${actual}`);\n        }\n    };\n\n    test('nine eight one', 'one eight\
    \ nine');\n    test('one one five nine', 'one one five nine');\n    test('two\
    \ three five nine', 'two three five nine');\n    test('nine nine zero one', 'zero\
    \ one nine nine');\n    test('five five six seven seven seven zero', 'zero five\
    \ five six seven seven seven');\n    test('one two six five', 'one two five six');\n\
    \    test('one two one one', 'one one one two');\n    test('one one one one',\
    \ 'one one one one');\n    test('zero zero zero zero', 'zero zero zero zero');\n\
    \    test('one one two three zero', 'zero one one two three');\n    test('zero\
    \ one zero one', 'zero zero one one');\n    test('seven four two nine two nine\
    \ one', 'one two two four seven nine nine');\n    test('zero one two zero', 'zero\
    \ zero one two');\n    test('two three seven zero', 'zero two three seven');\n\
    \    test('four four five five one', 'one four four five five');\n    test('four\
    \ one zero seven', 'zero one four seven');\n    test('zero five four one', 'zero\
    \ one four five');\n    test('seven two nine two', 'two two seven nine');\n  \
    \  test('five five one four', 'one four five five');\n    test('two one eight\
    \ eight', 'one two eight eight');\n    test('three four zero zero', 'zero zero\
    \ three four');\n    test('one zero five six', 'zero one five six');\n    test('eight\
    \ six three zero', 'zero three six eight');\n    test('six eight eight five',\
    \ 'five six eight\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5vb0nigd.ts(46,49): error TS1002: Unterminated string
    literal.

    ../../../../../tmp/tmp5vb0nigd.ts(47,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp5vb0nigd.ts(47,9): error TS1005: '','' expected.

    ../../../../../tmp/tmp5vb0nigd.ts(60,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659822032

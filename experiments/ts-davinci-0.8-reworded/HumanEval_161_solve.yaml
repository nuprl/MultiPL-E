name: HumanEval_161_solve
language: ts
prompt: "//You are given a string s.\n// if s[i] is a letter, reverse its case from\
  \ lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string\
  \ contains no letters, reverse the string.\n// The function should return the resulted\
  \ string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>> solve(\"ab\"\
  )\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s: string): string\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
  aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
  ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
  #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n\
  \  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
  #ccc\"),\"#CCC\");\n}\n\ntest();"
completions: ["  const letters = s.split('').filter(x => /[a-z]/i.test(x));\n  if\
    \ (letters.length === 0) {\n    return s.split('').reverse().join('');\n  }\n\
    \  const out: string[] = [];\n  for (let i = 0; i < s.length; i++) {\n    if (/[a-z]/i.test(s[i]))\
    \ {\n      out.push(s[i] === s[i].toUpperCase() ? s[i].toLowerCase() : s[i].toUpperCase());\n\
    \    } else {\n      out.push(s[i]);\n    }\n  }\n  return out.join('');\n}\n",
  "    let temp = \"\";\n    for (let i = 0; i < s.length; i++) {\n        if (/[a-z]/.test(s[i]))\
    \ {\n            temp += s[i].toUpperCase();\n        } else if (/[A-Z]/.test(s[i]))\
    \ {\n            temp += s[i].toLowerCase();\n        } else {\n            temp\
    \ += s[i];\n        }\n    }\n    return temp.split(\"\").reverse().join(\"\"\
    );\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));", "    const letters = /[a-zA-Z]/;\n    let result = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (letters.test(s[i])) {\n      \
    \      if (s[i] === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n\
    \            } else {\n                result += s[i].toUpperCase();\n       \
    \     }\n        } else {\n            result += s[i];\n        }\n    }\n   \
    \ return result.split(\"\").reverse().join(\"\");\n}\n", "    return '';\n}\n",
  "  let result = '';\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === s[i].toUpperCase())\
    \ {\n      result += s[i].toLowerCase();\n    } else if (s[i] === s[i].toLowerCase())\
    \ {\n      result += s[i].toUpperCase();\n    } else {\n      result += s[i];\n\
    \    }\n  }\n  return result.split('').reverse().join('');\n}\n\nconsole.log(solve('1234'));\n\
    console.log(solve('ab'));\nconsole.log(solve('#a@C'));", "    let result = s.split('').reverse().join('');\n\
    \    let regExp = /[a-z]/;\n    for (let i = 0; i < result.length; i++) {\n  \
    \      if (regExp.test(result[i])) {\n            result = result.replace(result[i],\
    \ result[i].toUpperCase());\n        } else if (regExp.test(result[i].toLowerCase()))\
    \ {\n            result = result.replace(result[i], result[i].toLowerCase());\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"#a@C\"));\n",
  "    let result: string = \"\";\n    let lastChar: string = \"\";\n    for (let\
    \ i = 0; i < s.length; i++) {\n        const element = s[i];\n        if (element\
    \ == lastChar) {\n            continue;\n        }\n        if (isNaN(parseInt(element)))\
    \ {\n            if (element == element.toUpperCase()) {\n                result\
    \ += element.toLowerCase();\n            } else {\n                result += element.toUpperCase();\n\
    \            }\n        } else {\n            result += element;\n        }\n\
    \        lastChar = element;\n    }\n    return result;\n}\n", "    //declare\
    \ variables for the solution\n    let result: string = '';\n    let regex: RegExp\
    \ = /^[A-Za-z]+$/;\n    //check if any letters exist in string\n    if (regex.test(s))\
    \ {\n        //iterate through string\n        for (let i = 0; i < s.length; i++)\
    \ {\n            //check if char is upper\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                //convert char to lower\n                result += s[i].toLowerCase();\n\
    \            } else {\n                //convert char to upper\n             \
    \   result += s[i].toUpperCase();\n            }\n        }\n    } else {\n  \
    \      //reverse string\n        result = s.split('').reverse().join('');\n  \
    \  }\n    return result;\n}\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));", "    let a = s.split('');\n    for (let\
    \ i = 0; i < a.length; i++) {\n        if (/[a-z]/.test(a[i])) a[i] = a[i].toUpperCase();\n\
    \        else if (/[A-Z]/.test(a[i])) a[i] = a[i].toLowerCase();\n    }\n    return\
    \ a.join('');\n}\nconsole.log(solve(\"ab\"));", "    if (s.match(/[a-z]/gi)) {\n\
    \        return s.split('').map(char => {\n            if (char.match(/[a-z]/gi))\
    \ {\n                return char === char.toUpperCase() ? char.toLowerCase() :\
    \ char.toUpperCase();\n            }\n            return char;\n        }).join('');\n\
    \    }\n    return s.split('').reverse().join('');\n}", "    // Create a function\
    \ that can reverse a String, which is passed as the parameter\n    // Use it on\
    \ this problem to reverse the String passed\n    // return reversed string\n \
    \   return reverse(s);\n}\n", "    let result: string = '';\n    let noLetters:\
    \ boolean = true;\n    for (let i: number = 0; i < s.length; i++) {\n        if\
    \ (/[a-z]/i.test(s[i])) {\n            noLetters = false;\n            if (s[i]\
    \ === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n \
    \           } else {\n                result += s[i].toUpperCase();\n        \
    \    }\n        } else {\n            result += s[i];\n        }\n    }\n    if\
    \ (noLetters) {\n        return s.split('').reverse().join('');\n    }\n    return\
    \ result;\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));", "  if(s.length === 0){\n    return s;\n  }\n  if(s.length === 1){\n\
    \    return s.toUpperCase();\n  }\n  const reg = /[a-zA-Z]/g;\n  let result =\
    \ '';\n  if(reg.test(s)){\n    for(let i = 0; i < s.length; i++){\n      if(s[i]\
    \ === s[i].toUpperCase()){\n        result += s[i].toLowerCase();\n      } else\
    \ {\n        result += s[i].toUpperCase();\n      }\n    }\n  } else {\n    for(let\
    \ i = s.length - 1; i >= 0; i--){\n      result += s[i];\n    }\n  }\n  return\
    \ result;\n}", "  const letters: string[] = s.split('').filter(isLetter);\n  if\
    \ (letters.length === 0) {\n    return s.split('').reverse().join('');\n  }\n\
    \  let result: string[] = s.split('').map(char => {\n    return isLetter(char)\
    \ ? toggleCase(char) : char;\n  });\n  return result.join('');\n}\n", "    let\
    \ result: string = \"\";\n    let arr: string[] = s.split(\"\");\n    for (let\
    \ i: number = 0; i < arr.length; i++) {\n        if (arr[i] === arr[i].toUpperCase())\
    \ {\n            result += arr[i].toLowerCase();\n        } else if (arr[i] ===\
    \ arr[i].toLowerCase()) {\n            result += arr[i].toUpperCase();\n     \
    \   } else {\n            result += arr[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));", "    let result: string = \"\";\n    let test1: boolean = false;\n\
    \    let test2: boolean = false;\n    let array = s.split(\"\");\n    for (let\
    \ i = 0; i < array.length; i++) {\n        test1 = /[a-z]/.test(array[i]);\n \
    \       test2 = /[A-Z]/.test(array[i]);\n        if (test1 === true) {\n     \
    \       result += array[i].toUpperCase();\n        } else if (test2 === true)\
    \ {\n            result += array[i].toLowerCase();\n        } else {\n       \
    \     result += array[i];\n        }\n    }\n    return result;\n}\nconsole.log(solve(\"\
    #a@C\"));\n", "    return s.replace(/[a-z]/ig, x => {\n        return x.toUpperCase()\
    \ === x ? x.toLowerCase() : x.toUpperCase();\n    })\n}\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\n", "    let letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (letters.includes(s[i]))\
    \ {\n            result += s[i].toUpperCase() === s[i] ? s[i].toLowerCase() :\
    \ s[i].toUpperCase();\n        } else {\n            result += s[i];\n       \
    \ }\n    }\n    return result.length === 0 ? s.split('').reverse().join('') :\
    \ result;\n}\n", "    let str = s.split('');\n    for (let i = 0; i < str.length;\
    \ i++) {\n        str[i] = str[i].match(/[a-z]/i) ? str[i].toUpperCase() : str[i].toLowerCase();\n\
    \    }\n    return str.join('');\n}", "    if (!s.match(/[a-z]/i)) {\n       \
    \ return reverse(s);\n    }\n    let ans = '';\n    for (let c of s) {\n     \
    \   ans += c.match(/[a-z]/i) ? c.toUpperCase() == c ? c.toLowerCase() : c.toUpperCase()\
    \ : c;\n    }\n    return ans;\n}\n", "  let letters = s.split('').filter(l =>\
    \ l.match(/[a-z]/i))\n  let result = '';\n  for (let letter of letters) {\n  \
    \  result += letter === letter.toUpperCase() ? letter.toLowerCase() : letter.toUpperCase()\n\
    \  }\n  return letters.length === 0 ? s.split('').reverse().join('') : result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));", "    let noLetters = true;\n    let revStr = \"\";\n    for (let i\
    \ = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i)) {\n           \
    \ noLetters = false;\n            let letter = s[i];\n            if (letter ===\
    \ letter.toUpperCase()) {\n                revStr += letter.toLowerCase();\n \
    \           } else {\n                revStr += letter.toUpperCase();\n      \
    \      }\n        } else {\n            revStr += s[i];\n        }\n    }\n  \
    \  if (noLetters) {\n        return s.split(\"\").reverse().join(\"\");\n    }\
    \ else {\n        return revStr;\n    }\n}\nconsole.log(solve(\"1234\")); // \"\
    4321\"\nconsole.log(solve(\"ab\")); // \"AB\"\nconsole.log(solve(\"#a@C\")); //\
    \ \"#A@c\"\n", "    let result = \"\";\n    let containsLetter = false;\n    for\
    \ (let i = 0; i < s.length; i++) {\n        let currentChar = s[i];\n        if\
    \ (isLetter(currentChar)) {\n            containsLetter = true;\n            if\
    \ (isUpperCase(currentChar)) {\n                result += currentChar.toLowerCase();\n\
    \            } else {\n                result += currentChar.toUpperCase();\n\
    \            }\n        } else {\n            result += currentChar;\n       \
    \ }\n    }\n    if (!containsLetter) {\n        return result.split(\"\").reverse().join(\"\
    \");\n    }\n    return result;\n}\n", "    return s.split('').map(e => {\n  \
    \      if(e.toLowerCase() !== e.toUpperCase())\n            return e.toLowerCase()\
    \ === e ? e.toUpperCase() : e.toLowerCase();\n        return e;\n    }).join('');\n\
    }\n\nconsole.log(solve(\"#a@C\"));", "    let array: string[] = s.split('')\n\
    \    let caseArray: string[] = s.split('')\n    let hasLetter: boolean = false\n\
    \    for (let i: number = 0; i < array.length; i++) {\n        if (array[i] ===\
    \ array[i].toUpperCase()) {\n            caseArray[i] = array[i].toLowerCase()\n\
    \            hasLetter = true\n        } else if (array[i] === array[i].toLowerCase())\
    \ {\n            caseArray[i] = array[i].toUpperCase()\n            hasLetter\
    \ = true\n        }\n    }\n    if (hasLetter) {\n        return caseArray.join('')\n\
    \    } else {\n        return array.reverse().join('')\n    }\n}\nconsole.log(solve(\"\
    1234\"))\nconsole.log(solve(\"ab\"))\nconsole.log(solve(\"#a@C\"))", "  let newStr\
    \ = \"\";\n  for (let i = 0; i < s.length; i++) {\n    if (/[a-z]/.test(s[i]))\
    \ {\n      newStr += s[i].toUpperCase();\n    } else if (/[A-Z]/.test(s[i])) {\n\
    \      newStr += s[i].toLowerCase();\n    } else {\n      newStr += s[i];\n  \
    \  }\n  }\n  return newStr.split(\"\").reverse().join(\"\");\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\n", "  \
    \  return s.split('').reverse().map(n => {\n        if(n.toLowerCase() != n.toUpperCase())\
    \ {\n            return n == n.toLowerCase() ? n.toUpperCase() : n.toLowerCase();\n\
    \        } else {\n            return n;\n        }\n    }).join('');\n}\n\nexport\
    \ {solve}", "  let result = \"\";\n  for (let i = 0; i < s.length; i++) {\n  \
    \  if (s[i] === s[i].toUpperCase()) {\n      result += s[i].toLowerCase();\n \
    \   } else if (s[i] === s[i].toLowerCase()) {\n      result += s[i].toUpperCase();\n\
    \    } else {\n      result += s[i];\n    }\n  }\n  return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));", "    let\
    \ aux: string = \"\";\n    let len: number = s.length;\n    for (let i: number\
    \ = 0; i < len; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n         \
    \   aux += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            aux += s[i].toUpperCase();\n        } else {\n            aux\
    \ += s[i];\n        }\n    }\n    return aux;\n}", "    const alphabet: string\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    let str: string = \"\";\n    let flag:\
    \ boolean = false;\n    for (let i: number = 0; i < s.length; i++) {\n       \
    \ if (alphabet.includes(s[i].toLowerCase())) {\n            flag = true;\n   \
    \         if (s[i] === s[i].toLowerCase()) {\n                str += s[i].toUpperCase();\n\
    \            } else {\n                str += s[i].toLowerCase();\n          \
    \  }\n        } else {\n            str += s[i];\n        }\n    }\n    if (flag)\
    \ {\n        return str;\n    } else {\n        return reverse(s);\n    }\n}\n",
  "    return s.split('').map(el => isLetter(el) ? reverse(el) : el).join('');\n}\n",
  "    const isLetter = (char: string) => char.match(/[a-z]/i);\n    const swapCase\
    \ = (char: string) => isLetter(char) ?\n        char === char.toLowerCase() ?\
    \ char.toUpperCase() : char.toLowerCase() : char;\n    return s.split('').map(swapCase).join('');\n\
    }\nconsole.log(solve(\"aB\"));", "  // let parsedString = \"\";\n  // for (let\
    \ i = 0; i < s.length; i++) {\n  //   if (isNaN(parseInt(s[i]))) {\n  //     if\
    \ (s[i] === s[i].toUpperCase()) {\n  //       parsedString += s[i].toLowerCase();\n\
    \  //     } else {\n  //       parsedString += s[i].toUpperCase();\n  //     }\n\
    \  //   } else {\n  //     parsedString += s[i];\n  //   }\n  // }\n  // return\
    \ parsedString;\n  // Better solution:\n  let reversedString = \"\";\n  for (let\
    \ i = 0; i < s.length; i++) {\n    if (isNaN(parseInt(s[i]))) {\n      reversedString\
    \ += s[i].toUpperCase() === s[i] ? s[i].toLowerCase() : s[i].toUpperCase();\n\
    \    } else {\n      reversedString += s[i];\n    }\n  }\n  return reversedString;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));", "  let result = \"\";\n  let letters = s.match(/[a-z]/gi);\n  if (letters)\
    \ {\n    for (let char of s) {\n      if (char === char.toUpperCase()) {\n   \
    \     result += char.toLowerCase();\n      } else if (char === char.toLowerCase())\
    \ {\n        result += char.toUpperCase();\n      } else {\n        result +=\
    \ char;\n      }\n    }\n  } else {\n    result = s.split(\"\").reverse().join(\"\
    \");\n  }\n  return result;\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));", "    const isLetter = (char: string)\
    \ => {\n        return char.toLowerCase() !== char.toUpperCase();\n    }\n   \
    \ let r = s.split('').reverse().map(c => {\n        if (isLetter(c)) {\n     \
    \       return c.toLowerCase() === c ? c.toUpperCase() : c.toLowerCase();\n  \
    \      }\n        return c;\n    });\n    return r.join('');\n}\n\nexport default\
    \ solve;", "    const isLetter = (letter: string): boolean => {\n        return\
    \ letter.toLowerCase() !== letter.toUpperCase();\n    }\n    let result: string\
    \ = \"\";\n    for (let i = 0; i < s.length; i++) {\n        const currentLetter:\
    \ string = s[i];\n        if (isLetter(currentLetter)) {\n            if (currentLetter\
    \ === currentLetter.toLowerCase()) {\n                result += currentLetter.toUpperCase();\n\
    \            } else {\n                result += currentLetter.toLowerCase();\n\
    \            }\n        } else {\n            result += currentLetter;\n     \
    \   }\n    }\n    return result;\n}", "    let r = \"\";\n    if (s.match(/^[a-zA-Z]*$/))\
    \ {\n        for (let i = 0; i < s.length; i++) {\n            if (s[i] == s[i].toUpperCase())\
    \ {\n                r += s[i].toLowerCase();\n            } else {\n        \
    \        r += s[i].toUpperCase();\n            }\n        }\n    } else {\n  \
    \      for (let i = s.length - 1; i >= 0; i--) {\n            r += s[i];\n   \
    \     }\n    }\n    return r;\n}\n\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\nconsole.log(solve(\"123\"));\nconsole.log(solve(\" \"));\nconsole.log(solve(\"\
    aBc123\"));", "  let res: string = \"\";\n  for (let i = 0; i < s.length; i++)\
    \ {\n    if (isNaN(Number(s[i]))) {\n      if (s[i] === s[i].toUpperCase()) {\n\
    \        res += s[i].toLowerCase();\n      } else {\n        res += s[i].toUpperCase();\n\
    \      }\n    } else {\n      res += s[i];\n    }\n  }\n  if (res === \"\") {\n\
    \    return s.split(\"\").reverse().join(\"\");\n  }\n  return res;\n}\n", " \
    \   let array: string[] = s.split('');\n    let result: string = '';\n    for\
    \ (let i: number = 0; i < array.length; i++) {\n        let checkLetter: string\
    \ = array[i];\n        let checkLower: boolean = checkLetter === checkLetter.toLowerCase();\n\
    \        let checkUpper: boolean = checkLetter === checkLetter.toUpperCase();\n\
    \        if (checkLower === true) {\n            result += checkLetter.toUpperCase();\n\
    \        } else if (checkUpper === true) {\n            result += checkLetter.toLowerCase();\n\
    \        } else {\n            result += checkLetter;\n        }\n    }\n    return\
    \ result;\n}\nconsole.log(solve('1234'));\nconsole.log(solve('ab'));\nconsole.log(solve('#a@C'));\n",
  "    const letters = /[a-zA-Z]/;\n    const reversed = s.split('').map(char => {\n\
    \        return letters.test(char) ? char === char.toUpperCase() ? char.toLowerCase()\
    \ : char.toUpperCase() : char;\n    });\n    return s.match(letters) ? reversed.join('')\
    \ : reversed.reverse().join('');\n}\n\nconsole.log(solve('asdf123'));\nconsole.log(solve('#asdf123'));\n\
    console.log(solve('123!@#'));", "    let result: string = \"\";\n    for (let\
    \ i = 0; i < s.length; i++) {\n        let char: string = s[i];\n        if (isNaN(parseInt(char)))\
    \ {\n            if (char === char.toUpperCase()) {\n                result +=\
    \ char.toLowerCase();\n            } else {\n                result += char.toUpperCase();\n\
    \            }\n        } else {\n            result += char;\n        }\n   \
    \ }\n    if (result.length === 0) {\n        return s.split(\"\").reverse().join(\"\
    \");\n    }\n    return result;\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));", "    const isLetter = (char: string)\
    \ => {\n        const charCode = char.charCodeAt(0);\n        return (charCode\
    \ >= 65 && charCode <= 90) || (charCode >= 97 && charCode <= 122);\n    }\n  \
    \  const reverseCase = (char: string) => {\n        const charCode = char.charCodeAt(0);\n\
    \        if (charCode >= 65 && charCode <= 90) {\n            return String.fromCharCode(charCode\
    \ + 32);\n        } else if (charCode >= 97 && charCode <= 122) {\n          \
    \  return String.fromCharCode(charCode - 32);\n        }\n        return char;\n\
    \    }\n    return s.split('').map(char => isLetter(char) ? reverseCase(char)\
    \ : char).join('');\n}\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"\
    ));\nconsole.log(solve(\"#a@C\"));\n", "    if (!s.match(/[a-z]/i)) {\n      \
    \  return s.split('').reverse().join('');\n    }\n    return s.split('').map(c\
    \ => {\n        if (c.match(/[a-z]/i)) {\n            return c.toUpperCase() ===\
    \ c ? c.toLowerCase() : c.toUpperCase();\n        }\n        return c;\n    }).join('');\n\
    }\n", "    let result = '';\n    for (let i = 0; i < s.length; i++) {\n      \
    \  const elem = s[i];\n        if (elem.match(/[a-z]/i)) {\n            const\
    \ charCode = elem.charCodeAt(0);\n            result += String.fromCharCode(\n\
    \                charCode < 97 ? charCode + 32 : charCode - 32\n            );\n\
    \        } else {\n            result += elem;\n        }\n    }\n    return result;\n\
    }\n\ndescribe('solve', () => {\n    it('should reverse a given string of letters',\
    \ () => {\n        expect(solve('1a2b3c')).toEqual('1A2B3C');\n    });\n    it('should\
    \ return empty string if no letters are given', () => {\n        expect(solve('1234')).toEqual('4321');\n\
    \    });\n    it('should keep the string as it is if no letters are given', ()\
    \ => {\n        expect(solve('#a@C')).toEqual('#A@c');\n    });\n});", "  return\
    \ s.replace(/[a-z]/gi, c => c.toUpperCase() === c ? c.toLowerCase() : c.toUpperCase());\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));", "    let result: string = \"\";\n    let lowercase: RegExp = /[a-z]/;\n\
    \    let uppercase: RegExp = /[A-Z]/;\n    for (let i = 0; i < s.length; i++)\
    \ {\n        if (lowercase.test(s[i])) {\n            result += s[i].toUpperCase();\n\
    \        } else if (uppercase.test(s[i])) {\n            result += s[i].toLowerCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result.split(\"\
    \").reverse().join(\"\");\n}\n", "    return s.split('').map(item => {\n     \
    \   return item === item.toUpperCase() ? item.toLowerCase() : item.toUpperCase();\n\
    \    }).join('');\n}", "    let result: string = \"\";\n    for (let char of s)\
    \ {\n        let letter: string = char.toLowerCase();\n        if (letter !==\
    \ char) {\n            result += letter;\n        } else {\n            result\
    \ += char.toUpperCase();\n        }\n    }\n    return result;\n}\nconsole.log(solve(\"\
    ab\"));", "    const l: string = s.replace(/[^a-z]/gi, '');\n    const c: string\
    \ = s.replace(/[a-z]/gi, '');\n    return l === '' ? s.split('').reverse().join('')\
    \ : c + l.split('').map(x => x === x.toUpperCase() ? x.toLowerCase() : x.toUpperCase()).join('');\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));", "    if (s.match(/[a-z]/ig)) {\n        s = s.split('').map(x => {\n\
    \            if (x.match(/[a-z]/i)) {\n                return x.toUpperCase()\
    \ === x ? x.toLowerCase() : x.toUpperCase();\n            }\n            return\
    \ x;\n        }).join('');\n    } else {\n        s = s.split('').reverse().join('');\n\
    \    }\n    return s;\n}\n", "    let result = '';\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (/[a-z]/.test(s[i])) {\n            result += s[i].toUpperCase();\n\
    \        } else if (/[A-Z]/.test(s[i])) {\n            result += s[i].toLowerCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result.split('').reverse().join('');\n\
    }", "  return s\n    .split(\"\")\n    .map(function(char) {\n      if (/[a-z]/i.test(char))\
    \ {\n        return char === char.toUpperCase()\n          ? char.toLowerCase()\n\
    \          : char.toUpperCase();\n      }\n      return char;\n    })\n    .join(\"\
    \");\n}\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));", "    let isContain = false;\n    let result = '';\n    for (let i\
    \ = 0; i < s.length; i++) {\n        if (isLetter(s[i])) {\n            isContain\
    \ = true;\n            if (s[i] === s[i].toUpperCase()) {\n                result\
    \ += s[i].toLowerCase();\n            } else {\n                result += s[i].toUpperCase();\n\
    \            }\n        } else {\n            result += s[i];\n        }\n   \
    \ }\n    if (!isContain) {\n        return s.split('').reverse().join('');\n \
    \   }\n    return result;\n}", "  return (s = [...s]\n    .filter(i => /[a-z]/i.test(i))\n\
    \    .map(i => (i === i.toUpperCase() ? i.toLowerCase() : i.toUpperCase()))\n\
    \    .join(\"\")) ||\n    s\n    .split(\"\")\n    .reverse()\n    .join(\"\"\
    )\n    ? s\n    : s\n    .split(\"\")\n    .reverse()\n    .join(\"\");\n}", " \
    \   let letters = s.split('').map(x => {\n        if (/[a-z]/.test(x)) {\n   \
    \         return x.toUpperCase();\n        } else if (/[A-Z]/.test(x)) {\n   \
    \         return x.toLowerCase();\n        } else {\n            return x;\n \
    \       }\n    }).join('');\n    if (letters == s) {\n        return letters.split('').reverse().join('');\n\
    \    } else {\n        return letters;\n    }\n}\nconsole.log(solve(\"1234\"));\n\
    console.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));", "    if (s.match(/[a-z]/gi))\
    \ {\n        return s.split('').map(x => x === x.toUpperCase() ? x.toLowerCase()\
    \ : x.toUpperCase()).join('');\n    }\n    return s.split('').reverse().join('');\n\
    }\n", "    let res = '';\n    for (let i = 0; i < s.length; i++) {\n        if\
    \ (s[i].toLowerCase() !== s[i].toUpperCase()) {\n            res += (s[i] ===\
    \ s[i].toLowerCase()) ? s[i].toUpperCase() : s[i].toLowerCase();\n        } else\
    \ {\n            res += s[i];\n        }\n    }\n    if (res === s) {\n      \
    \  res = res.split('').reverse().join('');\n    }\n    return res;\n}\n", "  \
    \  let str: string = \"\";\n    for (let i = 0; i < s.length; i++) {\n       \
    \ if (s[i] == s[i].toUpperCase()) {\n            str += s[i].toLowerCase();\n\
    \        } else if (s[i] == s[i].toLowerCase()) {\n            str += s[i].toUpperCase();\n\
    \        } else {\n            str += s[i];\n        }\n    }\n    return str;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n", "    let result: string = \"\";\n    let i: number = 0;\n    while\
    \ (i < s.length) {\n        if (isLetter(s[i])) {\n            result += flipCase(s[i]);\n\
    \        } else {\n            result += s[i];\n        }\n        i++;\n    }\n\
    \    return result;\n}", "    let result: string = '';\n    for (let i = 0; i\
    \ < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n           \
    \ result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    if (!result.match(/[a-z]/i)) {\n    \
    \    return result.split('').reverse().join('');\n    }\n    return result;\n\
    }\n", "    let i: number = 0;\n    let result: string = \"\";\n    while (i <\
    \ s.length) {\n        let code = s.charCodeAt(i);\n        let resultCode: number;\n\
    \        if (code >= 97 && code <= 122) {\n            resultCode = code - 32;\n\
    \        } else if (code >= 65 && code <= 90) {\n            resultCode = code\
    \ + 32;\n        } else {\n            resultCode = code;\n        }\n       \
    \ let letter = String.fromCharCode(resultCode);\n        result += letter;\n \
    \       i++;\n    }\n    return result;\n}\nconsole.log(solve(\"#a@C\"));\n",
  "    let result = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return s.split('').every(c\
    \ => /[0-9]/.test(c)) ? result.split('').reverse().join('') : result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));", "    const\
    \ alpha: RegExp = /[a-z]/g;\n    let alphaArr: string[] = [];\n    let result:\
    \ string = '';\n    if (s.match(alpha)) {\n        alphaArr = s.match(alpha);\n\
    \        result = s.replace(alpha, '');\n        for (let i = 0; i < alphaArr.length;\
    \ i++) {\n            alphaArr[i] === alphaArr[i].toUpperCase() ? alphaArr[i]\
    \ = alphaArr[i].toLowerCase() : alphaArr[i] = alphaArr[i].toUpperCase();\n   \
    \     }\n        result = result + alphaArr.join('');\n    } else {\n        result\
    \ = s.split('').reverse().join('');\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));", "    let\
    \ newString: string = \"\";\n    let letters = s.match(/[a-z]/gi);\n    if (letters)\
    \ {\n        for (let i = 0; i < s.length; i++) {\n            if (letters.includes(s[i]))\
    \ {\n                if (s[i] === s[i].toUpperCase()) {\n                    newString\
    \ += s[i].toLowerCase();\n                } else {\n                    newString\
    \ += s[i].toUpperCase();\n                }\n            } else {\n          \
    \      newString += s[i];\n            }\n        }\n    } else {\n        for\
    \ (let i = s.length - 1; i >= 0; i--) {\n            newString += s[i];\n    \
    \    }\n    }\n    return newString;\n}\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\n", "    return s.split('').map(char =>\
    \ /[a-z]/i.test(char) ? char.toUpperCase() === char ? char.toLowerCase() : char.toUpperCase()\
    \ : char).join('');\n}\n", "    if (!/[a-z]/i.test(s)) {\n        return s.split('').reverse().join('');\n\
    \    }\n    let result = '';\n    s.split('').forEach(element => {\n        if\
    \ (/[a-z]/i.test(element)) {\n            result += element.toUpperCase() ===\
    \ element ? element.toLowerCase() : element.toUpperCase();\n        } else {\n\
    \            result += element;\n        }\n    });\n    return result;\n}", " \
    \   let arr = s.split('');\n    let isUpper = false;\n    let isLower = false;\n\
    \    arr.forEach(element => {\n        if (/[A-Z]/.test(element)) {\n        \
    \    isUpper = true;\n        }\n        if (/[a-z]/.test(element)) {\n      \
    \      isLower = true;\n        }\n    });\n    if (isUpper === false && isLower\
    \ === false) {\n        return arr.reverse().join('');\n    }\n    else {\n  \
    \      let rArr = arr.map(element => {\n            if (/[A-Z]/.test(element))\
    \ {\n                return element.toLowerCase();\n            }\n          \
    \  else if (/[a-z]/.test(element)) {\n                return element.toUpperCase();\n\
    \            }\n            else {\n                return element;\n        \
    \    }\n        });\n        return rArr.join('');\n    }\n}\nlet a1 = solve(\"\
    1234\");\nlet a2 = solve(\"ab\");\nlet a3 = solve(\"#a@C\");\nconsole.log(a1);\n\
    console.log(a2);\nconsole.log(a3);", "    if (s.match(/[a-z]/i)) {\n        return\
    \ s.split('').map(char => {\n            if (char.match(/[a-z]/i)) {\n       \
    \         return char.toUpperCase() === char ? char.toLowerCase() : char.toUpperCase();\n\
    \            }\n            return char;\n        }).join('');\n    }\n    return\
    \ s.split('').reverse().join('');\n}", "    let array = s.split('');\n    let\
    \ str: string = '';\n    for (let i = 0; i < array.length; i++) {\n        if\
    \ (array[i] === array[i].toUpperCase()) {\n            str += array[i].toLowerCase();\n\
    \        } else if (array[i] === array[i].toLowerCase()) {\n            str +=\
    \ array[i].toUpperCase();\n        } else {\n            str += array[i];\n  \
    \      }\n    }\n    return str;\n}\nconsole.log(solve(\"#a@C\"));", "  let output:\
    \ string = \"\";\n  for (let i: number = 0; i < s.length; i++) {\n    if (s[i]\
    \ == s[i].toUpperCase()) {\n      output += s[i].toLowerCase();\n    } else if\
    \ (s[i] == s[i].toLowerCase()) {\n      output += s[i].toUpperCase();\n    } else\
    \ {\n      output += s[i];\n    }\n  }\n  return output;\n}\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\n", "  \
    \  let isUpperCase = function (str: string): boolean {\n        return str ===\
    \ str.toUpperCase();\n    }\n    let reverseCase = function (str: string): string\
    \ {\n        return isUpperCase(str) ? str.toLowerCase() : str.toUpperCase();\n\
    \    }\n    let isLetter = function (str: string): boolean {\n        return str.match(/[a-z]/i)\
    \ != null;\n    }\n    let doReverse = function (str: string): string {\n    \
    \    let newStr = \"\";\n        for (let i = 0; i < str.length; i++) {\n    \
    \        if (isLetter(str[i])) {\n                newStr += reverseCase(str[i]);\n\
    \            } else {\n                newStr += str[i];\n            }\n    \
    \    }\n        return newStr;\n    }\n    if (s.match(/[a-z]/i) == null) {\n\
    \        return s.split(\"\").reverse().join(\"\");\n    } else {\n        return\
    \ doReverse(s);\n    }\n}\n", "    const alphaRegex = /[a-z]/i;\n    let a = s.split('');\n\
    \    let b = '';\n    if (s.match(alphaRegex)) {\n        b = a.map(x => x ===\
    \ x.toUpperCase() ? x.toLowerCase() : x.toUpperCase()).join('');\n    } else {\n\
    \        b = a.reverse().join('');\n    }\n    return b;\n}\n", "  const numRegex\
    \ = /[0-9]/;\n  if (!numRegex.test(s)) {\n    return s\n      .split(\"\")\n \
    \     .map(c => (c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase()))\n\
    \      .join(\"\");\n  }\n  return s\n    .split(\"\")\n    .reverse()\n    .join(\"\
    \");\n}\n", "    return s.replace(/[a-z]/gi, (c) => /[a-z]/.test(c) ? c.toUpperCase()\
    \ : c.toLowerCase());\n}\n\nexport default solve;", "    let letters = s.match(/[a-z]/gi);\n\
    \    return letters ? letters.map(x => x === x.toUpperCase() ? x.toLowerCase()\
    \ : x.toUpperCase()).join('') : s.split('').reverse().join('');\n};\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));", "    const\
    \ arr: string[] = s.split('');\n    const letters: string[] = s.split('').filter(letter\
    \ => letter.toLowerCase() !== letter.toUpperCase());\n    const nonLetters: string[]\
    \ = s.split('').filter(letter => letter.toLowerCase() === letter.toUpperCase());\n\
    \    const result: string[] = letters.reverse().concat(nonLetters.reverse());\n\
    \    return result.join('');\n}\n\nconsole.log(solve(\"123\"));\nconsole.log(solve(\"\
    #a@C\"));\nconsole.log(solve(\"0z2\"));\nconsole.log(solve(\"aBc\"));\nconsole.log(solve(\"\
    Za\"));\nconsole.log(solve(\"abcd\"));\nconsole.log(solve(\"AaBbCcDd\"));\nconsole.log(solve(\"\
    AaBbCcDd.\"));\nconsole.log(solve(\"\"));\nconsole.log(solve(\"!@#$%^&*()_+\"\
    ));\nconsole.log(solve(\"1234567890\"));\nconsole.log(solve(\"abcdefghijklmnopqrstuvwxyz\"\
    ));\nconsole.log(solve(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\nconsole.log(solve(\"\
    #()@$#@$\"));\nconsole.log(solve(\"#()@$#@$!\"));\nconsole.log(solve(\"#()@$#@$!0123456789\"\
    ));\nconsole.log(solve(\"!@#$%^&*()_+\"));\nconsole.log(solve(\"!@#$%^&*()_+abcdefghijklmnopqrstuvwxyz\"\
    ));\nconsole.log(solve(\"!@#$%^&*()_+ABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\nconsole.log(solve(\"\
    !@#$%^&*()_+1234567890\"));\nconsole.log(solve(\"!@#$%^&*()_+1234567890ABCDEF",
  "    if (s === s.toUpperCase()) {\n        return s.toLowerCase();\n    } else if\
    \ (s === s.toLowerCase()) {\n        return s.toUpperCase();\n    } else {\n \
    \       return s.split('').map(c => {\n            return c === c.toUpperCase()\
    \ ? c.toLowerCase() : c.toUpperCase();\n        }).join('');\n    }\n}\n\nconsole.log(solve(\"\
    #a@C\"));", "    let result = '';\n    for (let i: number = 0; i < s.length; i++)\
    \ {\n        let char: string = s[i];\n        if (char.toLowerCase() != char.toUpperCase())\
    \ {\n            result += char == char.toLowerCase() ? char.toUpperCase() : char.toLowerCase();\n\
    \        } else {\n            result += char;\n        }\n    }\n    if (result.toLowerCase()\
    \ == result.toUpperCase()) {\n        return s.split('').reverse().join('');\n\
    \    }\n    return result;\n}\n", "    return s.split('').map(c => {\n       \
    \ if (c.match(/[a-z]/i)) {\n            return c === c.toUpperCase() ? c.toLowerCase()\
    \ : c.toUpperCase();\n        }\n        return c;\n    }).reverse().join('');\n\
    }\n", "  const letters = Array.from(s).filter(char => char.match(/[a-z]/i));\n\
    \  return letters.length\n    ? letters.map(char =>\n        char === char.toUpperCase()\
    \ ? char.toLowerCase() : char.toUpperCase()\n      )\n    : s\n        .split(\"\
    \")\n        .reverse()\n        .join(\"\");\n}\n", "    let newString: string\
    \ = \"\";\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase())\
    \ {\n            newString += s[i].toLowerCase();\n        } else if (s[i] ===\
    \ s[i].toLowerCase()) {\n            newString += s[i].toUpperCase();\n      \
    \  } else {\n            newString += s[i];\n        }\n    }\n    return newString.split(\"\
    \").reverse().join(\"\");\n}\nconsole.log(solve(\"#a@C\"));", "    let result\
    \ = '';\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase())\
    \ {\n            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"#a@C\"));", "  return\
    \ s.split('').map(c => \n    c.match(/[a-z]/i) \n      ? c.match(/[a-z]/) ? c.toUpperCase()\
    \ : c.toLowerCase() \n      : c\n  ).reverse().join('');\n}\n\nexport default\
    \ solve;", "    let str = s.split('');\n    let i: number = 0;\n    let result\
    \ = '';\n    while (i < str.length) {\n        if (str[i].match(/[a-z]/i)) {\n\
    \            if (str[i] === str[i].toUpperCase()) {\n                result +=\
    \ str[i].toLowerCase();\n            } else {\n                result += str[i].toUpperCase();\n\
    \            }\n        } else {\n            result += str[i];\n        }\n \
    \       i++;\n    }\n    return result.split('').reverse().join('');\n}\nconsole.log(solve(\"\
    ab\")); //'AB'\nconsole.log(solve(\"#a@C\")); //'#A@c'\nconsole.log(solve(\"1234\"\
    )); //'4321'\nconsole.log(solve(\"12345\")); //'54321'", "    return s.split('').map(e\
    \ => {\n        return isLetter(e) ? reverseCase(e) : e;\n    }).join('');\n}",
  "    let letters: string = \"\";\n    let numbers: string = \"\";\n    let result:\
    \ string = \"\";\n    for (let i: number = 0; i < s.length; i++) {\n        if\
    \ (isNaN(Number(s[i]))) {\n            letters += s[i];\n        } else {\n  \
    \          numbers += s[i];\n        }\n    }\n    for (let i: number = 0; i <\
    \ letters.length; i++) {\n        if (letters[i] === letters[i].toUpperCase())\
    \ {\n            result += letters[i].toLowerCase();\n        } else {\n     \
    \       result += letters[i].toUpperCase();\n        }\n    }\n    let lettersResult:\
    \ string = result.split(\"\").reverse().join(\"\");\n    let numbersResult: string\
    \ = numbers.split(\"\").reverse().join(\"\");\n    return lettersResult + numbersResult;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));", "  if (isNaN(Number(s))) {\n    let reverseCase = (): string => {\n\
    \      return s\n        .split(\"\")\n        .map((char) =>\n          isNaN(Number(char))\
    \ ? flipCase(char) : char\n        )\n        .join(\"\");\n    };\n    return\
    \ reverseCase();\n  } else {\n    return flipCase(s);\n  }\n}\n", "    let newStr\
    \ = \"\";\n    for (let i = 0; i < s.length; i++) {\n        let code = s.charCodeAt(i);\n\
    \        if ((code >= 65 && code <= 90) || (code >= 97 && code <= 122)) {\n  \
    \          newStr += String.fromCharCode(code ^= 32);\n        } else {\n    \
    \        newStr += s[i];\n        }\n    }\n    return newStr;\n}\n", "    let\
    \ res: string = \"\";\n    for (let i = 0; i < s.length; i++) {\n        if (isNaN(+s[i]))\
    \ {\n            if (s[i] === s[i].toUpperCase()) {\n                res += s[i].toLowerCase();\n\
    \            } else {\n                res += s[i].toUpperCase();\n          \
    \  }\n        } else {\n            res += s[i];\n        }\n    }\n    return\
    \ res.split(\"\").reverse().join(\"\");\n}\n", "    return s.split('').map(e=>/[a-z]/i.test(e)?\
    \ e===e.toUpperCase()? e.toLowerCase():e.toUpperCase():e).join('')\n}\n\nconsole.log(solve(\"\
    1234\"))\nconsole.log(solve(\"ab\"))\nconsole.log(solve(\"#a@C\"))", "    let\
    \ result: string = \"\"\n    let upper_alpha: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n    let lower_alpha: string = \"abcdefghijklmnopqrstuvwxyz\"\n    let n: number\
    \ = s.length\n    for (let i: number = 0; i < n; i++) {\n        if (lower_alpha.includes(s[i]))\
    \ {\n            result += s[i].toUpperCase()\n        } else if (upper_alpha.includes(s[i]))\
    \ {\n            result += s[i].toLowerCase()\n        } else {\n            result\
    \ += s[i]\n        }\n    }\n    if (result == s) {\n        let arr: string[]\
    \ = result.split(\"\")\n        result = arr.reverse().join(\"\")\n    }\n   \
    \ return result\n}\n\nconsole.log(solve(\"1234\"))\nconsole.log(solve(\"ab\"))\n\
    console.log(solve(\"#a@C\"))", "    let result: string = \"\";\n    let isThereAnyLetter:\
    \ boolean = false;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i))\
    \ {\n            isThereAnyLetter = true;\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (!isThereAnyLetter) {\n\
    \        result = result.split(\"\").reverse().join(\"\");\n    }\n    return\
    \ result;\n}\n\nconsole.log(solve(\"#a@C\"));", "    let output: string = \"\"\
    ;\n    for (let i: number = 0; i < s.length; i++) {\n        if (s[i] >= \"a\"\
    \ && s[i] <= \"z\") {\n            output += s[i].toUpperCase();\n        } else\
    \ if (s[i] >= \"A\" && s[i] <= \"Z\") {\n            output += s[i].toLowerCase();\n\
    \        } else {\n            output += s[i];\n        }\n    }\n    return output;\n\
    }\n", "    let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }", "    let result = s.split('').map(char => {\n        if (/[a-z]/i.test(char))\
    \ {\n            return char.toUpperCase() === char ? char.toLowerCase() : char.toUpperCase();\n\
    \        }\n        return char;\n    }).join('');\n    return result.length >\
    \ 0 ? result : s.split('').reverse().join('');\n}\n\nconsole.log(solve(\"1234\"\
    ));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\nconsole.log(solve(\"\
    AAA\"));\nconsole.log(solve(\"\"));\nconsole.log(solve(\"123a\"));", "  let firstLetterIndex\
    \ = 0;\n  while (s[firstLetterIndex] && !s[firstLetterIndex].match(/[a-z]/i))\
    \ {\n    firstLetterIndex++;\n  }\n  const letters = s.slice(firstLetterIndex).split(\"\
    \");\n  let result = s.slice(0, firstLetterIndex);\n  let currentLetter;\n  while\
    \ (letters.length) {\n    currentLetter = letters.pop();\n    result += currentLetter\
    \ === currentLetter.toUpperCase() ? currentLetter.toLowerCase() : currentLetter.toUpperCase();\n\
    \  }\n  return result;\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));", "    let toReturn: string = '';\n   \
    \ for (let letter of s) {\n        if (isAlphabet(letter)) {\n            toReturn\
    \ += toUpperOrLower(letter);\n        } else {\n            toReturn += letter;\n\
    \        }\n    }\n    return toReturn.length === 0 ? s.split('').reverse().join('')\
    \ : toReturn;\n}\n", "    let arr = s.split('');\n    if (arr.some(x => isLetter(x)))\
    \ {\n        for (let i = 0; i < arr.length; i++) {\n            if (isLetter(arr[i]))\
    \ {\n                arr[i] = reverseCase(arr[i]);\n            }\n        }\n\
    \    } else {\n        return arr.reverse().join('');\n    }\n    return arr.join('');\n\
    }", "    const containsLetters = /[a-z]/gi;\n    let input = s.split('');\n  \
    \  let isLetter = false;\n    for (let i in input) {\n        if (containsLetters.test(input[i]))\
    \ {\n            isLetter = true;\n            break;\n        }\n    }\n    if\
    \ (isLetter) {\n        for (let i in input) {\n            if (containsLetters.test(input[i]))\
    \ {\n                input[i] = input[i].toUpperCase() === input[i] ? input[i].toLowerCase()\
    \ : input[i].toUpperCase();\n            }\n        }\n    } else {\n        input\
    \ = input.reverse();\n    }\n    return input.join('');\n}", "    return s.split('').map(char\
    \ => char.toLowerCase() === char ? char.toUpperCase() : char.toLowerCase()).join('');\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));", "    let result = \"\";\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));", "  if (s.length === 0) {\n    return \"\";\n  }\n  let splitS = s.split(\"\
    \");\n  for (let i = 0; i < splitS.length; i++) {\n    if (splitS[i] === splitS[i].toUpperCase())\
    \ {\n      splitS[i] = splitS[i].toLowerCase();\n    } else if (splitS[i] ===\
    \ splitS[i].toLowerCase()) {\n      splitS[i] = splitS[i].toUpperCase();\n   \
    \ }\n  }\n  return splitS.join(\"\");\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));", "    let result = '';\n    let letters\
    \ = [];\n    for (let i = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i))\
    \ {\n            letters.push(s[i]);\n        }\n    }\n    if (letters.length\
    \ > 0) {\n        for (let j = 0; j < s.length; j++) {\n            if (s[j].match(/[a-z]/i))\
    \ {\n                if (s[j] === s[j].toUpperCase()) {\n                    result\
    \ += s[j].toLowerCase();\n                } else {\n                    result\
    \ += s[j].toUpperCase();\n                }\n            } else {\n          \
    \      result += s[j];\n            }\n        }\n    } else {\n        for (let\
    \ k = s.length - 1; k >= 0; k--) {\n            result += s[k];\n        }\n \
    \   }\n    return result;\n}\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\n", "    let result: string = '';\n   \
    \ let n: number = s.length;\n    let i: number = 0;\n    while (i < n) {\n   \
    \     let ch: string = s[i];\n        if (isNaN(Number(ch))) {\n            if\
    \ (ch === ch.toUpperCase()) {\n                result += ch.toLowerCase();\n \
    \           } else {\n                result += ch.toUpperCase();\n          \
    \  }\n        } else {\n            result += ch;\n        }\n        i++;\n \
    \   }\n    return result;\n}\n", "    let char = '';\n    let res = '';\n    for\
    \ (let i = 0; i < s.length; i++) {\n        char = s[i];\n        if (char ===\
    \ char.toUpperCase()) {\n            res += char.toLowerCase();\n        } else\
    \ if (char === char.toLowerCase()) {\n            res += char.toUpperCase();\n\
    \        } else {\n            res += char;\n        }\n    }\n    return res;\n\
    }\nconsole.log(solve(\"#a@C\"));", "    let result: string = \"\";\n    if (s.match(/[a-z]/gi))\
    \ {\n        for (let i: number = 0; i < s.length; i++) {\n            if (s[i]\
    \ === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n \
    \           } else {\n                result += s[i].toUpperCase();\n        \
    \    }\n        }\n    } else {\n        for (let i: number = s.length - 1; i\
    \ >= 0; i--) {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"ab#C\"));\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    #A@c\"));\n", "    // - Information\n    // 1. Check for string\n    // 2. Reverse\
    \ the string using split and reverse\n    // 3. Iterate and test each char using\
    \ a regex to check for a letter\n    // 4. If it is a letter change case, else\
    \ leave as is\n    // 5. Return the string\n\n    if (s.length === 0) {\n    \
    \    return s;\n    }\n\n    let splitString = s.split('').reverse();\n    let\
    \ regex = /[a-z]/i;\n\n    for (let i = 0; i < splitString.length; i++) {\n  \
    \      if (regex.test(splitString[i])) {\n            splitString[i] = splitString[i].toUpperCase();\n\
    \        } else {\n            splitString[i] = splitString[i].toLowerCase();\n\
    \        }\n    }\n\n    return splitString.join('');\n}\n\nconsole.log(solve('1a'));",
  "  if (!/[a-z]/i.test(s)) {\n    return s.split('').reverse().join('');\n  }\n \
    \ return s.split('').map(function (c) {\n    if (/[a-z]/i.test(c)) {\n      return\
    \ c.toUpperCase() === c ? c.toLowerCase() : c.toUpperCase();\n    }\n    return\
    \ c;\n  }).join('');\n}\n\nconsole.log(solve(\"1234\")); // \"4321\"\nconsole.log(solve(\"\
    ab\")); // \"AB\"\nconsole.log(solve(\"#a@C\")); // \"#A@c\"", "  if (s.length\
    \ == 0) return s;\n  let result = \"\";\n  for (let i = 0; i < s.length; i++)\
    \ {\n    const char = s[i];\n    if (char.match(/[a-z]/)) {\n      result += char.toUpperCase();\n\
    \    } else if (char.match(/[A-Z]/)) {\n      result += char.toLowerCase();\n\
    \    } else {\n      result += char;\n    }\n  }\n  return result;\n}\n\ndescribe(\"\
    solve()\", () => {\n  test(\"solve(1234) should return 4321\", () => {\n    expect(solve(\"\
    1234\")).toBe(\"4321\");\n  });\n  test(\"solve(ab) should return AB\", () =>\
    \ {\n    expect(solve(\"ab\")).toBe(\"AB\");\n  });\n  test(\"solve(#a@C) should\
    \ return #A@c\", () => {\n    expect(solve(\"#a@C\")).toBe(\"#A@c\");\n  });\n\
    });", "    let newString: string = '';\n    for (let i: number = 0; i < s.length;\
    \ i++) {\n        let curr: string = s[i];\n        if (curr === curr.toUpperCase())\
    \ {\n            newString += curr.toLowerCase();\n        } else if (curr ===\
    \ curr.toLowerCase()) {\n            newString += curr.toUpperCase();\n      \
    \  } else {\n            newString += curr;\n        }\n    }\n    return s.length\
    \ === 0 ? s : newString;\n}\n\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"Hello, World!\"\
    ));\nconsole.log(solve(\"\"));", "    let letters: number = 0;\n    let str: string\
    \ = \"\";\n    for (let char of s) {\n        if (char.match(/[a-z]/i)) {\n  \
    \          letters++;\n            if (char === char.toUpperCase()) {\n      \
    \          str += char.toLowerCase();\n            } else {\n                str\
    \ += char.toUpperCase();\n            }\n        } else {\n            str +=\
    \ char;\n        }\n    }\n    if (letters) {\n        return str;\n    } else\
    \ {\n        return s.split(\"\").reverse().join(\"\");\n    }\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));", "    let\
    \ result = \"\";\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] ==\
    \ s[i].toUpperCase()) {\n            result += s[i].toLowerCase();\n        }\
    \ else if (s[i] == s[i].toLowerCase()) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    if (result.toUpperCase()\
    \ === result) {\n        return result.split(\"\").reverse().join(\"\");\n   \
    \ }\n    return result;\n}\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));", "    let str: string = '';\n    let str1:\
    \ string = '';\n    let str2: string = '';\n    let str3: string = '';\n    let\
    \ check: boolean = false;\n    for (let i = 0; i < s.length; i++) {\n        if\
    \ (s[i] === s[i].toUpperCase()) {\n            str += s[i].toLowerCase();\n  \
    \          check = true;\n        } else if (s[i] === s[i].toLowerCase()) {\n\
    \            str += s[i].toUpperCase();\n            check = true;\n        }\
    \ else {\n            str += s[i];\n        }\n    }\n    if (check) {\n     \
    \   return str;\n    } else {\n        for (let i = s.length - 1; i >= 0; i--)\
    \ {\n            str1 += s[i];\n        }\n        return str1;\n    }\n}\n\n\
    console.log(solve(\"#a@C\"));\n", "    const regex = /[a-z]/;\n    let newString\
    \ = \"\";\n    if (!regex.test(s)) {\n        return s.split(\"\").reverse().join(\"\
    \");\n    } else {\n        for (let i = 0; i < s.length; i++) {\n           \
    \ if (regex.test(s[i])) {\n                if (s[i] === s[i].toUpperCase()) {\n\
    \                    newString += s[i].toLowerCase();\n                } else\
    \ {\n                    newString += s[i].toUpperCase();\n                }\n\
    \            } else {\n                newString += s[i];\n            }\n   \
    \     }\n        return newString;\n    }\n}", "    return s.replace(/[a-z]/gi,\
    \ (match: string) => {\n        return match === match.toUpperCase() ? match.toLowerCase()\
    \ : match.toUpperCase();\n    });\n}\nconsole.log(solve(\"#a@C\"));", "    let\
    \ letters = \"\";\n    for (let i = 0; i < s.length; i++) {\n        if (s[i].toLowerCase()\
    \ != s[i].toUpperCase()) {\n            letters += s[i];\n        }\n    }\n \
    \   if (letters.length == 0) {\n        let res = \"\";\n        for (let i =\
    \ s.length - 1; i >= 0; i--) {\n            res += s[i];\n        }\n        return\
    \ res;\n    }\n    else {\n        let res = \"\";\n        for (let i = 0; i\
    \ < s.length; i++) {\n            if (s[i].toLowerCase() != s[i].toUpperCase())\
    \ {\n                if (s[i] == s[i].toLowerCase()) {\n                    res\
    \ += s[i].toUpperCase();\n                }\n                else {\n        \
    \            res += s[i].toLowerCase();\n                }\n            }\n  \
    \          else {\n                res += s[i];\n            }\n        }\n  \
    \      return res;\n    }\n}", "    let result: string = \"\";\n    for (let i\
    \ = 0; i < s.length; i++) {\n        if (s[i] >= \"a\" && s[i] <= \"z\") {\n \
    \           result += s[i].toUpperCase();\n        } else if (s[i] >= \"A\" &&\
    \ s[i] <= \"Z\") {\n            result += s[i].toLowerCase();\n        } else\
    \ {\n            result += s[i];\n        }\n    }\n    if (result.length ===\
    \ s.length) {\n        return result;\n    } else {\n        return s.split(\"\
    \").reverse().join(\"\");\n    }\n}\n", "    let res: string = '';\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (isNaN(Number(s[i]))) {\n          \
    \  if (s[i] === s[i].toUpperCase()) {\n                res += s[i].toLowerCase();\n\
    \            } else {\n                res += s[i].toUpperCase();\n          \
    \  }\n        } else {\n            res += s[i];\n        }\n    }\n    if (s.length\
    \ > 0 && isNaN(Number(s[0]))) {\n        return res;\n    } else {\n        return\
    \ res.split('').reverse().join('');\n    }\n}\nconsole.log(solve(\"1234\"));\n\
    console.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\n", "    let letters\
    \ = /[a-zA-Z]/;\n    let newStr = \"\";\n    for (let char of s) {\n        if\
    \ (letters.test(char)) {\n            if (char === char.toUpperCase()) {\n   \
    \             newStr += char.toLowerCase();\n            } else {\n          \
    \      newStr += char.toUpperCase();\n            }\n        } else {\n      \
    \      newStr += char;\n        }\n    }\n    return newStr;\n}\n\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\nconsole.log(solve(\"1234\"));", "    if\
    \ (s.match(/[a-z]/gi)) {\n        return s.split('').map(c => {\n            if\
    \ (c.match(/[a-z]/gi)) {\n                return c === c.toUpperCase() ? c.toLowerCase()\
    \ : c.toUpperCase();\n            }\n            return c;\n        }).join('');\n\
    \    }\n    return s.split('').reverse().join('');\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));", "    let\
    \ hasLetters = /\\w/.test(s);\n    let sArr = s.split('');\n    if (!hasLetters)\
    \ {\n        return sArr.reverse().join('');\n    } else {\n        return sArr.map(char\
    \ => {\n            if (char.match(/[a-z]/i)) {\n                if (char.match(/[a-z]/))\
    \ {\n                    return char.toUpperCase();\n                } else {\n\
    \                    return char.toLowerCase();\n                }\n         \
    \   } else {\n                return char;\n            }\n        }).join('');\n\
    \    }\n}", "    let r: string = '';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i].toLowerCase() != s[i].toUpperCase()) {\n            r += s[i].toLowerCase()\
    \ == s[i] ? s[i].toUpperCase() : s[i].toLowerCase();\n        } else {\n     \
    \       r += s[i];\n        }\n    }\n    return r;\n}\nconsole.log(solve(\"#a@C\"\
    ));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"1234\"));\n", "    if(/^[a-zA-Z]+$/.test(s))\
    \ {\n        let result = '';\n        for(let i=0; i<s.length; i++) {\n     \
    \       if(s[i] == s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n\
    \            }\n            else {\n                result += s[i].toUpperCase();\n\
    \            }\n        }\n        return result;\n    }\n    else {\n       \
    \ return s.split('').reverse().join('');\n    }\n}\n\nconsole.log(solve(\"AbCdE1234\"\
    ));", "  // Write your code here\n  const reverse = s.split('').map(el => {\n\
    \    const val = parseInt(el);\n    if (val) {\n      return val;\n    } else\
    \ if (el === el.toUpperCase()) {\n      return el.toLowerCase();\n    } else {\n\
    \      return el.toUpperCase();\n    }\n  }).reverse().join('');\n  return s.length\
    \ === reverse.length ? reverse : s;\n}\n\nsolve(\"1234\");\nsolve(\"ab\");\nsolve(\"\
    #a@C\");\nsolve(\"#A@c\");\nsolve(\"#a@Z\");\nsolve(\"#A@z\");\nsolve(\"1#2@3A4\"\
    );\nsolve(\"1#2@3a4\");\nsolve(\"\");\nsolve(\"1\");\nsolve(\"#\");\nsolve(\"\
    @\");\nsolve(\"#@\");\nsolve(\"@@\");\nsolve(\"#@!\");\nsolve(\"@!\");\nsolve(\"\
    1234567890\");\nsolve(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\");\nsolve(\"abcdefghijklmnopqrstuvwxyz\"\
    );\nsolve(\"1Aa2bB3cC4dD5eE6fF7gG8hH9iI0jJ\");\nsolve(\"12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901",
  "    let arr: string[] = s.split('');\n    let isString: boolean = false;\n    for\
    \ (let i: number = 0; i < arr.length; i++) {\n        if (arr[i] !== '1' && arr[i]\
    \ !== '2' && arr[i] !== '3' && arr[i] !== '4' && arr[i] !== '5' && arr[i] !==\
    \ '6' && arr[i] !== '7' && arr[i] !== '8' && arr[i] !== '9' && arr[i] !== '0'\
    \ && arr[i] !== '*' && arr[i] !== '!' && arr[i] !== '#' && arr[i] !== '$' && arr[i]\
    \ !== '%' && arr[i] !== '&' && arr[i] !== ',' && arr[i] !== '.' && arr[i] !==\
    \ '?' && arr[i] !== '@' && arr[i] !== '(' && arr[i] !== ')' && arr[i] !== '-'\
    \ && arr[i] !== '_' && arr[i] !== '+' && arr[i] !== '=' && arr[i] !== '`' && arr[i]\
    \ !== '~' && arr[i] !== '>' && arr[i] !== '<' && arr[i] !== '|' && arr[i] !==\
    \ '{' && arr[i] !== '}' && arr[i] !== ']' && arr[i] !== '[' && arr[i] !== ';'\
    \ && arr[i] !== ':' && arr[i] !== '\"' && arr[i] !== '\\'' && arr[i] !== '\\\\\
    ' && arr[i] !== '/' && arr[i] !== ' ') {\n            isString = true;\n     \
    \   }\n    }\n    if (isString === false) {\n        return arr.reverse().join('');\n\
    \    }\n    else {\n        for (let i: number = 0; i < arr.length", "    if(s.length\
    \ === 0){\n        return s;\n    }\n\n    let revString: string = \"\";\n   \
    \ for(let i: number = 0; i < s.length; i++){\n        if(s[i] >= \"a\" && s[i]\
    \ <= \"z\"){\n            revString += s[i].toUpperCase();\n        } else if(s[i]\
    \ >= \"A\" && s[i] <= \"Z\"){\n            revString += s[i].toLowerCase();\n\
    \        } else {\n            revString += s[i];\n        }\n    }\n    return\
    \ revString;\n}\n\nconsole.log(solve(\"#a@C\"));\n", "    const change = (c: string):\
    \ string => c == c.toUpperCase() ? c.toLowerCase() : c.toUpperCase();\n    return\
    \ s.split('').map(change).join('');\n}\nconsole.log(solve(\"1234\")); // \"4321\"\
    \nconsole.log(solve(\"ab\")); // \"AB\"\nconsole.log(solve(\"#a@C\")); // \"#A@c\"",
  "    const characters = s.split('');\n    const letters = characters.filter(c =>\
    \ {\n        return /[a-z]/i.test(c);\n    });\n    if (letters.length > 0) {\n\
    \        return characters.map(c => {\n            if (/[a-z]/i.test(c)) {\n \
    \               if (c === c.toUpperCase()) {\n                    return c.toLowerCase();\n\
    \                } else {\n                    return c.toUpperCase();\n     \
    \           }\n            } else {\n                return c;\n            }\n\
    \        }).join('');\n    } else {\n        return characters.reverse().join('');\n\
    \    }\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\nconsole.log(solve(\"aBc\"));\nconsole.log(solve(\"A#%c\"));\nconsole.log(solve(\"\
    567\"));", "    let ans = '';\n    let alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    let alpha2 = 'abcdefghijklmnopqrstuvwxyz';\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (alpha.includes(s[i])) {\n            ans += alpha2[alpha.indexOf(s[i])];\n\
    \        } else if (alpha2.includes(s[i])) {\n            ans += alpha[alpha2.indexOf(s[i])];\n\
    \        } else {\n            ans += s[i];\n        }\n    }\n    return ans;\n\
    }\n", "  if (s.match(/[a-z]/gi)) {\n    return s\n      .split(\"\")\n      .map(char\
    \ => {\n        if (char === char.toUpperCase()) {\n          return char.toLowerCase();\n\
    \        } else if (char === char.toLowerCase()) {\n          return char.toUpperCase();\n\
    \        } else {\n          return char;\n        }\n      })\n      .join(\"\
    \");\n  } else {\n    return s\n      .split(\"\")\n      .reverse()\n      .join(\"\
    \");\n  }\n}\n", "  if (s.length === 0) {\n    return \"\";\n  }\n  const arr:\
    \ string[] = s.split(\"\");\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] === arr[i].toUpperCase()) {\n      arr[i] = arr[i].toLowerCase();\n\
    \    } else if (arr[i] === arr[i].toLowerCase()) {\n      arr[i] = arr[i].toUpperCase();\n\
    \    }\n  }\n  return arr.join(\"\");\n}", "    let letters = s.split('').filter(c\
    \ => c.toLowerCase() != c.toUpperCase());\n    if(letters.length == 0) {\n   \
    \     return s.split('').reverse().join('');\n    }\n    let reverse = s.split('').map(c\
    \ => {\n        if(c == c.toLowerCase()) {\n            return c.toUpperCase();\n\
    \        } else {\n            return c.toLowerCase();\n        }\n    }).join('');\n\
    \    return reverse;\n}\n", "    let output: string = '';\n    if (s.length ===\
    \ 0) {\n        return '';\n    }\n    for (let i: number = 0; i < s.length; i++)\
    \ {\n        if (isNaN(Number(s[i]))) {\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                output += s[i].toLowerCase();\n            } else {\n   \
    \             output += s[i].toUpperCase();\n            }\n        } else {\n\
    \            output += s[i];\n        }\n    }\n    return output;\n}\nconsole.log(solve(\"\
    #a@C\"));\n", "  return s.split('').reduce((acc, c) => {\n    return acc += /[a-z]/i.test(c)\
    \ ? c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase() : c;\n  }, '');\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));", "    let result: string = '';\n    let allLetters: boolean = false;\n\
    \    for (let i: number = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i))\
    \ {\n            allLetters = true;\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (!allLetters) {\n     \
    \   result = s.split('').reverse().join('');\n    }\n    return result;\n}", " \
    \   return s.replace(/[a-z]/gi, s => s.toUpperCase() === s ? s.toLowerCase() :\
    \ s.toUpperCase());\n}\n", "    let hasLetter = false;\n    const stringArr =\
    \ s.split('');\n    stringArr.forEach((char, index) => {\n        if (isNaN(+char))\
    \ {\n            hasLetter = true;\n            const charCode = char.charCodeAt(0);\n\
    \            const nextCaseCharCode = charCode === 65 || charCode === 97 ? charCode\
    \ + 32 : charCode - 32;\n            stringArr[index] = String.fromCharCode(nextCaseCharCode);\n\
    \        }\n    });\n    return hasLetter ? stringArr.join('') : stringArr.reverse().join('');\n\
    }\n\nconsole.log(solve('1234'));\nconsole.log(solve('ab'));\nconsole.log(solve('#a@C'));",
  "    let letters: string = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    let result: string = '';\n    for (let i = 0; i < s.length; i++) {\n    \
    \    if (letters.indexOf(s[i]) > -1) {\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    return result;\n}\n", "  \
    \  let reversedString = '';\n    let isNoLetters = true;\n    for (let i = 0;\
    \ i < s.length; i++) {\n        if (s[i] !== s[i].toLowerCase()) {\n         \
    \   reversedString += s[i].toLowerCase();\n            isNoLetters = false;\n\
    \        } else if (s[i] !== s[i].toUpperCase()) {\n            reversedString\
    \ += s[i].toUpperCase();\n            isNoLetters = false;\n        } else {\n\
    \            reversedString += s[i];\n        }\n    }\n    if (isNoLetters) {\n\
    \        reversedString = s.split('').reverse().join('');\n    }\n    return reversedString;\n\
    }\n", "    let str: string = '';\n    if (s.match(/^[A-Za-z]+$/)) {\n        for\
    \ (let char of s) {\n            if (char.match(/^[A-Z]+$/)) {\n             \
    \   str += char.toLowerCase();\n            } else if (char.match(/^[a-z]+$/))\
    \ {\n                str += char.toUpperCase();\n            } else {\n      \
    \          str += char;\n            }\n        }\n    } else {\n        for (let\
    \ i = s.length - 1; i >= 0; i--) {\n            str += s[i];\n        }\n    }\n\
    \    return str;\n}\nconsole.log(solve(\"1234\")); //\"4321\"\nconsole.log(solve(\"\
    ab\")); //\"AB\"\nconsole.log(solve(\"#a@C\")); //\"#A@c\"\n", "  let result =\
    \ \"\";\n  let isLetter = false;\n  let reversedString = \"\";\n  for (let i =\
    \ 0; i < s.length; i++) {\n    if (s[i].match(/[a-z]/i)) {\n      isLetter = true;\n\
    \      reversedString += s[i];\n    } else {\n      if (isLetter) {\n        for\
    \ (let j = reversedString.length - 1; j >= 0; j--) {\n          if (reversedString[j]\
    \ === reversedString[j].toUpperCase()) {\n            result += reversedString[j].toLowerCase();\n\
    \          } else {\n            result += reversedString[j].toUpperCase();\n\
    \          }\n        }\n        isLetter = false;\n        reversedString = \"\
    \";\n      }\n      result += s[i];\n    }\n  }\n  if (isLetter) {\n    for (let\
    \ j = reversedString.length - 1; j >= 0; j--) {\n      if (reversedString[j] ===\
    \ reversedString[j].toUpperCase()) {\n        result += reversedString[j].toLowerCase();\n\
    \      } else {\n        result += reversedString[j].toUpperCase();\n      }\n\
    \    }\n  }\n  return result;\n}\n", "    const isAlpha = (c: string) => c.toLowerCase()\
    \ !== c.toUpperCase();\n    let letters = s.split('').filter(isAlpha).reverse();\n\
    \    if (letters.length === 0) {\n        return s.split('').reverse().join('');\n\
    \    }\n    let remainingLetters = letters.length;\n    return s.split('').map(c\
    \ => {\n        if (isAlpha(c)) {\n            remainingLetters--;\n         \
    \   return isUpperCase(c) ? c.toLowerCase() : c.toUpperCase();\n        }\n  \
    \      if (remainingLetters === 0) {\n            return c;\n        }\n     \
    \   return letters.pop()!;\n    }).join('');\n}\n", "  return s\n    .split(\"\
    \")\n    .map(x =>\n      x.match(/[a-z]/i) ? (x === x.toUpperCase() ? x.toLowerCase()\
    \ : x.toUpperCase()) : x\n    )\n    .join(\"\");\n}\n\nconsole.log(solve(\"1234\"\
    ));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));", "    return\
    \ s.replace(/[a-z]/gi, (c) => {\n        return c.toUpperCase() === c ? c.toLowerCase()\
    \ : c.toUpperCase();\n    });\n}\n\nconsole.log(solve(\"#a@C\"));\n", "    if\
    \ (s.length === 0) {\n        return s;\n    }\n    return s.split('').map(x =>\
    \ isLetter(x) ? toggleCase(x) : x).join('');\n}\n", "    const letters = s.match(/[a-z]/gi);\n\
    \    if (letters) {\n        const swapped = letters.map(l => l === l.toUpperCase()\n\
    \            ? l.toLowerCase()\n            : l.toUpperCase());\n        let j\
    \ = 0;\n        return s.split('').map(c => {\n            if (/[a-z]/i.test(c))\
    \ {\n                return swapped[j++];\n            }\n            return c;\n\
    \        }).join('');\n    }\n    return s.split('').reverse().join('');\n}\n\n\
    console.log(solve(\"#a@C\"));", "  let letters: string[] = s.split('');\n  let\
    \ newString: string = \"\";\n  for (let i = 0; i < letters.length; i++) {\n  \
    \  if (letters[i] === letters[i].toUpperCase()) {\n      newString += letters[i].toLowerCase();\n\
    \    } else if (letters[i] === letters[i].toLowerCase()) {\n      newString +=\
    \ letters[i].toUpperCase();\n    } else {\n      newString += letters[i];\n  \
    \  }\n  }\n  return newString;\n}\n", "    let letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    let result = '';\n    for (let letter of s) {\n        if (letters.includes(letter))\
    \ {\n            if (letter == letter.toUpperCase()) {\n                result\
    \ += letter.toLowerCase();\n            } else {\n                result += letter.toUpperCase();\n\
    \            }\n        } else {\n            result += letter;\n        }\n \
    \   }\n    return result.split('').reverse().join('');\n}\n\nconsole.log(solve(\"\
    #a@C\"));", "    let newStr = \"\";\n    if (s.match(/^[a-zA-Z]+$/)) {\n     \
    \   for (let i = 0; i < s.length; i++) {\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                newStr += s[i].toLowerCase();\n            } else {\n   \
    \             newStr += s[i].toUpperCase();\n            }\n        }\n    } else\
    \ {\n        for (let i = s.length - 1; i >= 0; i--) {\n            newStr +=\
    \ s[i];\n        }\n    }\n    return newStr;\n}\n\nconsole.log(solve(\"aBcD\"\
    )); //\"AbCd\"\nconsole.log(solve(\"1234\")); //\"4321\"\nconsole.log(solve(\"\
    @#$%\")); //\"%$#@\"\nconsole.log(solve(\"ABC\")); //\"abc\"\nconsole.log(solve(\"\
    #a@C\")); //\"#A@c\"\nconsole.log(solve(\"\")); //\"\"\nconsole.log(solve(\" \"\
    )); //\" \"\nconsole.log(solve(\"AbCd\")); //\"aBcD\"\nconsole.log(solve(\"A B\
    \ C D\")); //\"a b c d\"\nconsole.log(solve(\"aBcDeFgH\")); //\"AbCdEfGh\"\nconsole.log(solve(\"\
    aBcDe FgH\")); //\"AbCdE fGh\"\nconsole.log(solve(\"a B c D e F g H\")); //\"\
    A b C d E f G h\"\nconsole.log(solve(\"aBcDe1FgH\")); //\"AbCdE1fGh\"\nconsole.log(solve(\"\
    aBcDe1FgH2\")); //\"AbCdE1fGh2\"\nconsole.log(solve(\"aBcDe1 FgH2\")); //\"AbCdE1\
    \ fGh2\"\nconsole.log(solve(\"aBcDe1 FgH2\")); //\"AbCdE1 fGh2", "    let strArray\
    \ = s.split('');\n    let hasLetters = strArray.some(char => char !== char.toUpperCase()\
    \ && char !== char.toLowerCase());\n    if (hasLetters) {\n        return strArray.map(char\
    \ => {\n            if (char === char.toUpperCase()) {\n                return\
    \ char.toLowerCase();\n            } else if (char === char.toLowerCase()) {\n\
    \                return char.toUpperCase();\n            } else {\n          \
    \      return char;\n            }\n        }).join('');\n    } else {\n     \
    \   return strArray.reverse().join('');\n    }\n}\n", "    let result = \"\";\n\
    \    for (let i = 0; i < s.length; i++) {\n        const char = s[i];\n      \
    \  if (char.match(/[a-z]/i)) {\n            if (char === char.toUpperCase()) {\n\
    \                result += char.toLowerCase();\n            } else {\n       \
    \         result += char.toUpperCase();\n            }\n        } else {\n   \
    \         result += char;\n        }\n    }\n    return result.length ? result\
    \ : [...s].reverse().join(\"\");\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));", "    let newStr = s.split('').reverse().join('');\n\
    \    let noLetters = true;\n    for (let i = 0; i < newStr.length; i++) {\n  \
    \      if (/[a-z]/i.test(newStr[i])) {\n            noLetters = false;\n     \
    \       newStr = newStr.replace(newStr[i], newStr[i].toUpperCase());\n       \
    \ }\n    }\n    if (noLetters) {\n        return newStr;\n    }\n    else {\n\
    \        return newStr.toLowerCase();\n    }\n}\nconsole.log(solve(\"1234\"));\n\
    console.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));", "    let sArr = s.split('');\n\
    \    let result = '';\n    let isContainLetter = false;\n    sArr.forEach(char\
    \ => {\n        if (isLetter(char)) {\n            isContainLetter = true;\n \
    \           result += reverseCase(char);\n        } else {\n            result\
    \ += char;\n        }\n    });\n    if (!isContainLetter) {\n        result =\
    \ sArr.reverse().join('');\n    }\n    return result;\n}\n\nconst isLetter = (char:\
    \ string): boolean => {\n    let code = char.charCodeAt(0);\n    return (code\
    \ >= 65 && code <= 90) || (code >= 97 && code <= 122);\n}\n\nconst reverseCase\
    \ = (char: string): string => {\n    let code = char.charCodeAt(0);\n    if (code\
    \ >= 65 && code <= 90) {\n        return String.fromCharCode(code + 32);\n   \
    \ } else if (code >= 97 && code <= 122) {\n        return String.fromCharCode(code\
    \ - 32);\n    }\n    return char;\n}\n\nexport { solve }", "    let result = '';\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] >= 'a' && s[i] <=\
    \ 'z') {\n            result += s[i].toUpperCase();\n        } else if (s[i] >=\
    \ 'A' && s[i] <= 'Z') {\n            result += s[i].toLowerCase();\n        }\
    \ else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n", "  let containsLetter = false;\n  let result = \"\";\n  for (let i = 0;\
    \ i < s.length; i++) {\n    let c = s[i];\n    if (isLetter(c)) {\n      containsLetter\
    \ = true;\n      if (isUpperCase(c)) {\n        result += c.toLowerCase();\n \
    \     } else {\n        result += c.toUpperCase();\n      }\n    } else {\n  \
    \    result += c;\n    }\n  }\n  if (!containsLetter) {\n    return result.split(\"\
    \").reverse().join(\"\");\n  }\n  return result;\n}\n", "    let letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \    let arr = []\n    let result = ''\n    let reverse = true\n    for (let i\
    \ = 0; i < s.length; i++) {\n        arr.push(s[i])\n        if (letters.includes(s[i]))\
    \ {\n            reverse = false\n        }\n    }\n    if (reverse) {\n     \
    \   arr.reverse()\n    } else {\n        for (let i = 0; i < arr.length; i++)\
    \ {\n            if (letters.includes(arr[i])) {\n                if (arr[i] ===\
    \ arr[i].toUpperCase()) {\n                    arr[i] = arr[i].toLowerCase()\n\
    \                } else {\n                    arr[i] = arr[i].toUpperCase()\n\
    \                }\n            }\n        }\n    }\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        result += arr[i]\n    }\n    return result\n}\n\nconsole.log(solve(\"\
    1234\"))\nconsole.log(solve(\"ab\"))\nconsole.log(solve(\"#a@C\"))", "    let\
    \ stringArr = s.split('');\n    let newArr = [];\n    let alpha = 'abcdefghijklmnopqrstuvwxyz'.split('');\n\
    \    let alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n    let result =\
    \ '';\n    for (let i = 0; i < stringArr.length; i++) {\n        if (alpha.includes(stringArr[i]))\
    \ {\n            newArr.push(stringArr[i].toUpperCase());\n        } else if (alphabet.includes(stringArr[i]))\
    \ {\n            newArr.push(stringArr[i].toLowerCase());\n        } else {\n\
    \            newArr.push(stringArr[i]);\n        }\n    }\n    for (let i = 0;\
    \ i < newArr.length; i++) {\n        result += newArr[i];\n    }\n    return result;\n\
    }\n\nconsole.log(solve('ab'));\nconsole.log(solve('#a@C'));\nconsole.log(solve('1234'));",
  "    let result: string = \"\";\n    for (let i = 0; i < s.length; i++) {\n    \
    \    if ((s[i] >= \"a\" && s[i] <= \"z\") || (s[i] >= \"A\" && s[i] <= \"Z\"))\
    \ {\n            if (s[i] == s[i].toUpperCase()) {\n                result +=\
    \ s[i].toLowerCase();\n            } else {\n                result += s[i].toUpperCase();\n\
    \            }\n        } else {\n            result += s[i];\n        }\n   \
    \ }\n    return result.length > 0 ? result : s.split(\"\").reverse().join(\"\"\
    );\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n", "    // let upperStr: string = s.toUpperCase();\n    // let strLength:\
    \ number = s.length;\n    // let newStr: string = \"\";\n    // for (let i: number\
    \ = 0; i < strLength; i++) {\n    //     if (s[i] !== upperStr[i]) {\n    // \
    \        newStr += upperStr[i];\n    //     } else {\n    //         newStr +=\
    \ s[i];\n    //     }\n    // }\n    // return newStr;\n    const newStr: string\
    \ = s.split(\"\").map(char => {\n        return /[a-z]/i.test(char) ?\n      \
    \      char === char.toUpperCase() ? char.toLowerCase() : char.toUpperCase() :\n\
    \            char;\n    }).join(\"\");\n    return newStr;\n}\nconsole.log(solve(\"\
    #a@C\"));", "    let result: string = '';\n    for (let i = 0; i < s.length; i++)\
    \ {\n        if (!isNaN(Number(s[i]))) {\n            result = s[i] + result;\n\
    \        } else {\n            if (s[i] === s[i].toUpperCase()) {\n          \
    \      result = s[i].toLowerCase() + result;\n            } else {\n         \
    \       result = s[i].toUpperCase() + result;\n            }\n        }\n    }\n\
    \    return result;\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\n", "  let isALetter = false;\n  let newStr\
    \ = \"\";\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === s[i].toUpperCase())\
    \ {\n      newStr += s[i].toLowerCase();\n      isALetter = true;\n    } else\
    \ if (s[i] === s[i].toLowerCase()) {\n      newStr += s[i].toUpperCase();\n  \
    \    isALetter = true;\n    } else {\n      newStr += s[i];\n    }\n  }\n  return\
    \ isALetter ? newStr : newStr.split(\"\").reverse().join(\"\");\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));", "    let\
    \ x: string = '';\n    if (s.search(/[a-z]/i) === -1) {\n        for (let i =\
    \ s.length - 1; i >= 0; i--) {\n            x += s[i];\n        }\n    } else\
    \ {\n        for (let i = 0; i < s.length; i++) {\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                x += s[i].toLowerCase();\n            } else if (s[i] ===\
    \ s[i].toLowerCase()) {\n                x += s[i].toUpperCase();\n          \
    \  } else {\n                x += s[i];\n            }\n        }\n    }\n   \
    \ return x;\n}\nconsole.log(solve(\"aB1#\"));\nconsole.log(solve(\"12345\"));\n\
    console.log(solve(\"j2#$\"));", "  if (!s.match(/[a-z]/i)) {\n    return s.split('').reverse().join('');\n\
    \  }\n  else {\n    return s.split('').map(char => char.match(/[a-z]/i) ? char.match(/[a-z]/)\
    \ ? char.toUpperCase() : char.toLowerCase() : char).join('');\n  }\n}\n", "  \
    \  let letters: string = s.match(/[a-z]/gi) + \"\";\n    let splitted: string[]\
    \ = s.split(\"\");\n    let result: string = \"\";\n    let letterIndexes: number[]\
    \ = [];\n    let isContainsLetters: boolean = false;\n    for (let i: number =\
    \ 0; i < splitted.length; i++) {\n        if (letters.includes(splitted[i])) {\n\
    \            isContainsLetters = true;\n            if (splitted[i] === splitted[i].toUpperCase())\
    \ {\n                splitted[i] = splitted[i].toLowerCase();\n            } else\
    \ {\n                splitted[i] = splitted[i].toUpperCase();\n            }\n\
    \        }\n    }\n    if (isContainsLetters) {\n        result = splitted.join(\"\
    \");\n    } else {\n        splitted.reverse();\n        result = splitted.join(\"\
    \");\n    }\n    return result;\n}\n", "    let result = '';\n    if (s.length\
    \ == 0) {\n        return s;\n    }\n    for (let i = 0; i < s.length; i++) {\n\
    \        let char = s[i];\n        if (char == char.toUpperCase()) {\n       \
    \     result += char.toLowerCase();\n        } else if (char == char.toLowerCase())\
    \ {\n            result += char.toUpperCase();\n        } else {\n           \
    \ result += char;\n        }\n    }\n    return result;\n}\nconsole.log(solve(\"\
    #a@C\"));", "  const isText = s.match(/[a-z]/i);\n  if (!isText) {\n    return\
    \ s.split('').reverse().join('');\n  }\n  const newString = s.split('').map(el\
    \ => {\n    if (el.match(/[a-z]/i)) {\n      return el === el.toUpperCase() ?\
    \ el.toLowerCase() : el.toUpperCase();\n    }\n    return el;\n  });\n  return\
    \ newString.join('');\n}\n", "    let result = '';\n    let letters: string[]\
    \ = s.split('');\n    if (s.match(/[a-z]/i)) {\n        letters.forEach(e => {\n\
    \            if (e.match(/[a-z]/i)) {\n                result += e.toUpperCase()\
    \ === e ? e.toLowerCase() : e.toUpperCase();\n            } else {\n         \
    \       result += e;\n            }\n        });\n    } else {\n        result\
    \ = letters.reverse().join('');\n    }\n    return result;\n}\n", "    const res\
    \ = s.split('').map(v => {\n        if (v.toLowerCase() !== v.toUpperCase()) {\n\
    \            return v.toLowerCase() === v ? v.toUpperCase() : v.toLowerCase();\n\
    \        } else {\n            return v;\n        }\n    }).join('');\n    return\
    \ res === s ? res.split('').reverse().join('') : res;\n}\n\nexport function main()\
    \ {\n    const tests = [\n        {\n            in: '1234',\n            out:\
    \ '4321'\n        },\n        {\n            in: 'ab',\n            out: 'AB'\n\
    \        },\n        {\n            in: '#a@C',\n            out: '#A@c'\n   \
    \     },\n        {\n            in: '#@2',\n            out: '2@#'\n        },\n\
    \        {\n            in: '',\n            out: ''\n        },\n        {\n\
    \            in: '@#@',\n            out: '@#@'\n        },\n        {\n     \
    \       in: 'aBcDeF',\n            out: 'AbCdEf'\n        },\n        {\n    \
    \        in: 'aBcDeF1',\n            out: 'AbCdEf1'\n        },\n        {\n \
    \           in: 'abcdefghijklmnopqrstuvwxyz',\n            out: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        },\n        {\n            in: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n      \
    \      out: 'abcdefghijklmnopqrstuvwxyz'\n        },\n        {\n            in:\
    \ '',\n            out: ''\n        },\n        {\n            in: '1234567890',\n\
    \            out: '0987654321'\n        },\n        {\n            in: 'asd',\n\
    \            out: 'ASD'\n        },\n        {\n            in: 'QWERTYUIOPASDFGHJKLZXCVBNM',\n\
    \            out: 'qwertyuiopasdfghjklzxcvbnm", "  // regular expression to find\
    \ all letters in the string.\n  const letters = s.match(/[a-z]/gi);\n  // if there's\
    \ no letters, return the reversed string.\n  if (letters === null) {\n    return\
    \ s.split(\"\").reverse().join(\"\");\n  }\n  // get all non-letters from the\
    \ original string\n  const nonLetters = s.split(\"\").filter(c => !c.match(/[a-z]/gi));\n\
    \  // create a new array to handle the reversed letters\n  const reversed = letters.map(l\
    \ => {\n    if (l === l.toUpperCase()) {\n      return l.toLowerCase();\n    }\
    \ else {\n      return l.toUpperCase();\n    }\n  });\n  // return the concatenated,\
    \ converted string\n  return nonLetters.concat(reversed).join(\"\");\n}\n\nconsole.log(solve(\"\
    #a@C\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"1234\"));", "  let\
    \ letters: string[] = s.split('').filter(letter => /[a-z]/i.test(letter));\n \
    \ let nonLetters: string[] = s.split('').filter(letter => !/[a-z]/i.test(letter));\n\
    \  let toUpper: string[] = letters.map(letter => letter.toUpperCase());\n  let\
    \ toLower: string[] = letters.map(letter => letter.toLowerCase());\n  let reversed:\
    \ string[] = letters.map((letter, index) => {\n    if (letters[index] === toUpper[index])\
    \ {\n      return toLower[index];\n    } else {\n      return toUpper[index];\n\
    \    }\n  });\n  return reversed.concat(nonLetters).reverse().join('');\n}\nconsole.log(solve('#a@C'));",
  "    let res: string = '';\n    let isLetters: boolean = false;\n    for (let i\
    \ = 0; i < s.length; i++) {\n        let char: string = s[i];\n        if (/[a-zA-Z]/.test(char))\
    \ {\n            isLetters = true;\n            char = char.toUpperCase() ===\
    \ char ? char.toLowerCase() : char.toUpperCase();\n        }\n        res += char;\n\
    \    }\n    if (!isLetters) {\n        return res.split('').reverse().join('');\n\
    \    }\n    return res;\n}\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));", "    const sentenceArray = s.split('');\n\
    \    let sentenceArrayToReturn = [];\n    let letterFound = false;\n    sentenceArray.forEach(letter\
    \ => {\n        if(letter.toLowerCase() !== letter.toUpperCase()){\n         \
    \   letterFound = true;\n            if(letter === letter.toLowerCase()){\n  \
    \              sentenceArrayToReturn.push(letter.toUpperCase());\n           \
    \ }else{\n                sentenceArrayToReturn.push(letter.toLowerCase());\n\
    \            }\n        }else{\n            sentenceArrayToReturn.push(letter);\n\
    \        }\n    });\n    if(letterFound){\n        return sentenceArrayToReturn.join('');\n\
    \    }else{\n        return sentenceArrayToReturn.reverse().join('');\n    }\n\
    }\n\nconsole.log(solve(\"aBcD\"));\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));", "    let answer = '';\n    let counter\
    \ = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase())\
    \ {\n            answer += s[i].toLowerCase();\n            counter++;\n     \
    \   } else if (s[i] === s[i].toLowerCase()) {\n            answer += s[i].toUpperCase();\n\
    \            counter++;\n        } else {\n            answer += s[i];\n     \
    \   }\n    }\n    if (counter === 0) {\n        return reverseString(answer);\n\
    \    }\n    return answer;\n}\n", "    let stringArr = s.split('');\n    let filteredArr\
    \ = stringArr.filter(x => {\n        if (x === x.toUpperCase()) {\n          \
    \  return x.toLowerCase();\n        } else if (x === x.toLowerCase()) {\n    \
    \        return x.toUpperCase();\n        } else {\n            return x;\n  \
    \      }\n    });\n    let finalStr = filteredArr.join('');\n    return finalStr;\n\
    }\nconsole.log(solve(\"#a@C\"));\n", "    // let change: string = '';\n    //\
    \ for (let i = 0; i < s.length; i++) {\n    //     if (s[i] === s[i].toUpperCase())\
    \ {\n    //         change += s[i].toLowerCase();\n    //     } else if (s[i]\
    \ === s[i].toLowerCase()) {\n    //         change += s[i].toUpperCase();\n  \
    \  //     } else {\n    //         change += s[i];\n    //     }\n    // }\n \
    \   // return change;\n    let result: string = '';\n    for (let i = 0; i < s.length;\
    \ i++) {\n        let code: number = s.charCodeAt(i);\n        if (code >= 65\
    \ && code <= 90) {\n            result += String.fromCharCode(code + 32);\n  \
    \      } else if (code >= 97 && code <= 122) {\n            result += String.fromCharCode(code\
    \ - 32);\n        } else {\n            result += s[i];\n        }\n    }\n  \
    \  return result;\n}\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"\
    ));\nconsole.log(solve(\"#a@C\"));", "    const isLetter = (ch: string) => ch.toLowerCase()\
    \ !== ch.toUpperCase();\n    let result = \"\";\n    for (let i = 0; i < s.length;\
    \ i++) {\n        const ch = s[i];\n        if (isLetter(ch)) {\n            result\
    \ += ch.toUpperCase() === ch ? ch.toLowerCase() : ch.toUpperCase();\n        }\
    \ else {\n            result += ch;\n        }\n    }\n    return result;\n}\n\
    \nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n", "  const reversed = s.split('').map(char => {\n    if(char.match(/[a-z]/))\
    \ {\n      return char.toUpperCase();\n    }\n    if(char.match(/[A-Z]/)) {\n\
    \      return char.toLowerCase();\n    }\n    return char;\n  }).reverse().join('');\n\
    \  if(s.match(/[a-zA-Z]/)) {\n    return reversed;\n  } else {\n    return s.split('').reverse().join('');\n\
    \  }\n}\n\nconsole.log(solve(\"ab\"));", "    let result = \"\";\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n  \
    \          result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));", "    let\
    \ result = \"\";\n    for (let i: number = 0; i < s.length; i++) {\n        const\
    \ currentChar = s[i];\n        if (currentChar.toLowerCase() !== currentChar.toUpperCase())\
    \ {\n            if (currentChar === currentChar.toLowerCase()) {\n          \
    \      result += currentChar.toUpperCase();\n            } else {\n          \
    \      result += currentChar.toLowerCase();\n            }\n        } else {\n\
    \            result += currentChar;\n        }\n    }\n    if (result.length ===\
    \ 0) {\n        return s.split(\"\").reverse().join(\"\");\n    }\n    return\
    \ result;\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\nconsole.log(solve(\"!@#$%^&*\"));", "  let result = '';\n  for (let\
    \ i = 0; i < s.length; i++) {\n    if (s[i] === s[i].toUpperCase()) {\n      result\
    \ += s[i].toLowerCase();\n    } else if (s[i] === s[i].toLowerCase()) {\n    \
    \  result += s[i].toUpperCase();\n    } else {\n      result += s[i];\n    }\n\
    \  }\n  return result;\n}\n\nconsole.log(solve('1234'));\nconsole.log(solve('ab'));\n\
    console.log(solve('#a@C'));", "    return s.replace(/[a-z]/gi, (c) => (c.toUpperCase()\
    \ === c) ? c.toLowerCase() : c.toUpperCase());\n}\n", "    let letters: string\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n    let result:\
    \ string = \"\";\n    for (let i: number = 0; i < s.length; i++) {\n        if\
    \ (letters.indexOf(s[i]) >= 0) {\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    return result;\n}\n", "  \
    \  let sNew = '';\n    let isOnlyNumbers = true;\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (!isNaN(parseInt(s[i]))) {\n            sNew += s[i];\n \
    \       } else {\n            isOnlyNumbers = false;\n            if (s[i] ===\
    \ s[i].toUpperCase()) {\n                sNew += s[i].toLowerCase();\n       \
    \     } else {\n                sNew += s[i].toUpperCase();\n            }\n \
    \       }\n    }\n    if (isOnlyNumbers) {\n        return sNew.split('').reverse().join('');\n\
    \    }\n    return sNew;\n}\n", "    let temp = s.split('');\n    let r: string\
    \ = '';\n    if(s.toLowerCase() !== s && s.toUpperCase() !== s){\n        temp.forEach(c\
    \ => {\n            if(/[a-z]/.test(c)){\n                r += c.toUpperCase();\n\
    \            }else if(/[A-Z]/.test(c)){\n                r += c.toLowerCase();\n\
    \            }else{\n                r += c;\n            }\n        });\n   \
    \ }else{\n        r = s.split('').reverse().join('');\n    }\n    return r;\n\
    }\n", "    if (s.match(/[a-z]/g) || s.match(/[A-Z]/g)){\n        let solution\
    \ = \"\"\n        for (let i = 0; i < s.length; i++) {\n            if (s[i] ===\
    \ s[i].toUpperCase()) {\n                solution += s[i].toLowerCase()\n    \
    \        }\n            else if (s[i] === s[i].toLowerCase()) {\n            \
    \    solution += s[i].toUpperCase()\n            }\n            else {\n     \
    \           solution += s[i]\n            }\n        }\n        return solution\n\
    \    }\n    else {\n        return s.split(\"\").reverse().join(\"\")\n    }\n\
    }\n\nconsole.log(solve(\"1234\"))\nconsole.log(solve(\"ab\"))\nconsole.log(solve(\"\
    #a@C\"))", "    let reversed: string = \"\";\n    let charCode: number;\n    for\
    \ (let i: number = 0; i < s.length; i++) {\n        charCode = s.charCodeAt(i);\n\
    \        if (charCode >= 65 && charCode <= 90) {\n            reversed += String.fromCharCode(charCode\
    \ + 32);\n        } else if (charCode >= 97 && charCode <= 122) {\n          \
    \  reversed += String.fromCharCode(charCode - 32);\n        } else {\n       \
    \     reversed += s[i];\n        }\n    }\n    return reversed;\n}\n", "    let\
    \ rev: string = \"\";\n    let flag: boolean = false;\n    for (let i: number\
    \ = 0; i < s.length; i++) {\n        let char: string = s[i];\n        if (char.match(/[a-z]/i))\
    \ {\n            if (char === char.toUpperCase()) {\n                char = char.toLowerCase();\n\
    \            } else {\n                char = char.toUpperCase();\n          \
    \  }\n            flag = true;\n        }\n        rev += char;\n    }\n    return\
    \ flag ? rev : rev.split(\"\").reverse().join(\"\");\n}\n\nconsole.log(solve(\"\
    #a@C\"));", "    let result = '';\n    let letter: string;\n    for (let i = 0;\
    \ i < s.length; i++) {\n        letter = s[i];\n        if (letter.toUpperCase()\
    \ !== letter.toLowerCase()) {\n            if (letter === letter.toUpperCase())\
    \ {\n                letter = letter.toLowerCase();\n            } else {\n  \
    \              letter = letter.toUpperCase();\n            }\n        }\n    \
    \    result += letter;\n    }\n    if (result.toUpperCase() === result.toLowerCase())\
    \ {\n        return result.split('').reverse().join('');\n    }\n    return result;\n\
    }", "    const letters: string[] = s.split('').filter(c => c.match(/[a-z]/i));\n\
    \    if (!letters.length) {\n        return s.split('').reverse().join('');\n\
    \    }\n    const upper: string[] = letters.filter(c => c === c.toUpperCase());\n\
    \    if (upper.length === letters.length) {\n        return s.split('').map(c\
    \ => c.match(/[a-z]/i) ? c.toLowerCase() : c).join('');\n    }\n    return s.split('').map(c\
    \ => c.match(/[a-z]/i) ? c.toUpperCase() : c).join('');\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));", "  return\
    \ s.split('').map(x => {\n    if (/[a-z]/i.test(x)) {\n      return x.toUpperCase()\
    \ === x ? x.toLowerCase() : x.toUpperCase();\n    }\n    return x;\n  }).join('').split('').reverse().join('');\n\
    }", "    if (s.length == 0) {\n        return s;\n    }\n    let result = \"\"\
    ;\n    for (let i = 0; i < s.length; i++) {\n        if (isLetter(s[i])) {\n \
    \           result += s[i].toUpperCase() == s[i] ? s[i].toLowerCase() : s[i].toUpperCase();\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n", "    let str: string = '';\n    for (let i = 0; i < s.length; i++) {\n \
    \       if (s[i] === s[i].toUpperCase()) {\n            str += s[i].toLowerCase();\n\
    \        } else if (s[i] === s[i].toLowerCase()) {\n            str += s[i].toUpperCase();\n\
    \        } else {\n            str += s[i];\n        }\n    }\n    return str;\n\
    }\n", "    const res: string[] = [];\n    let hasLetter = false;\n    for (let\
    \ i = 0; i < s.length; i++) {\n        const ch = s[i];\n        if (/[a-zA-Z]/.test(ch))\
    \ {\n            hasLetter = true;\n            if (ch === ch.toUpperCase()) {\n\
    \                res.push(ch.toLowerCase());\n            } else {\n         \
    \       res.push(ch.toUpperCase());\n            }\n        } else {\n       \
    \     res.push(ch);\n        }\n    }\n    if (!hasLetter) {\n        return res.reverse().join('');\n\
    \    }\n    return res.join('');\n}", "    return s.split('').map(c => (/[a-z]/gi.test(c))\
    \ ? c.toUpperCase() : c.toLowerCase()).join('');\n}\nconsole.log(solve(\"1234\"\
    ));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));", "    let arr\
    \ = s.split('');\n    let isExistLetters = arr.filter(item => {\n        return\
    \ /[a-zA-Z]/.test(item);\n    });\n    if (isExistLetters.length === 0) {\n  \
    \      return arr.reverse().join('');\n    } else {\n        return arr.map(item\
    \ => {\n            return /[a-zA-Z]/.test(item) ? item === item.toUpperCase()\
    \ ? item.toLowerCase() : item.toUpperCase() : item;\n        }).join('');\n  \
    \  }\n}\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));", "    return s.split('').map(char => {\n        const charCode = char.charCodeAt(0);\n\
    \        if (charCode >= 65 && charCode <= 90) {\n            return String.fromCharCode(charCode\
    \ + 32);\n        } else if (charCode >= 97 && charCode <= 122) {\n          \
    \  return String.fromCharCode(charCode - 32);\n        } else {\n            return\
    \ char;\n        }\n    }).reverse().join('');\n}\n", "  const containsLetter\
    \ = /[a-z]/i;\n  const upCase = /[A-Z]/;\n  const lowCase = /[a-z]/;\n  const\
    \ transformed = s.split('').map(char => {\n    if (containsLetter.test(char))\
    \ {\n      if (upCase.test(char)) {\n        return char.toLowerCase();\n    \
    \  } else {\n        return char.toUpperCase();\n      }\n    } else {\n     \
    \ return char;\n    }\n  });\n  return transformed.reverse().join('');\n}\n\n\
    console.log(solve('1234'));\nconsole.log(solve('ab'));\nconsole.log(solve('#a@C'));",
  "    let isUpper = false;\n    let hasLetters = false;\n    let reversed = '';\n\
    \    for (let i = 0; i < s.length; i++) {\n        const char = s[i];\n      \
    \  if (char.toUpperCase() !== char.toLowerCase()) {\n            hasLetters =\
    \ true;\n            if (char === char.toUpperCase()) {\n                isUpper\
    \ = true;\n            }\n            if (isUpper) {\n                reversed\
    \ += char.toLowerCase();\n            } else {\n                reversed += char.toUpperCase();\n\
    \            }\n        } else {\n            reversed += char;\n        }\n \
    \   }\n    if (!hasLetters) {\n        return s.split('').reverse().join('');\n\
    \    }\n    return reversed;\n}\nconsole.log(solve(\"#a@C\"));", "    if (!/[a-z]/i.test(s))\
    \ return reverse(s);\n    let s2 = '';\n    for (let i = 0; i < s.length; i++)\
    \ {\n        if (/[a-z]/i.test(s[i])) {\n            s2 += (s[i] === s[i].toUpperCase())\
    \ ? s[i].toLowerCase() : s[i].toUpperCase();\n        } else {\n            s2\
    \ += s[i];\n        }\n    }\n    return s2;\n}\n", "  let arr = s.split('');\n\
    \  let result = '';\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ == arr[i].toUpperCase()) {\n      result += arr[i].toLowerCase();\n    } else\
    \ if (arr[i] == arr[i].toLowerCase()) {\n      result += arr[i].toUpperCase();\n\
    \    } else {\n      result += arr[i];\n    }\n  }\n  return result;\n}\nconsole.log(solve('#a@C'));\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

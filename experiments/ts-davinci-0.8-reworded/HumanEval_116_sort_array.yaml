name: HumanEval_116_sort_array
language: ts
prompt: "//In this Kata, you have to sort an array of non-negative integers according\
  \ to\n// number of ones in their binary representation in ascending order.\n// For\
  \ similar number of ones, sort based on decimal value.\n// It must be implemented\
  \ like this:\n// >>> sort_array([1, 5, 2, 3, 4])\n// [1, 2, 3, 4, 5]\n// >>> sort_array([-2,\
  \ -3, -4, -5, -6])\n// [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4])\n\
  // [0, 1, 2, 3, 4]\nfunction sort_array(arr: number[]): number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([1, 5, 2,\
  \ 3, 4]),[1, 2, 4, 3, 5]);\n  assert.deepEqual(candidate([-2, -3, -4, -5, -6]),[-4,\
  \ -2, -6, -5, -3]);\n  assert.deepEqual(candidate([1, 0, 2, 3, 4]),[0, 1, 2, 4,\
  \ 3]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([2,\
  \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]);\n  assert.deepEqual(candidate([3,\
  \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44]);\n  assert.deepEqual(candidate([2, 4,\
  \ 8, 16, 32]),[2, 4, 8, 16, 32]);\n  assert.deepEqual(candidate([2, 4, 8, 16, 32]),[2,\
  \ 4, 8, 16, 32]);\n}\n\ntest();"
completions: ["  const cache = {};\n  const ones = arr.map(d => d.toString(2).split(\"\
    1\").length - 1);\n  for (let i = 0; i < arr.length; i++) {\n    if (!cache[ones[i]])\
    \ {\n      cache[ones[i]] = [];\n    }\n    cache[ones[i]].push(arr[i]);\n  }\n\
    \  const sortArr = [];\n  for (let i = 0; i < ones.length; i++) {\n    sortArr.push(...cache[ones[i]].sort((a,\
    \ b) => a - b));\n  }\n  return sortArr;\n}\n", "    const unsorted = arr.map(a\
    \ => {\n        const binary = a.toString(2);\n        const ones = binary.split('').reduce((x,\
    \ y) => y === '1' ? x += 1 : x, 0);\n        return { a, ones };\n    });\n  \
    \  return unsorted.sort((a, b) => {\n        if (a.ones === b.ones) return a.a\
    \ - b.a;\n        return a.ones - b.ones;\n    }).map(item => item.a);\n}\n\n\
    console.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]), [1, 2, 4, 8, 3, 5, 6,\
    \ 7, 9, 10]);\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]), [0,\
    \ 1, 2, 4, 8, 3, 5, 6, 7, 9, 10]);\nconsole.log(sort_array([0, 2, 1, 4, 3, 6,\
    \ 5, 8, 7, 10, 9]), [0, 1, 2, 4, 8, 3, 5, 6, 7, 9, 10]);\nconsole.log(sort_array([1024,\
    \ 512, 256, 128, 64, 32, 16, 8, 4, 2, 1]), [1, 2, 4, 8, 16, 32, 64, 128, 256,\
    \ 512, 1024]);\nconsole.log(sort_array([10000, 1000, 100, 10, 1]), [1, 10, 100,\
    \ 1000, 10000]);\nconsole.log(sort_array([10, 100, 1000, 10000, 1]), [1, 10, 100,\
    \ 1000, 10000]);\nconsole.log(sort_array([1, 24, 32, 4, 51, 6, 7, 81, 9, 10]),\
    \ [1, 4, 6, 7, 9, 10, 24, 32, 51, 81]);\nconsole.log(sort_array([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]), [1, 2, 4, 8, 3, 5, 6, 7, 9, 10]);\nconsole.log(sort_array([0",
  "  const ones = arr.map(v => v.toString(2).split('').filter(v => v === '1').length);\n\
    \  return arr.map((v, i) => [v, ones[i]]).sort(([, a], [, b]) => {\n    if (a\
    \ === b) return 0;\n    return a < b ? -1 : 1;\n  }).map(([v]) => v);\n}\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    return arr.sort((a, b) => {\n        let binA = a.toString(2);\n\
    \        let binB = b.toString(2);\n        let onesA = (binA.match(/1/g) || []).length;\n\
    \        let onesB = (binB.match(/1/g) || []).length;\n        if (onesA > onesB)\
    \ {\n            return 1;\n        } else if (onesA < onesB) {\n            return\
    \ -1;\n        } else {\n            return a - b;\n        }\n    });\n}\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n", "  return arr.sort((a, b) =>\n    a.toString(2).split(\"\
    1\").length !== b.toString(2).split(\"1\").length\n      ? a.toString(2).split(\"\
    1\").length - b.toString(2).split(\"1\").length\n      : a - b\n  );\n}\n\nexport\
    \ function sort_array_test() {\n  console.log(sort_array([-2, -3, -4, -5, -6]));\n\
    \  console.log(sort_array([1, 0, 2, 3, 4]));\n  console.log(sort_array([1, 5,\
    \ 2, 3, 4]));\n}", "    const sorted: {\n        binary: string,\n        decimal:\
    \ number\n    }[] = arr.map(decimal => ({\n        binary: decimal.toString(2),\n\
    \        decimal\n    })).sort((a, b) => {\n        if (a.binary.match(/1/g) ||\
    \ []).length === (b.binary.match(/1/g) || []).length) {\n            return a.decimal\
    \ - b.decimal;\n        }\n        return (a.binary.match(/1/g) || []).length\
    \ - (b.binary.match(/1/g) || []).length;\n    });\n    return sorted.map(obj =>\
    \ obj.decimal);\n}\n\nlet result = sort_array([1, 5, 2, 3, 4]);\nconsole.log(result);\n\
    result = sort_array([-2, -3, -4, -5, -6]);\nconsole.log(result);\nresult = sort_array([1,\
    \ 0, 2, 3, 4]);\nconsole.log(result);", "  return arr.sort((a, b) =>\n    to_dec(a)\
    \ == to_dec(b) ? to_dec(a) - to_dec(b) : ones(a) - ones(b)\n  );\n}", "  return\
    \ arr.sort((a, b) => {\n    const aOnes = countOnes(a);\n    const bOnes = countOnes(b);\n\
    \    if (aOnes < bOnes) {\n      return -1;\n    } else if (aOnes > bOnes) {\n\
    \      return 1;\n    } else {\n      return a - b;\n    }\n  });\n}\n", "   \
    \ return arr.sort((a, b) => {\n        const aOnes = a.toString(2).match(/1/g).length\n\
    \        const bOnes = b.toString(2).match(/1/g).length\n        return aOnes\
    \ > bOnes ? 1 : aOnes < bOnes ? -1 : a - b\n    })\n}\n\nexport default sort_array",
  "    const res: number[] = [];\n    const sortArray: number[] = arr.map(item =>\
    \ ({ dec: item, bin: item.toString(2) }));\n    sortArray.sort((a, b) => {\n \
    \       let aBin = a.bin;\n        let bBin = b.bin;\n        let aOneCount =\
    \ 0;\n        let bOneCount = 0;\n        for (let i = 0; i < aBin.length; i++)\
    \ {\n            if (aBin[i] === '1') {\n                aOneCount++;\n      \
    \      }\n        }\n        for (let i = 0; i < bBin.length; i++) {\n       \
    \     if (bBin[i] === '1') {\n                bOneCount++;\n            }\n  \
    \      }\n        if (aOneCount === bOneCount) {\n            return a.dec - b.dec;\n\
    \        }\n        return aOneCount - bOneCount;\n    });\n    sortArray.forEach(item\
    \ => res.push(item.dec));\n    return res;\n}\n\ndescribe('test sort_array', ()\
    \ => {\n    test('sort_array([1, 5, 2, 3, 4])', () => {\n        expect(sort_array([1,\
    \ 5, 2, 3, 4])).toEqual([1, 2, 3, 4, 5]);\n    });\n    test('sort_array([-2,\
    \ -3, -4, -5, -6])', () => {\n        expect(sort_array([-2, -3, -4, -5, -6])).toEqual([-6,\
    \ -5, -4, -3, -2]);\n    });\n    test('sort_array([1, 0, 2, 3, 4])', () => {\n\
    \        expect(sort_array([1, 0, 2, 3, 4])).toEqual([0, 1, 2, 3, 4]);\n    });\n\
    \    test('sort_array([4, 7, 6, 5, 8, 9, 0, 1, 2, 3])', () => {\n        expect(sort_array([4,\
    \ 7, 6, 5, 8, 9, 0, 1, 2", "  return arr.sort((a, b) => {\n    if (a.toString(2).match(/1/g)\
    \ && b.toString(2).match(/1/g)) {\n      return (\n        a.toString(2).match(/1/g)!.length\
    \ -\n        b.toString(2).match(/1/g)!.length\n      );\n    } else if (a.toString(2).match(/1/g)\
    \ && !b.toString(2).match(/1/g)) {\n      return -1;\n    } else if (!a.toString(2).match(/1/g)\
    \ && b.toString(2).match(/1/g)) {\n      return 1;\n    } else {\n      return\
    \ a - b;\n    }\n  });\n}\n", "    let tempArr = [];\n    let oneArr = [];\n \
    \   let result = [];\n    for (let i = 0; i < arr.length; i++) {\n        tempArr.push(arr[i].toString(2).split('').map(x\
    \ => parseInt(x)));\n    }\n    for (let i = 0; i < tempArr.length; i++) {\n \
    \       oneArr.push(tempArr[i].filter(x => x == 1).length);\n    }\n    // console.log(oneArr)\n\
    \    let oneArrCopy = oneArr.slice();\n    oneArrCopy.sort((a, b) => a - b);\n\
    \    for (let i = 0; i < oneArrCopy.length; i++) {\n        let tempOneIndex =\
    \ oneArr.indexOf(oneArrCopy[i]);\n        if (result.indexOf(arr[tempOneIndex])\
    \ == -1) {\n            result.push(arr[tempOneIndex]);\n        }\n        oneArr[tempOneIndex]\
    \ = -1;\n    }\n    // console.log(result)\n    for (let i = 0; i < result.length;\
    \ i++) {\n        for (let j = 0; j < result.length; j++) {\n            if (result[i]\
    \ == result[j] && i != j) {\n                let tempIndex = i;\n            \
    \    while (tempIndex < result.length - 1) {\n                    [result[tempIndex],\
    \ result[tempIndex + 1]] = [result[tempIndex + 1], result[tempIndex]];\n     \
    \               tempIndex++;\n                }\n            }\n        }\n  \
    \  }\n    return result;\n}", "  const arrBinary = arr.map(element => element.toString(2));\n\
    \  arrBinary.sort();\n  const arrSorted = arrBinary.map(bin => parseInt(bin, 2));\n\
    \  return arrSorted;\n}\nconsole.log(sort_array([1, 0, 2, 3, 4]));", "    //Sort\
    \ by the number of 1's and then by number if there are the same number of 1's\n\
    \    return arr.sort((a, b) => {\n        let aArr = (a).toString(2).split('');\n\
    \        let bArr = (b).toString(2).split('');\n        let aCount = aArr.filter(digit\
    \ => digit === '1').length;\n        let bCount = bArr.filter(digit => digit ===\
    \ '1').length;\n        if (aCount > bCount) {\n            return 1;\n      \
    \  } else if (aCount < bCount) {\n            return -1;\n        } else {\n \
    \           return a - b;\n        }\n    });\n}\n\nexport function runTests():\
    \ void {\n    const utils = new Utils();\n    utils.assert([1, 2, 3, 4, 5], sort_array([1,\
    \ 5, 2, 3, 4]));\n    utils.assert([-6, -5, -4, -3, -2], sort_array([-2, -3, -4,\
    \ -5, -6]));\n    utils.assert([0, 1, 2, 3, 4], sort_array([1, 0, 2, 3, 4]));\n\
    \    utils.assert([1, 2, 8, 32, 1024, 32768, 65536], sort_array([2048, 1024, 512,\
    \ 256, 128, 64, 32, 16, 8, 4, 2, 1]));\n    utils.assert([1, 2, 4, 8, 16, 32,\
    \ 64, 128, 256, 512, 1024, 2048], sort_array([2048, 1024, 512, 256, 128, 64, 32,\
    \ 16, 8, 4, 2, 1]));\n    utils.assert([0, 1, 2, 4, 8, 16, 32, 64, 128, 256, 512,\
    \ 1024, 2048], sort_array([2048, 1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 1,\
    \ 0]));\n    utils.assert([0, 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048],\
    \ sort_array", "    // code here\n    return arr.sort((a, b) => {\n        if(Array.from(a.toString(2)).filter(x\
    \ => x === '1').length === Array.from(b.toString(2)).filter(x => x === '1').length)\n\
    \            return a - b;\n        else\n            return Array.from(a.toString(2)).filter(x\
    \ => x === '1').length - Array.from(b.toString(2)).filter(x => x === '1').length;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let x = (a >>> 0).toString(2).split('').filter(i\
    \ => i === '1').length;\n        let y = (b >>> 0).toString(2).split('').filter(i\
    \ => i === '1').length;\n        return x === y ? a - b : x - y;\n    });\n}\n",
  "  return arr.sort((a, b) => {\n    const count_a = a.toString(2).split(\"1\").length\
    \ - 1;\n    const count_b = b.toString(2).split(\"1\").length - 1;\n    if (count_a\
    \ > count_b) {\n      return 1;\n    } else if (count_a < count_b) {\n      return\
    \ -1;\n    } else {\n      return a - b;\n    }\n  });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    let numOfOnes = (num: number) => num.toString(2).split('').reduce((acc,\
    \ curr) => curr === '1' ? acc + 1 : acc, 0);\n    return arr.sort((a, b) => {\n\
    \        let aOnes = numOfOnes(a);\n        let bOnes = numOfOnes(b);\n      \
    \  return aOnes === bOnes ? a - b : aOnes - bOnes;\n    });\n}\n", "    return\
    \ arr.sort((a, b) => {\n        const binaryA = a.toString(2).match(/1/g).length;\n\
    \        const binaryB = b.toString(2).match(/1/g).length;\n        return binaryA\
    \ > binaryB ? 1 : (binaryA === binaryB ? a - b : -1);\n    });\n}\n", "  return\
    \ arr.sort((a, b) => {\n    let aOnes = a.toString(2).split(\"\").filter(x =>\
    \ x === \"1\").length;\n    let bOnes = b.toString(2).split(\"\").filter(x =>\
    \ x === \"1\").length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\
    \ else {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "    return arr.sort((a,\
    \ b) => bitCount(a) === bitCount(b) ? a - b : bitCount(a) - bitCount(b));\n}\n",
  "    return arr.sort((a, b) => getOneCount(a) > getOneCount(b) ? 1 : a - b);\n}\n",
  "  const oneCounts: { [num: number]: number } = {};\n  const sorted: number[] =\
    \ arr.slice();\n  sorted.sort();\n  sorted.forEach((num) => {\n    oneCounts[num]\
    \ = Number(num.toString(2)).toString().split(\"1\").length - 1;\n  });\n  sorted.sort((a,\
    \ b) => {\n    if (oneCounts[a] > oneCounts[b]) {\n      return 1;\n    } else\
    \ if (oneCounts[a] < oneCounts[b]) {\n      return -1;\n    } else {\n      return\
    \ a - b;\n    }\n  });\n  return sorted;\n}\n", "    let numbers = [...arr];\n\
    \    let array = [];\n    numbers.forEach(num => {\n        let binaryString =\
    \ num.toString(2);\n        let newString = binaryString.replace(/0/g, '');\n\
    \        let newNum = parseInt(newString);\n        array.push([num, newNum]);\n\
    \    });\n    let sorted = array.sort((a, b) => {\n        if (a[1] > b[1]) {\n\
    \            return 1;\n        } else if (a[1] < b[1]) {\n            return\
    \ -1;\n        } else {\n            if (a[0] > b[0]) {\n                return\
    \ 1;\n            } else if (a[0] < b[0]) {\n                return -1;\n    \
    \        } else {\n                return 0;\n            }\n        }\n    });\n\
    \    return sorted.map(arr => arr[0]);\n}\n", "  return arr.sort((a, b) => {\n\
    \    a = a.toString(2).match(/1/g).length;\n    b = b.toString(2).match(/1/g).length;\n\
    \    return a - b || a - b;\n  });\n}\n", "    return arr.sort((a, b) => {\n \
    \       if (getOnesCount(a) > getOnesCount(b)) {\n            return 1;\n    \
    \    } else if (getOnesCount(a) < getOnesCount(b)) {\n            return -1;\n\
    \        } else {\n            return a - b;\n        }\n    });\n}\n", "  //\
    \ Take the array and map to a new array including the number of\n  // 1's in the\
    \ binary representation. Then sort the new array and return\n  // the sorted array.\n\
    \  let a: any = arr.map(e => ({ num: e, ones: e.toString(2).split('').filter(s\
    \ => s === '1').length }));\n  return a.sort((a, b) => a.ones === b.ones ? a.num\
    \ - b.num : a.ones - b.ones).map(e => e.num);\n}\n", "  return arr.sort((a, b)\
    \ => {\n    if (a === b) return 0;\n    const aBinary = a.toString(2);\n    const\
    \ bBinary = b.toString(2);\n    const aOnes = [...aBinary].filter(x => x === \"\
    1\").length;\n    const bOnes = [...bBinary].filter(x => x === \"1\").length;\n\
    \    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n\
    \  });\n}\n\nexport function sortArray(arr: number[]): number[] {\n  return arr.sort((a,\
    \ b) => {\n    if (a === b) return 0;\n    const aBinary = a.toString(2);\n  \
    \  const bBinary = b.toString(2);\n    const aOnes = [...aBinary].filter(x =>\
    \ x === \"1\").length;\n    const bOnes = [...bBinary].filter(x => x === \"1\"\
    ).length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return\
    \ aOnes - bOnes;\n  });\n}", "  return arr.sort((a, b) => {\n    const aOne =\
    \ a.toString(2).split(\"1\").length - 1;\n    const bOne = b.toString(2).split(\"\
    1\").length - 1;\n    if (aOne === bOne) {\n      return a - b;\n    }\n    return\
    \ aOne - bOne;\n  });\n}\n\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10]));\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));", "    return\
    \ arr.sort((a, b) => {\n        if (a < 0 || b < 0) {\n            return a -\
    \ b;\n        }\n        let tempA = (a).toString(2).split('').filter(num => num\
    \ === '1').length;\n        let tempB = (b).toString(2).split('').filter(num =>\
    \ num === '1').length;\n        if (tempA === tempB) {\n            return a -\
    \ b;\n        }\n        return tempA - tempB;\n    });\n}\n\nexport default sort_array;",
  "  return arr.sort((a, b) => {\n    const aOnes = parseInt(a.toString(2)).toString().replace(/0/g,\
    \ '').length;\n    const bOnes = parseInt(b.toString(2)).toString().replace(/0/g,\
    \ '').length;\n    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return\
    \ aOnes - bOnes;\n  });\n}\n\nexport function sortArray(): void {\n  console.log(sort_array([1,\
    \ 0, 2, 3, 4]));\n}", "    // // Method 1:\n    // return arr.sort((a, b) => {\n\
    \    //     let c = countOnes(a) - countOnes(b);\n    //     return c != 0 ? c\
    \ : a - b;\n    // });\n\n    // Method 2: - Notice: use radix to conver string\
    \ to number\n    // const sorted = arr.sort((a, b) => parseInt(a.toString(2),\
    \ 2) - parseInt(b.toString(2), 2));\n    // return sorted.sort((a, b) => a - b);\n\
    \n    // Method 3:\n    const ones = arr.map(x => `${x.toString(2).match(/1/g).length}${x}`);\n\
    \    return ones.sort().map(x => +x.slice(1));\n}", "    let map = new Map<number,\
    \ number[]>();\n    for (let i = 0; i < arr.length; i++) {\n        let binary\
    \ = parseInt(arr[i]).toString(2);\n        let ones = 0;\n        for (let j =\
    \ 0; j < binary.length; j++) {\n            if (binary[j] === '1') {\n       \
    \         ones++;\n            }\n        }\n        if (map.has(ones)) {\n  \
    \          map.get(ones).push(arr[i]);\n        } else {\n            map.set(ones,\
    \ [arr[i]]);\n        }\n    }\n    map = new Map([...map.entries()].sort((a,\
    \ b) => a[0] - b[0]));\n    let result = [];\n    for (let key of map.keys())\
    \ {\n        for (let value of map.get(key).sort((a, b) => a - b)) {\n       \
    \     result.push(value);\n        }\n    }\n    return result;\n}\n", "  return\
    \ arr.sort((a, b) => binaryOnes(a) - binaryOnes(b) || a - b);\n}\n", "  let result\
    \ = []\n  let sorted = arr.sort((a, b) => (a + b))\n  return sorted\n}\n", " \
    \   return arr.sort((a, b) => {\n        let binA = a.toString(2);\n        let\
    \ binB = b.toString(2);\n        let onesA = binA.match(/1/g);\n        let onesB\
    \ = binB.match(/1/g);\n        let countOnesA = onesA ? onesA.length : 0;\n  \
    \      let countOnesB = onesB ? onesB.length : 0;\n        if (countOnesA ===\
    \ countOnesB) {\n            return a - b;\n        }\n        return countOnesA\
    \ - countOnesB;\n    });\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4])); // [1,\
    \ 2, 3, 4, 5]\nconsole.log(sort_array([-2, -3, -4, -5, -6])); // [-6, -5, -4,\
    \ -3, -2]\nconsole.log(sort_array([1, 0, 2, 3, 4])); // [0, 1, 2, 3, 4]", "  let\
    \ result: number[] = [];\n  let sortedArray: number[] = arr.sort((a, b) => a -\
    \ b);\n  let arrayOfOnes: number[] = [];\n  sortedArray.forEach((num) => {\n \
    \   let numOfOnes = countOnes(num);\n    arrayOfOnes.push(numOfOnes);\n  });\n\
    \  for (let i = 0; i < arrayOfOnes.length; i++) {\n    for (let j = 0; j < sortedArray.length;\
    \ j++) {\n      if (countOnes(sortedArray[j]) === arrayOfOnes[i]) {\n        result.push(sortedArray[j]);\n\
    \        sortedArray.splice(j, 1);\n        break;\n      }\n    }\n  }\n  return\
    \ result;\n}\n", "  return arr.sort((a, b) => {\n    const binA = a.toString(2);\n\
    \    const binB = b.toString(2);\n    const binAOnes = binA.split(\"\").filter(char\
    \ => char === \"1\").length;\n    const binBOnes = binB.split(\"\").filter(char\
    \ => char === \"1\").length;\n    return binAOnes !== binBOnes ? binAOnes - binBOnes\
    \ : a - b;\n  });\n}\n", "    let numberOfOnes = arr.map(n => n.toString(2).split(\"\
    \").filter(n => n === \"1\").length);\n    let newArr = [];\n    numberOfOnes.map((one,\
    \ index) => {\n        newArr.push({ one, index });\n    });\n    newArr.sort((a,\
    \ b) => a.one - b.one);\n    return newArr.map(n => arr[n.index]);\n}\n", "  let\
    \ ones = [];\n  let zeros = [];\n  arr.forEach(a => {\n    if (a.toString(2).match(/1/g))\
    \ {\n      ones.push(a);\n    } else {\n      zeros.push(a);\n    }\n  });\n \
    \ ones.sort((a, b) => {\n    let a1 = a.toString(2).match(/1/g).length;\n    let\
    \ b1 = b.toString(2).match(/1/g).length;\n    if (a1 == b1) {\n      return a\
    \ - b;\n    } else {\n      return a1 - b1;\n    }\n  });\n  return ones.concat(zeros);\n\
    }\nconsole.log(sort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));\n", "  return\
    \ arr.sort((a, b) => {\n    if (a.toString(2).match(/1/g) === null && b.toString(2).match(/1/g)\
    \ === null) {\n      return a - b;\n    }\n    if (a.toString(2).match(/1/g) ===\
    \ null) {\n      return -1;\n    }\n    if (b.toString(2).match(/1/g) === null)\
    \ {\n      return 1;\n    }\n    if (a.toString(2).match(/1/g)!.length < b.toString(2).match(/1/g)!.length)\
    \ {\n      return -1;\n    }\n    if (a.toString(2).match(/1/g)!.length > b.toString(2).match(/1/g)!.length)\
    \ {\n      return 1;\n    }\n    return a - b;\n  });\n}\n\nexport default sort_array;",
  "  return arr.sort((a, b) => {\n    if (getOnesInBinary(a) === getOnesInBinary(b))\
    \ {\n      return a - b;\n    }\n    return getOnesInBinary(a) - getOnesInBinary(b);\n\
    \  });\n}\n", "    return arr.sort((a, b) =>\n        a.toString(2).replace(/0/g,\
    \ '').length === b.toString(2).replace(/0/g, '').length ? a - b : a.toString(2).replace(/0/g,\
    \ '').length - b.toString(2).replace(/0/g, '').length\n    );\n}\n", "    let\
    \ tempArr = arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n\
    \    return tempArr.map((x, i) => {\n        return {\n            length: x,\n\
    \            value: arr[i]\n        }\n    }).sort((a, b) => {\n        if (a.length\
    \ === b.length) {\n            return a.value - b.value;\n        }\n        return\
    \ a.length - b.length;\n    }).map(x => x.value);\n}\n", "    const toBinary =\
    \ (n: number): string => {\n        return Number(n).toString(2);\n    };\n  \
    \  const countOnes = (str: string): number => {\n        return [...str].filter(ch\
    \ => ch === '1').length;\n    };\n    const sorted = arr.sort((a, b) => {\n  \
    \      const aBin = toBinary(a);\n        const bBin = toBinary(b);\n        const\
    \ aOnes = countOnes(aBin);\n        const bOnes = countOnes(bBin);\n        if\
    \ (aOnes === bOnes) {\n            return a - b;\n        }\n        return aOnes\
    \ - bOnes;\n    });\n    return sorted;\n}\n", "    return arr.sort((a, b) =>\
    \ {\n        return (a.toString(2).match(/1/g) || []).length - (b.toString(2).match(/1/g)\
    \ || []).length\n    })\n}\n", "    return arr.sort((a, b) => {\n        if (getOne(a)\
    \ < getOne(b)) {\n            return -1;\n        } else if (getOne(a) > getOne(b))\
    \ {\n            return 1;\n        } else {\n            return a - b;\n    \
    \    }\n    });\n}\n", "  return arr.sort((a, b) => {\n    const bitA = getBit(a);\n\
    \    const bitB = getBit(b);\n    if (bitA > bitB) {\n      return 1;\n    } else\
    \ if (bitA < bitB) {\n      return -1;\n    } else {\n      return a - b;\n  \
    \  }\n  });\n}\n", "  return arr.sort((a, b) => {\n    const aBin = Number(a).toString(2);\n\
    \    const bBin = Number(b).toString(2);\n    const aOnes = aBin.match(/1/g) ?\
    \ aBin.match(/1/g).length : 0;\n    const bOnes = bBin.match(/1/g) ? bBin.match(/1/g).length\
    \ : 0;\n    if (aOnes < bOnes) {\n      return -1;\n    } else if (aOnes > bOnes)\
    \ {\n      return 1;\n    } else {\n      return a - b;\n    }\n  });\n}\n", " \
    \   let map: Map<number, number> = new Map();\n    arr.forEach(e => {\n      \
    \  let ones: number = countOnes(e);\n        if (map.has(ones)) {\n          \
    \  map.get(ones).push(e);\n        } else {\n            map.set(ones, [e]);\n\
    \        }\n    });\n    let sorted: number[] = [];\n    for (let i: number =\
    \ 0; i < arr.length; i++) {\n        for (let key of map.keys()) {\n         \
    \   let cur: number[] = map.get(key);\n            if (cur.length === 0) {\n \
    \               continue;\n            }\n            sorted.push(cur.shift());\n\
    \        }\n    }\n    return sorted;\n}\n", "    let result: number[] = [];\n\
    \    let arr1: number[] = [];\n    let arr2: number[] = [];\n    let arr3: number[]\
    \ = [];\n    let arr4: number[] = [];\n    let arr5: number[] = [];\n    let arr6:\
    \ number[] = [];\n    let arr7: number[] = [];\n    let arr8: number[] = [];\n\
    \    let arr9: number[] = [];\n    let arr10: number[] = [];\n    let arr11: number[]\
    \ = [];\n    let arr12: number[] = [];\n    let arr13: number[] = [];\n    let\
    \ arr14: number[] = [];\n    let arr15: number[] = [];\n    let arr16: number[]\
    \ = [];\n    let arr17: number[] = [];\n    let arr18: number[] = [];\n    let\
    \ arr19: number[] = [];\n    let arr20: number[] = [];\n    let arr21: number[]\
    \ = [];\n    let arr22: number[] = [];\n    let arr23: number[] = [];\n    let\
    \ arr24: number[] = [];\n    let arr25: number[] = [];\n    let arr26: number[]\
    \ = [];\n    let arr27: number[] = [];\n    let arr28: number[] = [];\n    let\
    \ arr29: number[] = [];\n    let arr30: number[] = [];\n    let arr31: number[]\
    \ = [];\n    let arr32: number[] = [];\n    for (let i: number = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] !== 0) {\n            switch (arr[i].toString(2).split('').filter(function\
    \ (x) { return x === '1' }).length) {\n                case 1:\n             \
    \       arr1.push(arr[i]);\n                    break;\n                case 2:\n\
    \                    arr2.push(arr[i]);\n                    break;\n        \
    \        case 3:\n                    arr3.push(arr[i]);\n                   \
    \ break;\n                case 4:\n                    arr4.push(arr[i]);\n  \
    \                  break;\n                case 5:\n                    arr5.push(arr[i]);\n\
    \                    break;\n                case 6:\n                    arr6.push(arr[i",
  "  return arr.sort((x, y) => {\n    if (x.toString(2).match(/1/g)?.length === y.toString(2).match(/1/g)?.length)\
    \ {\n      return x - y;\n    } else {\n      return (x.toString(2).match(/1/g)?.length\
    \ || 0) - (y.toString(2).match(/1/g)?.length || 0);\n    }\n  });\n}\n", "  const\
    \ binaryArr = arr.map(num => num.toString(2));\n  const binaryToDecimal: number[]\
    \ = [];\n  for (let i = 0; i < binaryArr.length; i++) {\n    const binary = binaryArr[i];\n\
    \    let binarySum = 0;\n    let decimalSum = 0;\n    for (let j = 0; j < binary.length;\
    \ j++) {\n      if (binary[j] === \"1\") {\n        binarySum++;\n      }\n  \
    \    decimalSum += Number(binary[j]) * 2 ** (binary.length - j - 1);\n    }\n\
    \    binaryToDecimal.push([binarySum, decimalSum]);\n  }\n  return binaryToDecimal\n\
    \    .sort((a, b) => {\n      if (a[0] > b[0]) {\n        return 1;\n      } else\
    \ if (a[0] < b[0]) {\n        return -1;\n      } else {\n        if (a[1] > b[1])\
    \ {\n          return 1;\n        } else if (a[1] < b[1]) {\n          return\
    \ -1;\n        } else {\n          return 0;\n        }\n      }\n    })\n   \
    \ .map(arr => arr[1]);\n}\n", "  const sortedArr = arr.sort((a, b) => {\n    let\
    \ binA = a.toString(2).match(/1/g) || [];\n    let binB = b.toString(2).match(/1/g)\
    \ || [];\n    return binA.length > binB.length ? 1 :\n      binA.length < binB.length\
    \ ? -1 :\n        a > b ? 1 :\n          a < b ? -1 : 0;\n  });\n  return sortedArr;\n\
    }\nconsole.log(sort_array([1, 5, 2, 3, 4]));\n", "  let res = arr.sort((a, b)\
    \ => {\n    return getBit(a) - getBit(b) || a - b;\n  });\n  return res;\n}\n",
  "    arr.sort((a, b) => {\n        return countOnes(a) - countOnes(b)\n    })\n\
    \    return arr\n}\n", "  return arr.sort((a, b) => {\n    return (\n      (a.toString(2).match(/1/g)\
    \ ? a.toString(2).match(/1/g).length : 0) -\n      (b.toString(2).match(/1/g)\
    \ ? b.toString(2).match(/1/g).length : 0) ||\n      a - b\n    );\n  });\n}\n\n\
    console.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]));", "  return arr.sort((a,\
    \ b) => {\n    const aOnes = countOnes(a);\n    const bOnes = countOnes(b);\n\
    \    if (aOnes === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n\
    \  });\n}\n", "    return arr.sort((a, b) => a.toString(2).replace(/0/g, '').length\
    \ - b.toString(2).replace(/0/g, '').length || a - b);\n}\n", "    const sorted\
    \ = arr.sort((a, b) => {\n        const a1 = countOnes(a);\n        const b1 =\
    \ countOnes(b);\n        if (a1 == b1) {\n            return a - b;\n        }\n\
    \        return a1 - b1;\n    });\n    return sorted;\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let oneA = a.toString(2).split(\"\").filter(num => num ===\
    \ \"1\").length;\n        let oneB = b.toString(2).split(\"\").filter(num => num\
    \ === \"1\").length;\n        if (oneA === oneB) {\n            return a - b;\n\
    \        }\n        return oneA - oneB;\n    });\n}\n", "    function bitCount(num:\
    \ number): number {\n        return num.toString(2).split(\"\").filter(x => x\
    \ === \"1\").length;\n    }\n    return arr.sort((a, b) => {\n        if (bitCount(a)\
    \ === bitCount(b)) return a - b;\n        return bitCount(a) - bitCount(b);\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        if (getOnes(a) > getOnes(b))\
    \ {\n            return 1;\n        } else if (getOnes(a) < getOnes(b)) {\n  \
    \          return -1;\n        } else {\n            return a - b;\n        }\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        return (a.toString(2).match(/1/g)\
    \ || []).length - (b.toString(2).match(/1/g) || []).length || a - b;\n    });\n\
    }\n", "  arr.sort((a, b) =>\n    a.toString(2).split('').filter(x => x === '1').length\
    \ -\n      b.toString(2).split('').filter(x => x === '1').length\n  );\n  return\
    \ arr;\n}\n", "    return arr.sort((a, b) => {\n        if (a === b) return 0;\n\
    \        let v1 = countBinaryOnes(a);\n        let v2 = countBinaryOnes(b);\n\
    \        if (v1 === v2) return a - b;\n        return v1 - v2;\n    });\n}\n",
  "    return arr.sort((a, b) => {\n        const aOnes = a.toString(2).split('').filter(i\
    \ => i === '1').length;\n        const bOnes = b.toString(2).split('').filter(i\
    \ => i === '1').length;\n        if (aOnes < bOnes) {\n            return -1;\n\
    \        } else if (aOnes > bOnes) {\n            return 1;\n        } else {\n\
    \            return a - b;\n        }\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4])); // [1, 2, 3, 4, 5]\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\
    \ // [-6, -5, -4, -3, -2]\nconsole.log(sort_array([1, 0, 2, 3, 4])); // [0, 1,\
    \ 2, 3, 4]", "    return arr.sort((a, b) => a.toString(2).split('').filter(c =>\
    \ c === '1').length - b.toString(2).split('').filter(c => c === '1').length);\n\
    }\n", "  let onesArr = arr.map(item => (item >>> 0).toString(2));\n  for (let\
    \ i = 0; i < onesArr.length; i++) {\n    onesArr[i] = onesArr[i].split(\"\").filter(item\
    \ => item === \"1\").length;\n  }\n  let indexArr = [];\n  for (let i = 0; i <\
    \ onesArr.length; i++) {\n    indexArr.push(i);\n  }\n  let result = [];\n  for\
    \ (let i = onesArr.length; i > 0; i--) {\n    let index = onesArr.indexOf(i);\n\
    \    if (index !== -1) {\n      let temp = indexArr.splice(index, 1);\n      let\
    \ temp1 = onesArr.splice(index, 1);\n      result.push(arr[temp[0]]);\n    }\n\
    \  }\n  return result;\n}\n", "    return arr.sort((a, b) => {\n        if (a\
    \ < 0 || b < 0) {\n            return a - b;\n        }\n        const aOnes =\
    \ getNumberOfOnes(a);\n        const bOnes = getNumberOfOnes(b);\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        return a.toString(2).split('').filter(e\
    \ => e === '1').length - b.toString(2).split('').filter(e => e === '1').length\n\
    \    })\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));", "    return\
    \ arr.sort((a, b) => {\n        const aBin = (a >>> 0).toString(2);\n        const\
    \ bBin = (b >>> 0).toString(2);\n        const aOne = aBin.match(/1/g) || [].length;\n\
    \        const bOne = bBin.match(/1/g) || [].length;\n        if (aOne === bOne)\
    \ {\n            return a - b;\n        }\n        return aOne - bOne;\n    });\n\
    }\n\nconsole.log(sort_array([1, 0, 2, 3, 4]));\nconsole.log(sort_array([1, 5,\
    \ 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));", "    return arr.sort((a,\
    \ b) => {\n        const cmp = countBits(a) - countBits(b);\n        return cmp\
    \ == 0 ? a - b : cmp;\n    });\n}", "  return arr.sort((a, b) => {\n    const\
    \ c = a.toString(2).split(\"\").filter(e => e === \"1\").length;\n    const d\
    \ = b.toString(2).split(\"\").filter(e => e === \"1\").length;\n    return c ===\
    \ d ? a - b : c - d;\n  });\n}\n", "    let tmp = [];\n    const newArr = [];\n\
    \    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        tmp.push(arr[i].toString(2));\n\
    \    }\n    tmp.sort((a, b) => {\n        let compare;\n        if (a.match(/1/g)\
    \ !== null && b.match(/1/g) !== null) {\n            compare = a.match(/1/g).length\
    \ - b.match(/1/g).length;\n        } else if (a.match(/1/g) !== null) {\n    \
    \        compare = -1;\n        } else if (b.match(/1/g) !== null) {\n       \
    \     compare = 1;\n        } else {\n            compare = 0;\n        }\n  \
    \      if (compare === 0) {\n            compare = Number(a) - Number(b);\n  \
    \      }\n        return compare;\n    });\n    for (let i = 0; i < tmp.length;\
    \ i++) {\n        newArr.push(Number(tmp[i]));\n    }\n    return newArr;\n}\n",
  "  let result = [];\n  const sorted = arr.sort((a, b) => b - a);\n  while (sorted.length)\
    \ {\n    let cnt1 = 0;\n    let cnt2 = 0;\n    let num1 = sorted.pop();\n    if\
    \ (typeof num1 === \"undefined\") {\n      break;\n    }\n    cnt1 = countOnes(num1);\n\
    \    for (let i = sorted.length - 1; i >= 0; i--) {\n      let num2 = sorted[i];\n\
    \      cnt2 = countOnes(num2);\n      if (cnt1 > cnt2) {\n        sorted.splice(i,\
    \ 1);\n        result.push(num2);\n      } else if (cnt1 < cnt2) {\n        break;\n\
    \      } else {\n        sorted.splice(i, 1);\n        result.push(num2);\n  \
    \    }\n    }\n    result.push(num1);\n  }\n  return result;\n}\n", "    const\
    \ bin = arr.map(num => {\n        return {\n            dec: num,\n          \
    \  bin: num.toString(2).split('').reduce((total, num) => {\n                return\
    \ total + parseInt(num);\n            }, 0)\n        }\n    });\n    const sorted\
    \ = bin.sort((a, b) => {\n        if (a.bin > b.bin) {\n            return 1;\n\
    \        } else if (a.bin < b.bin) {\n            return -1;\n        } else {\n\
    \            if (a.dec > b.dec) {\n                return 1;\n            } else\
    \ if (a.dec < b.dec) {\n                return -1;\n            } else {\n   \
    \             return 0;\n            }\n        }\n    });\n    return sorted.map(a\
    \ => a.dec);\n}\n", "    return arr.sort((a, b) => {\n        const aBin = a.toString(2);\n\
    \        const bBin = b.toString(2);\n        if (aBin.length !== bBin.length)\
    \ {\n            return aBin.length - bBin.length;\n        } else {\n       \
    \     const diff = (aBin.match(/1/g) || []).length - (bBin.match(/1/g) || []).length;\n\
    \            return diff === 0 ? a - b : diff;\n        }\n    });\n}\n\nexport\
    \ function runTests(): void {\n    const inputs = [\n        [1, 5, 2, 3, 4],\n\
    \        [-2, -3, -4, -5, -6],\n        [1, 0, 2, 3, 4],\n        [1, 4, 2, 3,\
    \ 7, 6, 5, 0],\n        [9, 8, 7, 6, 5, 4, 3, 2, 1, 0],\n        [4, 2, 1, 6,\
    \ 7, 8, 5, 9, 3, 0],\n        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n        [0, 1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n \
    \       [1, 4, 1, 4, 0, 1, 0, 1, 4, 0, 1, 4, 0, 1],\n        [0, 0, 1, 0, 0, 1,\
    \ 0, 0, 1, 0, 0, 1, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\
    \        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n        [0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0,", "    return\
    \ arr.sort((a, b) => {\n        if (a == b) return 0;\n        let x = a.toString(2).split('').filter(ch\
    \ => ch == '1').length;\n        let y = b.toString(2).split('').filter(ch =>\
    \ ch == '1').length;\n        if (x == y) {\n            return a > b ? 1 : -1;\n\
    \        }\n        return x > y ? 1 : -1;\n    });\n}\n\nexport default sort_array;",
  "    return arr.sort((a, b) => {\n        const aOnes = countBinaryOnes(a);\n  \
    \      const bOnes = countBinaryOnes(b);\n        if (aOnes === bOnes) {\n   \
    \         return a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n",
  "  return arr.sort((a, b) => {\n    if ((a & 1) - (b & 1) !== 0) {\n      return\
    \ (a & 1) - (b & 1);\n    } else {\n      return a - b;\n    }\n  });\n}\n", " \
    \   return arr.sort((a, b) => {\n        const a_ones = a.toString(2).split('').filter(i\
    \ => i === '1').length;\n        const b_ones = b.toString(2).split('').filter(i\
    \ => i === '1').length;\n        if (a_ones === b_ones) {\n            return\
    \ a - b;\n        }\n        return a_ones - b_ones;\n    });\n}\nconsole.log(sort_array([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128,\
    \ 64, 32, 16, 8, 4, 2, 1]));\nconsole.log(sort_array([100, 200, 300, 400, 500,\
    \ 600, 700, 800, 900, 1000]));\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));\n", "  const bin\
    \ = (x: number) => x.toString(2);\n  const count = (x: string) => x.split(\"\"\
    ).filter(v => v === \"1\").length;\n  const cmp = (a: number, b: number) => {\n\
    \    const r = count(bin(a)) - count(bin(b));\n    return r === 0 ? a - b : r;\n\
    \  };\n  return arr.sort(cmp);\n}\n\nconsole.log(sort_array([1, 0, 2, 3, 4]),\
    \ [0, 1, 2, 3, 4]);\nconsole.log(sort_array([1, 5, 2, 3, 4]), [1, 2, 3, 4, 5]);\n\
    console.log(sort_array([-2, -3, -4, -5, -6]), [-6, -5, -4, -3, -2]);\nconsole.log(sort_array([-23,\
    \ -55, -78, -90, -12, -1]), [-1, -12, -23, -55, -78, -90]);\nconsole.log(sort_array([2,\
    \ 11, 2, 1, 2, -1, -11, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1", "    return\
    \ arr.sort((a, b) => {\n        if (a === b) {\n            return 0;\n      \
    \  }\n        let aOnes = onesInBinaryRepresentation(a);\n        let bOnes =\
    \ onesInBinaryRepresentation(b);\n        if (aOnes === bOnes) {\n           \
    \ return a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "  \
    \  let arrayWithOnes: any[] = [];\n    for (let i = 0; i < arr.length; i++) {\n\
    \        let count = 0;\n        for (let j = 0; j < arr[i].toString(2).length;\
    \ j++) {\n            if (arr[i].toString(2)[j] === '1') {\n                count++;\n\
    \            }\n        }\n        arrayWithOnes.push([arr[i], count]);\n    }\n\
    \    arrayWithOnes.sort((a, b) => a[1] - b[1]);\n    return arrayWithOnes.map(value\
    \ => value[0]);\n}\n\nexport { sort_array };", "    // const sorted = arr.sort((a,\
    \ b) => {\n    //     if (ones(a) > ones(b)) return 1;\n    //     if (ones(a)\
    \ < ones(b)) return -1;\n    //     if (a > b) return 1;\n    //     if (a < b)\
    \ return -1;\n    //     return 0;\n    // });\n    const sorted = arr.sort((a,\
    \ b) => {\n        if (ones(a) === ones(b)) return a - b;\n        return ones(a)\
    \ - ones(b);\n    });\n    return sorted;\n}\n", "    return arr.sort((a, b) =>\
    \ a.toString(2).split('').filter(x => x === '1').length - b.toString(2).split('').filter(x\
    \ => x === '1').length || a - b);\n}", "    return arr.sort((a, b) => (a % 2 +\
    \ b % 2) * 100 + Math.abs(a - b));\n}\n", "  return arr.sort((a, b) => {\n   \
    \ let binA = a.toString(2);\n    let binB = b.toString(2);\n    let aCount = 0;\n\
    \    let bCount = 0;\n    for (let i = 0; i < binA.length; i++) {\n      if (binA[i]\
    \ === \"1\") {\n        aCount++;\n      }\n    }\n    for (let i = 0; i < binB.length;\
    \ i++) {\n      if (binB[i] === \"1\") {\n        bCount++;\n      }\n    }\n\
    \    if (aCount === bCount) {\n      return a - b;\n    } else {\n      return\
    \ aCount - bCount;\n    }\n  });\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\n",
  "    return arr.sort((a, b) => {\n        if (a === b) return 0;\n        const\
    \ bA = a.toString(2).split('').filter(c => c === '1').length;\n        const bB\
    \ = b.toString(2).split('').filter(c => c === '1').length;\n        if (bA ===\
    \ bB) return a - b;\n        return bA - bB;\n    });\n}\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "  return arr.sort((a, b) => {\n    return count_ones(a) -\
    \ count_ones(b) || a - b;\n  });\n}\n", "    return arr.sort((a, b) => Number(a.toString(2).replace(/0/g,\
    \ '').length) > Number(b.toString(2).replace(/0/g, '').length) ? 1 : Number(a.toString(2).replace(/0/g,\
    \ '').length) === Number(b.toString(2).replace(/0/g, '').length) ? a - b : -1);\n\
    }", "    return arr.sort((a, b) => {\n        let a_ones = Number(a).toString(2).split('').filter(el\
    \ => el === '1').length;\n        let b_ones = Number(b).toString(2).split('').filter(el\
    \ => el === '1').length;\n        if (a_ones === b_ones) {\n            return\
    \ a - b;\n        }\n        return a_ones - b_ones;\n    });\n}", "    const\
    \ mapOnes = arr.map(n => {\n        const dec = n.toString(2).split('').reduce((acc,\
    \ cur) => {\n            if (cur === '1') acc++;\n            return acc;\n  \
    \      }, 0);\n        return { dec, n };\n    });\n    mapOnes.sort((a, b) =>\
    \ {\n        if (a.dec === b.dec) return a.n - b.n;\n        return a.dec - b.dec;\n\
    \    });\n    return mapOnes.map(n => n.n);\n}\n\nexport function runTests():\
    \ void {\n    const test = (arr: number[], expected: number[]) => {\n        const\
    \ actual = sort_array(arr);\n        Test.assertSimilar(actual, expected, '');\n\
    \    };\n    Test.it('Basic tests', () => {\n        test([1, 5, 2, 3, 4], [1,\
    \ 2, 3, 4, 5]);\n        test([-2, -3, -4, -5, -6], [-6, -5, -4, -3, -2]);\n \
    \       test([1, 0, 2, 3, 4], [0, 1, 2, 3, 4]);\n        test([1, 0, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,\
    \ 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\
    \ 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82,\
    \ 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101,\
    \ 102, 103, 104, 105, 106, 107, 108, 109,", "    return arr.sort((a, b) => {\n\
    \        a = a.toString(2);\n        b = b.toString(2);\n        if (a.length\
    \ == b.length) {\n            return a - b;\n        }\n        let res = 0;\n\
    \        while (a.length > 0 && b.length > 0) {\n            res += a.slice(-1)\
    \ == '1' ? 1 : 0;\n            res -= b.slice(-1) == '1' ? 1 : 0;\n          \
    \  a = a.slice(0, -1);\n            b = b.slice(0, -1);\n        }\n        return\
    \ res;\n    });\n}\n", "  const binaryArray = arr.map(item => item.toString(2).split('').filter(item\
    \ => +item === 1));\n  return arr.sort((a, b) => {\n    if (binaryArray[arr.indexOf(a)].length\
    \ === binaryArray[arr.indexOf(b)].length) {\n      return a - b;\n    }\n    return\
    \ binaryArray[arr.indexOf(a)].length - binaryArray[arr.indexOf(b)].length;\n \
    \ });\n}\n", "    return arr.sort((a, b) => {\n        const aBinary = a.toString(2);\n\
    \        const bBinary = b.toString(2);\n        if (aBinary.split('1').length\
    \ < bBinary.split('1').length) {\n            return -1;\n        } else if (aBinary.split('1').length\
    \ > bBinary.split('1').length) {\n            return 1;\n        } else {\n  \
    \          return a - b;\n        }\n    });\n}\n\nexport { sort_array };", " \
    \ return arr.sort((a, b) => {\n    const x = a.toString(2).split('').filter(n\
    \ => n === '1').length;\n    const y = b.toString(2).split('').filter(n => n ===\
    \ '1').length;\n    return x - y || a - b;\n  });\n}\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "  return arr.sort((a, b) => {\n    a = a.toString(2).split(\"\
    \").filter(el => el === \"1\").length;\n    b = b.toString(2).split(\"\").filter(el\
    \ => el === \"1\").length;\n    return a === b ? a - b : a - b;\n  });\n}\n\n\
    console.log(sort_array([10, 11, 12, 13]));\nconsole.log(sort_array([0, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(sort_array([1024, 512, 256, 128, 64, 32,\
    \ 16, 8, 4, 2, 1]));\nconsole.log(sort_array([10000, 10000]));\nconsole.log(sort_array([2048,\
    \ 1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 1]));", "  return arr.sort((a, b)\
    \ => {\n    const onesA = getBinaryOnes(a);\n    const onesB = getBinaryOnes(b);\n\
    \    if (onesA === onesB) {\n      return a - b;\n    }\n    return onesA - onesB;\n\
    \  });\n}\n", "  let ones: number[] = arr.map(v => Number(v.toString(2).match(/1/g).length));\n\
    \  return [...arr].sort((a, b) => {\n    let i = ones[arr.indexOf(a)];\n    let\
    \ j = ones[arr.indexOf(b)];\n    return i === j ? a - b : i - j;\n  });\n}", " \
    \   return arr.sort((a, b) => {\n        let x = getOnesInBinary(a);\n       \
    \ let y = getOnesInBinary(b);\n        if (x === y) return a - b;\n        return\
    \ x - y;\n    });\n}\n", "    let isNegative = (n: number) => n < 0;\n    let\
    \ getOnes = (n: number) => parseInt(n.toString(2).replace(/0/g, ''), 2);\n   \
    \ return arr.sort((a, b) => {\n        if (isNegative(a) && isNegative(b)) {\n\
    \            return a - b;\n        } else if (isNegative(a) && !isNegative(b))\
    \ {\n            return -1;\n        } else if (!isNegative(a) && isNegative(b))\
    \ {\n            return 1;\n        } else {\n            return getOnes(a) -\
    \ getOnes(b) || a - b;\n        }\n    });\n}\n", "    return arr.sort((a, b)\
    \ => {\n        const binA = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        const binB = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        return binA !== binB ? binA - binB : a - b;\n    });\n}\n", "  let sorted:\
    \ number[] = [];\n  let ones: number[] = [];\n  let zeros: number[] = [];\n  arr.forEach((e)\
    \ => {\n    if (e.toString(2).includes(\"1\")) {\n      ones.push(e);\n    } else\
    \ {\n      zeros.push(e);\n    }\n  });\n  ones.sort((a, b) => (a.toString(2).length\
    \ > b.toString(2).length ? 1 : -1));\n  return sorted.concat(zeros, ones);\n}\n\
    \nconsole.log(sort_array([1, 0, 2, 3, 4]));\n", "    return arr.sort((a, b) =>\
    \ {\n        let bin1 = getBinary(a).split('').filter(x => x === '1').length;\n\
    \        let bin2 = getBinary(b).split('').filter(x => x === '1').length;\n  \
    \      if (bin1 === bin2) {\n            return a - b;\n        }\n        return\
    \ bin1 - bin2;\n    });\n}", "    return arr.sort((a, b) => {\n        if (countOnes(a)\
    \ !== countOnes(b)) {\n            return countOnes(a) - countOnes(b);\n     \
    \   }\n        return a - b;\n    });\n}\n", "  arr.sort((a, b) => {\n    if (getBit(a)\
    \ !== getBit(b)) {\n      return getBit(a) - getBit(b);\n    } else {\n      return\
    \ a - b;\n    }\n  });\n  return arr;\n}\n", "    return arr.sort((a, b) => {\n\
    \        const aSum = a.toString(2).split('').reduce((acc, el) => acc + +el, 0);\n\
    \        const bSum = b.toString(2).split('').reduce((acc, el) => acc + +el, 0);\n\
    \        return aSum === bSum ? a - b : aSum - bSum;\n    });\n}\n\nexport function\
    \ runTests(): void {\n    const test = (arr: number[], x: number[]): void => {\n\
    \        console.log('Test passed: ', sort_array(arr).join() === x.join());\n\
    \    };\n    test([1, 5, 2, 3, 4], [1, 2, 3, 4, 5]);\n    test([-2, -3, -4, -5,\
    \ -6], [-6, -5, -4, -3, -2]);\n    test([1, 0, 2, 3, 4], [0, 1, 2, 3, 4]);\n}",
  "  return arr.sort((a, b) => a.toString(2).match(/1/g).length - b.toString(2).match(/1/g).length\
    \ || a - b);\n}\n\nexport function testSortArray() {\n  console.log(sort_array([1,\
    \ 0, 2, 3, 4]));\n}", "    if (!arr || arr.length === 0) {\n        return [];\n\
    \    }\n    arr.sort((a, b) => {\n        if (a < 0 && b < 0) {\n            return\
    \ b - a;\n        }\n        let aBinary = a.toString(2);\n        let bBinary\
    \ = b.toString(2);\n        let aOnes = getOnes(aBinary);\n        let bOnes =\
    \ getOnes(bBinary);\n        if (aOnes === bOnes) {\n            return a - b;\n\
    \        }\n        return aOnes - bOnes;\n    });\n    return arr;\n}\n", " \
    \ const sortByBinary = (a: number, b: number) => {\n    return countOnes(a) -\
    \ countOnes(b) || a - b;\n  };\n\n  return arr.sort(sortByBinary);\n}\n", "  return\
    \ arr.sort((a, b) => {\n    const aBinary = a.toString(2);\n    const bBinary\
    \ = b.toString(2);\n    return aBinary.match(/1/g) ?\n      (bBinary.match(/1/g)\
    \ ? aBinary.match(/1/g).length - bBinary.match(/1/g).length : -1) :\n      (bBinary.match(/1/g)\
    \ ? 1 : a - b);\n  });\n}\n", "  let sorted = arr.map(num => ({\n    num,\n  \
    \  ones: (num >>> 0).toString(2).split(\"1\").length - 1\n  }));\n  sorted.sort((a,\
    \ b) => a.ones - b.ones);\n  return sorted.map(num => num.num);\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "    function key(value: number): string {\n        return\
    \ value.toString(2).split('').filter(c => c === '1').length + value.toString();\n\
    \    }\n    return arr.sort((a, b) => key(a).localeCompare(key(b)));\n}\n", " \
    \   return arr.sort((a, b) => {\n        return getDecimalValue(a) - getDecimalValue(b);\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        const binary_a = (a\
    \ >>> 0).toString(2);\n        const binary_b = (b >>> 0).toString(2);\n     \
    \   if (binary_a.split('').filter(x => x === '1').length === binary_b.split('').filter(x\
    \ => x === '1').length) {\n            return a - b;\n        }\n        return\
    \ binary_a.split('').filter(x => x === '1').length - binary_b.split('').filter(x\
    \ => x === '1').length;\n    });\n}\n", "    let sorted = arr.sort((a, b) => {\n\
    \        return Math.abs(a) === Math.abs(b) ? a - b : Math.abs(a).toString(2).split(\"\
    \").filter(value => value === \"1\").length - Math.abs(b).toString(2).split(\"\
    \").filter(value => value === \"1\").length;\n    });\n    return sorted;\n}\n",
  "    return arr.sort((a, b) => {\n        const countOfOnesInA = (a >>> 0).toString(2).split('1').length\
    \ - 1;\n        const countOfOnesInB = (b >>> 0).toString(2).split('1').length\
    \ - 1;\n        if (countOfOnesInA === countOfOnesInB) {\n            return a\
    \ - b;\n        }\n        return countOfOnesInA - countOfOnesInB;\n    });\n\
    }\n", "    return arr.sort((a, b) => {\n        const a1 = a.toString(2).split('').filter(e\
    \ => e === '1').length;\n        const b1 = b.toString(2).split('').filter(e =>\
    \ e === '1').length;\n        return a1 - b1 !== 0 ? a1 - b1 : a - b;\n    });\n\
    }\n\nconsole.log(sort_array([2, 3, 1, 5, 4, 0]));//[0, 1, 2, 3, 4, 5]\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));//[1, 2, 3, 4, 5]\nconsole.log(sort_array([-2, -3, -4, -5, -6]));//[-6,\
    \ -5, -4, -3, -2]\nconsole.log(sort_array([1, 0, 2, 3, 4]));//[0, 1, 2, 3, 4]",
  "  return arr.sort((a, b) => {\n    return countOnes(a) - countOnes(b) || a - b;\n\
    \  });\n}\n", "  const binary: string[] = [];\n  const obj = {};\n  let oneCount\
    \ = 0;\n  let bits = 0;\n  let number = 0;\n  arr.forEach((item, i) => {\n   \
    \ binary[i] = (item >>> 0).toString(2);\n    bits = binary[i].length;\n    number\
    \ = item;\n    oneCount = binary[i].split(\"1\").length - 1;\n    obj[oneCount]\
    \ = obj[oneCount] || [];\n    obj[oneCount].push(number);\n  });\n  const result\
    \ = [];\n  const sorted = Object.keys(obj).sort((a, b) => a - b);\n  sorted.forEach(item\
    \ => result.push(...obj[item].sort((a, b) => a - b)));\n  return result;\n}\n",
  "    return arr.sort((a, b) => {\n        let bA = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bB = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        return bA - bB || a - b;\n    });\n}\n", "    return\
    \ arr.sort((a, b) => {\n        if (countOnes(a) !== countOnes(b)) {\n       \
    \     return countOnes(a) - countOnes(b);\n        } else {\n            return\
    \ a - b;\n        }\n    });\n}\n\nconst countOnes = (num: number): number =>\
    \ {\n    return num.toString(2).split(\"1\").length - 1;\n};\n", "  return arr.sort((a,\
    \ b) => {\n    const a1s = (a >>> 0).toString(2).split(\"\").filter(x => x ===\
    \ \"1\").length;\n    const b1s = (b >>> 0).toString(2).split(\"\").filter(x =>\
    \ x === \"1\").length;\n    return a1s === b1s ? a - b : a1s - b1s;\n  });\n}\n",
  "    return arr.sort((a, b) => {\n        let bitA = (a).toString(2).split('').filter(n\
    \ => n == '1').length;\n        let bitB = (b).toString(2).split('').filter(n\
    \ => n == '1').length;\n        return bitA == bitB ? a - b : bitA - bitB;\n \
    \   });\n}\n", "  return arr.sort((a, b) => {\n    const aOnes = a.toString(2).split(\"\
    \").filter(x => x === \"1\").length;\n    const bOnes = b.toString(2).split(\"\
    \").filter(x => x === \"1\").length;\n    if (aOnes !== bOnes) {\n      return\
    \ aOnes - bOnes;\n    } else {\n      return a - b;\n    }\n  });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "  return arr.sort((a, b) => {\n    const binA = parseInt(a.toString(2).split(\"\
    \").filter(n => n === \"1\").join(\"\"));\n    const binB = parseInt(b.toString(2).split(\"\
    \").filter(n => n === \"1\").join(\"\"));\n    return binA - binB === 0 ? a -\
    \ b : binA - binB;\n  });\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));", "  //return\
    \ arr.sort((a, b) => { return a-b });\n  const onerized = arr.map(v => {\n   \
    \ return {\n      o: v.toString(2).split(\"\").filter(x => x === \"1\").length,\n\
    \      v\n    };\n  });\n  onerized.sort((a, b) => {\n    if (a.o === b.o) {\n\
    \      return a.v - b.v;\n    }\n    return a.o - b.o;\n  });\n  return onerized.map(o\
    \ => o.v);\n}\n", "  const compare = (a: number, b: number) =>\n    (a.toString(2).match(/1/g)\
    \ || []).length -\n    (b.toString(2).match(/1/g) || []).length ||\n    a - b;\n\
    \  return arr.sort(compare);\n}\n", "    return arr.sort((a, b) => {\n       \
    \ let count1 = a.toString(2).split('').filter(x => x === '1').length;\n      \
    \  let count2 = b.toString(2).split('').filter(x => x === '1').length;\n     \
    \   if (count1 === count2) {\n            return a - b;\n        }\n        return\
    \ count1 - count2;\n    });\n}\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\n\
    console.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([1, 0, 2, 3,\
    \ 4]));\n", "    const unsorted = arr.slice(0);\n    return arr.sort((a, b) =>\
    \ {\n        const onesA = a.toString(2).match(/1/g) ? a.toString(2).match(/1/g).length\
    \ : 0;\n        const onesB = b.toString(2).match(/1/g) ? b.toString(2).match(/1/g).length\
    \ : 0;\n        if (onesA === onesB) {\n            const indexA = unsorted.indexOf(a);\n\
    \            const indexB = unsorted.indexOf(b);\n            return indexA -\
    \ indexB;\n        }\n        return onesA - onesB;\n    });\n}\nconsole.log(sort_array([1,5,2,3,4]));",
  "    return arr.sort((a, b) => count_one(a) - count_one(b) || a - b);\n}\n", " \
    \   return arr.sort((a, b) => {\n        let c = countBits(a) - countBits(b);\n\
    \        return c === 0 ? a - b : c;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let countA = (a >>> 0).toString(2).split('').filter(c => c\
    \ === '1').length\n        let countB = (b >>> 0).toString(2).split('').filter(c\
    \ => c === '1').length\n        return countA === countB ? a - b : countA - countB\n\
    \    })\n}\n", "    let res: number[] = [];\n    const sortedArray: number[] =\
    \ arr.sort((a, b) => a - b);\n    const map: { [key: number]: number } = {};\n\
    \    sortedArray.forEach(e => {\n        let c = e.toString(2).match(/1/g);\n\
    \        if (c) {\n            map[e] = c.length;\n        } else {\n        \
    \    map[e] = 0;\n        }\n    });\n    Object.keys(map).sort((a, b) => map[a]\
    \ - map[b]).forEach(k => res.push(+k));\n    return res;\n}\n", "    // return\
    \ arr.sort((a, b) => count_1s(a) - count_1s(b) || a - b);\n    const sorted =\
    \ arr.sort((a, b) => count_1s(a) - count_1s(b));\n    return sorted.sort((a, b)\
    \ => a - b);\n}\n", "  return arr.sort((a, b) => a === b ? a - b : countOnes(a)\
    \ - countOnes(b));\n}\n", "    return arr.sort((a, b) => {\n        const aCount\
    \ = a.toString(2).split('1').length - 1;\n        const bCount = b.toString(2).split('1').length\
    \ - 1;\n        if (aCount === bCount) {\n            return a - b;\n        }\n\
    \        return aCount - bCount;\n    });\n}\n", "    arr.sort((a, b) => {\n \
    \       const aBinary = a.toString(2);\n        const bBinary = b.toString(2);\n\
    \        const aOneCount = countOnes(aBinary);\n        const bOneCount = countOnes(bBinary);\n\
    \        if (aOneCount === bOneCount) {\n            return a - b;\n        }\n\
    \        return aOneCount - bOneCount;\n    });\n    return arr;\n}\n\nconst countOnes\
    \ = (binary: string) => binary.split('').filter(char => char === '1').length;\n",
  "    return arr.sort((a, b) => (a.toString(2).match(/1/g) || []).length - (b.toString(2).match(/1/g)\
    \ || []).length || a - b);\n}\n", "    return arr.sort((a, b) => {\n        const\
    \ aNum = (a >>> 0).toString(2).match(/1/g)?.length || 0;\n        const bNum =\
    \ (b >>> 0).toString(2).match(/1/g)?.length || 0;\n        return aNum - bNum\
    \ || a - b;\n    });\n}\n", "  return arr.sort((a, b) => {\n    const binaryA\
    \ = (a >>> 0).toString(2);\n    const binaryB = (b >>> 0).toString(2);\n    return\
    \ binaryA.split('').filter(char => char === '1').length - binaryB.split('').filter(char\
    \ => char === '1').length || a - b;\n  });\n}\n", "  const sortedArray = [...arr];\n\
    \  sortedArray.sort((a, b) => {\n    const aBinary = a.toString(2);\n    const\
    \ bBinary = b.toString(2);\n    const numberOfOnesA = (aBinary.match(/1/g) ||\
    \ []).length;\n    const numberOfOnesB = (bBinary.match(/1/g) || []).length;\n\
    \    if (numberOfOnesA < numberOfOnesB) {\n      return -1;\n    } else if (numberOfOnesA\
    \ > numberOfOnesB) {\n      return 1;\n    } else {\n      return a - b;\n   \
    \ }\n  });\n  return sortedArray;\n}\n", "    const oneMap = arr.map(val => {\n\
    \        const binaryArr = val.toString(2).split('');\n        const ones = binaryArr.filter(item\
    \ => item === '1').length;\n        return {\n            number: val,\n     \
    \       ones\n        }\n    });\n    const list = oneMap.sort((a, b) => {\n \
    \       if (a.ones === b.ones) {\n            return a.number - b.number;\n  \
    \      }\n        return a.ones - b.ones;\n    });\n    return list.map(item =>\
    \ item.number);\n}\n", "  const arr1 = arr.sort((a, b) => {\n    if (a.toString(2).split(\"\
    1\").length !== b.toString(2).split(\"1\").length) {\n      return a.toString(2).split(\"\
    1\").length - b.toString(2).split(\"1\").length;\n    } else {\n      return a\
    \ - b;\n    }\n  });\n  return arr1;\n}\n", "  arr.sort((a, b) => {\n    const\
    \ binA = a.toString(2).split('').filter(char => char === '1').length;\n    const\
    \ binB = b.toString(2).split('').filter(char => char === '1').length;\n    if\
    \ (binA < binB) {\n      return -1;\n    } else if (binA > binB) {\n      return\
    \ 1;\n    } else {\n      return a - b;\n    }\n  });\n  return arr;\n}\n", " \
    \ return arr.sort((a, b) => {\n    const { length: aLen } = a.toString(2).match(/1/g)\
    \ || [];\n    const { length: bLen } = b.toString(2).match(/1/g) || [];\n    return\
    \ aLen === bLen ? a - b : aLen - bLen;\n  });\n}\n\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "  return arr.sort((a, b) => {\n    let decA = a.toString(2).split(\"\
    1\").length - 1;\n    let decB = b.toString(2).split(\"1\").length - 1;\n    if\
    \ (decA === decB) {\n      return a - b;\n    } else {\n      return decA - decB;\n\
    \    }\n  });\n}\n", "  return arr.sort((a, b) => {\n    const numberOfOnesA =\
    \ a.toString(2).match(/1/g)?.length ?? 0;\n    const numberOfOnesB = b.toString(2).match(/1/g)?.length\
    \ ?? 0;\n    if (numberOfOnesA > numberOfOnesB) {\n      return 1;\n    } else\
    \ if (numberOfOnesA < numberOfOnesB) {\n      return -1;\n    } else {\n     \
    \ return a - b;\n    }\n  });\n}\nconsole.log(sort_array([1, 5, 2, 3, 4])); //\
    \ [1, 2, 3, 4, 5]\nconsole.log(sort_array([-2, -3, -4, -5, -6])); // [-6, -5,\
    \ -4, -3, -2]\nconsole.log(sort_array([1, 0, 2, 3, 4])); // [0, 1, 2, 3, 4]\n\
    console.log(sort_array([0, 0, 0, 0, 0])); // [0, 0, 0, 0, 0]\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5])); // [1, 2, 3, 4, 5]\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\
    \ // [-6, -5, -4, -3, -2]\nconsole.log(sort_array([0, 1, 2, 3, 4])); // [0, 1,\
    \ 2, 3, 4]\nconsole.log(sort_array([5, 4, 3, 2, 1])); // [1, 2, 3, 4, 5]\nconsole.log(sort_array([-6,\
    \ -5, -4, -3, -2])); // [-6, -5, -4, -3, -2]\nconsole.log(sort_array([4, 3, 2,\
    \ 1, 0])); // [0, 1, 2, 3, 4]\nconsole.log(sort_array([-100, -100, -1, 1, -2,\
    \ -2, -3,", "    let maps = new Map<number, number[]>();\n    arr.forEach(num\
    \ => {\n        let key = 0;\n        while (num) {\n            num &= num -\
    \ 1;\n            key++;\n        }\n        let value = maps.get(key);\n    \
    \    if (value) {\n            value.push(num);\n        } else {\n          \
    \  maps.set(key, [num]);\n        }\n    });\n    let arr2 = Array.from(maps.keys()).sort((k1,\
    \ k2) => k1 - k2);\n    let result = [];\n    arr2.forEach(key => {\n        let\
    \ value = maps.get(key);\n        value.sort((v1, v2) => v1 - v2);\n        result\
    \ = result.concat(value);\n    });\n    return result;\n}\n\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));", "  const binary_arr = arr.map(number => number.toString(2));\n\
    \  const binary_arr_sort = binary_arr.sort(\n    (a, b) =>\n      a.split('').filter(i\
    \ => i === '1').length -\n      b.split('').filter(i => i === '1').length\n  );\n\
    \  return binary_arr_sort.map(i => parseInt(i, 2));\n}\nconsole.log(sort_array([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));", "  const sorted = arr.sort((a, b) => {\n  \
    \  const aOne = (a >>> 0).toString(2).split(\"\").filter(x => x === \"1\").length;\n\
    \    const bOne = (b >>> 0).toString(2).split(\"\").filter(x => x === \"1\").length;\n\
    \    if (aOne === bOne) {\n      return a - b;\n    }\n    return aOne - bOne;\n\
    \  });\n  return sorted;\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));", "    const onesComparator\
    \ = (a: number, b: number) => {\n        const onesInA = (a).toString(2).replace(/0/g,\
    \ '').length;\n        const onesInB = (b).toString(2).replace(/0/g, '').length;\n\
    \        return onesInA === onesInB ? a - b : onesInA - onesInB;\n    };\n   \
    \ return arr.sort(onesComparator);\n}\nconsole.log(sort_array([1, 0, 2, 3, 4]));\n\
    console.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4,\
    \ -5, -6]));\n", "  return arr.sort((a, b) => {\n    if (a > 0 && b > 0) {\n \
    \     const aOnes = Number(a.toString(2).match(/1/g)?.length);\n      const bOnes\
    \ = Number(b.toString(2).match(/1/g)?.length);\n      if (aOnes === bOnes) {\n\
    \        return a - b;\n      }\n      return aOnes - bOnes;\n    }\n    return\
    \ a - b;\n  });\n}\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));\n\nexport {};",
  "  if (arr.length === 0) {\n    return [];\n  }\n  let sorted = arr.sort((a, b)\
    \ => {\n    if (countBits(a) === countBits(b)) {\n      return a - b;\n    }\n\
    \    return countBits(a) - countBits(b);\n  });\n  return sorted;\n}\n", "  return\
    \ arr.sort((a, b) =>\n    a.toString(2).split('').filter(v => v === '1').length\
    \ -\n      b.toString(2).split('').filter(v => v === '1').length ||\n    a - b\n\
    \  );\n}\n", "    return arr.sort((a, b) => {\n        if (a < 0) return -1;\n\
    \        if (b < 0) return 1;\n        if (b % 2 === 0 && a % 2 === 0) return\
    \ a - b;\n        if (b % 2 === 0) return -1;\n        if (a % 2 === 0) return\
    \ 1;\n        if (b % 2 === 1 && a % 2 === 1) return a - b;\n        return -1;\n\
    \    });\n}", "  let res: number[] = [];\n  let sortable: number[][] = [];\n \
    \ arr.forEach(el => {\n    let ones: number = el.toString(2).split(\"1\").length\
    \ - 1;\n    if (sortable[ones]) {\n      sortable[ones].push(el);\n    } else\
    \ {\n      sortable[ones] = [el];\n    }\n  });\n  sortable.forEach(el => {\n\
    \    if (el) {\n      res = res.concat(el.sort((a, b) => a - b));\n    }\n  });\n\
    \  return res;\n}\n", "    return arr.sort((a, b) => {\n        const binaA =\
    \ a.toString(2).split('').filter(i => i === '1').length;\n        const binaB\
    \ = b.toString(2).split('').filter(i => i === '1').length;\n        if (binaA\
    \ === binaB) {\n            return a - b;\n        }\n        return binaA - binaB;\n\
    \    });\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]), [1, 2, 3, 4, 5]);\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]), [-6, -5, -4, -3, -2]);\nconsole.log(sort_array([1, 0, 2, 3,\
    \ 4]), [0, 1, 2, 3, 4]);\nconsole.log(sort_array([1, 2, 3, 4, 5]), [1, 2, 3, 4,\
    \ 5]);\nconsole.log(sort_array([0, -7, -6, -5, -4, -3, -2, -1]), [-7, -6, -5,\
    \ -4, -3, -2, -1, 0]);\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7]), [0,\
    \ 1, 2, 3, 4, 5, 6, 7]);\nconsole.log(sort_array([0, 2, 3, 4, 7, 9, 10, 8, 11,\
    \ 12, 13, 14, 15, 16, 1, 5, 6]), [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16]);\nconsole.log(sort_array([0, 2, 3, 4, 7, 9, 10, 11, 8, 12, 13,\
    \ 14, 15, 16, 1, 5, 6]), [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16]);\nconsole.log(sort_array([1, 2, 3, 4, 5,", "  return arr.sort((a, b) =>\
    \ {\n    let a1 = (a >>> 0).toString(2).split(\"\").filter(el => el === \"1\"\
    ).length;\n    let b1 = (b >>> 0).toString(2).split(\"\").filter(el => el ===\
    \ \"1\").length;\n    return a1 - b1 === 0 ? a - b : a1 - b1;\n  });\n}\n", " \
    \   return arr.sort((a, b) => {\n        let aBinary = a.toString(2);\n      \
    \  let bBinary = b.toString(2);\n        let aOnes = aBinary.match(/1/g) || [];\n\
    \        let bOnes = bBinary.match(/1/g) || [];\n        if (aOnes.length ===\
    \ bOnes.length) {\n            return a - b;\n        }\n        return aOnes.length\
    \ - bOnes.length;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ onesA = (a >>> 0).toString(2).split('').filter(el => el === '1').length\n  \
    \      let onesB = (b >>> 0).toString(2).split('').filter(el => el === '1').length\n\
    \        if (onesA > onesB) {\n            return 1\n        } else if (onesA\
    \ < onesB) {\n            return -1\n        } else {\n            return a -\
    \ b\n        }\n    })\n}\n", "  let result: number[] = [];\n  if (arr.length\
    \ === 0) {\n    return result;\n  }\n  for (let i = 0; i < arr.length; i++) {\n\
    \    result.push(\n      arr\n        .map((n) => {\n          return {\n    \
    \        val: n,\n            bin: n.toString(2),\n          };\n        })\n\
    \        .sort((a, b) => {\n          return (\n            a.bin.split(\"1\"\
    ).length - b.bin.split(\"1\").length || a.val - b.val\n          );\n        })[i].val\n\
    \    );\n  }\n  return result;\n}\n", "  return arr.sort((a, b) => {\n    if (countOnes(a)\
    \ > countOnes(b)) {\n      return 1;\n    } else if (countOnes(a) < countOnes(b))\
    \ {\n      return -1;\n    } else {\n      return a - b;\n    }\n  });\n}\n",
  "    return arr.sort((a, b) => {\n        const binA = a.toString(2);\n        const\
    \ binB = b.toString(2);\n        const bitCountA = (binA.match(/1/g) || []).length;\n\
    \        const bitCountB = (binB.match(/1/g) || []).length;\n        if (bitCountA\
    \ < bitCountB) {\n            return -1;\n        } else if (bitCountA > bitCountB)\
    \ {\n            return 1;\n        } else {\n            return a - b;\n    \
    \    }\n    });\n}\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));", "    let ones_count:\
    \ number[] = [];\n    let result: number[] = [];\n    // get number of 1s in binary\
    \ representation\n    for (let i = 0; i < arr.length; i++) {\n        let ones\
    \ = arr[i].toString(2).match(/1/g);\n        ones_count.push(ones ? ones.length\
    \ : 0);\n    }\n    //console.log(ones_count);\n    // sort by number of 1s and\
    \ then by decimal value\n    result = arr.sort((a, b) => {\n        if (ones_count[arr.indexOf(a)]\
    \ < ones_count[arr.indexOf(b)]) {\n            return -1;\n        } else if (ones_count[arr.indexOf(a)]\
    \ > ones_count[arr.indexOf(b)]) {\n            return 1;\n        } else {\n \
    \           return a - b;\n        }\n    });\n    return result;\n}\nconsole.log(sort_array([0,\
    \ -1, -2, -3, -4, 1, 2, 3, 4, 5]));\n", "    return arr.sort((a, b) => {\n   \
    \     let a1 = a.toString(2).split(\"1\").length - 1;\n        let b1 = b.toString(2).split(\"\
    1\").length - 1;\n        if (a1 === b1) {\n            return a - b;\n      \
    \  }\n        return a1 - b1;\n    });\n}\n", "  const sorted = arr.sort((a, b)\
    \ => {\n    const aOnes = countOnes(a);\n    const bOnes = countOnes(b);\n   \
    \ if (aOnes > bOnes) {\n      return 1;\n    } else if (aOnes < bOnes) {\n   \
    \   return -1;\n    } else {\n      return a - b;\n    }\n  });\n  return sorted;\n\
    }\n", "    return arr.sort((a, b) => {\n        const binaryA = +a.toString(2).replace(/0/g,\
    \ '').length;\n        const binaryB = +b.toString(2).replace(/0/g, '').length;\n\
    \        return binaryA - binaryB ? binaryA - binaryB : a - b;\n    });\n}\n",
  "  return arr.sort((a, b) => {\n    const aBin = a.toString(2);\n    const bBin\
    \ = b.toString(2);\n    if (aBin.length === bBin.length) {\n      return a - b;\n\
    \    }\n    return bBin.length - aBin.length;\n  });\n}\n\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));", "  return arr.sort((a, b) => {\n    return ((a >>> 0).toString(2).split('1').length)\
    \ - ((b >>> 0).toString(2).split('1').length) || a - b;\n  });\n}\n", "  let obj\
    \ = arr.reduce((acc, el) => {\n    let count = el.toString(2).split(\"\").filter(x\
    \ => x === \"1\").length;\n    if (acc[count]) {\n      acc[count].push(el);\n\
    \    } else {\n      acc[count] = [el];\n    }\n    return acc;\n  }, {});\n \
    \ return Object.values(obj)\n    .reduce((acc, el) => {\n      acc.push(...el.sort((a,\
    \ b) => a - b));\n      return acc;\n    }, [])\n    .reduce((acc, el) => {\n\
    \      if (el < 0) {\n        acc.push(el);\n      }\n      return acc;\n    },\
    \ []);\n}\n", "  return arr.sort((a, b) => {\n    let a1 = a.toString(2).match(/1/g).length;\n\
    \    let b1 = b.toString(2).match(/1/g).length;\n    return a1 - b1 === 0 ? a\
    \ - b : a1 - b1;\n  });\n}\nconsole.log(sort_array([1, 5, 2, 3, 4]));", "    return\
    \ arr.sort((a, b) => {\n        const binaryA = a.toString(2).split(\"\").filter(x\
    \ => x === \"1\").length;\n        const binaryB = b.toString(2).split(\"\").filter(x\
    \ => x === \"1\").length;\n        if (binaryA > binaryB) {\n            return\
    \ 1;\n        } else if (binaryA < binaryB) {\n            return -1;\n      \
    \  } else {\n            return a - b;\n        }\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    if (countOnes(a) === countOnes(b)) {\n      return a - b;\n   \
    \ } else {\n      return countOnes(a) - countOnes(b);\n    }\n  });\n}\n", " \
    \   const map = arr.map(value => {\n        const binary = value.toString(2).split('');\n\
    \        return {\n            value,\n            oneCount: binary.filter(value\
    \ => value === '1').length\n        }\n    });\n    const sortedByOnes = map.sort((a,\
    \ b) => a.oneCount - b.oneCount);\n    return sortedByOnes.map(value => value.value);\n\
    }", "    let result = [];\n    let map = {};\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        let dec = arr[i];\n        let bin = dec.toString(2);\n    \
    \    let count = (bin.match(/1/g) || []).length;\n        map[dec] = count;\n\
    \        result.push(count);\n    }\n    result.sort((a, b) => {\n        if (a\
    \ > b) {\n            return 1;\n        } else if (a < b) {\n            return\
    \ -1;\n        } else {\n            return 0;\n        }\n    });\n    let res\
    \ = [];\n    for (let i = 0; i < result.length; i++) {\n        let num = result[i];\n\
    \        for (let key in map) {\n            if (map[key] === num) {\n       \
    \         res.push(parseInt(key));\n                delete map[key];\n       \
    \         break;\n            }\n        }\n    }\n    return res;\n}\nconsole.log(sort_array([1,\
    \ 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));\n", "  const neg = [];\n  const pos = [];\n  const zero = [];\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      pos.push(arr[i]);\n\
    \    } else if (arr[i] < 0) {\n      neg.push(arr[i]);\n    } else {\n      zero.push(arr[i]);\n\
    \    }\n  }\n  //negative values\n  neg.sort((a, b) => {\n    let countA = 0;\n\
    \    let countB = 0;\n    for (let i = a; i < 0; i++) {\n      const str = `${a}`;\n\
    \      for (let j = 0; j < str.length; j++) {\n        if (str[j] === \"1\") {\n\
    \          countA++;\n        }\n      }\n    }\n    for (let i = b; i < 0; i++)\
    \ {\n      const str = `${b}`;\n      for (let j = 0; j < str.length; j++) {\n\
    \        if (str[j] === \"1\") {\n          countB++;\n        }\n      }\n  \
    \  }\n    if (countA > countB) {\n      return 1;\n    } else if (countA < countB)\
    \ {\n      return -1;\n    } else {\n      return a - b;\n    }\n  });\n  //positive\
    \ values\n  pos.sort((a, b) => {\n    let countA = 0;\n    let countB = 0;\n \
    \   for (let i = a; i > 0; i++) {\n      const str = `${a}`;\n      for (let j\
    \ = 0; j < str.length; j++) {\n        if (str[j] === \"1\") {\n          countA++;\n\
    \        }\n      }\n    }\n    for (let i = b; i > 0; i++) {\n      const str\
    \ = `${b}`;\n      for (let j = 0; j < str.length; j++) {\n        if (str[j]\
    \ === \"1\") {\n          countB++;\n        }\n      }\n    }\n   ", "    arr.sort((a,\
    \ b) => {\n        if (countOnes(a) < countOnes(b)) {\n            return -1;\n\
    \        } else if (countOnes(a) > countOnes(b)) {\n            return 1;\n  \
    \      } else {\n            return a - b;\n        }\n    });\n    return arr;\n\
    }\n", "    const getOneCount = (x: number): number => {\n        const binary\
    \ = x.toString(2);\n        return binary.split('').reduce((acc, cur) => {\n \
    \           return cur === '1' ? acc + 1 : acc;\n        }, 0);\n    };\n    return\
    \ arr.sort((a, b) => {\n        const aBinary = a.toString(2);\n        const\
    \ bBinary = b.toString(2);\n        const aOneCount = getOneCount(a);\n      \
    \  const bOneCount = getOneCount(b);\n        if (aOneCount === bOneCount) {\n\
    \            return a - b;\n        }\n        return aOneCount - bOneCount;\n\
    \    });\n}\n\nconst oneCount = (x: number): number => {\n    const binary = x.toString(2);\n\
    \    return binary.split('').reduce((acc, cur) => {\n        return cur === '1'\
    \ ? acc + 1 : acc;\n    }, 0);\n};\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\n\
    console.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([1, 0,\
    \ 2, 3, 4]));\n", "  return arr.sort((a, b) => {\n    let a_count = countOnes(a);\n\
    \    let b_count = countOnes(b);\n    if (a_count < b_count) {\n      return -1;\n\
    \    } else if (a_count > b_count) {\n      return 1;\n    } else {\n      return\
    \ a - b;\n    }\n  });\n}\n", "  arr.sort((a, b) => {\n    return a.toString(2).split(\"\
    1\").length - b.toString(2).split(\"1\").length || a - b;\n  });\n  return arr;\n\
    }\nconsole.log(sort_array([0, 1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(sort_array([9,\
    \ 8, 7, 6, 5, 4, 3, 2, 1, 0]));\n", "  const onesArray = arr.map(x => x.toString(2).match(/1/g)?.length\
    \ ?? 0);\n  return arr.sort((a, b) => {\n    const aOnes = a.toString(2).match(/1/g)?.length\
    \ ?? 0;\n    const bOnes = b.toString(2).match(/1/g)?.length ?? 0;\n    if (aOnes\
    \ < bOnes) return -1;\n    if (aOnes > bOnes) return 1;\n    if (a < b) return\
    \ -1;\n    if (a > b) return 1;\n    return 0;\n  });\n}", "    let countOnes:\
    \ Array<number> = [];\n    let countOnesNeg: Array<number> = [];\n    let countOnesPos:\
    \ Array<number> = [];\n    let arrNegative: Array<number> = [];\n    let arrPositive:\
    \ Array<number> = [];\n    let arrayOnes: Array<number> = [];\n    let arrayZeros:\
    \ Array<number> = [];\n    let sortedArrayOnes: Array<number> = [];\n    let sortedArrayZeros:\
    \ Array<number> = [];\n    let sortedArrayOnesNeg: Array<number> = [];\n    let\
    \ sortedArrayOnesPos: Array<number> = [];\n    let sortedArray: Array<number>\
    \ = [];\n    let array: Array<number> = [];\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        let count = 0;\n        let binary = arr[i].toString(2);\n \
    \       for (let j = 0; j < binary.length; j++) {\n            if (binary[j] ===\
    \ '1') {\n                count++;\n            }\n        }\n        countOnes.push(count);\n\
    \        array.push(arr[i]);\n    }\n    for (let i = 0; i < countOnes.length;\
    \ i++) {\n        if (arr[i] < 0) {\n            countOnesNeg.push(countOnes[i]);\n\
    \            arrNegative.push(arr[i]);\n        } else {\n            countOnesPos.push(countOnes[i]);\n\
    \            arrPositive.push(arr[i]);\n        }\n    }\n    for (let i = 0;\
    \ i < countOnesPos.length; i++) {\n        if (countOnesPos[i] === 0) {\n    \
    \        arrayZeros.push(arrPositive[i]);\n        } else {\n            arrayOnes.push(arrPositive[i]);\n\
    \        }\n    }\n    sortedArrayOnes = arrayOnes.sort(function (a, b) {\n  \
    \      return a - b;\n    });\n    sortedArrayZeros = arrayZeros.sort(function\
    \ (a, b) {\n        return a - b;\n    });\n    sorted", "    const numbers =\
    \ arr.map(number => [number, number.toString(2).split(\"\").filter(character =>\
    \ character === \"1\").length]);\n    const sorted = numbers.sort((a, b) => {\n\
    \        if (a[1] > b[1]) return 1;\n        if (a[1] < b[1]) return -1;\n   \
    \     if (a[0] > b[0]) return 1;\n        if (a[0] < b[0]) return -1;\n      \
    \  return 0;\n    });\n    return sorted.map(item => item[0]);\n}\n", "    return\
    \ arr.sort((a, b) => {\n        let aOnes = countOnes(a);\n        let bOnes =\
    \ countOnes(b);\n        if (aOnes === bOnes) return a - b;\n        return aOnes\
    \ - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => \n        a.toString(2).replace(/0/g,\
    \ '').length - b.toString(2).replace(/0/g, '').length != 0 ? \n        a.toString(2).replace(/0/g,\
    \ '').length - b.toString(2).replace(/0/g, '').length : \n        a - b\n    );\n\
    }\n\nconsole.log(sort_array([1, 5, 2, 3, 4]));\nconsole.log(sort_array([-2, -3,\
    \ -4, -5, -6]));\nconsole.log(sort_array([1, 0, 2, 3, 4]));", "    return arr.sort((a,\
    \ b) => {\n        let val1 = a.toString(2).split('').filter(i => i === '1').length;\n\
    \        let val2 = b.toString(2).split('').filter(i => i === '1').length;\n \
    \       return val1 - val2 !== 0 ? val1 - val2 : a - b;\n    });\n}\n\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));\nconsole.log(sort_array([-2, -3, -4, -5, -6]));\nconsole.log(sort_array([-2,\
    \ -3, -4, -5, -6]));", "    const sortedArr = arr.sort((a, b) => {\n        let\
    \ binaryA = a.toString(2);\n        let binaryB = b.toString(2);\n        let\
    \ binaryAElements = binaryA.split('');\n        let binaryBElements = binaryB.split('');\n\
    \        let numOfOnesA = binaryAElements.filter(el => el === '1').length;\n \
    \       let numOfOnesB = binaryBElements.filter(el => el === '1').length;\n  \
    \      if (numOfOnesA === numOfOnesB) {\n            return a - b;\n        }\n\
    \        return numOfOnesA - numOfOnesB;\n    });\n    return sortedArr;\n}\n\
    console.log(sort_array([2, 3, 4, 5, 7, 8, 1, 6]));\nconsole.log(sort_array([2,\
    \ 3, 4, 5, 7, 8, 1, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\
    \ 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\
    \ 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,\
    \ 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114,\
    \ 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130,\
    \ 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146,\
    \ 147, 148, 149, 150, 151, 152,", "    return arr.sort((a, b) => {\n        const\
    \ onesA = (a.toString(2).match(/1/g) || []).length;\n        const onesB = (b.toString(2).match(/1/g)\
    \ || []).length;\n        return onesA - onesB || a - b;\n    });\n}\n", "   \
    \ return arr.sort((a, b) => countOnes(a) - countOnes(b) || a - b);\n}\n", "  \
    \  let binaryArr = arr.map(num => toBinary(num));\n    let map: Map<number, number[]>\
    \ = new Map();\n    for (let i = 0; i < binaryArr.length; i++) {\n        let\
    \ count = binaryArr[i].replace(/0/g, '').length;\n        if (map.has(count))\
    \ {\n            map.get(count).push(arr[i]);\n        } else {\n            map.set(count,\
    \ [arr[i]]);\n        }\n    }\n    let result = [];\n    for (let key of map.keys())\
    \ {\n        let sorted = map.get(key).sort((a, b) => a - b);\n        result\
    \ = result.concat(sorted);\n    }\n    return result;\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const ab = getNumOfOnes(a);\n        const bb = getNumOfOnes(b);\n\
    \        if (ab === bb) {\n            return a - b;\n        }\n        return\
    \ ab - bb;\n    });\n}\n", "  return arr.sort((a, b) => {\n    const aBin: string\
    \ = a.toString(2);\n    const bBin: string = b.toString(2);\n    const aOnes:\
    \ number = aBin.match(/1/g) ? aBin.match(/1/g).length : 0;\n    const bOnes: number\
    \ = bBin.match(/1/g) ? bBin.match(/1/g).length : 0;\n    if (aOnes === bOnes)\
    \ {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n\nexport\
    \ default sort_array;", "    let sortedArray = [];\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        sortedArray.push(arr[i].toString(2).split('').reduce((a, b)\
    \ => {\n            return a + Number(b);\n        }, 0));\n    }\n    sortedArray\
    \ = sortedArray.sort((a, b) => {\n        return a - b;\n    });\n    let newArray\
    \ = [];\n    for (let i = 0; i < sortedArray.length; i++) {\n        let index\
    \ = arr.findIndex(a => a.toString(2).split('').reduce((a, b) => {\n          \
    \  return a + Number(b);\n        }, 0) === sortedArray[i]);\n        newArray.push(arr[index]);\n\
    \        arr.splice(index, 1);\n    }\n    return newArray;\n}\n\nconsole.log(sort_array([1,\
    \ 0, 2, 3, 4]));", "  return arr.sort((a, b) => {\n    let binA = a.toString(2);\n\
    \    let binB = b.toString(2);\n    let onesInA = binA.split(\"\").filter(num\
    \ => num === \"1\").length;\n    let onesInB = binB.split(\"\").filter(num =>\
    \ num === \"1\").length;\n    return onesInA - onesInB ? onesInA - onesInB : a\
    \ - b;\n  });\n}\nconsole.log(sort_array([5, 2, 3, 4, 1]));", "    const map =\
    \ {};\n    const res = [];\n    for (let i = 0; i < arr.length; i++) {\n     \
    \   const v = arr[i];\n        const bv = v.toString(2);\n        const ones =\
    \ (bv.match(/1/g) || []).length;\n        if (!map[ones]) {\n            map[ones]\
    \ = [];\n        }\n        map[ones].push(v);\n    }\n    Object.keys(map).forEach(k\
    \ => {\n        map[k].sort((a, b) => a - b);\n        map[k].forEach(v => res.push(v));\n\
    \    });\n    return res;\n}\n", "  return arr.sort((a, b) => {\n    const a_ones\
    \ = (a >>> 0).toString(2).split(\"\").filter(digit => digit === \"1\").length;\n\
    \    const b_ones = (b >>> 0).toString(2).split(\"\").filter(digit => digit ===\
    \ \"1\").length;\n    if (a_ones === b_ones) {\n      return a - b;\n    }\n \
    \   return a_ones - b_ones;\n  });\n}\n", "    return arr.sort((a, b) => {\n \
    \       let [x, y] = [a, b].map(dec => {\n            return parseInt(dec.toString(2).split('').filter(c\
    \ => c === '1').join(''), 2);\n        });\n        return x - y || a - b;\n \
    \   });\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

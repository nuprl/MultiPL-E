language: ts
name: HumanEval_92_any_int
results:
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if ((Math.floor(x) === x) && (Math.floor(y) === y)\
    \ && (Math.floor(z) === z)) {\n        if ((x + y === z) || (x + z === y) || (y\
    \ + z === x)) {\n            return true;\n        }\n    }\n    return false;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpm35otadt.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpm35otadt.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821670
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if ((x + y) === z || (x + z) === y || (y + z) ===\
    \ x) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpl84to0de.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpl84to0de.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821669
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (Math.floor(x) + Math.floor(y) === Math.floor(z))\
    \ || (Math.floor(x) + Math.floor(z) === Math.floor(y)) || (Math.floor(y) + Math.floor(z)\
    \ === Math.floor(x));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp04nzapjo.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp04nzapjo.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821669
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) {\n \
    \       if (x == y + z || y == x + z || z == x + y) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1nphy37q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1nphy37q.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'false

    true

    false

    '
  timestamp: 1659821669
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    let sum = y + z;\n    if (x === sum || y === sum\
    \ || z === sum) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\nconsole.log(any_int(3, -2, 1));\n\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpp81ha6w8.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpp81ha6w8.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'false

    '
  timestamp: 1659821670
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpofs64k3e.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpofs64k3e.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659821670
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (Math.floor(x) + Math.floor(y) === Math.floor(z))\
    \ || (Math.floor(x) + Math.floor(z) === Math.floor(y)) || (Math.floor(y) + Math.floor(z)\
    \ === Math.floor(x));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp04nzapjo.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp04nzapjo.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821669
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        if (x === y + z || y === x + z || z === x +\
    \ y) {\n            return true;\n        }\n    }\n    return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2babwiwx.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp2babwiwx.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp2babwiwx.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659821669
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    let sum: number = x + y + z;\n    if (sum === x ||\
    \ sum === y || sum === z) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\n\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2,\
    \ 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvulzamkg.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvulzamkg.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'false

    false

    false

    false

    '
  timestamp: 1659821670
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if ((Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) === false) {\n        return false;\n    } else if (x +\
    \ y === z || x + z === y || y + z === x) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9sxk8_6z.ts(14,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp9sxk8_6z.ts(14,40): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp9sxk8_6z.ts(14,63): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659821669
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    let result: boolean = false;\n    if (x === y + z\
    \ || y === x + z || z === x + y) {\n        result = true;\n    }\n    return\
    \ result;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\n\
    console.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpgb439wfc.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgb439wfc.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659821670
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x + y) || Number.isInteger(x\
    \ + z) || Number.isInteger(y + z)) {\n        return true;\n    } else {\n   \
    \     return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2b3v8bk0.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp2b3v8bk0.ts(14,43): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp2b3v8bk0.ts(14,70): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659821669
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x + y === z || x + z === y || y + z === x)\
    \ && Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpddozjchv.ts(14,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpddozjchv.ts(14,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpddozjchv.ts(14,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659821669
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (typeof x === \"number\" && typeof y === \"number\"\
    \ && typeof z === \"number\") {\n        return x + y === z || x + z === y ||\
    \ y + z === x;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpkw1p4lhy.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpkw1p4lhy.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659821669
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x + y === z) {\n        return true;\n    } else\
    \ if (x + z === y) {\n        return true;\n    } else if (y + z === x) {\n  \
    \      return true;\n    } else {\n        return false;\n    }\n}\n\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpw5a7jw__.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpw5a7jw__.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659821669
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpofs64k3e.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpofs64k3e.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659821670
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    let result: boolean = false;\n    if (x % 1 === 0\
    \ && y % 1 === 0 && z % 1 === 0) {\n        if (x === y + z || y === x + z ||\
    \ z === x + y) {\n            result = true;\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmptw2fr0ch.js:34:12)\n    at\
    \ Object.<anonymous> (/tmp/tmptw2fr0ch.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821670
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return x + y === z || x + z === y || y + z === x\n\
    }\n\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpf7ny4yxe.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpf7ny4yxe.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659821669
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (typeof x === \"number\" && typeof y === \"number\"\
    \ && typeof z === \"number\") {\n        return Math.floor(x) + Math.floor(y)\
    \ === Math.floor(z) || Math.floor(x) + Math.floor(z) === Math.floor(y) || Math.floor(y)\
    \ + Math.floor(z) === Math.floor(x);\n    } else {\n        return false;\n  \
    \  }\n}\n\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    console.log(any_int(3, 2, 2));\nconsole.log(any_int(5, 2, 7));\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxj2_yj4r.js:37:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxj2_yj4r.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    '
  timestamp: 1659821669
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    let sum = x + y + z;\n    if (sum % 1 == 0) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(1,\
    \ 1, 1));\nconsole.log(any_int(1, 1, 3));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpk22a5r49.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpk22a5r49.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    '
  timestamp: 1659821670
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return ((x == y + z) || (y == x + z) || (z == x +\
    \ y)) && (Math.floor(x) == x) && (Math.floor(y) == y) && (Math.floor(z) == z);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsoibpjcm.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpsoibpjcm.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978427
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\n\nconsole.log(any_int(3, 2, 2));\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpjqscs2dw.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpjqscs2dw.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'false

    '
  timestamp: 1659978427
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    let sum = x + y + z;\n    let a = sum - y;\n    let\
    \ b = sum - x;\n    let c = sum - z;\n    return ((a == x || b == y || c == z)\
    \ && (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z)));\n}\n\
    console.log(any_int(3, -2, 1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzxhz4lyj.ts(18,53): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpzxhz4lyj.ts(18,76): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpzxhz4lyj.ts(18,99): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978426
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x === Math.round(x) && y === Math.round(y) &&\
    \ z === Math.round(z)) {\n        if (x === y + z || y === x + z || z === x +\
    \ y) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsjo70uyj.js:37:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpsjo70uyj.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978427
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (isInteger(x) && isInteger(y) && isInteger(z))\
    \ {\n        return x + y === z || x + z === y || y + z === x;\n    }\n    return\
    \ false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeg1ojyon.ts(14,9): error TS2304: Cannot find name
    ''isInteger''.

    ../../../../../tmp/tmpeg1ojyon.ts(14,25): error TS2304: Cannot find name ''isInteger''.

    ../../../../../tmp/tmpeg1ojyon.ts(14,41): error TS2304: Cannot find name ''isInteger''.

    '
  timestamp: 1659978427
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (\n        (x === y + z &&\n            (Number.isInteger(x)\
    \ && Number.isInteger(y) && Number.isInteger(z))) ||\n        (y === x + z &&\n\
    \            (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z)))\
    \ ||\n        (z === x + y &&\n            (Number.isInteger(x) && Number.isInteger(y)\
    \ && Number.isInteger(z)))\n    );\n}\nconsole.log(any_int(3, -2, 1));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzsjnt3pk.ts(16,21): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpzsjnt3pk.ts(16,44): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpzsjnt3pk.ts(16,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpzsjnt3pk.ts(18,21): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpzsjnt3pk.ts(18,44): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpzsjnt3pk.ts(18,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpzsjnt3pk.ts(20,21): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpzsjnt3pk.ts(20,44): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpzsjnt3pk.ts(20,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978426
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (typeof x !== 'number' || typeof y !== 'number'\
    \ || typeof z !== 'number') {\n        return false;\n    }\n    if (Math.round(x)\
    \ === (Math.round(y) + Math.round(z))) {\n        return true;\n    }\n    if\
    \ (Math.round(y) === (Math.round(x) + Math.round(z))) {\n        return true;\n\
    \    }\n    if (Math.round(z) === (Math.round(x) + Math.round(y))) {\n       \
    \ return true;\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\n\
    console.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsmudy1ke.js:44:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpsmudy1ke.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    '
  timestamp: 1659978427
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (typeof x == 'number' && typeof y == 'number'\
    \ && typeof z == 'number') {\n        if (x % 1 == 0 && y % 1 == 0 && z % 1 ==\
    \ 0) {\n            if (x + y == z || x + z == y || y + z == x) {\n          \
    \      return true;\n            }\n        }\n    }\n    return false;\n}\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmppb6lcibj.js:37:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppb6lcibj.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    '
  timestamp: 1659978427
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return Number.isInteger(x) && Number.isInteger(y)\
    \ && Number.isInteger(z) && (x + y === z || x + z === y || y + z === x);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpf2qznz8l.ts(14,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpf2qznz8l.ts(14,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpf2qznz8l.ts(14,65): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978426
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (\n        (x + y === z || x + z === y || y +\
    \ z === x) &&\n        (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z))\n\
    \    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\
    \nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkl94j5vs.ts(16,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpkl94j5vs.ts(16,40): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpkl94j5vs.ts(16,63): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978426
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x + y) && Number.isInteger(x\
    \ + z) && Number.isInteger(y + z)) {\n        if (x + y === z || x + z === y ||\
    \ y + z === x) {\n            return true;\n        }\n    }\n    return false;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzyk35sw4.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpzyk35sw4.ts(14,43): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpzyk35sw4.ts(14,70): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978426
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    const sum: number = x + y + z;\n    if (x + y ===\
    \ z) {\n        return true;\n    } else if (x + z === y) {\n        return true;\n\
    \    } else if (y + z === x) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpyz0xr3e3.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpyz0xr3e3.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978426
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x == y + z || y == x + z || z == x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(3,\
    \ -2, 1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp4cns77b8.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4cns77b8.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    '
  timestamp: 1659978426
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        if (x === y + z || y === x + z || z === x +\
    \ y) {\n            return true;\n        }\n    }\n    return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2babwiwx.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp2babwiwx.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp2babwiwx.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659821669
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x % 1 === 0 && y % 1 === 0 && z % 1 === 0)\
    \ && (x === y + z || y === x + z || z === x + y);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpdmcz_igq.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpdmcz_igq.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978427
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n\
    \        if (x + y === z || x + z === y || y + z === x) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmphtyu3wp5.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphtyu3wp5.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978426
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x === y + z || x === y - z || x === z - y ||\
    \ y === x + z || y === x - z || y === z - x || z === x + y || z === x - y || z\
    \ === y - x) {\n        return true;\n    } else {\n        return false;\n  \
    \  }\n}\n\nlet testNum = any_int(3, 2, 2);\nconsole.log(testNum);\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmptzpoitez.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmptzpoitez.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'false

    '
  timestamp: 1659978427
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(3,\
    \ -2, 1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpjsv6imi3.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpjsv6imi3.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    '
  timestamp: 1659978426
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        if (x + y === z || x + z === y || y + z ===\
    \ x) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpis2shl1z.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpis2shl1z.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpis2shl1z.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978426
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        return (x + y == z || x + z == y || y + z ==\
    \ x);\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeku5evh7.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpeku5evh7.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpeku5evh7.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978426
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return x + y === z || x + z === y || y + z === x\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpl_o23bqr.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpl_o23bqr.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978427
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x + y == z) || (x + z == y) || (y + z ==\
    \ x);\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpy992qwhc.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpy992qwhc.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978426
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (Math.floor(x) + Math.floor(y) === Math.floor(z))\
    \ || (Math.floor(x) + Math.floor(z) === Math.floor(y)) || (Math.floor(y) + Math.floor(z)\
    \ === Math.floor(x));\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpbpsni78n.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbpsni78n.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978427
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return Number.isInteger(x) && Number.isInteger(y)\
    \ && Number.isInteger(z) && (x + y === z || x + z === y || y + z === x);\n}\n\
    console.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(5, 2, 7));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpur45mx2y.ts(14,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpur45mx2y.ts(14,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpur45mx2y.ts(14,65): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978426
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        if (x + y === z || x + z === y || y + z ===\
    \ x) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpq93lepco.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpq93lepco.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpq93lepco.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978428
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x === y + z) {\n        return true;\n    } else\
    \ if (y === x + z) {\n        return true;\n    } else if (z === x + y) {\n  \
    \      return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpi1ar6le6.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpi1ar6le6.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978429
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if ((x == y + z || y == x + z || z == x + y) && Number.isInteger(x)\
    \ && Number.isInteger(y) && Number.isInteger(z)) {\n        return true;\n   \
    \ } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcxmb57xq.ts(14,60): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpcxmb57xq.ts(14,83): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpcxmb57xq.ts(14,106): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978429
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    let sum: number = x + y + z;\n    if (x === sum -\
    \ y - z || y === sum - x - z || z === sum - x - y) {\n        return true;\n \
    \   } else {\n        return false;\n    }\n}\nconsole.log(any_int(3, 2, 7));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp6fgxvph1.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6fgxvph1.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    '
  timestamp: 1659978429
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        return ((x + y) === z || (x + z) === y || (y\
    \ + z) === x);\n    } else {\n        return false;\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxepee4_o.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpxepee4_o.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpxepee4_o.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978429
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return ((x == y + z) || (y == x + z) || (z == x +\
    \ y));\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1t3ua_2p.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1t3ua_2p.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978429
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp0kat2w70.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0kat2w70.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978429
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return x === y + z || y === x + z || z === x + y;\n\
    }\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpwl83iz_1.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpwl83iz_1.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978429
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n\
    \        if (x === y + z || y === x + z || z === x + y) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpp2xidfgd.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpp2xidfgd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978429
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    const allAreIntegers = Number.isInteger(x) && Number.isInteger(y)\
    \ && Number.isInteger(z);\n    const xIsEqualToYandZ = x === y + z;\n    const\
    \ yIsEqualToXandZ = y === x + z;\n    const zIsEqualToXandY = z === x + y;\n \
    \   const result = allAreIntegers && (xIsEqualToYandZ || yIsEqualToXandZ || zIsEqualToXandY);\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpddub4vmy.ts(14,35): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpddub4vmy.ts(14,58): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpddub4vmy.ts(14,81): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978429
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    let sum: number = x + y + z;\n    if (x == sum -\
    \ y - z || y == sum - x - z || z == sum - x - y) {\n        return true;\n   \
    \ } else {\n        return false;\n    }\n}\nconsole.log(any_int(5, 2, 7));\n\
    console.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpsbrvf9_r.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpsbrvf9_r.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    true

    '
  timestamp: 1659978429
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(3,\
    \ -2, 1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpn_ldwv8b.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpn_ldwv8b.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    '
  timestamp: 1659978429
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return x == y + z || y == x + z || z == x + y;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpunb7tf77.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpunb7tf77.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978429
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return x === y + z || y === x + z || z === x + y\
    \ ? true : false;\n}\nconsole.log(any_int(3, -2, 1));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp2m6kpxgb.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2m6kpxgb.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    '
  timestamp: 1659978429
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if(x.toString().indexOf('.') != -1 || y.toString().indexOf('.')\
    \ != -1 || z.toString().indexOf('.') != -1) {\n        return false;\n    } else\
    \ {\n        if(x == y + z || y == x + z || z == x + y) {\n            return\
    \ true;\n        } else {\n            return false;\n        }\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpm_4haige.js:42:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpm_4haige.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978429
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpaftxlazh.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpaftxlazh.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978429
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (\n        ((x === y + z) || (y === x + z) ||\
    \ (z === x + y)) &&\n        Number.isInteger(x) &&\n        Number.isInteger(y)\
    \ &&\n        Number.isInteger(z)\n    ) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp14691k3_.ts(16,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp14691k3_.ts(17,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp14691k3_.ts(18,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978429
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (isInt(x) && isInt(y) && isInt(z)) {\n       \
    \ return (x + y == z || x + z == y || y + z == x);\n    }\n    return false;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzhpgy81z.ts(14,9): error TS2304: Cannot find name
    ''isInt''.

    ../../../../../tmp/tmpzhpgy81z.ts(14,21): error TS2304: Cannot find name ''isInt''.

    ../../../../../tmp/tmpzhpgy81z.ts(14,33): error TS2304: Cannot find name ''isInt''.

    '
  timestamp: 1659978429
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x + y === z || x + z === y || y + z === x)\
    \ &&\n        (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n\
    }\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm_tipswt.ts(15,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm_tipswt.ts(15,40): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpm_tipswt.ts(15,63): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978429
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n\
    \        if (x === y + z || y === x + z || z === x + y) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\n\
    console.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxt4pqo42.js:37:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxt4pqo42.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978429
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return x === y + z || y === x + z || z === x + y\
    \ ? true : false;\n}\nconsole.log(any_int(3, -2, 1));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq2dxqcbn.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpq2dxqcbn.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    '
  timestamp: 1659978429
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n\
    \        if (x + y === z || x + z === y || y + z === x) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmphtyu3wp5.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphtyu3wp5.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978426
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (typeof x === \"number\" && typeof y === \"number\"\
    \ && typeof z === \"number\") {\n        if (x % 1 === 0 && y % 1 === 0 && z %\
    \ 1 === 0) {\n            return (x + y === z || x + z === y || y + z === x);\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpif6ylbjj.js:37:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpif6ylbjj.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978429
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x === (y + z) || y === (x + z) || z === (x +\
    \ y)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\
    console.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpfwzidu4h.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpfwzidu4h.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978429
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(3,\
    \ -2, 1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpn_ldwv8b.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpn_ldwv8b.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    '
  timestamp: 1659978429
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if ((x + y) === z) {\n        return true;\n    }\
    \ else if ((x + z) === y) {\n        return true;\n    } else if ((y + z) ===\
    \ x) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\
    console.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp0gnr95a4.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0gnr95a4.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978431
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6q34zn9q.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp6q34zn9q.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp6q34zn9q.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978431
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x === y + z) {\n        return true;\n    } else\
    \ if (y === x + z) {\n        return true;\n    } else if (z === x + y) {\n  \
    \      return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\nconsole.log(any_int(3, 2, 2));\n\
    console.log(any_int(5, 2, 7));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp5ssaze7u.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp5ssaze7u.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    false

    true

    '
  timestamp: 1659978431
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    let areAllInts: boolean = Number.isInteger(x) &&\
    \ Number.isInteger(y) && Number.isInteger(z);\n    let sumOfTwoAndIsGreaterThanThird:\
    \ boolean = (x + y) === z || (x + z) === y || (y + z) === x;\n    return areAllInts\
    \ && sumOfTwoAndIsGreaterThanThird;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8r468ti5.ts(14,38): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp8r468ti5.ts(14,61): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp8r468ti5.ts(14,84): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978431
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        return ((x + y === z) || (x + z === y) || (y\
    \ + z === x));\n    } else {\n        return false;\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpnlmuduvj.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpnlmuduvj.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpnlmuduvj.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978431
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x === y + z || y === x + z || z === x + y)\
    \ && x % 1 === 0 && y % 1 === 0 && z % 1 === 0;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp98yzvftx.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp98yzvftx.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978431
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp7quw3avw.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7quw3avw.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978432
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x + y == z || x + z == y || y + z == x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpshq2jssw.ts(14,63): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpshq2jssw.ts(14,86): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpshq2jssw.ts(14,109): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978431
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x + y === z) || (x + z === y) || (y + z ===\
    \ x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpl2nrgpo7.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpl2nrgpo7.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978431
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x === y + z) {\n        return true;\n    } else\
    \ if (y === x + z) {\n        return true;\n    } else if (z === x + y) {\n  \
    \      return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp79sfv3lk.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp79sfv3lk.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978431
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return isInteger(x) && isInteger(y) && isInteger(z)\
    \ &&\n        (x === y + z || y === x + z || z === x + y);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgd6xwk06.ts(14,12): error TS2304: Cannot find name
    ''isInteger''.

    ../../../../../tmp/tmpgd6xwk06.ts(14,28): error TS2304: Cannot find name ''isInteger''.

    ../../../../../tmp/tmpgd6xwk06.ts(14,44): error TS2304: Cannot find name ''isInteger''.

    '
  timestamp: 1659978431
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\n\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp4snslz6o.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4snslz6o.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978432
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (isNaN(x) || isNaN(y) || isNaN(z)) {\n       \
    \ return false;\n    }\n    let result: boolean = false;\n    if (x + y === z\
    \ || x + z === y || y + z === x) {\n        result = true;\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpvj_gu56d.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvj_gu56d.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978432
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if ((x + y === z || x + z === y || y + z === x) &&\
    \ (x % 1 === 0 && y % 1 === 0 && z % 1 === 0)) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpoj7bjbz2.js:37:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpoj7bjbz2.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978432
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        if (x === y + z || y === x + z || z === x +\
    \ y) {\n            return true;\n        }\n    }\n    return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2babwiwx.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp2babwiwx.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp2babwiwx.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659821669
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (\n        (typeof x === \"number\" && x % 1 ===\
    \ 0) &&\n        (typeof y === \"number\" && y % 1 === 0) &&\n        (typeof\
    \ z === \"number\" && z % 1 === 0)\n    ) {\n        if (x + y === z || x + z\
    \ === y || y + z === x) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp2px9oomq.js:37:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2px9oomq.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    '
  timestamp: 1659978432
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    let a: number = (x * 10) % 10;\n    let b: number\
    \ = (y * 10) % 10;\n    let c: number = (z * 10) % 10;\n    if (a === 0 && b ===\
    \ 0 && c === 0) {\n        if (x + y === z || x + z === y || y + z === x) {\n\
    \            return true;\n        }\n    }\n    return false;\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpj421t7cw.js:40:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpj421t7cw.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978432
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (\n        Number.isInteger(x) &&\n        Number.isInteger(y)\
    \ &&\n        Number.isInteger(z) &&\n        (x + y === z || x + z === y || y\
    \ + z === x)\n    ) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\nconsole.log(any_int(3, -2, 1));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd5hvx847.ts(15,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpd5hvx847.ts(16,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpd5hvx847.ts(17,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978432
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        return x === y + z || y === x + z || z === x\
    \ + y;\n    }\n    return false;\n}\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzstvyyto.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpzstvyyto.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpzstvyyto.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978432
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return x % 1 === 0 && y % 1 === 0 && z % 1 === 0\
    \ && (x === y + z || y === x + z || z === x + y);\n}\n\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpqc0x5dnm.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpqc0x5dnm.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    '
  timestamp: 1659978432
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return x == y + z || y == x + z || z == x + y\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpoonhehxr.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpoonhehxr.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978432
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x + y === z) {\n        return true;\n    } else\
    \ if (x + z === y) {\n        return true;\n    } else if (y + z === x) {\n  \
    \      return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpj9bzgyfe.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpj9bzgyfe.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'false

    true

    true

    false

    '
  timestamp: 1659978432
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if ((x + y === z) || (x + z === y) || (y + z ===\
    \ x)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\
    console.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmphhgzajtz.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphhgzajtz.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978432
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        if (x + y === z || x + z === y || y + z ===\
    \ x) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(any_int(5,\
    \ 2, 7)); //true\nconsole.log(any_int(3, 2, 2)); //false\nconsole.log(any_int(3,\
    \ -2, 1)); //true\nconsole.log(any_int(3.6, -2.2, 2)); //false\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3w7yks7n.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp3w7yks7n.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp3w7yks7n.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978432
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return ((x % 1 == 0) && (y % 1 == 0) && (z % 1 ==\
    \ 0)) && ((x + y == z) || (x + z == y) || (y + z == x));\n}\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpp6827ju8.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpp6827ju8.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978433
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if ((x == y + z || y == x + z || z == x + y) && Number.isInteger(x)\
    \ && Number.isInteger(y) && Number.isInteger(z)) {\n        return true;\n   \
    \ } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcxmb57xq.ts(14,60): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpcxmb57xq.ts(14,83): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpcxmb57xq.ts(14,106): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978429
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        if (x === y + z || y === x + z || z === x +\
    \ y) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8e16jczx.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp8e16jczx.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp8e16jczx.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978433
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpfcuox6m3.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpfcuox6m3.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978434
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x === (y + z) || y === (x + z) || z === (x\
    \ + y)) &&\n        (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpeczz2lmk.ts(15,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpeczz2lmk.ts(15,40): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpeczz2lmk.ts(15,63): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978433
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpofs64k3e.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpofs64k3e.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659821670
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return x === y + z || y === x + z || z === x + y;\n\
    }\n\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpvs_2atk_.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvs_2atk_.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978434
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return typeof x === \"number\" &&\n        typeof\
    \ y === \"number\" &&\n        typeof z === \"number\" &&\n        (x === y +\
    \ z || y === x + z || z === x + y);\n}\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpktxoqxm2.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpktxoqxm2.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978434
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return x === (y + z) || y === (x + z) || z === (x\
    \ + y);\n}\n\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2,\
    \ 2));\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp3gngna1w.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3gngna1w.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978434
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x == y + z || y == x + z || z == x + y) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpocb56797.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpocb56797.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    '
  timestamp: 1659978434
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (isNaN(x) || isNaN(y) || isNaN(z)) {\n       \
    \ return false;\n    }\n    if (isInteger(x) && isInteger(y) && isInteger(z))\
    \ {\n        if (x === y + z || y === x + z || z === x + y) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6inoc9hf.ts(17,9): error TS2304: Cannot find name
    ''isInteger''.

    ../../../../../tmp/tmp6inoc9hf.ts(17,25): error TS2304: Cannot find name ''isInteger''.

    ../../../../../tmp/tmp6inoc9hf.ts(17,41): error TS2304: Cannot find name ''isInteger''.

    '
  timestamp: 1659978434
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        if (x === y + z || y === x + z || z === x +\
    \ y) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpoi8z83_1.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpoi8z83_1.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpoi8z83_1.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978434
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x === y + z || y === x + z || z === x + y)\
    \ && !isNaN(x) && !isNaN(y) && !isNaN(z);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpzuursu9f.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpzuursu9f.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978434
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (\n        (x === y + z && x % 1 === 0 && y %\
    \ 1 === 0 && z % 1 === 0) ||\n        (y === x + z && x % 1 === 0 && y % 1 ===\
    \ 0 && z % 1 === 0) ||\n        (z === x + y && x % 1 === 0 && y % 1 === 0 &&\
    \ z % 1 === 0)\n    ) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpl827ujdw.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpl827ujdw.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978434
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x === y + z || y === x + z || z === x + y)\
    \ && (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\n\
    console.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmcmlrexa.ts(14,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpmcmlrexa.ts(14,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpmcmlrexa.ts(14,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978434
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        if (x + y === z || x + z === y || y + z ===\
    \ x) {\n            return true;\n        }\n    }\n    return false;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpq22z55jo.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpq22z55jo.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpq22z55jo.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978434
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x + y === z || x + z === y || y + z === x)\
    \ && !(Number.isInteger(x) || Number.isInteger(y) || Number.isInteger(z));\n}\n\
    \nconsole.log(any_int(3, -2, 1));\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphxxt_ri5.ts(14,68): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmphxxt_ri5.ts(14,91): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmphxxt_ri5.ts(14,114): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978434
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        if (x + y === z || x + z === y || y + z ===\
    \ x) {\n            return true;\n        }\n    }\n    return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_rvs6bih.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp_rvs6bih.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp_rvs6bih.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978434
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x + y == z) || (x + z == y) || (y + z ==\
    \ x);\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpy992qwhc.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpy992qwhc.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978426
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        if (x + y === z || x + z === y || y + z ===\
    \ x) {\n            return true;\n        }\n    }\n    return false;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpq22z55jo.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpq22z55jo.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpq22z55jo.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978434
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if ((x == y + z) || (y == x + z) || (z == x + y))\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpzj1mwt_z.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpzj1mwt_z.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978434
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if ((typeof x === \"number\") && (typeof y === \"\
    number\") && (typeof z === \"number\")) {\n        return x + y === z || x + z\
    \ === y || y + z === x;\n    } else {\n        return false;\n    }\n}\n\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\nconsole.log(any_int(3.6, -2.2, 2.9));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpk5504zng.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpk5504zng.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    false

    '
  timestamp: 1659978434
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x % 1 === 0 && y % 1 === 0 && z % 1 === 0)\
    \ && ((x + y === z) || (x + z === y) || (y + z === x));\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp3pu9l6zh.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3pu9l6zh.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978434
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        if (x + y === z || x + z === y || y + z ===\
    \ x) {\n            return true;\n        }\n    }\n    return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_rvs6bih.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp_rvs6bih.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp_rvs6bih.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978434
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return true\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmps5h_k2d1.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmps5h_k2d1.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978434
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x === 0 || y === 0 || z === 0) {\n        return\
    \ false;\n    } else if (x + y === z || x + z === y || y + z === x) {\n      \
    \  return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpmg6rpzpr.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpmg6rpzpr.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978435
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x + y === z) {\n        return true;\n    } else\
    \ if (x + z === y) {\n        return true;\n    } else if (y + z === x) {\n  \
    \      return true;\n    } else {\n        return false;\n    }\n}\n\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpi1jbf05g.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpi1jbf05g.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978435
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return x === y + z || y === x + z || z === x + y;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpqunt1usb.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpqunt1usb.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978435
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (is_int(x) && is_int(y) && is_int(z)) {\n    \
    \    if (x + y === z || x + z === y || y + z === x) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqz9x0zzo.ts(14,9): error TS2304: Cannot find name
    ''is_int''.

    ../../../../../tmp/tmpqz9x0zzo.ts(14,22): error TS2304: Cannot find name ''is_int''.

    ../../../../../tmp/tmpqz9x0zzo.ts(14,35): error TS2304: Cannot find name ''is_int''.

    '
  timestamp: 1659978435
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if ((x == y + z || y == x + z || z == x + y) && (Number.isInteger(x)\
    \ && Number.isInteger(y) && Number.isInteger(z))) {\n        return true;\n  \
    \  } else {\n        return false;\n    }\n}\nconsole.log(any_int(5, 2, 7));\n\
    console.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy9kzkl65.ts(14,61): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpy9kzkl65.ts(14,84): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpy9kzkl65.ts(14,107): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978436
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    let result = x == y + z || y == x + z || z == x +\
    \ y;\n    if (result) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp54cfuwiu.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp54cfuwiu.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978436
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return Number.isInteger(x) && Number.isInteger(y)\
    \ && Number.isInteger(z) && (x === y + z || y === x + z || z === x + y);\n}\n\
    console.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe8t5wnvl.ts(14,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpe8t5wnvl.ts(14,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpe8t5wnvl.ts(14,65): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978436
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return x === y + z || y === x + z || z === x + y;\n\
    }\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpwl83iz_1.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpwl83iz_1.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978429
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return Number.isInteger(x) && Number.isInteger(y)\
    \ && Number.isInteger(z) && (x + y === z || x + z === y || y + z === x);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpf2qznz8l.ts(14,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpf2qznz8l.ts(14,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpf2qznz8l.ts(14,65): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978426
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    let truth: boolean = false;\n    let sum_xy: number\
    \ = x + y;\n    let sum_xz: number = x + z;\n    let sum_yz: number = y + z;\n\
    \    if (sum_xy === z || sum_xz === y || sum_yz === x) {\n        truth = true;\n\
    \    }\n    return truth;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp4cquhpse.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4cquhpse.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978437
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return ((x === y + z) || (y === x + z) || (z ===\
    \ x + y)) && (x % 1 === 0) && (y % 1 === 0) && (z % 1 === 0);\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmph1o5njmf.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmph1o5njmf.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978436
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (typeof x === \"number\" && typeof y === \"number\"\
    \ && typeof z === \"number\") {\n        if (x === y + z || y === x + z || z ===\
    \ x + y) {\n            return true;\n        }\n    }\n    return false;\n}\n\
    console.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpz4x3pita.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpz4x3pita.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978436
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp7quw3avw.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7quw3avw.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978432
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x + y == z || x + z == y || y + z == x) &&\
    \ (x % 1 == 0 && y % 1 == 0 && z % 1 == 0);\n}\nconsole.log(any_int(5, 2, 7));\n\
    console.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmprokqbgub.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmprokqbgub.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978436
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpaftxlazh.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpaftxlazh.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978429
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Math.floor(x) === x && Math.floor(y) === y &&\
    \ Math.floor(z) === z) {\n        if (x + y === z || x + z === y || y + z ===\
    \ x) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconsole.log(any_int(3,\
    \ -2, 1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp729852mv.js:34:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp729852mv.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    '
  timestamp: 1659978436
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x === y + z || y === x + z || z === x + y)\
    \ && (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsflxi6ab.ts(14,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpsflxi6ab.ts(14,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpsflxi6ab.ts(14,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978436
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (((x == y + z) || (y == x + z) || (z == x\
    \ + y)) && (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z)));\n\
    }\n\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplgwcahz9.ts(14,71): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmplgwcahz9.ts(14,94): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmplgwcahz9.ts(14,117): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978436
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x + y === z || x + z === y || y + z === x)\
    \ && (x % 1 === 0 && y % 1 === 0 && z % 1 === 0);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq3wne3nh.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpq3wne3nh.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978436
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return x + y === z || x + z === y || y + z === x\
    \ ? true : false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpcevujrlk.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpcevujrlk.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978437
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp9_fpcttt.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9_fpcttt.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978436
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x % 1 === 0 && y % 1 === 0 && z % 1 === 0) {\n\
    \        if (x + y === z || x + z === y || y + z === x) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nconsole.log(any_int(2, 3, 5));\n\
    console.log(any_int(3, 2, 7));\nconsole.log(any_int(3, 2, 5));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp8m_24se1.js:39:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8m_24se1.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    true

    false

    '
  timestamp: 1659978437
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if ((typeof x !== 'number') || (typeof y !== 'number')\
    \ || (typeof z !== 'number')) {\n        return false;\n    }\n    if (x % 1 !==\
    \ 0 || y % 1 !== 0 || z % 1 !== 0) {\n        return false;\n    }\n    if (x\
    \ + y === z || x + z === y || y + z === x) {\n        return true;\n    }\n  \
    \  return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2,\
    \ 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpvk_hhlc3.js:41:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvk_hhlc3.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978437
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        if (x === y + z || y === x + z || z === x +\
    \ y) {\n            return true;\n        }\n    }\n    return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2babwiwx.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp2babwiwx.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp2babwiwx.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659821669
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x + y == z) || (x + z == y) || (y + z ==\
    \ x);\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpy992qwhc.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpy992qwhc.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978426
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x + y === z) {\n        return true;\n    } else\
    \ if (x + z === y) {\n        return true;\n    } else if (y + z === x) {\n  \
    \      return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(3,\
    \ -2, 1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpps1fz9zl.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpps1fz9zl.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    '
  timestamp: 1659978437
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (typeof x === \"number\" && typeof y === \"number\"\
    \ && typeof z === \"number\") {\n        if (x + y === z || x + z === y || y +\
    \ z === x) {\n            return true;\n        }\n    }\n    return false;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp5k90aer6.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp5k90aer6.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978437
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x + y == z) || (x + z == y) || (y + z ==\
    \ x);\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpy992qwhc.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpy992qwhc.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978426
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x === y + z || y === x + z || z === x + y)\
    \ && isInteger(x) && isInteger(y) && isInteger(z);\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpftsho83e.ts(14,59): error TS2304: Cannot find name
    ''isInteger''.

    ../../../../../tmp/tmpftsho83e.ts(14,75): error TS2304: Cannot find name ''isInteger''.

    ../../../../../tmp/tmpftsho83e.ts(14,91): error TS2304: Cannot find name ''isInteger''.

    '
  timestamp: 1659978437
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        if (x + y === z || x + z === y || y + z ===\
    \ x) {\n            return true;\n        }\n    }\n    return false;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpq22z55jo.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpq22z55jo.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpq22z55jo.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978434
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x + y === z || x + z === y || y + z === x)\
    \ && (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\n\
    \nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8ez_i2o4.ts(14,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp8ez_i2o4.ts(14,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp8ez_i2o4.ts(14,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978437
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return Number.isInteger(x) && Number.isInteger(y)\
    \ && Number.isInteger(z) && (y + z === x || z + x === y || x + y === z);\n}\n\n\
    console.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\nconsole.log(any_int(3,\
    \ 2, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsl_pte7p.ts(14,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpsl_pte7p.ts(14,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpsl_pte7p.ts(14,65): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978437
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return typeof x === \"number\" && typeof y === \"\
    number\" && typeof z === \"number\" && Number.isInteger(x) && Number.isInteger(y)\
    \ && Number.isInteger(z) && (x + y === z || x + z === y || y + z === x);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpolb0jt__.ts(14,94): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpolb0jt__.ts(14,117): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpolb0jt__.ts(14,140): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978437
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x % 1 !== 0 || y % 1 !== 0 || z % 1 !== 0) {\n\
    \        return false;\n    }\n    if (x + y === z || x + z === y || y + z ===\
    \ x) {\n        return true;\n    }\n    return false;\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp2gz7tfjq.js:38:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2gz7tfjq.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978438
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x + y === z || x + z === y || y + z === x)\
    \ && (x % 1 === 0 && y % 1 === 0 && z % 1 === 0);\n}\nconsole.log(any_int(5, 2,\
    \ 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpigta3nc3.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpigta3nc3.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978438
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    let result: boolean = false;\n    if (typeof x ==\
    \ \"number\" && typeof y == \"number\" && typeof z == \"number\") {\n        if\
    \ (x == y + z || y == x + z || z == x + y) {\n            result = true;\n   \
    \     }\n    }\n    return result;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpehdkyafp.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpehdkyafp.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978438
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x + y === z || x + z === y || y + z === x)\
    \ && Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvg8c6unf.ts(14,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpvg8c6unf.ts(14,89): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpvg8c6unf.ts(14,112): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978438
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    let sum: number = x + y + z;\n    if (Math.floor(sum)\
    \ === sum) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\n\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmphwi2bkda.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphwi2bkda.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    true

    false

    '
  timestamp: 1659978439
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (Number.isInteger(x)) && (Number.isInteger(y))\
    \ && (Number.isInteger(z)) && ((x + y == z) || (x + z == y) || (y + z == x));\n\
    }\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkaq5edmt.ts(14,20): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpkaq5edmt.ts(14,45): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpkaq5edmt.ts(14,70): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978438
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (\n        (x == y + z && Number.isInteger(x)\
    \ && Number.isInteger(y) && Number.isInteger(z)) ||\n        (y == x + z && Number.isInteger(x)\
    \ && Number.isInteger(y) && Number.isInteger(z)) ||\n        (z == x + y && Number.isInteger(x)\
    \ && Number.isInteger(y) && Number.isInteger(z))\n    ) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n\nconsole.log(any_int(5, 2, 7));\n\
    console.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpudi7efj5.ts(15,31): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpudi7efj5.ts(15,54): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpudi7efj5.ts(15,77): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpudi7efj5.ts(16,31): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpudi7efj5.ts(16,54): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpudi7efj5.ts(16,77): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpudi7efj5.ts(17,31): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpudi7efj5.ts(17,54): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpudi7efj5.ts(17,77): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978439
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    const sum = x + y + z;\n    return (sum - x === x\
    \ || sum - y === y || sum - z === z) && Number.isInteger(x) && Number.isInteger(y)\
    \ && Number.isInteger(z);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpuh1cf5yq.ts(15,72): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpuh1cf5yq.ts(15,95): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpuh1cf5yq.ts(15,118): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978439
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x === y + z || y === x + z || z === x + y)\
    \ && (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsflxi6ab.ts(14,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpsflxi6ab.ts(14,90): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpsflxi6ab.ts(14,113): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978436
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        if (x + y === z || x + z === y || y + z ===\
    \ x) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconsole.log(any_int(1,\
    \ 2, 3));\nconsole.log(any_int(1, 2, 1.2));\nconsole.log(any_int(1, 2, 4));\n\
    console.log(any_int(1, 4, 3));\nconsole.log(any_int(5, 1, 4));\nconsole.log(any_int(1,\
    \ 2, 5));\nconsole.log(any_int(5, 2, 1));\nconsole.log(any_int(1, 5, 2));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp494dd_rz.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp494dd_rz.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp494dd_rz.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978439
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (isInt(x) && isInt(y) && isInt(z)) {\n       \
    \ return (x + y == z || x + z == y || y + z == x);\n    }\n    return false;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpafnjk_7o.ts(14,9): error TS2304: Cannot find name
    ''isInt''.

    ../../../../../tmp/tmpafnjk_7o.ts(14,21): error TS2304: Cannot find name ''isInt''.

    ../../../../../tmp/tmpafnjk_7o.ts(14,33): error TS2304: Cannot find name ''isInt''.

    '
  timestamp: 1659978439
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        if (x === y + z || y === x + z || z === x +\
    \ y) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp703d54xq.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp703d54xq.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp703d54xq.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978439
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) {\n \
    \       if (x + y == z || x + z == y || y + z == x) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nconsole.log(any_int(2, 3, 5));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuq2jkz84.js:37:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpuq2jkz84.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978439
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x + y == z || x + z == y || y + z == x) &&\
    \ Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n}\nconsole.log(any_int(3,\
    \ -2, 1));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpl_7dm0oc.ts(14,63): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpl_7dm0oc.ts(14,86): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpl_7dm0oc.ts(14,109): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978439
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return ((Number.isInteger(x) && Number.isInteger(y)\
    \ && Number.isInteger(z)) && (((x + y) === z) || ((x + z) === y) || ((y + z) ===\
    \ x)));\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpalubyucu.ts(14,21): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpalubyucu.ts(14,44): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpalubyucu.ts(14,67): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978439
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if ((x + y) === z || (x + z) === y || (y + z) ===\
    \ x) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpbjfdulgf.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbjfdulgf.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978439
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (Number.isInteger(x) && Number.isInteger(y)\
    \ && Number.isInteger(z)) && (x === y + z || y === x + z || z === x + y);\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi2s7497f.ts(14,20): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpi2s7497f.ts(14,43): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpi2s7497f.ts(14,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978439
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    let check: boolean = false;\n    if (x + y === z\
    \ || x + z === y || y + z === x) {\n        check = true;\n    }\n    return check;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp4sbhyt22.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4sbhyt22.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978440
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) {\n \
    \       if (x == y + z || y == x + z || z == x + y) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp0ll2_ylv.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0ll2_ylv.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978439
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return x+y === z || x+z === y || y+z === x\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp6q4w0ppx.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6q4w0ppx.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978439
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return x === y + z || y === x + z || z === x + y;\n\
    }\n\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpvs_2atk_.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvs_2atk_.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978434
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        if (x === y + z || y === x + z || z === x +\
    \ y) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp703d54xq.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp703d54xq.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp703d54xq.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978439
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x + y === z) {\n        return true;\n    } else\
    \ if (x + z === y) {\n        return true;\n    } else if (y + z === x) {\n  \
    \      return true;\n    } else {\n        return false;\n    }\n}\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpv_qunz01.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpv_qunz01.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978440
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if ((x + y) === z || (x + z) === y || (y + z) ===\
    \ x) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpbjfdulgf.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbjfdulgf.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978439
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return x + y === z || x + z === y || y + z === x;\n\
    }\nconsole.log(any_int(3, -2, 1));\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpd9xh0vuj.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpd9xh0vuj.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    '
  timestamp: 1659978440
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (Number.isInteger(x) && Number.isInteger(y)\
    \ && Number.isInteger(z)) && (x + y === z || x + z === y || y + z === x);\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0vks4ifi.ts(14,20): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0vks4ifi.ts(14,43): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp0vks4ifi.ts(14,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978440
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (((x + y) === z) || ((x + z) === y) || ((y\
    \ + z) === x)) && (x % 1 === 0) && (y % 1 === 0) && (z % 1 === 0);\n}\n\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp79n1wq2_.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp79n1wq2_.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978440
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\n\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpy_nqag_9.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpy_nqag_9.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    '
  timestamp: 1659978440
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        if (x + y === z || x + z === y || y + z ===\
    \ x) {\n            return true;\n        }\n    }\n    return false;\n}\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpthkliju0.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpthkliju0.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpthkliju0.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978440
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if ((x + y === z || x + z === y || y + z === x) &&\
    \ (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z))) {\n   \
    \     return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp608ca4cn.ts(14,64): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp608ca4cn.ts(14,87): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp608ca4cn.ts(14,110): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978441
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if ((x === y + z || y === x + z || z === x + y) &&\n\
    \        Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z)) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyjbq8bon.ts(15,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpyjbq8bon.ts(15,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpyjbq8bon.ts(15,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978441
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(1,\
    \ 2, 3));\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = any_int;\n\
    \  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpfnoitd14.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpfnoitd14.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    false

    true

    false

    '
  timestamp: 1659978441
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (Number.isInteger(x) && Number.isInteger(y)\
    \ && Number.isInteger(z)) &&\n        (x + y === z || x + z === y || y + z ===\
    \ x);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp919u1y0a.ts(14,20): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp919u1y0a.ts(14,43): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp919u1y0a.ts(14,66): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978441
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpaftxlazh.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpaftxlazh.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978429
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Math.round(x) === Math.round(y) + Math.round(z)\
    \ || Math.round(y) === Math.round(x) + Math.round(z) || Math.round(z) === Math.round(x)\
    \ + Math.round(y)) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\n\
    console.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpkefm37z5.js:37:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpkefm37z5.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    true

    '
  timestamp: 1659978441
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return ((Math.floor(x) + Math.floor(y) === Math.floor(z))\
    \ || (Math.floor(x) + Math.floor(z) === Math.floor(y)) || (Math.floor(y) + Math.floor(z)\
    \ === Math.floor(x)));\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpqqhb5xv1.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpqqhb5xv1.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978441
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    let result: boolean = false;\n    if (Number.isInteger(x)\
    \ && Number.isInteger(y) && Number.isInteger(z)) {\n        if (x === y + z ||\
    \ y === x + z || z === x + y) {\n            result = true;\n        }\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp00fht_wb.ts(15,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp00fht_wb.ts(15,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmp00fht_wb.ts(15,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978441
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1l3tp5g6.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1l3tp5g6.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978441
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) {\n \
    \       return x + y == z || x + z == y || y + z == x\n    } else {\n        return\
    \ false\n    }\n}\nconsole.log(any_int(2, 3, 4));\nconsole.log(any_int(2, 3, 5));\n\
    console.log(any_int(2, 3, 6));\nconsole.log(any_int(2, 3, 7));\nconsole.log(any_int(2,\
    \ 3, 8));\nconsole.log(any_int(2, 3, 9));\nconsole.log(any_int(2, 3, 10));\nconsole.log(any_int(2,\
    \ 3, 11));\nconsole.log(any_int(2, 3, 12));\nconsole.log(any_int(2, 3, 13));\n\
    console.log(any_int(2, 3, 14));\nconsole.log(any_int(2, 3, 15));\nconsole.log(any_int(2,\
    \ 3, 16));\nconsole.log(any_int(2, 3, 17));\nconsole.log(any_int(2, 3, 18));\n\
    console.log(any_int(2, 3, 19));\nconsole.log(any_int(2, 3, 20));\nconsole.log(any_int(2,\
    \ 3, 21));\nconsole.log(any_int(2, 3, 22));\nconsole.log(any_int(2, 3, 23));\n\
    console.log(any_int(2, 3, 24));\nconsole.log(any_int(2, 3, 25));\nconsole.log(any_int(2,\
    \ 3, 26));\nconsole.log(any_int(2, 3, 27));\nconsole.log(any_int(2, 3, 28));\n\
    console.log(any_int(2, 3, 29));\nconsole.log(any_int(2, 3, 30));\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpq7uqcb0j.js:60:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpq7uqcb0j.js:62:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'false

    true

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    false

    '
  timestamp: 1659978441
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if ((x + y === z) || (x + z === y) || (y + z ===\
    \ x)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\
    console.log(any_int(5, 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3,\
    \ -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
    \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
    \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
    \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
    \ 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmphhgzajtz.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphhgzajtz.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978432
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return Number.isInteger(x) && Number.isInteger(y)\
    \ && Number.isInteger(z) && (x + y === z || x + z === y || y + z === x);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpf2qznz8l.ts(14,19): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpf2qznz8l.ts(14,42): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpf2qznz8l.ts(14,65): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978426
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x === y + z || x === y - z || y === x + z ||\
    \ y === x - z || z === x + y || z === x - y) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpfi6jybfl.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpfi6jybfl.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978441
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x === y + z || y === x + z || z === x + y) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpw6i6rqez.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpw6i6rqez.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978441
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return ((x % 1 == 0) && (y % 1 == 0) && (z % 1 ==\
    \ 0)) && ((x + y == z) || (x + z == y) || (y + z == x));\n}\nconsole.log(any_int(5,\
    \ 2, 7));\nconsole.log(any_int(3, 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6,\
    \ -2.2, 2));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2,\
    \ 3, 1),true);\n  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp9xvck3hd.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9xvck3hd.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978441
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (Number.isInteger(x) && Number.isInteger(y) &&\
    \ Number.isInteger(z)) {\n        return (x === y + z) || (y === x + z) || (z\
    \ === x + y);\n    }\n    return false;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmporjnvoch.ts(14,16): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmporjnvoch.ts(14,39): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmporjnvoch.ts(14,62): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978441
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if (x + y === z || x + z === y || y + z === x) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(any_int(3,\
    \ 4, 7));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpgjvw3rj_.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgjvw3rj_.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    false

    '
  timestamp: 1659978441
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    if ((x + y === z) || (x + z === y) || (y + z ===\
    \ x)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\
    \nconsole.log(any_int(2, 3, 5));\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpggapkrl2.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpggapkrl2.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    true

    false

    true

    false

    '
  timestamp: 1659978442
- exit_code: 2
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    return (x + y === z || x + z === y || y + z === x)\
    \ &&\n        (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpll5gdd20.ts(15,17): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpll5gdd20.ts(15,40): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    ../../../../../tmp/tmpll5gdd20.ts(15,63): error TS2339: Property ''isInteger''
    does not exist on type ''NumberConstructor''.

    '
  timestamp: 1659978441
- exit_code: 1
  program: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n//\
    \ true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n\
    // >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int(x: number, y: number,\
    \ z: number): boolean {\n    let result: boolean = false;\n    if (typeof x ===\
    \ \"number\" && typeof y === \"number\" && typeof z === \"number\") {\n      \
    \  if (x + y === z || x + z === y || y + z === x) {\n            result = true;\n\
    \        }\n    }\n    return result;\n}\nconsole.log(any_int(5, 2, 7));\nconsole.log(any_int(3,\
    \ 2, 2));\nconsole.log(any_int(3, -2, 1));\nconsole.log(any_int(3.6, -2.2, 2));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n\
    \  assert.deepEqual(candidate(2.5, 2, 3),false);\n  assert.deepEqual(candidate(1.5,\
    \ 5, 3.5),false);\n  assert.deepEqual(candidate(2, 6, 2),false);\n  assert.deepEqual(candidate(4,\
    \ 2, 2),true);\n  assert.deepEqual(candidate(2.2, 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4,\
    \ 6, 2),true);\n  assert.deepEqual(candidate(2, 1, 1),true);\n  assert.deepEqual(candidate(3,\
    \ 4, 7),true);\n  assert.deepEqual(candidate(3.0, 4, 7),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpauyfeczq.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpauyfeczq.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978442

name: HumanEval_80_is_happy
language: ts
prompt: "//You are given a string s.\n// Your task is to check if the string is hapts\
  \ or not.\n// A string is hapts if its length is at least 3 and every 3 consecutive\
  \ letters are distinct\n// For example:\n// >>> is_happy(a)\n// false\n// >>> is_happy(aa)\n\
  // false\n// >>> is_happy(abcd)\n// true\n// >>> is_happy(aabb)\n// false\n// >>>\
  \ is_happy(adb)\n// true\n// >>> is_happy(xyy)\n// false\nfunction is_happy(s: string):\
  \ boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = is_happy;\n  assert.deepEqual(candidate(\"a\"),false);\n\
  \  assert.deepEqual(candidate(\"aa\"),false);\n  assert.deepEqual(candidate(\"abcd\"\
  ),true);\n  assert.deepEqual(candidate(\"aabb\"),false);\n  assert.deepEqual(candidate(\"\
  adb\"),true);\n  assert.deepEqual(candidate(\"xyy\"),false);\n  assert.deepEqual(candidate(\"\
  iopaxpoi\"),true);\n  assert.deepEqual(candidate(\"iopaxioi\"),false);\n}\n\ntest();"
completions: ["    let arr = [...s];\n    for (let i = 0; i < arr.length; i++) {\n\
    \        if (arr[i] == arr[i + 1] && arr[i] == arr[i + 2]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nconsole.log(is_happy(\"abcd\"\
    ));\nconsole.log(is_happy(\"adb\"));\nconsole.log(is_happy(\"aabb\"));\n", " \
    \   return (s.length >= 3 && s.length % 3 === 0) && s.split('').every((x, i) =>\
    \ (i + 1) % 3 !== 0 || x !== s[i - 1] && x !== s[i - 2])\n}\nconsole.log(is_happy('abcd'));\n\
    console.log(is_happy('adb'));\nconsole.log(is_happy('xyy'));\nconsole.log(is_happy('aabb'));\n\
    console.log(is_happy('bbeeaabb'));\n", "  return s.length >= 3 && Array.from(new\
    \ Set(s.match(/[a-z]{3}/g) || [])).length > 0;\n}\n", "    let happy_counter =\
    \ 0;\n    if (s.length > 2) {\n        for (let i = 0; i < s.length - 2; i++)\
    \ {\n            if (s[i] !== s[i + 1] && s[i] !== s[i + 2] && s[i + 1] !== s[i\
    \ + 2]) {\n                happy_counter++;\n            }\n        }\n      \
    \  if (happy_counter === s.length - 2) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n", "  const length: number = s.length;\n  const\
    \ arr = [];\n  for (let i = 0; i < length; i++) {\n    if (i + 2 <= length) {\n\
    \      arr.push(s.slice(i, i + 3));\n    }\n  }\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    const set = new Set(arr[i]);\n    if (set.size === 2) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\nconsole.log(is_happy(\"a\"));\nconsole.log(is_happy(\"\
    aa\"));\nconsole.log(is_happy(\"abcd\"));\nconsole.log(is_happy(\"aabb\"));\n\
    console.log(is_happy(\"adb\"));\nconsole.log(is_happy(\"xyy\"));\n", "    if (s.length\
    \ < 3) {\n        return false;\n    }\n    else {\n        let haps = [];\n \
    \       haps.push(s[0]);\n        for (let i = 1; i < s.length; i++) {\n     \
    \       if (s[i] === s[i - 1]) {\n                return false;\n            }\n\
    \            else {\n                haps.push(s[i]);\n            }\n       \
    \ }\n        return true;\n    }\n}\n", "    let flag = false;\n    if (s.length\
    \ > 2) {\n        for (let i = 2; i < s.length; i++) {\n            if (s[i] !==\
    \ s[i - 1] && s[i] !== s[i - 2] && s[i - 1] !== s[i - 2]) {\n                flag\
    \ = true;\n            } else {\n                flag = false;\n             \
    \   break;\n            }\n        }\n    }\n    return flag;\n}\n", "    let\
    \ r = false;\n    if (s.length >= 3) {\n        let a = [];\n        for (let\
    \ i = 0; i < s.length; i++) {\n            a.push(s[i]);\n        }\n        a.splice(0,\
    \ 3);\n        let s2 = a.join('');\n        if (s2.includes(s[0]) || s2.includes(s[1])\
    \ || s2.includes(s[2])) {\n            r = false;\n        } else {\n        \
    \    r = true;\n        }\n    }\n    return r;\n}\n\nconsole.log(is_happy('a'));\n\
    console.log(is_happy('aa'));\nconsole.log(is_happy('abcd'));\nconsole.log(is_happy('aabb'));\n\
    console.log(is_happy('adb'));\nconsole.log(is_happy('xyy'));\n", "    return s.length\
    \ >= 3 && (\n        s.slice(0, 3).split('').every((e, i, a) => e !== a[(i + 1)\
    \ % 3])\n        || is_happy(s.slice(1))\n    );\n}\n", "    if (s.length < 3)\
    \ return false;\n    for (let i = 2; i < s.length; i++) {\n        if (s[i] ===\
    \ s[i - 1] && s[i] === s[i - 2]) return false;\n    }\n    return true;\n}\nconsole.log(is_happy('abcdef'));\n",
  "    if (s.length < 3) {\n        return false;\n    }\n\n    const uniques = new\
    \ Set();\n    let isHappy = true;\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (i >= 3) {\n            uniques.delete(s[i - 3]);\n        }\n   \
    \     if (uniques.has(s[i])) {\n            isHappy = false;\n            break;\n\
    \        }\n        uniques.add(s[i]);\n    }\n    return isHappy;\n}\n", "  \
    \  if (s.length < 3) {\n        return false;\n    }\n\n    for (let i = 0; i\
    \ < s.length - 2; i++) {\n        if (s[i] === s[i + 1] || s[i] === s[i + 2] ||\
    \ s[i + 1] === s[i + 2]) {\n            return false;\n        }\n    }\n\n  \
    \  return true;\n}\n", "    const arr = s.split('');\n    if (arr.length < 3)\
    \ {\n        return false;\n    }\n    for (let i = 0; i < arr.length - 2; i++)\
    \ {\n        if (arr[i] === arr[i + 1] || arr[i] === arr[i + 2] || arr[i + 1]\
    \ === arr[i + 2]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "  if (s.length < 3) {\n    return false;\n  }\n  let i = 0;\n  while (i\
    \ < s.length - 2) {\n    if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1]\
    \ === s[i + 2]) {\n      return false;\n    }\n    i++;\n  }\n  return true;\n\
    }\n", "  return undefined;\n}\n\nexport { is_happy };", "  if (s.length < 3) {\n\
    \    return false;\n  }\n  for (let i = 0; i < s.length - 2; i++) {\n    if (s[i]\
    \ === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}", "    if (s.length < 3) {\n        return\
    \ false;\n    }\n    for (let i = 0; i < s.length - 2; i++) {\n        if (s[i]\
    \ === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    let happy = true;\n \
    \   if (s.length < 3) {\n        happy = false;\n    } else {\n        for (let\
    \ i = 0; i < s.length - 2; i++) {\n            let first: string = s.charAt(i);\n\
    \            let second: string = s.charAt(i + 1);\n            let third: string\
    \ = s.charAt(i + 2);\n            if (first === second && second === third) {\n\
    \                happy = false;\n            }\n        }\n    }\n    return happy;\n\
    }\n", "    let set = new Set();\n    for (let i = 0; i < s.length; i++) {\n  \
    \      if (i + 3 > s.length) {\n            break;\n        }\n        let str\
    \ = s.substring(i, i + 3);\n        let unique = new Set(str);\n        if (unique.size\
    \ != 3) {\n            return false;\n        }\n    }\n    return true;\n}\n",
  "    if (s.length < 3) return false;\n    let temp = s.split('');\n    for (let\
    \ i = 0; i < temp.length; i += 3) {\n        if (temp[i] === temp[i + 1] || temp[i]\
    \ === temp[i + 2] || temp[i + 1] === temp[i + 2]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    return s.length >= 3 && !s.match(/(.)\\\
    1{2,}/);\n}\n\nconsole.log(is_happy(\"abcabcabcabcabcabcabcabcabcabcabcabc\"));\n\
    console.log(is_happy(\"abcabcabcabcabcabcabcabcabcabcabcabx\"));\nconsole.log(is_happy(\"\
    abcabcabcabcabcabcabcabcabcabcabcabca\"));\nconsole.log(is_happy(\"bbcabcabcabcabcabcabcabcabcabcabcabca\"\
    ));\nconsole.log(is_happy(\"abcaabcaabcaabcaabcaabcaabcaabcaabcaabc\"));\nconsole.log(is_happy(\"\
    abcabcabcabcabcabcabcabcabcabcabcabcab\"));\nconsole.log(is_happy(\"abcabcabcabcabcabcabcabcabcabcabcabcabx\"\
    ));\nconsole.log(is_happy(\"abcabcabcabcabcabcabcabcabcabcabcabcabcc\"));\nconsole.log(is_happy(\"\
    bbcabcabcabcabcabcabcabcabcabcabcabcabcc\"));\nconsole.log(is_happy(\"abcaabcaabcaabcaabcaabcaabcaabcaabcaabcc\"\
    ));\nconsole.log(is_happy(\"abcabcabcabcabcabcabcabcabcabcabcabcabc\"));", " \
    \ return s.length >= 3 && !s.split('').some((char, index) => {\n    return char\
    \ === s[index + 1] && char === s[index + 2];\n  });\n}\n", "    if (s.length <\
    \ 3) {\n        return false;\n    }\n    for (let i = 0; i < s.length - 2; i++)\
    \ {\n        if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i +\
    \ 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
  "  let length: number = s.length;\n  if (length < 3) {\n    return false;\n  } else\
    \ {\n    for (let i: number = 0; i < length - 2; i++) {\n      if (s[i] === s[i\
    \ + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n        return false;\n\
    \      }\n    }\n    return true;\n  }\n}\nconsole.log(is_happy('adb'));", " \
    \ return s.length >= 3 && !s.match(/([a-z])\\1{2,}/i);\n}\n", "    let temp =\
    \ [];\n    for (let i = 0; i < s.length; i++) {\n        if (temp.indexOf(s[i])\
    \ == -1) {\n            temp.push(s[i]);\n        }\n    }\n    if (temp.length\
    \ < 3) {\n        return false;\n    }\n    else {\n        return true;\n   \
    \ }\n}", "    return s.length >= 3 && s.match(/(.)\\1\\1/g) === null;\n}\n", " \
    \   if (s.length < 3) {\n        return false;\n    }\n    for (let i = 0; i <\
    \ s.length - 2; i++) {\n        let c1 = s.charAt(i);\n        let c2 = s.charAt(i\
    \ + 1);\n        let c3 = s.charAt(i + 2);\n        if (c1 == c2 || c1 == c3 ||\
    \ c2 == c3) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    let ret: boolean = false;\n    if (s.length < 3) {\n        ret = false;\n\
    \    } else {\n        for (let i = 0; i < s.length - 2; i++) {\n            if\
    \ (s[i] !== s[i + 1] && s[i] !== s[i + 2] && s[i + 1] !== s[i + 2]) {\n      \
    \          ret = true;\n            } else {\n                ret = false;\n \
    \               break;\n            }\n        }\n    }\n    return ret;\n}\n",
  "    if (s.length < 3) {\n        return false;\n    }\n    for (let i = 0; i <\
    \ s.length - 2; i++) {\n        if (s[i] === s[i + 1] || s[i] === s[i + 2] ||\
    \ s[i + 1] === s[i + 2]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    let result = true;\n    let i = 0;\n    if (s.length < 3)\
    \ {\n        result = false;\n    } else {\n        for (i = 2; i < s.length;\
    \ i++) {\n            if (s[i] == s[i - 1] || s[i] == s[i - 2]) {\n          \
    \      result = false;\n                break;\n            }\n        }\n   \
    \ }\n    return result;\n}\n\nconsole.log(is_happy(\"a\"));\nconsole.log(is_happy(\"\
    aa\"));\nconsole.log(is_happy(\"abc\"));\nconsole.log(is_happy(\"aabb\"));\nconsole.log(is_happy(\"\
    adb\"));\nconsole.log(is_happy(\"xyy\"));\n", "    // Your code here\n    return\
    \ true;\n}\n", "    let p = s.length;\n    if (p < 3) return false;\n    for (let\
    \ i = 0; i < p - 2; i++) {\n        if (s[i] == s[i + 1] || s[i] == s[i + 2] ||\
    \ s[i + 1] == s[i + 2]) return false;\n    }\n    return true;\n}\n", "    let\
    \ happy:boolean = true;\n    if (s.length < 3) {\n        happy = false;\n   \
    \ } else {\n        for (let i = 0; i < s.length - 2; i++) {\n            if (s[i]\
    \ === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n            \
    \    happy = false;\n            }\n        }\n    }\n    return happy;\n}\nconsole.log(is_happy('a'));\n\
    console.log(is_happy('aa'));\nconsole.log(is_happy('abcd'));\nconsole.log(is_happy('aabb'));\n\
    console.log(is_happy('adb'));\nconsole.log(is_happy('xyy'));\n", "    let res:\
    \ boolean = true;\n    let s_array: string[] = s.split('');\n    // console.log(s_array);\n\
    \    if (s_array.length < 3) {\n        res = false;\n    } else {\n        for\
    \ (let i = 0; i < s_array.length - 2; i++) {\n            if (s_array[i] === s_array[i\
    \ + 1] || s_array[i] === s_array[i + 2] || s_array[i + 1] === s_array[i + 2])\
    \ {\n                res = false;\n                break;\n            }\n   \
    \     }\n    }\n    return res;\n}\n\nconsole.log(is_happy('aabb'));\n\n\n", " \
    \   let totalLength = s.length;\n    let counter = 0;\n    for (let i = 0; i <\
    \ totalLength; i++) {\n        if (i < totalLength - 2) {\n            if (s[i]\
    \ === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n            \
    \    counter++;\n            }\n        }\n    }\n    return counter === 0;\n\
    }\nconsole.log(is_happy('a'));\nconsole.log(is_happy('aa'));\nconsole.log(is_happy('abcd'));\n\
    console.log(is_happy('aabb'));\nconsole.log(is_happy('adb'));\nconsole.log(is_happy('xyy'));",
  "    return false;\n}", "    if (s.length < 3) {\n        return false;\n    }\n\
    \    for (let i = 0; i < s.length - 2; i++) {\n        if (s[i] === s[i + 1] ||\
    \ s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n            return false;\n \
    \       }\n    }\n    return true;\n}\n", "    let arr = Array.from(s);\n    let\
    \ set = new Set(arr);\n    if (arr.length < 3 || set.size < 3) return false;\n\
    \    for (let i = 0; i < arr.length - 2; i++) {\n        if (arr[i] === arr[i\
    \ + 1] || arr[i] === arr[i + 2] || arr[i + 1] === arr[i + 2]) return false;\n\
    \    }\n    return true;\n}\n", "  return s.length >= 3 && s[0] !== s[1] && s[1]\
    \ !== s[2] && s[0] !== s[2];\n}\nconsole.log(is_happy(\"abcd\"));\n", "    return\
    \ false;\n}\n", "    if (s.length < 3) {\n        return false;\n    }\n    for\
    \ (let i = 0; i < s.length - 2; i++) {\n        if (s[i] === s[i + 1] || s[i]\
    \ === s[i + 2] || s[i + 1] === s[i + 2]) {\n            return false;\n      \
    \  }\n    }\n    return true;\n}\n", "    let cpy: string = s.toLowerCase();\n\
    \    return cpy.length > 2 && cpy.match(/[a-z]{3}/g).every(el => el[0] != el[1]\
    \ && el[1] != el[2] && el[0] != el[2]);\n}", "    return s.length > 2 && s.length\
    \ % 3 == 0 && s.length % 2 != 0 && s.split('').filter((el, i, arr) => el == arr[i\
    \ + 1] && el == arr[i + 2]).length == 0;\n}\n\nconsole.log(is_happy('abcd'));\n\
    console.log(is_happy('aabb'));\nconsole.log(is_happy('adb'));\nconsole.log(is_happy('xyy'));\n\
    console.log(is_happy('aa'));\nconsole.log(is_happy('a'));\n", "    // Write your\
    \ code here\n    let result: boolean = false;\n    let n: number = s.length;\n\
    \    let happy: boolean[] = new Array(n).fill(false);\n    if (n >= 3) {\n   \
    \     for (let i: number = 0; i < n - 2; i++) {\n            let condition: boolean\
    \ = true;\n            let x: string = s.charAt(i);\n            let y: string\
    \ = s.charAt(i + 1);\n            let z: string = s.charAt(i + 2);\n         \
    \   if (x === y || x === z || y === z) {\n                condition = false;\n\
    \            }\n            happy[i] = condition;\n        }\n        for (let\
    \ i: number = 0; i < n - 2; i++) {\n            if (happy[i] === false) {\n  \
    \              result = false;\n                break;\n            } else {\n\
    \                result = true;\n            }\n        }\n    }\n    return result;\n\
    }", "  let charArr = s.split(\"\");\n  if (charArr.length < 3) {\n    return false;\n\
    \  }\n  for (let i = 0; i < charArr.length - 2; i++) {\n    if (charArr[i] ===\
    \ charArr[i + 1] && charArr[i + 1] === charArr[i + 2]) {\n      return false;\n\
    \    }\n  }\n  return true;\n}", "  let hap: boolean = false;\n  for (let i =\
    \ 0; i < s.length; i++) {\n    if (s.charAt(i) != s.charAt(i + 1) && s.charAt(i)\
    \ != s.charAt(i + 2)) {\n      hap = true;\n    } else if (s.charAt(i) == s.charAt(i\
    \ + 1) && s.charAt(i) == s.charAt(i + 2)) {\n      hap = false;\n    }\n  }\n\
    \  return hap;\n}\nconsole.log(is_happy(\"abcd\"));\nconsole.log(is_happy(\"aabb\"\
    ));\nconsole.log(is_happy(\"aa\"));\nconsole.log(is_happy(\"xyy\"));\n", "   \
    \ if (s.length < 3) return false;\n    let isHappy = true;\n    let i = 0;\n \
    \   while (i < s.length - 2) {\n        if (s[i] === s[i + 1] || s[i] === s[i\
    \ + 2] || s[i + 1] === s[i + 2]) {\n            isHappy = false;\n           \
    \ break;\n        }\n        i++;\n    }\n    return isHappy;\n}\n", "    if (s.length\
    \ < 3) return false;\n    for (let i = 0; i < s.length - 2; i++) {\n        if\
    \ (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) return false;\n\
    \    }\n    return true;\n}\n", "    if (s.length < 3) {\n        return false;\n\
    \    }\n    for (let i = 0; i < s.length - 2; i++) {\n        if (s[i] === s[i\
    \ + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    return (s.length >= 3 && s.length\
    \ % 3 === 0) && s.match(/(.).*\\1/g) == null;\n}\n\nconsole.log(is_happy('abcd'));\n\
    console.log(is_happy('aabb'));\nconsole.log(is_happy('aa'));\nconsole.log(is_happy('adb'));\n\
    console.log(is_happy('xyy'));", "    let count = 0;\n    let word = '';\n    let\
    \ flag = true;\n    if (s.length < 3) {\n        return false;\n    }\n    for\
    \ (let i = 0; i < s.length; i++) {\n        word += s[i];\n        count++;\n\
    \        if (count === 3) {\n            if (word[0] === word[1] || word[0] ===\
    \ word[2] || word[1] === word[2]) {\n                flag = false;\n         \
    \   }\n            count = 0;\n            word = '';\n        }\n    }\n    return\
    \ flag;\n}\n", "  let alphaArray = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\",\
    \ \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\"\
    , \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n  let array1\
    \ = [];\n  let array2 = [];\n  let boolArray = [];\n  let counter = 0;\n  let\
    \ counter2 = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.length < 3)\
    \ {\n      return false;\n    }\n    else {\n      array1.push(s[i]);\n    }\n\
    \  }\n  for (let i = 0; i < array1.length; i++) {\n    array2.push(array1[i]);\n\
    \    counter++;\n    if (counter == 3) {\n      if (array2[0] == array2[1] ||\
    \ array2[0] == array2[2] || array2[1] == array2[2]) {\n        return false;\n\
    \      }\n      counter = 0;\n      array2 = [];\n    }\n  }\n  return true;\n\
    }\nconsole.log(is_happy(\"adb\"));\nconsole.log(is_happy(\"xyy\"));\n", "    if\
    \ (s.length < 3) {\n        return false;\n    }\n\n    for (let i = 0; i < s.length\
    \ - 2; i++) {\n        if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1]\
    \ === s[i + 2]) {\n            return false;\n        }\n    }\n\n    return true;\n\
    }\n", "    if (s.length < 3) return false;\n    for (let i = 0; i < s.length -\
    \ 2; i++) {\n        if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] ===\
    \ s[i + 2]) return false;\n    }\n    return true;\n}\n", "    if (s.length <\
    \ 3) return false;\n    for (let i = 2; i < s.length; i += 3) {\n        if (s[i]\
    \ === s[i - 1] || s[i] === s[i - 2] || s[i - 1] === s[i - 2]) return false;\n\
    \    }\n    return true;\n}\n\nexport function runTests(): void {\n    const inputs\
    \ = [\n        'a',\n        'aa',\n        'abcd',\n        'aabb',\n       \
    \ 'adb',\n        'xyy',\n    ];\n    const expected = [\n        false,\n   \
    \     false,\n        true,\n        false,\n        true,\n        false,\n \
    \   ];\n\n    inputs.forEach((input, index) => {\n        const result = is_happy(input);\n\
    \        if (result !== expected[index]) {\n            throw new Error(`Test\
    \ failed for ${input}: expected ${expected[index]}, got ${result}`);\n       \
    \ }\n    });\n\n    console.log('All tests passed for is_happy');\n}", "  // return\
    \ true if string has 3 or more consecutive\n  // unique chars.\n  if (s.length\
    \ < 3) {\n    return false;\n  }\n  for (let i = 0; i < s.length - 2; i++) {\n\
    \    if (s[i] !== s[i + 1] && s[i] !== s[i + 2] && s[i + 1] !== s[i + 2]) {\n\
    \      return true;\n    }\n  }\n  return false;\n}\n", "  if (s.length < 3) {\n\
    \    return false;\n  }\n\n  for (let i = 0; i < s.length - 2; i++) {\n    if\
    \ (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n      return\
    \ false;\n    }\n  }\n\n  return true;\n}\n", "    if (s.length >= 3) {\n    \
    \    for (let i = 2; i < s.length; i++) {\n            if (s[i] === s[i - 1] &&\
    \ s[i] === s[i - 2]) {\n                return false;\n            }\n       \
    \ }\n        return true;\n    }\n    return false;\n}\nconsole.log(is_happy('abcde'));\n\
    console.log(is_happy('abbcde'));\n", "  //TODO: implement the function\n  return\
    \ false;\n}\n", "    if (s.length < 3) return false;\n    else return s.split('').map((item,\
    \ i, s) => {\n        if (i < s.length - 2) {\n            return s.substr(i,\
    \ 3).split('').reduce((acc, curr) => {\n                if (acc.includes(curr))\
    \ return false;\n                else return acc.concat(curr);\n            },\
    \ []);\n        }\n    }).every(item => item !== false);\n}\n", "    if (s.length\
    \ < 3) return false;\n    for (let i = 0; i < s.length - 2; i++) {\n        if\
    \ (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) return false;\n\
    \    }\n    return true;\n}\n", "    if (s.length < 3) {\n        return false;\n\
    \    }\n    let set = new Set<string>();\n    for (let i = 0; i < s.length - 2;\
    \ i++) {\n        set.add(s.substring(i, i + 3));\n    }\n    return set.size\
    \ === s.length - 2;\n}", "    if (s.length < 3) return false;\n    for (let i\
    \ = 0; i < s.length - 2; i++) {\n        if (s[i] === s[i + 1] || s[i] === s[i\
    \ + 2] || s[i + 1] === s[i + 2]) return false;\n    }\n    return true;\n}\nconsole.log(is_happy('aa'))\n\
    console.log(is_happy('abcd'))\nconsole.log(is_happy('aabb'))\nconsole.log(is_happy('adb'))\n\
    console.log(is_happy('xyy'))\n", "    return s.length < 3 ? false : !/([a-z])\\\
    1{2}/i.test(s);\n}\n", "    let isHappy: boolean = false;\n    let len: number\
    \ = s.length;\n    if (len >= 3) {\n        for (let i: number = 0; i < len -\
    \ 2; i++) {\n            let str: string = s.substr(i, 3);\n            let strLen:\
    \ number = str.length;\n            for (let j: number = 0; j < strLen - 1; j++)\
    \ {\n                if (str[j] === str[j + 1]) {\n                    isHappy\
    \ = false;\n                    break;\n                } else {\n           \
    \         isHappy = true;\n                }\n            }\n        }\n    }\n\
    \    return isHappy;\n}\nlet s: string = 'abcd';\nconsole.log(is_happy(s));",
  "    let i: number = 0;\n    let result: boolean = true;\n    let j: number = i\
    \ + 3;\n    for (; i < s.length - 2; i++) {\n        let str: string = s.substring(i,\
    \ j);\n        for (let k: number = 0; k < str.length; k++) {\n            for\
    \ (let l: number = k + 1; l < str.length; l++) {\n                if (str[k] ===\
    \ str[l]) {\n                    result = false;\n                }\n        \
    \    }\n        }\n        j++;\n    }\n    return result;\n}\n\nconsole.log(is_happy('a'));\n\
    console.log(is_happy('aa'));\nconsole.log(is_happy('abcd'));\nconsole.log(is_happy('aabb'));\n\
    console.log(is_happy('adb'));\nconsole.log(is_happy('xyy'));\n", "  if (s.length\
    \ < 3) {\n    return false;\n  }\n  for (let i = 0; i < s.length - 2; i++) {\n\
    \    if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n\
    \      return false;\n    }\n  }\n  return true;\n}\n", "    if (s.length < 3)\
    \ return false;\n    let a = [];\n    a.push(s[0]);\n    a.push(s[1]);\n    a.push(s[2]);\n\
    \    if (a[0] == a[1] || a[0] == a[2] || a[1] == a[2]) return false;\n    let\
    \ index = 3;\n    while (index < s.length) {\n        let newChar = s[index];\n\
    \        if (a[0] == newChar || a[1] == newChar || a[2] == newChar) return false;\n\
    \        a.push(newChar);\n        a.shift();\n        index++;\n    }\n    return\
    \ true;\n}\n", "    return s.length >= 3 && !s.match(/(.)\\1{2,}/);\n}\n\nconsole.log(is_happy('abcabcabc'));",
  "    if (s.length < 3) {\n        return false;\n    }\n    for (let i = 0; i <\
    \ s.length - 2; i++) {\n        if (s[i] === s[i + 1] || s[i] === s[i + 2] ||\
    \ s[i + 1] === s[i + 2]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\nconsole.log(is_happy('a'));\nconsole.log(is_happy('aa'));\nconsole.log(is_happy('abcd'));\n\
    console.log(is_happy('aabb'));\nconsole.log(is_happy('adb'));\nconsole.log(is_happy('xyy'));\n",
  "  if (s.length < 3) {\n    return false;\n  }\n\n  for (let i = 0; i < s.length\
    \ - 2; i++) {\n    if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] ===\
    \ s[i + 2]) {\n      return false;\n    }\n  }\n\n  return true;\n}\nconsole.log(is_happy(\"\
    a\"));\nconsole.log(is_happy(\"aa\"));\nconsole.log(is_happy(\"abcd\"));\nconsole.log(is_happy(\"\
    aabb\"));\nconsole.log(is_happy(\"adb\"));\nconsole.log(is_happy(\"xyy\"));\n",
  "  // Your code here\n  let check = false;\n  const test = s.split(\"\");\n  if\
    \ (test.length < 3) {\n    return check;\n  } else {\n    for (let i = 2; i <\
    \ test.length; i++) {\n      if (test[i] !== test[i - 1] && test[i] !== test[i\
    \ - 2]) {\n        check = true;\n      } else {\n        check = false;\n   \
    \     break;\n      }\n    }\n  }\n  return check;\n}\n", "    const len = s.length;\n\
    \    if (len < 3) return false;\n    for (let i = 0; i < len - 2; i++) {\n   \
    \     const c1 = s.charAt(i);\n        const c2 = s.charAt(i + 1);\n        const\
    \ c3 = s.charAt(i + 2);\n        if (c1 === c2 || c1 === c3 || c2 === c3) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n", "    if\
    \ (s.length < 3) {\n        return false;\n    }\n    if (s.length % 3 !== 0)\
    \ {\n        return false;\n    }\n    for (let i = 0; i < s.length; i += 3) {\n\
    \        let str = s.slice(i, i + 3);\n        if (str[0] === str[1] || str[0]\
    \ === str[2] || str[1] === str[2]) {\n            return false;\n        }\n \
    \   }\n    return true;\n}\nconsole.log(is_happy('xyy'));\nconsole.log(is_happy('adb'));\n\
    console.log(is_happy('aaa'));\nconsole.log(is_happy('aabb'));", "    let r: boolean\
    \ = false;\n    let list: string[] = [];\n    let letter: string = s.charAt(0);\n\
    \    let letter1: string = s.charAt(1);\n    let letter2: string = s.charAt(2);\n\
    \    if (s.length >= 3) {\n        list.push(letter);\n        list.push(letter1);\n\
    \        list.push(letter2);\n        console.log(list);\n        if ((list[0]\
    \ != list[1]) && (list[1] != list[2]) && (list[0] != list[2])) {\n           \
    \ r = true;\n        }\n    }\n    return r;\n}\nconsole.log(is_happy(\"aabb\"\
    ));\n", "    if (s.length < 3) {\n        return false;\n    }\n\n    for (let\
    \ i = 2; i < s.length; i++) {\n        if (s[i] === s[i - 1] && s[i] === s[i -\
    \ 2]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n",
  "  if (s.length < 3) {\n    return false;\n  }\n\n  for (let i = 0; i < s.length\
    \ - 2; i++) {\n    if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] ===\
    \ s[i + 2]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n", "  if\
    \ (s.length < 3) {\n    return false;\n  }\n  for (let i = 0; i < s.length - 2;\
    \ i++) {\n    if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i +\
    \ 2]) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  let cnt = 1;\n\
    \  for (let i = 0; i < s.length - 1; i++) {\n    if (s[i] === s[i + 1]) {\n  \
    \    cnt++;\n    } else {\n      cnt = 1;\n    }\n    if (cnt === 3) {\n     \
    \ return false;\n    }\n  }\n  return true;\n}\n", "  if (s.length < 3) {\n  \
    \  return false;\n  }\n  let temp = s[0] + s[1] + s[2];\n  for (let i = 3; i <\
    \ s.length; i++) {\n    if (s[i] === temp[0] || s[i] === temp[1] || s[i] === temp[2])\
    \ {\n      return false;\n    }\n    temp = temp[1] + temp[2] + s[i];\n  }\n \
    \ return true;\n}\n", "    return false;\n}\n", "    return /^(.)(?!\\1{2})\\\
    w*(.)(?!\\2{2})\\w*(.)(?!\\3{2})\\w*$/.test(s);\n}", "  // your code here\n  let\
    \ hap = true;\n  let arr = s.split(\"\");\n  if (arr.length < 3) {\n    return\
    \ false;\n  }\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] == arr[i\
    \ + 1] && arr[i + 1] == arr[i + 2]) {\n      hap = false;\n    }\n  }\n  return\
    \ hap;\n}\n", "    if (s.length < 3) return false;\n    for (let i = 0; i < s.length\
    \ - 2; i++) {\n        if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1]\
    \ === s[i + 2]) return false;\n    }\n    return true;\n}", "    if (s.length\
    \ < 3) return false;\n    for (let i = 0; i < s.length - 2; i++) {\n        if\
    \ (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) return false;\n\
    \    }\n    return true;\n}\n", "    if (s.length < 3) {\n        return false;\n\
    \    }\n    for (let i = 0; i < s.length - 2; i++) {\n        if (s[i] === s[i\
    \ + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    if (s.length < 3) {\n        return\
    \ false;\n    }\n    for (let i = 0; i < s.length - 2; i++) {\n        if (s[i]\
    \ === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nconsole.log(is_happy(\"abc\"\
    ));\nconsole.log(is_happy(\"acb\"));\nconsole.log(is_happy(\"abac\"));\nconsole.log(is_happy(\"\
    yxy\"));\n", "    if (s.length < 3) {\n        return false;\n    }\n    for (let\
    \ i = 0; i < s.length - 2; i++) {\n        if (s[i] === s[i + 1] || s[i] === s[i\
    \ + 2] || s[i + 1] === s[i + 2]) {\n            return false;\n        }\n   \
    \ }\n    return true;\n}\n\nconsole.log(is_happy('a'));\nconsole.log(is_happy('aa'));\n\
    console.log(is_happy('abcd'));\nconsole.log(is_happy('aabb'));\nconsole.log(is_happy('adb'));\n\
    console.log(is_happy('xyy'));", "  if (s.length < 3) {\n    return false;\n  }\n\
    \  const a = s.split(\"\");\n  const b = a.filter((e, i) => e !== a[i + 1] &&\
    \ e !== a[i + 2]);\n  if (b.length === a.length) {\n    return true;\n  }\n  return\
    \ false;\n}\n\ntest(\"is_happy\", () => {\n  expect(is_happy(\"a\")).toBe(false);\n\
    \  expect(is_happy(\"aa\")).toBe(false);\n  expect(is_happy(\"abcd\")).toBe(true);\n\
    \  expect(is_happy(\"aabb\")).toBe(false);\n  expect(is_happy(\"adb\")).toBe(true);\n\
    \  expect(is_happy(\"xyy\")).toBe(false);\n});\n", "    return s.length >= 3 &&\
    \ ![...s].every((val, index, arr) => val === arr[index + 2]);\n}\n\nconsole.log(is_happy('a'));\n\
    console.log(is_happy('aa'));\nconsole.log(is_happy('abcd'));\nconsole.log(is_happy('aabb'));\n\
    console.log(is_happy('adb'));\nconsole.log(is_happy('xyy'));\n", "  if (s.length\
    \ < 3) {\n    return false;\n  }\n  for (let i = 0; i < s.length - 2; i++) {\n\
    \    if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n\
    \      return false;\n    }\n  }\n  return true;\n}\n", "    let arr = s.split('');\n\
    \    let check: boolean = true;\n    if (arr.length < 3) {\n        return false;\n\
    \    }\n    for (let i = 0; i < arr.length - 3; i += 3) {\n        if (arr[i]\
    \ === arr[i + 1] || arr[i] === arr[i + 2] || arr[i + 1] === arr[i + 2]) {\n  \
    \          check = false;\n        }\n    }\n    return check;\n}\nconsole.log(is_happy('aa'));\n\
    console.log(is_happy('abcd'));\nconsole.log(is_happy('aabb'));\nconsole.log(is_happy('adb'));\n\
    console.log(is_happy('xyy'));\n", "    let isHappy: boolean = false;\n    const\
    \ sLength: number = s.length;\n    if (sLength < 3) {\n        return isHappy;\n\
    \    }\n    let i: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n\
    \    let l: number = 0;\n    let m: number = 0;\n    let n: number = 0;\n    let\
    \ o: number = 0;\n    let p: number = 0;\n    let q: number = 0;\n    let r: number\
    \ = 0;\n    let s: number = 0;\n    let t: number = 0;\n    let u: number = 0;\n\
    \    let v: number = 0;\n    let w: number = 0;\n    let x: number = 0;\n    let\
    \ y: number = 0;\n    let z: number = 0;\n    for (let i = 0; i < sLength; i++)\
    \ {\n        if (s[i] === \"a\") {\n            a++;\n        }\n        if (s[i]\
    \ === \"b\") {\n            b++;\n        }\n        if (s[i] === \"c\") {\n \
    \           c++;\n        }\n        if (s[i] === \"d\") {\n            d++;\n\
    \        }\n        if (s[i] === \"e\") {\n            e++;\n        }\n     \
    \   if (s[i] === \"f\") {\n            f++;\n        }\n        if (s[i] === \"\
    g\") {\n            g++;\n        }\n        if (s[i] === \"h\") {\n         \
    \   h++;\n        }\n        if (s[i] === \"i\") {\n            i++;\n       \
    \ }\n        if (s[i] === \"j\") {\n            j++;\n        }\n        if (s[i]\
    \ === \"k\") {\n            k++;\n        }\n        if (s[i] === \"l\") {\n \
    \           l++;\n        }\n        if (s[i] === \"m\") {\n            m++;\n\
    \        }\n        if (s[i] === \"n\") {\n            n++;\n        }\n     \
    \   if (s[i] === \"o\")", "    return s.length >= 3 && [...s].every((letter, index,\
    \ letters) => {\n        return (index === 0) ||\n            (index === 1) ||\n\
    \            !(letter === letters[index - 1] || letter === letters[index - 2]);\n\
    \    });\n}\n", "    if (s.length < 3) return false;\n    else {\n        for\
    \ (let i = 0; i < s.length - 2; i++) {\n            if (s[i] === s[i + 1] || s[i]\
    \ === s[i + 2] || s[i + 1] === s[i + 2]) {\n                return false;\n  \
    \          }\n        }\n        return true;\n    }\n}\nconsole.log(is_happy('a'));\n\
    console.log(is_happy('aa'));\nconsole.log(is_happy('abcd'));\nconsole.log(is_happy('aabb'));\n\
    console.log(is_happy('adb'));\nconsole.log(is_happy('xyy'));\n", "  let check:\
    \ boolean = false;\n  if (s.length >= 3) {\n    for (let i = 0; i < s.length -\
    \ 2; i++) {\n      if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] ===\
    \ s[i + 2]) {\n        check = false;\n        break;\n      } else {\n      \
    \  check = true;\n      }\n    }\n  }\n  return check;\n}\nconsole.log(is_happy(\"\
    abcd\"));\nconsole.log(is_happy(\"aabb\"));\nconsole.log(is_happy(\"adb\"));\n\
    console.log(is_happy(\"xyy\"));\n", "  return s.length >= 3\n    && s.match(/[^.]{3}/g)?.every((v)\
    \ => v[0] !== v[1] && v[1] !== v[2] && v[0] !== v[2]);\n}\n", "  let result =\
    \ false;\n  if (s.length >= 3) {\n    for (let i = 0; i < s.length - 2; i++) {\n\
    \      if (s[i] !== s[i + 1] && s[i] !== s[i + 2] && s[i + 1] !== s[i + 2]) {\n\
    \        result = true;\n      } else {\n        result = false;\n        break;\n\
    \      }\n    }\n  }\n  return result;\n}\n", "  let happy: boolean = false;\n\
    \  let strLen = s.length;\n  if (strLen >= 3) {\n    for (let i = 0; i < strLen\
    \ - 2; i++) {\n      if (s[i] !== s[i + 1] && s[i] !== s[i + 2] && s[i + 1] !==\
    \ s[i + 2]) {\n        happy = true;\n      } else {\n        happy = false;\n\
    \        break;\n      }\n    }\n  }\n  return happy;\n}\n\nconsole.log(is_happy(\"\
    abcd\"));\nconsole.log(is_happy(\"aabb\"));\nconsole.log(is_happy(\"adb\"));\n\
    console.log(is_happy(\"xyy\"));\n", "  let result = true;\n  if (s.length < 3)\
    \ {\n    result = false;\n  } else {\n    for (let i = 0; i < s.length - 2; i++)\
    \ {\n      if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2])\
    \ {\n        result = false;\n      }\n    }\n  }\n  return result;\n}\nconsole.log(is_happy('aabb'));",
  "    if (s.length < 3) return false;\n    for (let i = 0; i < s.length - 2; i++)\
    \ {\n        if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i +\
    \ 2]) return false;\n    }\n    return true;\n}\n", "    let hapts = true;\n \
    \   if (s.length >= 3) {\n        for (let i = 0; i < s.length - 2; i++) {\n \
    \           if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2])\
    \ {\n                hapts = false;\n            }\n        }\n    } else {\n\
    \        hapts = false;\n    }\n    return hapts;\n}\n", "    //check valid input\n\
    \    if (s.length < 3) {\n        return false;\n    }\n\n    //check if chars\
    \ are unique\n    for (let i = 0; i < s.length - 2; i++) {\n        if (s[i] ===\
    \ s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    if (s.length < 3) {\n\
    \        return false;\n    }\n    for (let i = 0; i < s.length - 2; i++) {\n\
    \        if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2])\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n", "  \
    \  if (s.length < 3) {\n        return false;\n    }\n\n    let length = s.length;\n\
    \    for (let i = 0; i < length - 2; i++) {\n        if (s[i] === s[i + 1] ||\
    \ s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n            return false;\n \
    \       }\n    }\n    return true;\n}\n", "    return s.length >= 3 &&\n     \
    \   ![...s].some((val, index, s) => s[index + 1] === val && s[index + 2] === val);\n\
    }\n\nconsole.log(is_happy('abcd'));\nconsole.log(is_happy('aabb'));\nconsole.log(is_happy('adb'));\n\
    console.log(is_happy('xyy'));\n", "  return s.length >= 3 && [...s].every((_,\
    \ i, a) => i < a.length - 2 && a[i] !== a[i + 1] && a[i] !== a[i + 2] && a[i +\
    \ 1] !== a[i + 2]);\n}\n\nconsole.log(is_happy('a'));\nconsole.log(is_happy('aa'));\n\
    console.log(is_happy('abcd'));\nconsole.log(is_happy('aabb'));\nconsole.log(is_happy('adb'));\n\
    console.log(is_happy('xyy'));\n", "    if (s.length < 3) return false;\n    for\
    \ (let i = 0; i < s.length - 2; i++) {\n        if (s[i] === s[i + 1] || s[i]\
    \ === s[i + 2] || s[i + 1] === s[i + 2]) return false;\n    }\n    return true;\n\
    }", "  return s.length >= 3 && /^(.).\\1{2}/g.test(s) == false;\n}\n\nconsole.log(is_happy(\"\
    abcd\"));\nconsole.log(is_happy(\"xyy\"));\nconsole.log(is_happy(\"aabb\"));\n\
    console.log(is_happy(\"adb\"));\n", "    if (s.length < 3) {\n        return false;\n\
    \    }\n\n    for (let i = 0; i < s.length - 2; i++) {\n        if (s[i] === s[i\
    \ + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n            return false;\n\
    \        }\n    }\n\n    return true;\n}\n\n", "    let char_array = s.split('');\n\
    \    let char_map = {};\n    if (char_array.length < 3) {\n        return false;\n\
    \    } else {\n        for (let i = 0; i < char_array.length; i++) {\n       \
    \     char_map[char_array[i]] = true;\n        }\n        if (Object.keys(char_map).length\
    \ >= 3) {\n            return true;\n        } else {\n            return false;\n\
    \        }\n    }\n}\nconsole.log(is_happy('xyy'));", "  // Your code here\n \
    \ const len = s.length;\n  if (len < 3) {\n    return false;\n  }\n  const arr\
    \ = s.split(\"\");\n  for (let i = 0; i < len - 2; i++) {\n    const s1 = arr[i];\n\
    \    const s2 = arr[i + 1];\n    const s3 = arr[i + 2];\n    if (s1 === s2 ||\
    \ s1 === s3 || s2 === s3) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\ndescribe(\"is_happy\", function() {\n  it(\"Sample Tests\", function() {\n\
    \    expect(is_happy(\"a\")).toBe(false);\n    expect(is_happy(\"aa\")).toBe(false);\n\
    \    expect(is_happy(\"abcd\")).toBe(true);\n    expect(is_happy(\"aabb\")).toBe(false);\n\
    \    expect(is_happy(\"adb\")).toBe(true);\n    expect(is_happy(\"xyy\")).toBe(false);\n\
    \  });\n});", "    return s.length >= 3 &&\n        Array.from(s)\n          \
    \  .slice(2)\n            .every((c, i) => s[i] !== s[i + 1] && s[i] !== s[i +\
    \ 2] && s[i + 1] !== s[i + 2]);\n}\n", "  let isHappy = false;\n  let newStr =\
    \ s.split(\"\");\n  let i = 0;\n  let j = i + 3;\n  if (newStr.length < 3) {\n\
    \    return isHappy;\n  } else {\n    while (j <= newStr.length) {\n      for\
    \ (let a = i; a < j; a++) {\n        for (let b = a + 1; b < j; b++) {\n     \
    \     if (newStr[a] === newStr[b]) {\n            isHappy = false;\n         \
    \   return isHappy;\n          } else {\n            isHappy = true;\n       \
    \   }\n        }\n      }\n      i++;\n      j++;\n    }\n  }\n  return isHappy;\n\
    }\nconsole.log(is_happy(\"abcd\"));\nconsole.log(is_happy(\"aabb\"));\nconsole.log(is_happy(\"\
    adb\"));\nconsole.log(is_happy(\"xyy\"));\n", "  const trimmed = s.trim();\n \
    \ if (trimmed.length < 3) {\n    return false;\n  }\n  for (let i = 0; i < trimmed.length\
    \ - 2; i++) {\n    const first = trimmed[i];\n    const second = trimmed[i + 1];\n\
    \    const third = trimmed[i + 2];\n    if (first === second || first === third\
    \ || second === third) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "    if (s.length < 3) {\n        return false;\n    }\n    for (let i = 0; i <\
    \ s.length - 2; i++) {\n        if (s[i] === s[i + 1] || s[i] === s[i + 2] ||\
    \ s[i + 1] === s[i + 2]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    if (s.length < 3) {\n        return false;\n    }\n    for\
    \ (let i = 0; i < s.length - 2; i++) {\n        if (s[i] === s[i + 1] || s[i]\
    \ === s[i + 2] || s[i + 1] === s[i + 2]) {\n            return false;\n      \
    \  }\n    }\n    return true;\n}\n\n", "  if (s.length < 3) {\n    return false;\n\
    \  }\n  let distinct = new Set();\n  let result = true;\n  let i = 0;\n  while\
    \ (i < s.length) {\n    if (distinct.has(s[i])) {\n      result = false;\n   \
    \   break;\n    }\n    distinct.add(s[i]);\n    i++;\n  }\n  return result;\n\
    }\n", "  return (\n    s.length >= 3 &&\n    !s.match(\n      /([a-z])\\1{2,}|([a-z])([a-z])\\\
    2|([a-z])([a-z])([a-z])\\3|([a-z])([a-z])([a-z])([a-z])\\4/\n    )\n  );\n}\n",
  "  const length = s.length;\n  if (length < 3) {\n    return false;\n  }\n\n  for\
    \ (let i = 0; i < length - 2; i++) {\n    if (s[i] === s[i + 1] || s[i] === s[i\
    \ + 2] || s[i + 1] === s[i + 2]) {\n      return false;\n    }\n  }\n\n  return\
    \ true;\n}\n\nconsole.log(is_happy(\"abcd\"));\nconsole.log(is_happy(\"aabb\"\
    ));\nconsole.log(is_happy(\"xyy\"));\n", "    return s.length > 2 &&\n       \
    \ s.match(/[^\\w]+/g).length === 0 &&\n        s.match(/([a-z])\\1{2,}/g) ===\
    \ null;\n}\nconsole.log(is_happy('aa'));\nconsole.log(is_happy('abc'));\nconsole.log(is_happy('aabb'));\n\
    console.log(is_happy('adb'));\nconsole.log(is_happy('xyy'));", "    if (s.length\
    \ >= 3) {\n        for (let i = 0; i < s.length - 2; i++) {\n            if (s[i]\
    \ === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n            \
    \    return false;\n            }\n        }\n        return true;\n    }\n  \
    \  return false;\n}\n", "  if (s.length < 3) {\n    return false;\n  }\n  for\
    \ (let i = 0; i < s.length - 2; i++) {\n    if (s[i] === s[i + 1] || s[i] ===\
    \ s[i + 2] || s[i + 1] === s[i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (s.length < 3) {\n    return false;\n  }\n\n  let prevPrev\
    \ = s[0];\n  let prev = s[1];\n  let current = s[2];\n\n  for (let i = 3; i <\
    \ s.length; i++) {\n    if (prev === current && prevPrev === current) {\n    \
    \  return false;\n    }\n\n    prevPrev = prev;\n    prev = current;\n    current\
    \ = s[i];\n  }\n\n  return true;\n}\n", "    let bool: boolean = false;\n    let\
    \ counter: number = 0;\n    let arr: string[] = [];\n    if (s.length >= 3) {\n\
    \        for (let i: number = 0; i < s.length; i++) {\n            if (i + 2 <=\
    \ s.length) {\n                if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i\
    \ + 1] === s[i + 2]) {\n                    bool = false;\n                  \
    \  break;\n                } else {\n                    bool = true;\n      \
    \          }\n            }\n        }\n    }\n    return bool;\n}\n", "  let\
    \ i = 0;\n  let counter = 0;\n  while (i < s.length - 2) {\n    if (s[i] !== s[i\
    \ + 1] && s[i] !== s[i + 2] && s[i + 1] !== s[i + 2]) {\n      counter++;\n  \
    \  }\n    i++;\n  }\n  return counter > 0;\n}\nconsole.log(is_happy(\"aabb\"));\n",
  "    if (s.length < 3) {\n        return false;\n    }\n    for (let i = 0; i <\
    \ s.length - 2; i++) {\n        let j = i + 1;\n        let k = i + 2;\n     \
    \   if (s[i] === s[j] || s[i] === s[k] || s[j] === s[k]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    return s.length < 3 ?\
    \ false :\n        s.slice(0, 3).split('').reduce((acc, curr) => acc + (s.includes(curr)\
    \ ? 1 : 0), 0) === 3;\n}\n", "    return s.length >= 3 && !s.match(/(.)\\1\\1/);\n\
    }\n", "    if (s.length < 3) {\n        return false;\n    }\n\n    for (let i\
    \ = 0; i < s.length - 2; i++) {\n        if (s[i] === s[i + 1] || s[i] === s[i\
    \ + 2] || s[i + 1] === s[i + 2]) {\n            return false;\n        }\n   \
    \ }\n\n    return true;\n}\n", "    if (s.length < 3) {\n        return false;\n\
    \    }\n    for (let i = 0; i < s.length - 2; i++) {\n        if (s[i] === s[i\
    \ + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    if (s.length < 3) return false;\n\
    \    for (let i = 0; i < s.length - 2; i++) {\n        if (s[i] === s[i + 1] ||\
    \ s[i] === s[i + 2] || s[i + 1] === s[i + 2]) return false;\n    }\n    return\
    \ true;\n}\n", "    return s.length < 3 ? false : [...s].every((x, i, a) => i\
    \ < a.length - 2 ? x !== a[i + 1] && x !== a[i + 2] : true);\n}\n", "    let result\
    \ = false;\n    let consectutiveLetters = s.split('');\n    if (consectutiveLetters.length\
    \ >= 3) {\n        let distinctLetters = [];\n        for (let i = 0; i < consectutiveLetters.length;\
    \ i++) {\n            if (distinctLetters.indexOf(consectutiveLetters[i]) ===\
    \ -1) {\n                distinctLetters.push(consectutiveLetters[i]);\n     \
    \       }\n        }\n        result = consectutiveLetters.length === distinctLetters.length;\n\
    \    }\n    return result;\n}", "    return s.length > 2 && s.split('').every((v,\
    \ i, a) => i < a.length - 2 ? v !== a[i + 1] && v !== a[i + 2] : true);\n}\n",
  "    if (s.length < 3) {\n        return false;\n    }\n    let count = 0;\n   \
    \ let i = 0;\n    while (i < s.length - 1) {\n        if (s[i] === s[i + 1]) {\n\
    \            count++;\n        } else {\n            count = 0;\n        }\n \
    \       if (count === 2) {\n            return false;\n        }\n        i++;\n\
    \    }\n    return true;\n}\n", "  return s.length >= 3 &&\n    s.split('').slice(0,\
    \ s.length - 2).every((e, i) => e !== s[i + 1] && e !== s[i + 2] && s[i + 1] !==\
    \ s[i + 2]);\n}\n", "    const k = s.length;\n    if (k < 3) {\n        return\
    \ false;\n    } else {\n        let i = 0;\n        while (i <= s.length - 3)\
    \ {\n            if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i\
    \ + 2]) {\n                return false;\n            }\n            i++;\n  \
    \      }\n        return true;\n    }\n}\nconsole.log(is_happy('a'));\nconsole.log(is_happy('aa'));\n\
    console.log(is_happy('abcd'));\nconsole.log(is_happy('aabb'));\nconsole.log(is_happy('adb'));\n\
    console.log(is_happy('xyy'));\n", "  if (s.length < 3) {\n    return false;\n\
    \  }\n  for (let i = 0; i < s.length - 2; i++) {\n    if (s[i] === s[i + 1] ||\
    \ s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n", "  if (s.length < 3) {\n    return false;\n  }\n \
    \ for (let i = 2; i < s.length; i++) {\n    if (s[i] === s[i - 1] && s[i] ===\
    \ s[i - 2]) {\n      return false;\n    }\n  }\n  return true;\n}\n\ntest(is_happy(\"\
    a\"), false);\ntest(is_happy(\"aa\"), false);\ntest(is_happy(\"abcd\"), true);\n\
    test(is_happy(\"aabb\"), false);\ntest(is_happy(\"adb\"), true);\ntest(is_happy(\"\
    xyy\"), false);\n", "  if (s.length < 3) {\n    return false;\n  }\n  let splitted:\
    \ string[] = s.split(\"\");\n  let i: number = 0;\n  let numOfDistinct: number\
    \ = 0;\n  for (let i: number = 0; i < splitted.length - 2; i++) {\n    if (splitted[i]\
    \ === splitted[i + 1] || splitted[i] === splitted[i + 2] || splitted[i + 1] ===\
    \ splitted[i + 2]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconsole.log(is_happy(\"\
    a\"));\nconsole.log(is_happy(\"aa\"));\nconsole.log(is_happy(\"abcd\"));\nconsole.log(is_happy(\"\
    aabb\"));\nconsole.log(is_happy(\"adb\"));\nconsole.log(is_happy(\"xyy\"));\n\
    console.log(is_happy(\"aaabbb\"));\nconsole.log(is_happy(\"aabbc\"));\nconsole.log(is_happy(\"\
    abcdabcdabcd\"));\nconsole.log(is_happy(\"aaa\"));\nconsole.log(is_happy(\"xyxyxyx\"\
    ));\nconsole.log(is_happy(\"asdsadd\"));\nconsole.log(is_happy(\"aacc\"));\nconsole.log(is_happy(\"\
    aaaabcd\"));\nconsole.log(is_happy(\"abcabcabcabc\"));\nconsole.log(is_happy(\"\
    abc\"));\nconsole.log(is_happy(\"aaaabcabc\"));\nconsole.log(is_happy(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
  "    return s.length < 3 ? false : !s.match(/(.)\\1\\1/g);\n}\n", "    if (s.length\
    \ < 3) {\n        return false;\n    }\n    for (let i = 0; i < s.length - 2;\
    \ i++) {\n        if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i\
    \ + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
  "    if (s.length < 3) {\n        return false;\n    }\n    for (let i = 0; i <\
    \ s.length - 2; i++) {\n        if (s[i] === s[i + 1] || s[i] === s[i + 2] ||\
    \ s[i + 1] === s[i + 2]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    if (s.length < 3) {\n        return false;\n    }\n\n    let\
    \ letters = s.split('');\n    let g1 = letters.slice(0, 3);\n    let g2 = letters.slice(1,\
    \ 4);\n    let g3 = letters.slice(2, 5);\n\n    if ((new Set(g1)).size !== 3 ||\
    \ (new Set(g2)).size !== 3 || (new Set(g3)).size !== 3) {\n        return false;\n\
    \    }\n\n    for (let i = 0; i < letters.length - 3; i++) {\n        let g1 =\
    \ letters.slice(i, i + 3);\n        let g2 = letters.slice(i + 1, i + 4);\n  \
    \      let g3 = letters.slice(i + 2, i + 5);\n\n        if ((new Set(g1)).size\
    \ !== 3 || (new Set(g2)).size !== 3 || (new Set(g3)).size !== 3) {\n         \
    \   return false;\n        }\n    }\n\n    return true;\n}\n", "    if (s.length\
    \ < 3) {\n        return false;\n    }\n\n    for (let i = 0; i < s.length - 2;\
    \ i++) {\n        if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i\
    \ + 2]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n",
  "    return s.length >= 3 && s.split('').every((val, idx, arr) => idx === 0 || arr[idx\
    \ - 1] !== val);\n}\n", "    return false;\n}", "    // TODO: add your code here\n\
    \    return false;\n}\n", "    let set = new Set();\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (i > 0 && i < s.length - 1) {\n            if (s[i - 1] !==\
    \ s[i] && s[i] !== s[i + 1] && s[i - 1] !== s[i + 1]) {\n                set.add(s[i]);\n\
    \            }\n        }\n    }\n    if (set.size > 0) {\n        return true;\n\
    \    }\n    return false;\n}\n", "    if (s.length < 3) return false;\n    for\
    \ (let i = 0; i < s.length - 2; i++) {\n        if (s[i] === s[i + 1] || s[i]\
    \ === s[i + 2] || s[i + 1] === s[i + 2]) return false;\n    }\n    return true;\n\
    }\n", "    if (s.length < 3) {\n        return false;\n    }\n\n    for (let i\
    \ = 0; i < s.length - 2; i++) {\n        if (s[i] === s[i + 1] || s[i] === s[i\
    \ + 2] || s[i + 1] === s[i + 2]) {\n            return false;\n        }\n   \
    \ }\n\n    return true;\n}\n\nconsole.log(is_happy(\"abcd\"));\nconsole.log(is_happy(\"\
    aabb\"));\nconsole.log(is_happy(\"aa\"));\nconsole.log(is_happy(\"a\"));\nconsole.log(is_happy(\"\
    adb\"));\nconsole.log(is_happy(\"xyy\"));\nconsole.log(is_happy(\"xyyxx\"));\n\
    console.log(is_happy(\"xyyyx\"));\nconsole.log(is_happy(\"xxyyy\"));\nconsole.log(is_happy(\"\
    yyyxx\"));", "  let bool1 = s.length >= 3;\n  let bool2 = [...s].every((elem,\
    \ index, array) => {\n    return index === array.length - 1\n      ? true\n  \
    \    : elem === array[index + 1] && elem === array[index + 2];\n  });\n  return\
    \ bool1 && !bool2;\n}\n", "    let result: boolean = false;\n    let array: string[]\
    \ = s.split('');\n    if (array.length < 3) {\n        return result;\n    }\n\
    \    for (let i = 0; i < array.length - 2; i++) {\n        if (array[i] != array[i\
    \ + 1] && array[i] != array[i + 2] && array[i + 1] != array[i + 2]) {\n      \
    \      result = true;\n        } else {\n            result = false;\n       \
    \     break;\n        }\n    }\n    return result;\n}\nconsole.log(is_happy('a'));\n\
    console.log(is_happy('aa'));\nconsole.log(is_happy('abc'));\nconsole.log(is_happy('aabb'));\n\
    console.log(is_happy('adb'));\nconsole.log(is_happy('xyy'));\n", "    let result:\
    \ boolean = false;\n    let arr: string[] = s.split('');\n    console.log(arr);\n\
    \    if (arr.length >= 3) {\n        for (let i: number = 0; i < arr.length -\
    \ 2; i++) {\n            if (arr[i] !== arr[i + 1] && arr[i] !== arr[i + 2] &&\
    \ arr[i + 1] !== arr[i + 2]) {\n                result = true;\n            }\
    \ else {\n                result = false;\n                break;\n          \
    \  }\n        }\n    }\n    return result;\n}\nconsole.log(is_happy('abcd'));\n\
    console.log(is_happy('aabb'));\nconsole.log(is_happy('adb'));\nconsole.log(is_happy('xyy'));\n",
  "    let chars = s.split('');\n    if (chars.length < 3) {\n        return false;\n\
    \    }\n    for (let i = 0; i < chars.length - 2; i++) {\n        if (chars[i]\
    \ === chars[i + 1] && chars[i] === chars[i + 2]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "  let chars = s.split(\"\");\n  for\
    \ (let i = 0; i < chars.length - 2; i++) {\n    if (chars[i] === chars[i + 1]\
    \ || chars[i] === chars[i + 2] || chars[i + 1] === chars[i + 2]) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}", "  let count = 0;\n  let previous =\
    \ null;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === previous) {\n\
    \      count++;\n    } else {\n      count = 1;\n    }\n    previous = s[i];\n\
    \    if (count === 3) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "    return s.length >= 3 && ![...s].some((el, i) => i % 3 === 0 && el === s[i +\
    \ 1] && el === s[i + 2]);\n}\n", "  if (s.length < 3) {\n    return false;\n \
    \ }\n  if (s.length === 3) {\n    return true;\n  }\n  for (let i = 0; i < s.length\
    \ - 2; i++) {\n    const word = s.substring(i, i + 3);\n    const wordSet = new\
    \ Set(word);\n    if (wordSet.size !== 3) {\n      return false;\n    }\n  }\n\
    \  return true;\n}\n\ntest(\"is_happy\", () => {\n  expect(is_happy(\"a\")).toBe(false);\n\
    \  expect(is_happy(\"aa\")).toBe(false);\n  expect(is_happy(\"abcd\")).toBe(true);\n\
    \  expect(is_happy(\"aabb\")).toBe(false);\n  expect(is_happy(\"adb\")).toBe(true);\n\
    \  expect(is_happy(\"xyy\")).toBe(false);\n});\n", "    if (s.length < 3) {\n\
    \        return false;\n    }\n    for (let i = 0; i < s.length - 2; i++) {\n\
    \        if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2])\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n", "  if\
    \ (s.length >= 3) {\n    for (let i = 0; i < s.length - 2; i++) {\n      let tempString\
    \ = s.substring(i, i + 3);\n      let first = tempString.charAt(0);\n      let\
    \ second = tempString.charAt(1);\n      let third = tempString.charAt(2);\n  \
    \    if (first === second || first === third || second === third) {\n        return\
    \ false;\n      }\n    }\n    return true;\n  } else {\n    return false;\n  }\n\
    }\n", "    if (s.length < 3) {\n        return false;\n    }\n    for (let i =\
    \ 0; i < s.length - 2; i++) {\n        if (s[i] === s[i + 1] || s[i] === s[i +\
    \ 2] || s[i + 1] === s[i + 2]) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nconsole.log(is_happy(\"a\"));\nconsole.log(is_happy(\"\
    aa\"));\nconsole.log(is_happy(\"abcd\"));\nconsole.log(is_happy(\"aabb\"));\n\
    console.log(is_happy(\"adb\"));\nconsole.log(is_happy(\"xyy\"));\n", "    let\
    \ result = false;\n    const letters: string[] = [];\n    const sLength = s.length;\n\
    \    if (sLength >= 3) {\n        for (let i = 0; i < sLength; i++) {\n      \
    \      letters.push(s[i]);\n        }\n        const lettersLength = letters.length;\n\
    \        for (let i = 0; i < lettersLength; i++) {\n            if (i + 2 <= lettersLength)\
    \ {\n                if (letters[i] !== letters[i + 1] && letters[i] !== letters[i\
    \ + 2] && letters[i + 1] !== letters[i + 2]) {\n                    result = true;\n\
    \                } else {\n                    result = false;\n             \
    \       break;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}\n", "    // your code here\n    return;\n}\n", "    if (s.length\
    \ < 3) {\n        return false;\n    }\n    for (let i = 0; i < s.length - 2;\
    \ i++) {\n        if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i\
    \ + 2]) {\n            return false;\n        }\n    }\n    return true;\n}",
  "    if (s.length < 3) return false;\n    for (let i = 0; i < s.length - 2; i++)\
    \ {\n        if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i +\
    \ 2]) return false;\n    }\n    return true;\n}\n", "    if (s.length < 3) {\n\
    \        return false;\n    }\n    for (let i = 2; i < s.length; i++) {\n    \
    \    if (s[i] === s[i - 1] && s[i] === s[i - 2]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "  return s.length >= 3 &&\n    !/aaa|bbb|ccc|ddd|eee|fff|ggg|hhh|iii|jjj|kkk|lll|mmm|nnn|ooo|ppp|qqq|rrr|sss|ttt|uuu|vvv|www|xxx|yyy|zzz/.test(s);\n\
    }\n", "    if (s.length < 3) {\n        return false;\n    }\n    for (let i =\
    \ 2; i < s.length; i++) {\n        if (s[i] === s[i - 1] && s[i] === s[i - 2])\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n", "  \
    \  if (s.length < 3) {\n        return false;\n    }\n    else {\n        let\
    \ unique: boolean = true;\n        for (let i = 0; i < s.length; i++) {\n    \
    \        if (i+2 < s.length && s[i] === s[i+1] && s[i] === s[i+2]) {\n       \
    \         unique = false;\n            }\n        }\n        return unique;\n\
    \    }\n}\n", "  if (s.length < 3) {\n    return false;\n  }\n  for (let i = 0;\
    \ i < s.length - 2; i++) {\n    if (s[i] === s[i + 1] || s[i] === s[i + 2] ||\
    \ s[i + 1] === s[i + 2]) {\n      return false;\n    }\n  }\n  return true;\n\
    }\nconsole.log(is_happy(\"abcd\"));\nconsole.log(is_happy(\"aa\"));\nconsole.log(is_happy(\"\
    aabb\"));\nconsole.log(is_happy(\"xyy\"));\n", "    return (s.length < 3) ? false\
    \ : (new Set(s.slice(0,3)).size === 3) && is_happy(s.slice(1));\n}", "  if (s.length\
    \ < 3) {\n    return false;\n  }\n  let start: number = 0;\n  let end: number\
    \ = 3;\n  while (end <= s.length) {\n    if (\n      s[start] === s[start + 1]\
    \ ||\n      s[start] === s[start + 2] ||\n      s[start + 1] === s[start + 2]\n\
    \    ) {\n      return false;\n    }\n    start++;\n    end++;\n  }\n  return\
    \ true;\n}\n", "  let result = false;\n  if (s.length >= 3) {\n    for (let i\
    \ = 0; i < s.length - 2; i++) {\n      if (s[i] !== s[i + 1] && s[i] !== s[i +\
    \ 2] && s[i + 1] !== s[i + 2]) {\n        result = true;\n      } else {\n   \
    \     result = false;\n        break;\n      }\n    }\n  } else {\n    result\
    \ = false;\n  }\n  return result;\n}\n", "    let res: boolean = true;\n    let\
    \ len: number = s.length;\n    if (len < 3) {\n        res = false;\n    } else\
    \ {\n        for (let i: number = 0; i < len - 2; i++) {\n            if (s[i]\
    \ === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n            \
    \    res = false;\n                break;\n            }\n        }\n    }\n \
    \   return res;\n}\n\nconsole.log(is_happy('a'));\nconsole.log(is_happy('aa'));\n\
    console.log(is_happy('abcd'));\nconsole.log(is_happy('aabb'));\nconsole.log(is_happy('adb'));\n\
    console.log(is_happy('xyy'));", "    let s_length = s.length;\n    let result\
    \ = true;\n    if (s_length >= 3) {\n        let first_char = s.charAt(0);\n \
    \       let second_char = s.charAt(1);\n        let third_char = s.charAt(2);\n\
    \        for (let i = 0; i < s_length - 2; i++) {\n            if (first_char\
    \ == second_char && second_char == third_char) {\n                result = false;\n\
    \                break;\n            }\n            first_char = s.charAt(i);\n\
    \            second_char = s.charAt(i + 1);\n            third_char = s.charAt(i\
    \ + 2);\n        }\n    } else {\n        result = false;\n    }\n    return result;\n\
    }\nconsole.log(is_happy(\"a\"));\nconsole.log(is_happy(\"aa\"));\nconsole.log(is_happy(\"\
    abcd\"));\nconsole.log(is_happy(\"aabb\"));\nconsole.log(is_happy(\"adb\"));\n\
    console.log(is_happy(\"xyy\"));\n", "    if (s.length < 3) return false;\n   \
    \ for (let i = 0; i < s.length - 2; i++) {\n        if (s[i] === s[i + 1] || s[i]\
    \ === s[i + 2] || s[i + 1] === s[i + 2]) return false;\n    }\n    return true;\n\
    }\n", "  if (s.length < 3) {\n    return false;\n  }\n  const strings = [];\n\
    \  for (let i = 0; i < s.length - 2; i++) {\n    strings.push(s.substring(i, i\
    \ + 3));\n  }\n  for (let i = 0; i < strings.length; i++) {\n    for (let j =\
    \ i + 1; j < strings.length; j++) {\n      if (strings[i] === strings[j]) {\n\
    \        return false;\n      }\n    }\n  }\n  return true;\n}", "  if (s.length\
    \ < 3) {\n    return false;\n  }\n  let arr = s.split(\"\");\n  let i = 0;\n \
    \ while (i < arr.length - 2) {\n    if (arr[i] == arr[i + 1] || arr[i] == arr[i\
    \ + 2] || arr[i + 1] == arr[i + 2]) {\n      return false;\n    }\n    i += 1;\n\
    \  }\n  return true;\n}\n", "    const regex = /(.)\\1\\1/;\n    const regResult\
    \ = regex.test(s);\n    if (s.length > 2 && !regResult) {\n        return true;\n\
    \    }\n    return false;\n}\n", "    // return whether the string is hapts or\
    \ not\n    if (s.length < 3) {\n        return false;\n    }\n    else {\n   \
    \     for (let i = 0; i < s.length - 2; i++) {\n            for (let j = i + 1;\
    \ j < s.length - 1; j++) {\n                for (let k = j + 1; k < s.length;\
    \ k++) {\n                    if (s[i] == s[j] && s[j] == s[k]) {\n          \
    \              return false;\n                    }\n                }\n     \
    \       }\n        }\n        return true;\n    }\n}\n", "    return s.length\
    \ >= 3 && s.split('').every((e, i, a) => (i + 2) % 3 != 0 || a[i] != a[i + 1]\
    \ || a[i] != a[i + 2])\n}\n", "  if (s.length < 3) {\n    return false;\n  }\n\
    \  for (let i = 0; i < s.length - 2; i++) {\n    const threeCharArray = s.slice(i,\
    \ i + 3).split(\"\");\n    if (threeCharArray[0] === threeCharArray[1] || threeCharArray[0]\
    \ === threeCharArray[2] || threeCharArray[1] === threeCharArray[2]) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "    const string = s.toLowerCase();\n\
    \    const arr = string.split('');\n    if (arr.length < 3) {\n        return\
    \ false;\n    } else {\n        for (let i = 0; i < arr.length; i++) {\n     \
    \       if (arr[i] == arr[i + 1] && arr[i + 1] == arr[i + 2]) {\n            \
    \    return false;\n            }\n        }\n        return true;\n    }\n}\n\
    \nconsole.log(is_happy('a'));\nconsole.log(is_happy('aa'));\nconsole.log(is_happy('abcd'));\n\
    console.log(is_happy('aabb'));\nconsole.log(is_happy('adb'));\nconsole.log(is_happy('xyy'));",
  "    let c1 = s.charAt(0);\n    let c2 = s.charAt(1);\n    let c3 = s.charAt(2);\n\
    \    let i: number = 0;\n    let result: boolean = true;\n    for (i = 0; i <\
    \ s.length; i++) {\n        if (c1 === c2 && c2 === c3) {\n            result\
    \ = false;\n            break;\n        }\n        c1 = c2;\n        c2 = c3;\n\
    \        c3 = s.charAt(i + 3);\n    }\n    return result;\n}\nconsole.log(is_happy(\"\
    abcd\"));\nconsole.log(is_happy(\"aa\"));\nconsole.log(is_happy(\"xyy\"));\nconsole.log(is_happy(\"\
    x\"));\nconsole.log(is_happy(\"abc\"));\nconsole.log(is_happy(\"\"));", "  if\
    \ (s.length < 3) {\n    return false;\n  }\n  for (let i = 0; i < s.length - 2;\
    \ i++) {\n    if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i +\
    \ 2]) {\n      return false;\n    }\n  }\n  return true;\n}\n", "    let l = s.length;\n\
    \    if (l < 3) {\n        return false;\n    }\n    for (let i = 0; i < l - 2;\
    \ i++) {\n        if (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i\
    \ + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
  "    if (s.length < 3) {\n        return false;\n    }\n    else {\n        for\
    \ (let i = 0; i < s.length; i++) {\n            if (s[i] == s[i + 1] && s[i +\
    \ 1] == s[i + 2]) {\n                return false;\n            }\n        }\n\
    \        return true;\n    }\n}\n", "    if (s.length < 3) return false;\n   \
    \ for (let i = 0; i < s.length - 2; i++) {\n        if (s[i] === s[i + 1] || s[i]\
    \ === s[i + 2] || s[i + 1] === s[i + 2]) return false;\n    }\n    return true;\n\
    }\n", "    if (s.length < 3) {\n        return false;\n    }\n    for (let i =\
    \ 0; i < s.length - 2; i++) {\n        if (s[i] === s[i + 1] || s[i] === s[i +\
    \ 2] || s[i + 1] === s[i + 2]) {\n            return false;\n        }\n    }\n\
    \    return true;\n}", "    if (s.length < 3) {\n        return false;\n    }\n\
    \    for (let i = 0; i < s.length - 2; i++) {\n        if (s[i] === s[i + 1] ||\
    \ s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n            return false;\n \
    \       }\n    }\n    return true;\n}", "    if (s.length < 3) {\n        return\
    \ false;\n    }\n    for (let i = 0; i < s.length - 2; i++) {\n        if (s[i]\
    \ === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}", "    return s.length >= 3 &&\
    \ !s.split('').every((c, index) => s[index] === s[index + 1] && s[index] === s[index\
    \ + 2]);\n}\n", "    if (s.length < 3) return false;\n    for (let i = 0; i <\
    \ s.length - 2; i++) {\n        if (s[i] === s[i + 1] || s[i] === s[i + 2] ||\
    \ s[i + 1] === s[i + 2]) return false;\n    }\n    return true;\n}", "    return\
    \ true;\n}\n\nexport default is_happy;", "  if (s.length < 3) {\n    return false;\n\
    \  }\n\n  if (s.length === 3) {\n    return s[0] !== s[1] && s[1] !== s[2] &&\
    \ s[0] !== s[2];\n  }\n\n  for (let i = 0; i < s.length - 2; i++) {\n    if (s[i]\
    \ === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n      return\
    \ false;\n    }\n  }\n\n  return true;\n}\n", "  const len = s.length;\n  if (len\
    \ < 3) {\n    return false;\n  }\n  for (let i = 0; i < len - 2; i++) {\n    if\
    \ (s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "    return s.length >= 3 && s.substring(0,\
    \ 3).split('').filter((value, index, self) => self.indexOf(value) === index).length\
    \ === 3;\n}\nconsole.log(is_happy('a'));\nconsole.log(is_happy('aa'));\nconsole.log(is_happy('abcd'));\n\
    console.log(is_happy('aabb'));\nconsole.log(is_happy('adb'));\nconsole.log(is_happy('xyy'));\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

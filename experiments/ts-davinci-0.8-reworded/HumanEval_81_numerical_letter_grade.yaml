name: HumanEval_81_numerical_letter_grade
language: ts
prompt: "//It is the last week of the semester and the teacher has to give the grades\n\
  // to students. The teacher has been making her own algorithm for grading.\n// The\
  \ only problem is, she has lost the code she used for grading.\n// She has given\
  \ you an array of GPAs for some students and you have to write \n// a function that\
  \ can output an array of letter grades using the following table:\n// GPA      \
  \ |    Letter grade\n// 4.0                A+\n// > 3.7                A \n// >\
  \ 3.3                A- \n// > 3.0                B+\n// > 2.7                B\
  \ \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7           \
  \     C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7     \
  \           D \n// > 0.0                D-\n// 0.0                E\n// Example:\n\
  // >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n// [\"A+\", \"B\", \"C-\", \"C\",\
  \ \"A-\"]\nfunction numerical_letter_grade(grades: number[]): string[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = numerical_letter_grade;\n  assert.deepEqual(candidate([4.0,\
  \ 3, 1.7, 2, 3.5]),[\"A+\", \"B\", \"C-\", \"C\", \"A-\"]);\n  assert.deepEqual(candidate([1.2]),[\"\
  D+\"]);\n  assert.deepEqual(candidate([0.5]),[\"D-\"]);\n  assert.deepEqual(candidate([0.0]),[\"\
  E\"]);\n  assert.deepEqual(candidate([1.0, 0.3, 1.5, 2.8, 3.3]),[\"D\", \"D-\",\
  \ \"C-\", \"B\", \"B+\"]);\n  assert.deepEqual(candidate([0.0, 0.7]),[\"E\", \"\
  D-\"]);\n}\n\ntest();"
completions: ["    let letter_grades: string[] = [];\n    grades.forEach(num_grade\
    \ => {\n        if (num_grade >= 4.0) {\n            letter_grades.push(\"A+\"\
    );\n        } else if (num_grade >= 3.7) {\n            letter_grades.push(\"\
    A\");\n        } else if (num_grade >= 3.3) {\n            letter_grades.push(\"\
    A-\");\n        } else if (num_grade >= 3.0) {\n            letter_grades.push(\"\
    B+\");\n        } else if (num_grade >= 2.7) {\n            letter_grades.push(\"\
    B\");\n        } else if (num_grade >= 2.3) {\n            letter_grades.push(\"\
    B-\");\n        } else if (num_grade >= 2.0) {\n            letter_grades.push(\"\
    C+\");\n        } else if (num_grade >= 1.7) {\n            letter_grades.push(\"\
    C\");\n        } else if (num_grade >= 1.3) {\n            letter_grades.push(\"\
    C-\");\n        } else if (num_grade >= 1.0) {\n            letter_grades.push(\"\
    D+\");\n        } else if (num_grade >= 0.7) {\n            letter_grades.push(\"\
    D\");\n        } else if (num_grade >= 0.0) {\n            letter_grades.push(\"\
    D-\");\n        } else {\n            letter_grades.push(\"E\");\n        }\n\
    \    });\n    return letter_grades;\n}\n\nconsole.log(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));\n", "    const letterGrades: string[] = [];\n    for (let\
    \ i = 0; i < grades.length; i++) {\n        const numericalGrade = grades[i];\n\
    \        if (numericalGrade >= 4.0) {\n            letterGrades.push(\"A+\");\n\
    \        } else if (numericalGrade >= 3.7) {\n            letterGrades.push(\"\
    A\");\n        } else if (numericalGrade >= 3.3) {\n            letterGrades.push(\"\
    A-\");\n        } else if (numericalGrade >= 3.0) {\n            letterGrades.push(\"\
    B+\");\n        } else if (numericalGrade >= 2.7) {\n            letterGrades.push(\"\
    B\");\n        } else if (numericalGrade >= 2.3) {\n            letterGrades.push(\"\
    B-\");\n        } else if (numericalGrade >= 2.0) {\n            letterGrades.push(\"\
    C+\");\n        } else if (numericalGrade >= 1.7) {\n            letterGrades.push(\"\
    C\");\n        } else if (numericalGrade >= 1.3) {\n            letterGrades.push(\"\
    C-\");\n        } else if (numericalGrade >= 1.0) {\n            letterGrades.push(\"\
    D+\");\n        } else if (numericalGrade >= 0.7) {\n            letterGrades.push(\"\
    D\");\n        } else if (numericalGrade >= 0.0) {\n            letterGrades.push(\"\
    D-\");\n        } else {\n            letterGrades.push(\"E\");\n        }\n \
    \   }\n    return letterGrades;\n}\n", "    let result: string[] = [];\n    for\
    \ (let i: number = 0; i < grades.length; i++) {\n        let current: number =\
    \ grades[i];\n        if (current >= 4.0) {\n            result.push(\"A+\");\n\
    \        } else if (current >= 3.7) {\n            result.push(\"A\");\n     \
    \   } else if (current >= 3.3) {\n            result.push(\"A-\");\n        }\
    \ else if (current >= 3.0) {\n            result.push(\"B+\");\n        } else\
    \ if (current >= 2.7) {\n            result.push(\"B\");\n        } else if (current\
    \ >= 2.3) {\n            result.push(\"B-\");\n        } else if (current >= 2.0)\
    \ {\n            result.push(\"C+\");\n        } else if (current >= 1.7) {\n\
    \            result.push(\"C\");\n        } else if (current >= 1.3) {\n     \
    \       result.push(\"C-\");\n        } else if (current >= 1.0) {\n         \
    \   result.push(\"D+\");\n        } else if (current >= 0.7) {\n            result.push(\"\
    D\");\n        } else if (current >= 0.0) {\n            result.push(\"D-\");\n\
    \        } else {\n            result.push(\"E\");\n        }\n    }\n    return\
    \ result;\n}", "    let result = []\n    for (let i = 0; i < grades.length; i++)\
    \ {\n        if (grades[i] > 4.0) {\n            result.push(\"A+\")\n       \
    \ } else if (grades[i] > 3.7) {\n            result.push(\"A\")\n        } else\
    \ if (grades[i] > 3.3) {\n            result.push(\"A-\")\n        } else if (grades[i]\
    \ > 3.0) {\n            result.push(\"B+\")\n        } else if (grades[i] > 2.7)\
    \ {\n            result.push(\"B\")\n        } else if (grades[i] > 2.3) {\n \
    \           result.push(\"B-\")\n        } else if (grades[i] > 2.0) {\n     \
    \       result.push(\"C+\")\n        } else if (grades[i] > 1.7) {\n         \
    \   result.push(\"C\")\n        } else if (grades[i] > 1.3) {\n            result.push(\"\
    C-\")\n        } else if (grades[i] > 1.0) {\n            result.push(\"D+\")\n\
    \        } else if (grades[i] > 0.7) {\n            result.push(\"D\")\n     \
    \   } else if (grades[i] > 0.0) {\n            result.push(\"D-\")\n        }\
    \ else {\n            result.push(\"E\")\n        }\n    }\n    return result\n\
    }\n\nlet printLetterGradeArray = numerical_letter_grade([4.0, 3, 1.7, 2, 3.5])\n\
    console.log(printLetterGradeArray)", "  // create an object with the key value\
    \ pairs\n  const gradeTable = {\n    \"A+\": 4.0,\n    A: 3.7,\n    \"A-\": 3.3,\n\
    \    \"B+\": 3.0,\n    B: 2.7,\n    \"B-\": 2.3,\n    \"C+\": 2.0,\n    C: 1.7,\n\
    \    \"C-\": 1.3,\n    \"D+\": 1.0,\n    D: 0.7,\n    \"D-\": 0.0,\n    E: 0.0\n\
    \  };\n  const gradeTableKeys = Object.keys(gradeTable);\n  const gradeTableValues\
    \ = Object.values(gradeTable);\n  const outputArray: string[] = [];\n  grades.forEach(element\
    \ => {\n    for (let i = 0; i < gradeTableValues.length; i++) {\n      if (element\
    \ >= gradeTableValues[i]) {\n        outputArray.push(gradeTableKeys[i]);\n  \
    \      break;\n      }\n    }\n  });\n  return outputArray;\n}\n\nconsole.log(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));\n", "  let result: string[] = [];\n  for (let grade of grades)\
    \ {\n    if (grade >= 4.0) {\n      result.push(\"A+\");\n    } else if (grade\
    \ >= 3.7) {\n      result.push(\"A\");\n    } else if (grade >= 3.3) {\n     \
    \ result.push(\"A-\");\n    } else if (grade >= 3.0) {\n      result.push(\"B+\"\
    );\n    } else if (grade >= 2.7) {\n      result.push(\"B\");\n    } else if (grade\
    \ >= 2.3) {\n      result.push(\"B-\");\n    } else if (grade >= 2.0) {\n    \
    \  result.push(\"C+\");\n    } else if (grade >= 1.7) {\n      result.push(\"\
    C\");\n    } else if (grade >= 1.3) {\n      result.push(\"C-\");\n    } else\
    \ if (grade >= 1.0) {\n      result.push(\"D+\");\n    } else if (grade >= 0.7)\
    \ {\n      result.push(\"D\");\n    } else if (grade >= 0.0) {\n      result.push(\"\
    D-\");\n    } else {\n      result.push(\"E\");\n    }\n  }\n  return result;\n\
    }", "  const grading = {\n    \"4.0\": \"A+\",\n    \"3.7\": \"A\",\n    \"3.3\"\
    : \"A-\",\n    \"3.0\": \"B+\",\n    \"2.7\": \"B\",\n    \"2.3\": \"B-\",\n \
    \   \"2.0\": \"C+\",\n    \"1.7\": \"C\",\n    \"1.3\": \"C-\",\n    \"1.0\":\
    \ \"D+\",\n    \"0.7\": \"D\",\n    \"0.0\": \"D-\",\n    \"-1.0\": \"E\"\n  };\n\
    \  return grades.map(grade => {\n    const keys = Object.keys(grading);\n    const\
    \ index = keys.findIndex(element => grade >= parseFloat(element));\n    return\
    \ grading[keys[index]];\n  });\n}\n", "  const gradesMap = new Map();\n  gradesMap.set(4.0,\
    \ \"A+\");\n  gradesMap.set(3.7, \"A\");\n  gradesMap.set(3.3, \"A-\");\n  gradesMap.set(3.0,\
    \ \"B+\");\n  gradesMap.set(2.7, \"B\");\n  gradesMap.set(2.3, \"B-\");\n  gradesMap.set(2.0,\
    \ \"C+\");\n  gradesMap.set(1.7, \"C\");\n  gradesMap.set(1.3, \"C-\");\n  gradesMap.set(1.0,\
    \ \"D+\");\n  gradesMap.set(0.7, \"D\");\n  gradesMap.set(0.0, \"D-\");\n  gradesMap.set(-1.0,\
    \ \"E\");\n\n  const result: string[] = [];\n  for (let i = 0; i < grades.length;\
    \ i++) {\n    const grade = grades[i];\n    const gradeKeys = Array.from(gradesMap.keys());\n\
    \    const key =\n      gradeKeys.find((g) => g <= grade) || gradeKeys[gradeKeys.length\
    \ - 1];\n    result.push(gradesMap.get(key));\n  }\n  return result;\n}\n", " \
    \   return grades.map(numerical_grade_to_letter);\n}\n", "    let grades_array:\
    \ string[] = [];\n    for (let i = 0; i < grades.length; i++) {\n        let grade:\
    \ number = grades[i];\n        if (grade === 4.0) {\n            grades_array.push(\"\
    A+\");\n        } else if (grade > 3.7) {\n            grades_array.push(\"A\"\
    );\n        } else if (grade > 3.3) {\n            grades_array.push(\"A-\");\n\
    \        } else if (grade > 3.0) {\n            grades_array.push(\"B+\");\n \
    \       } else if (grade > 2.7) {\n            grades_array.push(\"B\");\n   \
    \     } else if (grade > 2.3) {\n            grades_array.push(\"B-\");\n    \
    \    } else if (grade > 2.0) {\n            grades_array.push(\"C+\");\n     \
    \   } else if (grade > 1.7) {\n            grades_array.push(\"C\");\n       \
    \ } else if (grade > 1.3) {\n            grades_array.push(\"C-\");\n        }\
    \ else if (grade > 1.0) {\n            grades_array.push(\"D+\");\n        } else\
    \ if (grade > 0.7) {\n            grades_array.push(\"D\");\n        } else if\
    \ (grade > 0.0) {\n            grades_array.push(\"D-\");\n        } else {\n\
    \            grades_array.push(\"E\");\n        }\n    }\n    return grades_array;\n\
    }\nconsole.log(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]));\n", "    let result:\
    \ string[] = [];\n    for (let i = 0; i < grades.length; i++) {\n        switch\
    \ (true) {\n            case grades[i] >= 4.0:\n                result.push(\"\
    A+\");\n                break;\n            case grades[i] >= 3.7:\n         \
    \       result.push(\"A\");\n                break;\n            case grades[i]\
    \ >= 3.3:\n                result.push(\"A-\");\n                break;\n    \
    \        case grades[i] >= 3.0:\n                result.push(\"B+\");\n      \
    \          break;\n            case grades[i] >= 2.7:\n                result.push(\"\
    B\");\n                break;\n            case grades[i] >= 2.3:\n          \
    \      result.push(\"B-\");\n                break;\n            case grades[i]\
    \ >= 2.0:\n                result.push(\"C+\");\n                break;\n    \
    \        case grades[i] >= 1.7:\n                result.push(\"C\");\n       \
    \         break;\n            case grades[i] >= 1.3:\n                result.push(\"\
    C-\");\n                break;\n            case grades[i] >= 1.0:\n         \
    \       result.push(\"D+\");\n                break;\n            case grades[i]\
    \ >= 0.7:\n                result.push(\"D\");\n                break;\n     \
    \       case grades[i] >= 0.0:\n                result.push(\"D-\");\n       \
    \         break;\n            case grades[i] < 0.0:\n                result.push(\"\
    E\");\n                break;\n        }\n    }\n    return result;\n}\n", " \
    \   let grade_list: string[] = [];\n    for (let num of grades) {\n        if\
    \ (num >= 4.0) {\n            grade_list.push(\"A+\");\n        } else if (num\
    \ >= 3.7) {\n            grade_list.push(\"A\");\n        } else if (num >= 3.3)\
    \ {\n            grade_list.push(\"A-\");\n        } else if (num >= 3.0) {\n\
    \            grade_list.push(\"B+\");\n        } else if (num >= 2.7) {\n    \
    \        grade_list.push(\"B\");\n        } else if (num >= 2.3) {\n         \
    \   grade_list.push(\"B-\");\n        } else if (num >= 2.0) {\n            grade_list.push(\"\
    C+\");\n        } else if (num >= 1.7) {\n            grade_list.push(\"C\");\n\
    \        } else if (num >= 1.3) {\n            grade_list.push(\"C-\");\n    \
    \    } else if (num >= 1.0) {\n            grade_list.push(\"D+\");\n        }\
    \ else if (num >= 0.7) {\n            grade_list.push(\"D\");\n        } else\
    \ if (num >= 0.0) {\n            grade_list.push(\"D-\");\n        } else {\n\
    \            grade_list.push(\"E\");\n        }\n    }\n    return grade_list;\n\
    }\nconsole.log(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]));\n", "    const\
    \ grade_scale = [[\"A+\", 4.0],\n    [\"A\", 3.7],\n    [\"A-\", 3.3],\n    [\"\
    B+\", 3.0],\n    [\"B\", 2.7],\n    [\"B-\", 2.3],\n    [\"C+\", 2.0],\n    [\"\
    C\", 1.7],\n    [\"C-\", 1.3],\n    [\"D+\", 1.0],\n    [\"D\", 0.7],\n    [\"\
    D-\", 0.0],\n    [\"E\", 0.0]];\n    let result: string[] = []\n    for (let i\
    \ = 0; i < grades.length; i++) {\n        for (let j = 0; j < grade_scale.length;\
    \ j++) {\n            if (grades[i] >= grade_scale[j][1]) {\n                result.push(grade_scale[j][0])\n\
    \                break\n            }\n        }\n    }\n    return result\n}\n\
    console.log(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]))\n", "    let letter_grades:\
    \ string[] = [];\n    for (let grade of grades) {\n        if (grade >= 4.0) {\n\
    \            letter_grades.push(\"A+\");\n        } else if (grade >= 3.7) {\n\
    \            letter_grades.push(\"A\");\n        } else if (grade >= 3.3) {\n\
    \            letter_grades.push(\"A-\");\n        } else if (grade >= 3.0) {\n\
    \            letter_grades.push(\"B+\");\n        } else if (grade >= 2.7) {\n\
    \            letter_grades.push(\"B\");\n        } else if (grade >= 2.3) {\n\
    \            letter_grades.push(\"B-\");\n        } else if (grade >= 2.0) {\n\
    \            letter_grades.push(\"C+\");\n        } else if (grade >= 1.7) {\n\
    \            letter_grades.push(\"C\");\n        } else if (grade >= 1.3) {\n\
    \            letter_grades.push(\"C-\");\n        } else if (grade >= 1.0) {\n\
    \            letter_grades.push(\"D+\");\n        } else if (grade >= 0.7) {\n\
    \            letter_grades.push(\"D\");\n        } else if (grade >= 0.0) {\n\
    \            letter_grades.push(\"D-\");\n        } else {\n            letter_grades.push(\"\
    E\");\n        }\n    }\n    return letter_grades;\n}", "    let result = [];\n\
    \    for (let grade of grades) {\n        if (grade >= 4.0) {\n            result.push(\"\
    A+\");\n        } else if (grade >= 3.7) {\n            result.push(\"A\");\n\
    \        } else if (grade >= 3.3) {\n            result.push(\"A-\");\n      \
    \  } else if (grade >= 3.0) {\n            result.push(\"B+\");\n        } else\
    \ if (grade >= 2.7) {\n            result.push(\"B\");\n        } else if (grade\
    \ >= 2.3) {\n            result.push(\"B-\");\n        } else if (grade >= 2.0)\
    \ {\n            result.push(\"C+\");\n        } else if (grade >= 1.7) {\n  \
    \          result.push(\"C\");\n        } else if (grade >= 1.3) {\n         \
    \   result.push(\"C-\");\n        } else if (grade >= 1.0) {\n            result.push(\"\
    D+\");\n        } else if (grade >= 0.7) {\n            result.push(\"D\");\n\
    \        } else if (grade >= 0.0) {\n            result.push(\"D-\");\n      \
    \  } else {\n            result.push(\"E\");\n        }\n    }\n    return result;\n\
    }\n\nexport { numerical_letter_grade };", "  return [];\n}\n", "  return grades.map(grade\
    \ => {\n    if (grade > 4.0) {\n      return \"A+\";\n    } else if (grade > 3.7)\
    \ {\n      return \"A\";\n    } else if (grade > 3.3) {\n      return \"A-\";\n\
    \    } else if (grade > 3.0) {\n      return \"B+\";\n    } else if (grade > 2.7)\
    \ {\n      return \"B\";\n    } else if (grade > 2.3) {\n      return \"B-\";\n\
    \    } else if (grade > 2.0) {\n      return \"C+\";\n    } else if (grade > 1.7)\
    \ {\n      return \"C\";\n    } else if (grade > 1.3) {\n      return \"C-\";\n\
    \    } else if (grade > 1.0) {\n      return \"D+\";\n    } else if (grade > 0.7)\
    \ {\n      return \"D\";\n    } else if (grade > 0.0) {\n      return \"D-\";\n\
    \    } else {\n      return \"E\";\n    }\n  });\n}\n", "    const letter_grades:\
    \ string[] = []\n    grades.forEach(grade => {\n        if (grade >= 4.0) {\n\
    \            letter_grades.push(\"A+\")\n        } else if (grade >= 3.7) {\n\
    \            letter_grades.push(\"A\")\n        } else if (grade >= 3.3) {\n \
    \           letter_grades.push(\"A-\")\n        } else if (grade >= 3.0) {\n \
    \           letter_grades.push(\"B+\")\n        } else if (grade >= 2.7) {\n \
    \           letter_grades.push(\"B\")\n        } else if (grade >= 2.3) {\n  \
    \          letter_grades.push(\"B-\")\n        } else if (grade >= 2.0) {\n  \
    \          letter_grades.push(\"C+\")\n        } else if (grade >= 1.7) {\n  \
    \          letter_grades.push(\"C\")\n        } else if (grade >= 1.3) {\n   \
    \         letter_grades.push(\"C-\")\n        } else if (grade >= 1.0) {\n   \
    \         letter_grades.push(\"D+\")\n        } else if (grade >= 0.7) {\n   \
    \         letter_grades.push(\"D\")\n        } else if (grade >= 0.0) {\n    \
    \        letter_grades.push(\"D-\")\n        } else {\n            letter_grades.push(\"\
    E\")\n        }\n    })\n    return letter_grades\n}\n", "  let letter_grades:\
    \ string[] = [];\n  grades.forEach(g => {\n    if (g >= 4.0) {\n      letter_grades.push(\"\
    A+\");\n    } else if (g >= 3.7) {\n      letter_grades.push(\"A\");\n    } else\
    \ if (g >= 3.3) {\n      letter_grades.push(\"A-\");\n    } else if (g >= 3.0)\
    \ {\n      letter_grades.push(\"B+\");\n    } else if (g >= 2.7) {\n      letter_grades.push(\"\
    B\");\n    } else if (g >= 2.3) {\n      letter_grades.push(\"B-\");\n    } else\
    \ if (g >= 2.0) {\n      letter_grades.push(\"C+\");\n    } else if (g >= 1.7)\
    \ {\n      letter_grades.push(\"C\");\n    } else if (g >= 1.3) {\n      letter_grades.push(\"\
    C-\");\n    } else if (g >= 1.0) {\n      letter_grades.push(\"D+\");\n    } else\
    \ if (g >= 0.7) {\n      letter_grades.push(\"D\");\n    } else if (g >= 0.0)\
    \ {\n      letter_grades.push(\"D-\");\n    } else {\n      letter_grades.push(\"\
    E\");\n    }\n  });\n  return letter_grades;\n}\n", "  let letter_grades: string[]\
    \ = [];\n  for (let i: number = 0; i < grades.length; i++) {\n    if (grades[i]\
    \ === 4.0) {\n      letter_grades.push(\"A+\");\n    } else if (grades[i] > 3.7)\
    \ {\n      letter_grades.push(\"A\");\n    } else if (grades[i] > 3.3) {\n   \
    \   letter_grades.push(\"A-\");\n    } else if (grades[i] > 3.0) {\n      letter_grades.push(\"\
    B+\");\n    } else if (grades[i] > 2.7) {\n      letter_grades.push(\"B\");\n\
    \    } else if (grades[i] > 2.3) {\n      letter_grades.push(\"B-\");\n    } else\
    \ if (grades[i] > 2.0) {\n      letter_grades.push(\"C+\");\n    } else if (grades[i]\
    \ > 1.7) {\n      letter_grades.push(\"C\");\n    } else if (grades[i] > 1.3)\
    \ {\n      letter_grades.push(\"C-\");\n    } else if (grades[i] > 1.0) {\n  \
    \    letter_grades.push(\"D+\");\n    } else if (grades[i] > 0.7) {\n      letter_grades.push(\"\
    D\");\n    } else if (grades[i] > 0.0) {\n      letter_grades.push(\"D-\");\n\
    \    } else {\n      letter_grades.push(\"E\");\n    }\n  }\n  return letter_grades;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

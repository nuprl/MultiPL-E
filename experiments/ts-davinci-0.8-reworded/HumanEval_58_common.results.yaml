language: ts
name: HumanEval_58_common
results:
- exit_code: 2
  program: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n    //Your code here\n    return l1.filter(value => l2.includes(value));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2jismled.ts(8,34): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659821730
- exit_code: 2
  program: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n    return unique(l1.concat(l2)).sort((a, b) => a - b);\n}\n\nexport default\
    \ common;\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcq4cssle.ts(7,12): error TS2304: Cannot find name
    ''unique''.

    '
  timestamp: 1659821730
- exit_code: 1
  program: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n    //TODO\n    return [];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpc4sh9kfu.js:13:12)\n\
    \    at Object.<anonymous> (/tmp/tmpc4sh9kfu.js:18:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821730
- exit_code: 2
  program: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  //  var l1_set = new Set(l1)\n  //  var l2_set = new Set(l2)\n  //  return\
    \ [...l1_set].filter(x => l2_set.has(x))\n  return Array.from(new Set(l1.filter(x\
    \ => l2.includes(x))));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgqpd46cz.ts(10,16): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpgqpd46cz.ts(10,25): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmpgqpd46cz.ts(10,47): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659821730
- exit_code: 2
  program: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n    let outList: number[] = [];\n    for (let i of l1) {\n        if (l2.includes(i)\
    \ && !outList.includes(i)) {\n            outList.push(i);\n        }\n    }\n\
    \    return outList.sort((a, b) => a - b);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsd3jixbj.ts(9,16): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    ../../../../../tmp/tmpsd3jixbj.ts(9,40): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659821730
- exit_code: 2
  program: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n    //\n    // Check if two arrays have common elements, if there isn't any\
    \ return empty array.\n    if (Array.isArray(l1) && Array.isArray(l2) && l1.length\
    \ != 0 && l2.length != 0) {\n        let arr1: number[] = l1.sort(sortFunc);\n\
    \        let arr2: number[] = l2.sort(sortFunc);\n        let newArr: number[]\
    \ = [];\n        let i: number = 0;\n        let j: number = 0;\n        let arr1Size:\
    \ number = arr1.length;\n        let arr2Size: number = arr2.length;\n       \
    \ // Two loop to find common elements for two arrays and add them to newArr.\n\
    \        while (i < arr1Size && j < arr2Size) {\n            if (arr1[i] < arr2[j])\
    \ {\n                i += 1;\n            } else if (arr1[i] > arr2[j]) {\n  \
    \              j += 1;\n            } else {\n                newArr.push(arr1[i]);\n\
    \                i += 1;\n                j += 1;\n            }\n        }\n\
    \        return newArr;\n    } else {\n        return [];\n    }\n}\n\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbucv89nk.ts(10,38): error TS2304: Cannot find name
    ''sortFunc''.

    ../../../../../tmp/tmpbucv89nk.ts(11,38): error TS2304: Cannot find name ''sortFunc''.

    '
  timestamp: 1659821730
- exit_code: 2
  program: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  return [...new Set(l1.filter(i => l2.includes(i)))].sort((a, b) => a -\
    \ b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpu5ei7iit.ts(7,18): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpu5ei7iit.ts(7,40): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659821730
- exit_code: 2
  program: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n    return l1.filter(i => l2.includes(i)).sort().filter((num, pos, arr) =>\
    \ arr.indexOf(num) === pos);\n}\nconsole.log(common([1, 4, 3, 34, 653, 2, 5],\
    \ [5, 7, 1, 5, 9, 653, 121]));\nconsole.log(common([5, 3, 2, 8], [3, 2]));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp82j65opd.ts(7,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659821730
- exit_code: 2
  program: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n    return l1.filter(x => l2.includes(x)).sort((a, b) => a - b).filter((e,\
    \ i, a) => i === a.indexOf(e));\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvrmtlnaf.ts(7,30): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659821730
- exit_code: 2
  program: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n    const list1: Set<number> = new Set(l1);\n    const list2: Set<number>\
    \ = new Set(l2);\n    const intersection: Set<number> = new Set([...list1].filter(x\
    \ => list2.has(x)));\n    return [...intersection].sort();\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpr4epia_d.ts(7,18): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpr4epia_d.ts(7,36): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmpr4epia_d.ts(8,18): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmpr4epia_d.ts(8,36): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmpr4epia_d.ts(9,25): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmpr4epia_d.ts(9,43): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659821730
- exit_code: 1
  program: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n    return l1.filter(function (item: number) {\n        return l2.indexOf(item)\
    \ !== -1;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmptr3vuc9x.js:14:12)\n\
    \    at Object.<anonymous> (/tmp/tmptr3vuc9x.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821730
- exit_code: 2
  program: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  return Array.from(new Set(l1.filter(item => l2.includes(item))));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpscy__mx3.ts(7,16): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpscy__mx3.ts(7,25): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmpscy__mx3.ts(7,50): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659821730
- exit_code: 2
  program: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n    return [...new Set(l1.filter(x => l2.includes(x)))].sort((a, b) => a\
    \ - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp31xd35nm.ts(7,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmp31xd35nm.ts(7,42): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659821730
- exit_code: 2
  program: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  return [...new Set(l1.filter(n => l2.includes(n)))].sort((a, b) => a -\
    \ b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvjfh1e91.ts(7,18): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpvjfh1e91.ts(7,40): error TS2339: Property ''includes'' does
    not exist on type ''number[]''.

    '
  timestamp: 1659821730
- exit_code: 2
  program: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n    let set1 = new Set(l1);\n    let set2 = new Set(l2);\n    let common\
    \ = [...set1].filter(x => set2.has(x));\n    return common.sort();\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfyhytm95.ts(7,20): error TS2552: Cannot find name
    ''Set''. Did you mean ''set1''?

    ../../../../../tmp/tmpfyhytm95.ts(8,20): error TS2552: Cannot find name ''Set''.
    Did you mean ''set1''?

    '
  timestamp: 1659821730
- exit_code: 2
  program: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const uniqueNumbers = new Set([...l1, ...l2]);\n  return [...uniqueNumbers].sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpau9ozloz.ts(7,29): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659821730
- exit_code: 2
  program: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const set1 = new Set(l1);\n  const set2 = new Set(l2);\n  const commonSet\
    \ = [...set1].filter(e => set2.has(e));\n  return commonSet.sort((a, b) => a -\
    \ b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfp30j5_c.ts(7,20): error TS2552: Cannot find name
    ''Set''. Did you mean ''set1''?

    ../../../../../tmp/tmpfp30j5_c.ts(8,20): error TS2552: Cannot find name ''Set''.
    Did you mean ''set1''?

    '
  timestamp: 1659821730
- exit_code: 2
  program: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n    let set1 = new Set(l1);\n    let set2 = new Set(l2);\n    return Array.from(set1).filter(x\
    \ => set2.has(x));\n}\n\ntest(common, [[1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5,\
    \ 9, 653, 121]], [1, 5, 653]);\ntest(common, [[5, 3, 2, 8], [3, 2]], [2, 3]);\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcza5yvkb.ts(7,20): error TS2552: Cannot find name
    ''Set''. Did you mean ''set1''?

    ../../../../../tmp/tmpcza5yvkb.ts(8,20): error TS2552: Cannot find name ''Set''.
    Did you mean ''set1''?

    ../../../../../tmp/tmpcza5yvkb.ts(9,18): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpcza5yvkb.ts(12,6): error TS2554: Expected 0 arguments, but
    got 3.

    ../../../../../tmp/tmpcza5yvkb.ts(13,6): error TS2554: Expected 0 arguments, but
    got 3.

    '
  timestamp: 1659821730
- exit_code: 2
  program: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n  const longerList = l1.length >= l2.length ? l1 : l2;\n  const shorterList\
    \ = l1.length < l2.length ? l1 : l2;\n  const hashMap = {};\n  for (let i = 0;\
    \ i < longerList.length; i++) {\n    if (shorterList.includes(longerList[i]))\
    \ {\n      hashMap[longerList[i]] = 0;\n    }\n  }\n  return Object.keys(hashMap).map(item\
    \ => Number(item));\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpa5qmi1f9.ts(11,21): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659821730
- exit_code: 2
  program: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
    \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let index = 0; index < l1.length;\
    \ index++) {\n        if (l2.includes(l1[index])) {\n            result.push(l1[index]);\n\
    \        }\n    }\n    return result.sort().filter((item, pos, ary) => {\n   \
    \     return !pos || item != ary[pos - 1];\n    });\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpaecibk0i.ts(9,16): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659821730

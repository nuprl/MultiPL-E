name: HumanEval_82_prime_length
language: ts
prompt: "//Write a function that takes a string and returns true if the string\n//\
  \ length is a prime number or false otherwise\n// Examples\n// >>> prime_length(\"\
  Hello\")\n// true\n// >>> prime_length(\"abcdcba\")\n// true\n// >>> prime_length(\"\
  kittens\")\n// true\n// >>> prime_length(\"orange\")\n// false\nfunction prime_length(string:\
  \ string): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = prime_length;\n  assert.deepEqual(candidate(\"Hello\"\
  ),true);\n  assert.deepEqual(candidate(\"abcdcba\"),true);\n  assert.deepEqual(candidate(\"\
  kittens\"),true);\n  assert.deepEqual(candidate(\"orange\"),false);\n  assert.deepEqual(candidate(\"\
  wow\"),true);\n  assert.deepEqual(candidate(\"world\"),true);\n  assert.deepEqual(candidate(\"\
  MadaM\"),true);\n  assert.deepEqual(candidate(\"Wow\"),true);\n  assert.deepEqual(candidate(\"\
  \"),false);\n  assert.deepEqual(candidate(\"HI\"),true);\n  assert.deepEqual(candidate(\"\
  go\"),true);\n  assert.deepEqual(candidate(\"gogo\"),false);\n  assert.deepEqual(candidate(\"\
  aaaaaaaaaaaaaaa\"),false);\n  assert.deepEqual(candidate(\"Madam\"),true);\n  assert.deepEqual(candidate(\"\
  M\"),false);\n  assert.deepEqual(candidate(\"0\"),false);\n}\n\ntest();"
completions: ["    return is_prime(string.length);\n}", "  let result: boolean = true;\n\
    \  let arr: string[] = string.split(\"\");\n  let length = arr.length;\n  let\
    \ half: number = Math.floor(length / 2);\n  for (let i = half; i > 1; i--) {\n\
    \    if (length % i === 0) {\n      result = false;\n      break;\n    }\n  }\n\
    \  return result;\n}\n", "    const length = string.length;\n    if (length %\
    \ 2 === 0) {\n        return false;\n    }\n    for (let i = 3; i < length / 2;\
    \ i += 2) {\n        if (length % i === 0) {\n            return false;\n    \
    \    }\n    }\n    return true;\n}\n", "    let prime: boolean = true;\n    let\
    \ stringLength: number = string.length;\n    for (let i: number = 2; i < stringLength;\
    \ i++) {\n        if (stringLength % i === 0) {\n            prime = false;\n\
    \        }\n    }\n    return prime;\n}\n", "    let length: number = string.length;\n\
    \    if (length === 1) {\n        return false;\n    }\n    for (let i: number\
    \ = 2; i < length; i++) {\n        if (length % i === 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}", "    const number: number =\
    \ string.length;\n    if (number === 2) {\n        return true;\n    }\n    for\
    \ (let i = 2; i < number; i++) {\n        if (number % i === 0) {\n          \
    \  return false;\n        }\n    }\n    return true;\n}\nconsole.log(prime_length(\"\
    Hello\"));\nconsole.log(prime_length(\"abcdcba\"));\nconsole.log(prime_length(\"\
    kittens\"));\nconsole.log(prime_length(\"orange\"));\n", "  let num: number =\
    \ string.length;\n  for (let i = 2; i < num; i++) {\n    if (num % i === 0) {\n\
    \      return false;\n    }\n  }\n  return num > 1;\n}\n\nconsole.log(prime_length(\"\
    Hello\"));\nconsole.log(prime_length(\"abcdcba\"));\nconsole.log(prime_length(\"\
    kittens\"));\nconsole.log(prime_length(\"orange\"));\n", "    let length = string.length;\n\
    \    for (let i = 2; i < length; i++) {\n        if (length % i === 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}", "    var stringLength\
    \ = string.length;\n    if (stringLength === 1) {\n        return false;\n   \
    \ } else if (stringLength === 2) {\n        return true;\n    } else {\n     \
    \   for (var i = 2; i < stringLength; i++) {\n            if (stringLength % i\
    \ === 0) {\n                return false;\n            }\n        }\n        return\
    \ true;\n    }\n}\nconsole.log(prime_length(\"Hello\"));\nconsole.log(prime_length(\"\
    abcdcba\"));\nconsole.log(prime_length(\"kittens\"));\nconsole.log(prime_length(\"\
    orange\"));", "    var length: number = string.length;\n    if (length === 1)\
    \ {\n        return false;\n    }\n    if (length === 2) {\n        return true;\n\
    \    }\n    for (var i = 2; i < length; i++) {\n        if (length % i === 0)\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n", "  let\
    \ length: number = string.length;\n  if (length === 2) {\n    return true;\n \
    \ }\n  if (length % 2 === 0) {\n    return false;\n  }\n  for (let i = 3; i <\
    \ length / 2; i++) {\n    if (length % i === 0) {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n", "    const length = string.length;\n    let prime\
    \ = true;\n    for (let i = 2; i < length; i++) {\n        if (length % i ===\
    \ 0) {\n            prime = false;\n            break;\n        }\n    }\n   \
    \ return prime;\n}", "  const primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109,\
    \ 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197,\
    \ 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283,\
    \ 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389,\
    \ 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487,\
    \ 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599,\
    \ 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691,\
    \ 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811,\
    \ 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919,\
    \ 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997]\n  if (primes.includes(string.length))\
    \ return true\n  return false\n}\n", "  const prime_numbers = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173,\
    \ 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263,\
    \ 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359,\
    \ 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457,\
    \ 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569,\
    \ 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659,\
    \ 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769,\
    \ 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881,\
    \ 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];\n\
    \  const string_length = string.length;\n  return prime_numbers.includes(string_length);\n\
    }\n", "  return false;\n}\n", "    let prime_num = 0;\n    let len = string.length;\n\
    \    if (len < 2) {\n        return false;\n    }\n    if (len === 2) {\n    \
    \    return true;\n    }\n    for (let i = 2; i < len; i++) {\n        if (len\
    \ % i === 0) {\n            prime_num++;\n        }\n    }\n    if (prime_num\
    \ === 0) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\nconsole.log(prime_length(\"Hello\"));\nconsole.log(prime_length(\"abcdcba\"\
    ));\nconsole.log(prime_length(\"kittens\"));\nconsole.log(prime_length(\"orange\"\
    ));\n", "  let length = string.length;\n  let prime = true;\n  if (length ===\
    \ 0 || length === 1) {\n    return false;\n  }\n  for (let i = 2; i < length;\
    \ i++) {\n    if (length % i === 0) {\n      prime = false;\n    }\n  }\n  return\
    \ prime;\n}", "    const length = string.length;\n    if (length === 1) {\n  \
    \      return false;\n    }\n    for (let i = 2; i < length; i++) {\n        if\
    \ (length % i === 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    if (string.length === 1 || string.length === 2) {\n      \
    \  return true;\n    }\n    if (string.length % 2 === 0) {\n        return false;\n\
    \    }\n    for (let i = 3; i < string.length; i += 2) {\n        if (string.length\
    \ % i === 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nconsole.log(prime_length(\"Hello\"));\nconsole.log(prime_length(\"abcdcba\"\
    ));\nconsole.log(prime_length(\"kittens\"));\nconsole.log(prime_length(\"orange\"\
    ));\n", "    let string_length = string.length;\n    for (let i = string_length\
    \ - 1; i > 1; i--) {\n        if (string_length % i === 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nconsole.log(prime_length(\"Hello\"\
    ));\nconsole.log(prime_length(\"abcdcba\"));\nconsole.log(prime_length(\"kittens\"\
    ));\nconsole.log(prime_length(\"orange\"));"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_163_generate_integers
language: ts
prompt: "//Given two positive integers a and b, return the even digits between a\n\
  // and b, in ascending order.\n// For example:\n// >>> generate_integers(2, 8)\n\
  // [2, 4, 6, 8]\n// >>> generate_integers(8, 2)\n// [2, 4, 6, 8]\n// >>> generate_integers(10,\
  \ 14)\n// []\nfunction generate_integers(a: number, b: number): number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = generate_integers;\n  assert.deepEqual(candidate(2,\
  \ 10),[2, 4, 6, 8]);\n  assert.deepEqual(candidate(10, 2),[2, 4, 6, 8]);\n  assert.deepEqual(candidate(132,\
  \ 2),[2, 4, 6, 8]);\n  assert.deepEqual(candidate(17, 89),[]);\n}\n\ntest();"
completions: ["    return [];\n}\n", "    let low: number = a > b ? b : a;\n    let\
    \ high: number = a > b ? a : b;\n    let nums: number[] = [];\n    for (let i:\
    \ number = low; i <= high; i++) {\n        if (i % 2 === 0) {\n            nums.push(i);\n\
    \        }\n    }\n    return nums;\n}\n", "    if (a > b) {\n        return generate_integers(b,\
    \ a);\n    }\n    if (a % 2 === 0) {\n        return [a, ...generate_integers(a\
    \ + 2, b)]\n    }\n    return generate_integers(a + 1, b);\n}", "  let evenNumbers:\
    \ number[] = [];\n  for (let i = Math.min(a, b); i <= Math.max(a, b); i++) {\n\
    \    if (i % 2 === 0) {\n      evenNumbers.push(i);\n    }\n  }\n  return evenNumbers;\n\
    }\n", "    const ints: number[] = [];\n    const isReverse: boolean = a > b;\n\
    \    const low: number = isReverse ? b : a;\n    const high: number = isReverse\
    \ ? a : b;\n    for (let i: number = low; i <= high; i++) {\n        if (i % 2\
    \ === 0) {\n            ints.push(i);\n        }\n    }\n    return ints;\n}\n",
  "    let range = b - a;\n    let output: number[] = [];\n    for (let i = 0; i <=\
    \ range; i++) {\n        if (a % 2 === 0) {\n            output.push(a);\n   \
    \     }\n        a++;\n    }\n    return output;\n}\n", "  let min: number = a;\n\
    \  let max: number = b;\n  if (a > b) {\n    min = b;\n    max = a;\n  }\n  let\
    \ result: number[] = [];\n  for (let i: number = min; i <= max; i++) {\n    if\
    \ (i % 2 === 0) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n\
    console.log(generate_integers(10, 14));\n", "  const result: number[] = [];\n\
    \  const max = Math.max(a, b);\n  const min = Math.min(a, b);\n  for (let i =\
    \ min; i <= max; i++) {\n    if (i % 2 === 0) {\n      result.push(i);\n    }\n\
    \  }\n  return result;\n}\n\nconsole.log(generate_integers(8, 2));\nconsole.log(generate_integers(2,\
    \ 8));\nconsole.log(generate_integers(10, 14));", "  if (a === b) {\n    return\
    \ [];\n  }\n  if (a > b) {\n    return [b, ...generate_integers(a, b + 2)];\n\
    \  }\n  return [a, ...generate_integers(a + 2, b)];\n}\n", "  // Create array\
    \ from a to b\n  let list = [...Array(b + 1).keys()].slice(a);\n  // Remove odd\
    \ digits\n  return list.filter(num => num % 2 === 0);\n}\n", "  let output: number[]\
    \ = [];\n  if (a > b) {\n    a = b;\n    b = a;\n  }\n  for (let i = a; i <= b;\
    \ i++) {\n    if (i % 2 === 0) {\n      output.push(i);\n    }\n  }\n  return\
    \ output;\n}\n\nconsole.log(generate_integers(2, 8));\nconsole.log(generate_integers(8,\
    \ 2));\nconsole.log(generate_integers(10, 14));\n", "  const integers: number[]\
    \ = [];\n  const min = Math.min(a, b);\n  const max = Math.max(a, b);\n  for (let\
    \ i = min; i <= max; i++) {\n    if (i % 2 === 0) {\n      integers.push(i);\n\
    \    }\n  }\n  return integers;\n}\n\nconsole.log(generate_integers(10, 14));\n\
    console.log(generate_integers(2, 8));\nconsole.log(generate_integers(8, 2));",
  "  let even_num: number[] = [];\n  if (a > b) {\n    let temp = a;\n    a = b;\n\
    \    b = temp;\n  }\n  for (let i = a; i <= b; i++) {\n    if (i % 2 === 0) {\n\
    \      even_num.push(i);\n    }\n  }\n  return even_num;\n}\n", "  let aa = a;\n\
    \  let bb = b;\n  if (aa > bb) {\n    aa = b;\n    bb = a;\n  }\n  const result:\
    \ number[] = [];\n  for (let i = aa; i <= bb; i++) {\n    if (i % 2 === 0) {\n\
    \      result.push(i);\n    }\n  }\n  return result;\n}\n", "    const results:\
    \ number[] = [];\n    const min = Math.min(a, b);\n    const max = Math.max(a,\
    \ b);\n    for (let i = min; i <= max; i++) {\n        if (i % 2 === 0) {\n  \
    \          results.push(i);\n        }\n    }\n    return results;\n}\n", "  \
    \  const n = Math.min(a, b);\n    const m = Math.max(a, b);\n    const arr = [];\n\
    \    for (let i = n; i <= m; i++) {\n        if (i % 2 === 0) {\n            arr.push(i);\n\
    \        }\n    }\n    return arr;\n}\nconsole.log(generate_integers(10, 14));\n",
  "  if (a > b) {\n    [a, b] = [b, a];\n  }\n  const result: number[] = [];\n  for\
    \ (let i = a; i <= b; i++) {\n    if (i % 2 === 0) {\n      result.push(i);\n\
    \    }\n  }\n  return result;\n}\n", "  let result: number[] = [];\n  let min\
    \ = Math.min(a, b);\n  let max = Math.max(a, b);\n  for (let i = min; i <= max;\
    \ i++) {\n    if (i % 2 === 0) {\n      result.push(i);\n    }\n  }\n  return\
    \ result;\n}\nconsole.log(generate_integers(8, 2));\nconsole.log(generate_integers(2,\
    \ 8));\nconsole.log(generate_integers(10, 14));\n", "    if (a > b) {\n      \
    \  return [];\n    }\n    if (a % 2 === 0) {\n        return [a, ...generate_integers(a\
    \ + 2, b)];\n    }\n    return generate_integers(a + 1, b);\n}\n", "    let result:\
    \ number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (i % 2 === 0)\
    \ {\n            result.push(i);\n        }\n    }\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

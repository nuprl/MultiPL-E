language: ts
name: HumanEval_51_remove_vowels
results:
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text:\
    \ string): string {\n  let new_text = \"\";\n  for (let i = 0; i < text.length;\
    \ i++) {\n    if (\n      text[i] !== \"a\" &&\n      text[i] !== \"e\" &&\n \
    \     text[i] !== \"i\" &&\n      text[i] !== \"o\" &&\n      text[i] !== \"u\"\
    \n    ) {\n      new_text += text[i];\n    }\n  }\n  return new_text;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n \
    \ assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmp7_8q38eg.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7_8q38eg.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821609
- exit_code: 2
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text:\
    \ string): string {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\"\
    , \"E\", \"I\", \"O\", \"U\"];\n    let result: string = '';\n    for (let index\
    \ = 0; index < text.length; index++) {\n        if (!vowels.includes(text[index]))\
    \ {\n            result += text[index];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\"\
    );\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdlaxy2dv.ts(16,21): error TS2339: Property ''includes''
    does not exist on type ''string[]''.

    '
  timestamp: 1659821609
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text:\
    \ string): string {\n    let countVowels = 0;\n    let numOfVowels = 0;\n    let\
    \ new_text = \"\";\n    let vowels = [\"a\", \"A\", \"e\", \"E\", \"i\", \"I\"\
    , \"o\", \"O\", \"u\", \"U\"];\n    for (let i = 0; i < text.length; i++) {\n\
    \        for (let j = 0; j < vowels.length; j++) {\n            if (text[i] ===\
    \ vowels[j]) {\n                numOfVowels++;\n            }\n        }\n   \
    \ }\n    for (let i = 0; i < text.length; i++) {\n        for (let j = 0; j <\
    \ vowels.length; j++) {\n            if (text[i] === vowels[j]) {\n          \
    \      countVowels++;\n            }\n        }\n        if (countVowels === 0)\
    \ {\n            new_text += text[i];\n        }\n        countVowels = 0;\n \
    \   }\n    return new_text;\n}\nconsole.log(remove_vowels(\"zbcd\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n \
    \ assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'zbcd

    '
  timestamp: 1659821609
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821609
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text:\
    \ string): string {\n    // your code here\n    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"];\n    let newText = \"\";\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (vowels.indexOf(text[i].toLowerCase()) == -1) {\n       \
    \     newText += text[i];\n        }\n    }\n    return newText;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n \
    \ assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821609
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text:\
    \ string): string {\n    var vowels: string = \"aeiouAEIOU\";\n    var result:\
    \ string = \"\";\n    for (var i = 0; i < text.length; i++) {\n        var c:\
    \ string = text[i];\n        if (vowels.indexOf(c) == -1) {\n            result\
    \ += c;\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"\
    ),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821609
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text:\
    \ string): string {\n    // REPLACE THIS CODE WITH YOUR remove_vowels IMPLEMENTATION\n\
    \    return text.replace(/[aeiou]/g, '');\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmp_v9xcw67.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp_v9xcw67.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821609
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821609
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text:\
    \ string): string {\n  const vowels = ['a', 'e', 'i', 'o', 'u'];\n  let newText\
    \ = \"\";\n  let i = 0;\n  while (i < text.length) {\n    let letter = text[i];\n\
    \    if (vowels.indexOf(letter) === -1) {\n      newText += letter;\n    }\n \
    \   i += 1;\n  }\n  return newText;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpdsfcaqad.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpdsfcaqad.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821609
- exit_code: 2
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text:\
    \ string): string {\n    let newtext: string = '';\n    for (let i = 0; i < text.length;\
    \ i++) {\n        if (!vowels.includes(text[i])) {\n            newtext += text[i];\n\
    \        }\n    }\n    return newtext;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmps95u9hdj.ts(15,14): error TS2304: Cannot find name
    ''vowels''.

    '
  timestamp: 1659821609
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[AEIOUaeiou]/g, '');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n \
    \ assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821609
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text:\
    \ string): string {\n  let new_text = \"\";\n  for (let i = 0; i < text.length;\
    \ i++) {\n    let letter = text[i];\n    if (letter !== \"a\" && letter !== \"\
    e\" && letter !== \"i\" && letter !== \"o\" && letter !== \"u\") {\n      new_text\
    \ += letter;\n    }\n  }\n  return new_text;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"\
    ),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpjy6fdcio.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpjy6fdcio.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821609
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text:\
    \ string): string {\n  return \"\";\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'bcdf\\nghjklm'\n    at test (/tmp/tmph0vm_281.js:19:12)\n   \
    \ at Object.<anonymous> (/tmp/tmph0vm_281.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ 'bcdf\\nghjklm',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821609
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/ig, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821609
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text:\
    \ string): string {\n    return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821609
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821609
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text:\
    \ string): string {\n    return \"\";\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n'bcdf\\nghjklm'\n    at test (/tmp/tmp8_v40k73.js:19:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp8_v40k73.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ 'bcdf\\nghjklm',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821609
- exit_code: 1
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text:\
    \ string): string {\n    var vowels = \"aeiou\";\n    var result = \"\";\n   \
    \ var i = 0;\n    var c = text.charAt(i);\n    while (i < text.length) {\n   \
    \     if (vowels.indexOf(c) < 0) {\n            result += c;\n        }\n    \
    \    i += 1;\n        c = text.charAt(i);\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n \
    \ assert.deepEqual(candidate(\"fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"\
    eeeee\"),\"\");\n  assert.deepEqual(candidate(\"acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'cBAA'\n\nshould\
    \ loosely deep-equal\n\n'cB'\n    at test (/tmp/tmpa9ujypjl.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpa9ujypjl.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'cBAA',\n\
    \  expected: 'cB',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821609
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text:\
    \ string): string {\n    let newString: string = text.replace(/[aeiou]/ig,'');\n\
    \    return newString;\n}\n\nconsole.log(remove_vowels(\"abcdef\"));\nconsole.log(remove_vowels(\"\
    \"));\nconsole.log(remove_vowels(\"zbcd\"));\nconsole.log(remove_vowels(\"aaBAA\"\
    ));\nconsole.log(remove_vowels(\"aaaaa\"));\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_vowels;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"abcdef\\\
    nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"fdcb\"\
    );\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bcdf


    zbcd

    B


    '
  timestamp: 1659821609
- exit_code: 0
  program: "//remove_vowels is a function that takes string and returns string without\
    \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
    )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
    aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text:\
    \ string): string {\n  return text.replace(/[aeiou]/gi, '');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"abcdef\\nghijklm\"),\"bcdf\\nghjklm\");\n  assert.deepEqual(candidate(\"\
    fedcba\"),\"fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
    acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
    ybcd\"),\"ybcd\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821609

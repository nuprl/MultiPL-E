language: ts
name: HumanEval_71_triangle_area
results:
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  const s =\
    \ (a + b + c) / 2;\n  return (s * (s - a) * (s - b) * (s - c)) ** 0.5;\n}\n\n\
    console.log(triangle_area(3, 4, 5));\nconsole.log(triangle_area(1, 2, 10));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpgco9l2_h.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgco9l2_h.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    NaN

    '
  timestamp: 1660333671
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  // TypeScript\
    \ arrays\n  const sides: number[] = [a, b, c];\n  sides.sort((a, b) => a - b);\n\
    \n  if (sides[0] + sides[1] > sides[2]) {\n    const p = (a + b + c) / 2;\n  \
    \  return Math.sqrt(p * (p - a) * (p - b) * (p - c));\n  } else {\n    return\
    \ -1;\n  }\n}\n\nconsole.log(triangle_area(3, 4, 5));\nconsole.log(triangle_area(1,\
    \ 2, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpei99s_ac.js:30:12)\n\
    \    at Object.<anonymous> (/tmp/tmpei99s_ac.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    -1

    '
  timestamp: 1660333671
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let sorted\
    \ = [a, b, c].sort((x, y) => x - y);\n  let [c1, c2, c3] = sorted;\n  if (c3 >=\
    \ c1 + c2) {\n    return -1;\n  }\n  let s = (c1 + c2 + c3) / 2;\n  return Math.sqrt(s\
    \ * (s - c1) * (s - c2) * (s - c3));\n}\n\nconsole.log(triangle_area(3, 4, 5));\n\
    console.log(triangle_area(1, 2, 10));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmp56o0xk3d.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp56o0xk3d.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    -1

    '
  timestamp: 1660333671
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    return\
    \ 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpv5umi5i7.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpv5umi5i7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333671
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b <= c || a + c <= b || b + c <= a) {\n        return -1;\n    }\n    const\
    \ halfPerimeter = (a + b + c) / 2;\n    return Math.sqrt(halfPerimeter * (halfPerimeter\
    \ - a) * (halfPerimeter - b) * (halfPerimeter - c));\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpzg5mq19p.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzg5mq19p.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333671
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let p =\
    \ (a + b + c) / 2;\n    let result = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n\
    \    return result > 0 ? +result.toFixed(2) : -1;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333671
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    // we need\
    \ to calculate half of the perimeter\n    let p = (a + b + c) / 2;\n    // then\
    \ apply the formula\n    let area = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n\
    \    // if the triangle is valid\n    if (area > 0) {\n        // return the rounded\
    \ answer\n        return Number(area.toFixed(2));\n    }\n    // otherwise return\
    \ -1\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333671
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    // write\
    \ your code here\n    return 0;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmptl0jheci.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptl0jheci.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333671
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let res =\
    \ -1;\n  if (a + b > c && a + c > b && b + c > a) {\n    res = Math.round(100\
    \ * Math.sqrt((a + b + c) * (a + b - c) * (a + c - b) * (b + c - a)) / 4) / 100;\n\
    \  }\n  return res;\n}\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333671
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let p = (a\
    \ + b + c) / 2;\n  let result = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n\
    \  if (result == 0) {\n    return -1;\n  } else {\n    return +result.toFixed(2);\n\
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpzmixdab_.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzmixdab_.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333671
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area\
    \ = -1;\n    let s = (a + b + c) / 2;\n    if (s > a && s > b && s > c) {\n  \
    \      area = Number(Math.sqrt(s * (s - a) * (s - b) * (s - c)).toFixed(2));\n\
    \    }\n    return area;\n}\n\nconsole.log(triangle_area(3, 4, 5)); //6.0\nconsole.log(triangle_area(1,\
    \ 2, 10)); //-1\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660333671
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let p = (a\
    \ + b + c) / 2;\n  let S = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n  return\
    \ S < 0 ? -1 : S;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpnu7s5c9p.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnu7s5c9p.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333671
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let sum:\
    \ number = a + b + c;\n    if (sum - Math.max(a, b, c) > Math.max(a, b, c)) {\n\
    \        let s: number = (a + b + c) / 2;\n        return Math.sqrt(s * (s - a)\
    \ * (s - b) * (s - c));\n    }\n    return -1;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpd8ww4uun.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd8ww4uun.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333671
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let p =\
    \ (a + b + c) / 2;\n    if (p > a && p > b && p > c) {\n        return Number((Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))).toFixed(2));\n    }\n    return -1;\n}\n\nexport\
    \ {\n    is_vowel,\n    add_length,\n    is_prime,\n    to_camel_case,\n    triangle_area\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp01hed3mx.ts(20,5): error TS2304: Cannot find name ''is_vowel''.

    ../../../../tmp/tmp01hed3mx.ts(21,5): error TS2304: Cannot find name ''add_length''.

    ../../../../tmp/tmp01hed3mx.ts(22,5): error TS2304: Cannot find name ''is_prime''.

    ../../../../tmp/tmp01hed3mx.ts(23,5): error TS2304: Cannot find name ''to_camel_case''.

    '
  timestamp: 1660333671
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if(a+b >\
    \ c && a+c > b && b+c > a){\n    return Math.round(Math.sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4\
    \ * 100)/100;\n  }\n  return -1;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333671
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a + b\
    \ > c && a + c > b && b + c > a) {\n    return +(a * b / 2).toFixed(2);\n  } else\
    \ {\n    return -1;\n  }\n}\nconsole.log(triangle_area(3, 4, 5));\nconsole.log(triangle_area(1,\
    \ 2, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely\
    \ deep-equal\n\n8.18\n    at test (/tmp/tmppk54ci6h.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppk54ci6h.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    -1

    '
  timestamp: 1660333671
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let [side1,\
    \ side2, side3] = [a, b, c];\n  let result = Math.round(\n    0.5 * Math.abs(side1\
    \ * (side2 - side3) + side2 * (side3 - side1) + side3 * (side1 - side2)) * 100\n\
    \  ) / 100;\n  return side1 + side2 > side3 && side1 + side3 > side2 && side2\
    \ + side3 > side1 ? result : -1;\n}\nconsole.log(triangle_area(3, 4, 5));\nconsole.log(triangle_area(1,\
    \ 2, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp5_21115j.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5_21115j.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    -1

    '
  timestamp: 1660333671
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    // write\
    \ your solution here\n    if (a + b > c && a + c > b && b + c > a) {\n       \
    \ return Math.round(100 * Math.sqrt((a + b + c) * (a + b - c) * (a + c - b) *\
    \ (b + c - a)) / 4) / 100;\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333671
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let s =\
    \ (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    return area;\n}\n\nexport { triangle_area };\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: "(node:17476) Warning: To load an ES module, set \"type\": \"module\" in\
    \ the package.json or use the .mjs extension.\n(Use `node --trace-warnings ...`\
    \ to show where the warning was created)\n/tmp/tmp59oykrs5.js:16\nexport { triangle_area\
    \ };\n^^^^^^\n\nSyntaxError: Unexpected token 'export'\n    at Object.compileFunction\
    \ (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333671
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b > c && a + c > b && b + c > a) {\n        const p = (a + b + c) / 2;\n   \
    \     return Math.sqrt(p * (p - a) * (p - b) * (p - c));\n    }\n    return -1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpofb5hmrn.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpofb5hmrn.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333671
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area:\
    \ number;\n    if (a > b + c || b > a + c || c > a + b) {\n        area = -1;\n\
    \    } else {\n        let s = (a + b + c) / 2;\n        area = Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n    }\n    return area;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmplsixnkrp.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmplsixnkrp.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333671
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b > c && a + c > b && b + c > a) {\n        let s = (a + b + c) / 2;\n     \
    \   return Number((Math.sqrt(s * (s - a) * (s - b) * (s - c))).toFixed(2));\n\
    \    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333671
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if ((a\
    \ + b) > c && (a + c) > b && (b + c) > a) {\n        return +(0.5 * (a * b + b\
    \ * c + a * c)).toFixed(2);\n    } else {\n        return -1;\n    }\n}\n\nconsole.log(triangle_area(3,\
    \ 4, 5));\nconsole.log(triangle_area(1, 2, 10));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n23.5\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp0vigrynv.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0vigrynv.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 23.5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '23.5

    -1

    '
  timestamp: 1660333671
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if ((a +\
    \ b) > c && (a + c) > b && (b + c) > a) {\n    return Math.round(100 * Math.sqrt((a\
    \ + b + c) * (a + b - c) * (a + c - b) * (b + c - a)) / 4) / 100;\n  } else {\n\
    \    return -1;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333675
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if(a +\
    \ b <= c) return -1;\n    if(a + c <= b) return -1;\n    if(b + c <= a) return\
    \ -1;\n    return Number(((a + b + c) / 2).toFixed(2));\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.5\n\nshould\
    \ loosely deep-equal\n\n8.18\n    at test (/tmp/tmp9801qjpu.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9801qjpu.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333674
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a + b\
    \ <= c || a + c <= b || b + c <= a) {\n    return -1;\n  }\n  const s = (a + b\
    \ + c) / 2;\n  return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmp54_itjbg.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp54_itjbg.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333675
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  const s =\
    \ (a + b + c) / 2;\n  const area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \  if (isNaN(area)) {\n    return -1;\n  }\n  return Math.round(area * 100) /\
    \ 100;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n-1\n    at test (/tmp/tmpxshys7hd.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxshys7hd.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333675
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let p =\
    \ (a + b + c) / 2;\n    let area = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n\
    \    if (a + b > c && a + c > b && b + c > a) {\n        return area;\n    } else\
    \ {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmp54pvrrp5.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp54pvrrp5.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333675
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let p =\
    \ (a + b + c) / 2;\n    if (p > a && p > b && p > c) {\n        return Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c));\n    }\n    return -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpet0g1_1p.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpet0g1_1p.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333675
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area\
    \ = 0;\n    let s = (a + b + c) / 2;\n    if (s > a && s > b && s > c) {\n   \
    \     area = Math.sqrt(s * (s - a) * (s - b) * (s - c))\n    } else {\n      \
    \  area = -1;\n    }\n    return area.toFixed(2);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp4j0v9iz0.ts(19,5): error TS2322: Type ''string'' is
    not assignable to type ''number''.

    '
  timestamp: 1660333674
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let sum\
    \ = a + b + c;\n    if (sum - Math.max(a, b, c) > Math.max(a, b, c)) {\n     \
    \   let s = sum / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    }\n    return -1;\n}\nconsole.log(triangle_area(3, 4, 5));\nconsole.log(triangle_area(1,\
    \ 2, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpagtxhugo.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpagtxhugo.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    -1

    '
  timestamp: 1660333675
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  const [longest,\
    \ shortest1, shortest2] = [a, b, c].sort((a, b) => b - a);\n  if (longest < shortest1\
    \ + shortest2) {\n    return Number((Math.sqrt(longest * (longest - shortest1)\
    \ * (longest - shortest2) * (shortest1 - shortest2)) / 4).toFixed(2));\n  }\n\
    \  return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.79\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpn4ak5r2a.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn4ak5r2a.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.79,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333675
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let maxSide\
    \ = Math.max(a, b, c);\n  let area = (a + b + c - maxSide) * maxSide / 2;\n  return\
    \ area > 0 ? Number(area.toFixed(2)) : -1;\n}\n\nconsole.log(triangle_area(3,\
    \ 4, 5));\nconsole.log(triangle_area(1, 2, 10));\nconsole.log(triangle_area(2,\
    \ 2, 2));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n17.5\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmppsgs87at.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppsgs87at.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 17.5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '17.5

    15

    4

    '
  timestamp: 1660333675
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    //valid\
    \ triangle\n    if (a + b > c && a + c > b && b + c > a) {\n        return (a\
    \ + b + c) / 2;\n    }\n    else return -1;\n}\n\nconsole.log(triangle_area(1,\
    \ 2, 10));\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.5\n\nshould\
    \ loosely deep-equal\n\n8.18\n    at test (/tmp/tmpzv_2dnd9.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpzv_2dnd9.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '-1

    '
  timestamp: 1660333675
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b > c && a + c > b && b + c > a) {\n        let sp = (a + b + c) / 2;\n    \
    \    let a = Math.sqrt(sp * (sp - a) * (sp - b) * (sp - c));\n        return +a.toFixed(2);\n\
    \    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpb4lirkhb.ts(13,19): error TS2448: Block-scoped variable
    ''a'' used before its declaration.

    ../../../../tmp/tmpb4lirkhb.ts(14,38): error TS2448: Block-scoped variable ''a''
    used before its declaration.

    '
  timestamp: 1660333675
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    const p\
    \ = (a + b + c) / 2;\n    return (Math.sqrt(p * (p - a) * (p - b) * (p - c))).toFixed(2);\n\
    }\n\nconsole.log(triangle_area(3, 4, 5));\nconsole.log(triangle_area(1, 2, 10));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpz2_5z388.ts(13,5): error TS2322: Type ''string'' is
    not assignable to type ''number''.

    '
  timestamp: 1660333675
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    const [x,\
    \ y, z] = [a, b, c].sort();\n    return x + y > z ? Math.round(Math.sqrt(z * (z\
    \ - x) * (z - y) * (z - y)) * 100) / 100 : -1;\n}\n\nconsole.log(triangle_area(3,\
    \ 4, 5));\nconsole.log(triangle_area(1, 2, 10));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.16\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp0kma0pmg.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0kma0pmg.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.16,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '3.16

    11.31

    '
  timestamp: 1660333675
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  //find largest\
    \ side\n  let largest = Math.max(a, b, c);\n  let remaining = a + b + c - largest;\n\
    \  if (remaining <= largest) {\n    return -1;\n  }\n  let s = (a + b + c) / 2;\n\
    \  return Number((Math.sqrt(s * (s - a) * (s - b) * (s - c))).toFixed(2));\n}\n\
    \nconsole.log(triangle_area(3, 4, 5));\nconsole.log(triangle_area(1, 2, 10));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660333675
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let s = (a\
    \ + b + c) / 2;\n  let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n  if\
    \ (s - a < 0 || s - b < 0 || s - c < 0) {\n    return -1;\n  } else {\n    return\
    \ +area.toFixed(2);\n  }\n}\n\nconsole.log(triangle_area(3, 4, 5));\nconsole.log(triangle_area(1,\
    \ 2, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n-1\n    at test (/tmp/tmphpzpk6jl.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphpzpk6jl.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    -1

    '
  timestamp: 1660333675
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  //code...\n\
    \  let area: number = (a + b + c) / 2;\n  if (area > a && area > b && area > c)\
    \ {\n    return Math.round(Math.sqrt(area * (area - a) * (area - b) * (area -\
    \ c)) * 100) / 100;\n  } else {\n    return -1;\n  }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333675
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  return 0;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmppup6n281.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppup6n281.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333675
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let condition\
    \ = (a + b > c) && (a + c > b) && (b + c > a);\n  return condition ? (a + b +\
    \ c) / 2 : -1;\n}\n\nconsole.log(triangle_area(3, 4, 5));\nconsole.log(triangle_area(1,\
    \ 2, 10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.5\n\nshould\
    \ loosely deep-equal\n\n8.18\n    at test (/tmp/tmp4ssiapb_.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4ssiapb_.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    -1

    '
  timestamp: 1660333675
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    return\
    \ 0;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpf0ror6xa.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpf0ror6xa.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333675
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  const s =\
    \ (a + b + c) / 2;\n  const area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \  if (Number.isNaN(area)) {\n    return -1;\n  }\n  return area;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpbq182kfj.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpbq182kfj.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333675
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b > c && a + c > b && b + c > a) {\n        return Math.round(1 / 2 * (a * b\
    \ + b * c + a * c) * 100) / 100;\n    } else {\n        return -1;\n    }\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n23.5\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpxn_c6o40.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxn_c6o40.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 23.5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333675
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  return -1;\n\
    }\n\nexport { triangle_area };\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: "(node:17830) Warning: To load an ES module, set \"type\": \"module\" in\
    \ the package.json or use the .mjs extension.\n(Use `node --trace-warnings ...`\
    \ to show where the warning was created)\n/tmp/tmpqtbuoel2.js:14\nexport { triangle_area\
    \ };\n^^^^^^\n\nSyntaxError: Unexpected token 'export'\n    at Object.compileFunction\
    \ (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333675
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let s =\
    \ (a + b + c) / 2\n    let A = Math.sqrt(s * (s - a) * (s - b) * (s - c))\n  \
    \  if (A > 0) {\n        return A\n    } else {\n        return -1\n    }\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpreg8z5de.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpreg8z5de.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333678
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if(a +\
    \ b > c && a + c > b && b + c > a){\n        return Math.round(.5 * a * b * 100)\
    \ / 100;\n    } else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely\
    \ deep-equal\n\n8.18\n    at test (/tmp/tmp9iduywwy.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9iduywwy.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333678
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  return -1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpwwopsws9.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwwopsws9.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333678
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b > c && a + c > b && b + c > a) {\n        let area = ((a + b + c) / 2) * (((a\
    \ + b + c) / 2) - a) * (((a + b + c) / 2) - b) * (((a + b + c) / 2) - c);\n  \
    \      let height = Math.sqrt(area);\n        let finalArea = (height * (a * b\
    \ * c)) / (4 * area);\n        return finalArea.toFixed(2);\n    } else {\n  \
    \      return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp6h0hi421.ts(16,9): error TS2322: Type ''string'' is
    not assignable to type ''number''.

    '
  timestamp: 1660333678
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let s = (a\
    \ + b + c) / 2;\n  let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n  return\
    \ area < 0 ? -1 : area;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpyp9hbhom.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyp9hbhom.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333678
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let s = 0.5\
    \ * (a + b + c);\n  let d = (s - a) * (s - b) * (s - c);\n  let area = Math.sqrt(s\
    \ * d);\n  if (d < 0) {\n    return -1;\n  } else {\n    return Number(area.toFixed(2));\n\
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n-1\n    at test (/tmp/tmphrs1sc54.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphrs1sc54.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333678
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a + b\
    \ > c && a + c > b && b + c > a) {\n    const p = (a + b + c) / 2;\n    return\
    \ Math.sqrt(p * (p - a) * (p - b) * (p - c));\n  }\n  return -1;\n}\n\nimport\
    \ { expect } from \"chai\";\nimport \"mocha\";\n\ndescribe(\"triangle_area\",\
    \ () => {\n  it(\"should return -1 when invalid triangle\", () => {\n    expect(triangle_area(1,\
    \ 2, 10)).to.equal(-1);\n  });\n  it(\"should return 6 when valid triangle\",\
    \ () => {\n    expect(triangle_area(3, 4, 5)).to.equal(6);\n  });\n});\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpmwsoh7qf.ts(19,24): error TS2792: Cannot find module
    ''chai''. Did you mean to set the ''moduleResolution'' option to ''node'', or
    to add aliases to the ''paths'' option?

    ../../../../tmp/tmpmwsoh7qf.ts(22,1): error TS2582: Cannot find name ''describe''.
    Do you need to install type definitions for a test runner? Try `npm i --save-dev
    @types/jest` or `npm i --save-dev @types/mocha`.

    ../../../../tmp/tmpmwsoh7qf.ts(23,3): error TS2582: Cannot find name ''it''. Do
    you need to install type definitions for a test runner? Try `npm i --save-dev
    @types/jest` or `npm i --save-dev @types/mocha`.

    ../../../../tmp/tmpmwsoh7qf.ts(26,3): error TS2582: Cannot find name ''it''. Do
    you need to install type definitions for a test runner? Try `npm i --save-dev
    @types/jest` or `npm i --save-dev @types/mocha`.

    '
  timestamp: 1660333678
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a <=\
    \ 0 || b <= 0 || c <= 0) {\n    return -1;\n  }\n  let s = (a + b + c) / 2;\n\
    \  let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n  if (isNaN(area))\
    \ {\n    return -1;\n  }\n  return Number(area.toFixed(2));\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n-1\n    at test (/tmp/tmp0qlbppxu.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0qlbppxu.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333678
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a + b\
    \ > c && a + c > b && b + c > a) {\n    const s = (a + b + c) / 2;\n    return\
    \ +Math.sqrt(s * (s - a) * (s - b) * (s - c)).toFixed(2);\n  } else {\n    return\
    \ -1;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333678
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < b\
    \ + c && b < a + c && c < a + b) {\n    return parseFloat(((a + b + c) / 2).toFixed(2));\n\
    \  } else {\n    return -1;\n  }\n}\n\nconsole.log(triangle_area(3, 4, 5));\n\
    console.log(triangle_area(1, 2, 10));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.5\n\nshould\
    \ loosely deep-equal\n\n8.18\n    at test (/tmp/tmpn_f_bzqp.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpn_f_bzqp.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    -1

    '
  timestamp: 1660333679
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b <= c || a + c <= b || b + c <= a) {\n        return -1;\n    } else {\n  \
    \      const s = (a + b + c) / 2;\n        return Math.round(Math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c)) * 100) / 100;\n    }\n}\n\ndescribe(\"triangle_area\"\
    , function () {\n    it(\"triangle_area(3, 4, 5)\", function () {\n        assert.strictEqual(triangle_area(3,\
    \ 4, 5), 6);\n    });\n    it(\"triangle_area(1, 2, 10)\", function () {\n   \
    \     assert.strictEqual(triangle_area(1, 2, 10), -1);\n    });\n    it(\"triangle_area(6,\
    \ 6, 6)\", function () {\n        assert.strictEqual(triangle_area(6, 6, 6), 15.59);\n\
    \    });\n    it(\"triangle_area(3, 4, 6)\", function () {\n        assert.strictEqual(triangle_area(3,\
    \ 4, 6), 5.33);\n    });\n    it(\"triangle_area(2, 3, 2)\", function () {\n \
    \       assert.strictEqual(triangle_area(2, 3, 2), 1.98);\n    });\n    it(\"\
    triangle_area(5, 7, 3)\", function () {\n        assert.strictEqual(triangle_area(5,\
    \ 7, 3), -1);\n    });\n    it(\"triangle_area(2, 3, 4)\", function () {\n   \
    \     assert.strictEqual(triangle_area(2, 3, 4), 2.90);\n    });\n    it(\"triangle_area(5,\
    \ 4, 3)\", function () {\n        assert.strictEqual(triangle_area(5, 4, 3), 6);\n\
    \    });\n    it(\"triangle_area(10, 12, 8)\", function () {\n        assert.strictEqual(triangle_area(10,\
    \ 12, 8), 41.62);\n    });\n    it(\"triangle_area(\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpdvrsa477.ts(48,23): error TS1002: Unterminated string
    literal.

    ../../../../tmp/tmpdvrsa477.ts(49,1): error TS1005: '','' expected.

    ../../../../tmp/tmpdvrsa477.ts(49,9): error TS1005: '','' expected.

    ../../../../tmp/tmpdvrsa477.ts(66,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660333678
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area:\
    \ number = 0;\n    // add if statement\n    if (a + b > c && a + c > b && b +\
    \ c > a) {\n        let s: number = (a + b + c) / 2;\n        area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    } else {\n        area = -1;\n    }\n \
    \   return area;\n}\nconsole.log(triangle_area(3, 4, 5));\nconsole.log(triangle_area(1,\
    \ 2, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmp20llcn1p.js:30:12)\n\
    \    at Object.<anonymous> (/tmp/tmp20llcn1p.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    -1

    '
  timestamp: 1660333679
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let p = (a\
    \ + b + c) / 2;\n  let result = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n\
    \  return (isNaN(result) || result < 0) ? -1 : result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmp376c3urw.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmp376c3urw.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333679
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if ((a\
    \ + b > c) && (a + c > b) && (b + c > a)) {\n        return +(0.5 * (a * b + b\
    \ * c + a * c)).toFixed(2);\n    } else {\n        return -1;\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n23.5\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpyehunrsr.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyehunrsr.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 23.5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333678
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    return\
    \ a + b > c && a + c > b && b + c > a ?\n        Math.round(Math.sqrt((a + b +\
    \ c) * (a + b - c) * (a + c - b) * (b + c - a)) * 100) / 100 : -1;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n24\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpcame7clg.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcame7clg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 24,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333679
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b > c && a + c > b && b + c > a) {\n        let s = (a + b + c) / 2;\n     \
    \   return Number((Math.sqrt(s * (s - a) * (s - b) * (s - c))).toFixed(2));\n\
    \    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333671
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let area:\
    \ number = -1;\n  if (a + b > c && a + c > b && b + c > a) {\n    const s: number\
    \ = (a + b + c) / 2;\n    area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \  }\n  return Math.round(area * 100) / 100;\n}\n\nconsole.log(triangle_area(4,\
    \ 3, 5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    '
  timestamp: 1660333679
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a + b\
    \ > c && a + c > b && b + c > a) {\n    return +(0.5 * (a * b + b * c + a * c)).toFixed(2);\n\
    \  }\n  return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n23.5\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpd45qgdbp.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpd45qgdbp.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 23.5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333582
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b > c && a + c > b && b + c > a) {\n        const p = (a + b + c) / 2;\n   \
    \     return Math.sqrt(p * (p - a) * (p - b) * (p - c));\n    }\n    return -1;\n\
    }\n\nconsole.log(triangle_area(3, 4, 5));\nconsole.log(triangle_area(1, 2, 10));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmp0or9dmsy.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0or9dmsy.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    -1

    '
  timestamp: 1660333679
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    //return\
    \ -1;\n    //return 6.0;\n    let s: number = (a + b + c) / 2;\n    let area:\
    \ number = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpok0p5s5t.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpok0p5s5t.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333679
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a <=\
    \ 0 || b <= 0 || c <= 0) {\n    return -1;\n  }\n  let perimeter = (a + b + c)\
    \ / 2;\n  let area = Math.sqrt(\n    perimeter * (perimeter - a) * (perimeter\
    \ - b) * (perimeter - c)\n  );\n  return Number(area.toFixed(2));\n}\n\nconsole.log(triangle_area(3,\
    \ 4, 5));\nconsole.log(triangle_area(1, 2, 10));\nconsole.log(triangle_area(1,\
    \ -2, 3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpj_la9ya7.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpj_la9ya7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    NaN

    -1

    '
  timestamp: 1660333679
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  // Complete\
    \ this function\n  let p = (a + b + c) / 2;\n  if (p - a <= 0 || p - b <= 0 ||\
    \ p - c <= 0) {\n    return -1;\n  }\n  return Math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c));\n}\n\nexport function main(): void {\n  let input: string = readline();\n\
    \  let tokens: string[] = input.split(\" \");\n  let a: number = parseInt(tokens[0]);\n\
    \  let b: number = parseInt(tokens[1]);\n  let c: number = parseInt(tokens[2]);\n\
    \  console.log(triangle_area(a, b, c));\n}\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpl173mcm1.ts(21,23): error TS2304: Cannot find name ''readline''.

    '
  timestamp: 1660333679
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a + b\
    \ > c && a + c > b && b + c > a) {\n    let s = (a + b + c) / 2;\n    return Math.round(Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)) * 100) / 100;\n  } else {\n    return -1;\n \
    \ }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333679
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let s =\
    \ (a + b + c) / 2\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \    return isNaN(area) ? -1 : area\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpassmobb_.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpassmobb_.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333679
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let p = (a\
    \ + b + c) / 2;\n  let s = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n  if (s\
    \ > 0) {\n    return Math.round(s * 100) / 100;\n  } else {\n    return -1;\n\
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333679
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if ((a +\
    \ b > c) && (a + c > b) && (b + c > a)) {\n    let s = (a + b + c) / 2;\n    return\
    \ Math.round(Math.sqrt(s * (s - a) * (s - b) * (s - c)) * 100) / 100;\n  } else\
    \ {\n    return -1;\n  }\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333681
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let s = (a\
    \ + b + c) / 2;\n  let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n  return\
    \ area < 0 ? -1 : area;\n}\n\nconsole.log(triangle_area(3, 4, 5));\nconsole.log(triangle_area(1,\
    \ 2, 10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmp2zwhs5p_.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2zwhs5p_.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    NaN

    '
  timestamp: 1660333681
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let s =\
    \ (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    return (area) ? area : -1;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpztp1k95o.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpztp1k95o.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333682
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let p = (a\
    \ + b + c) / 2;\n  let s = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n  return\
    \ s && +s.toFixed(2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpss30od_7.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpss30od_7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333681
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (is_valid_triangle(a,\
    \ b, c)) {\n        return Math.sqrt(get_semiperimeter(a, b, c) * (get_semiperimeter(a,\
    \ b, c) - a) * (get_semiperimeter(a, b, c) - b) * (get_semiperimeter(a, b, c)\
    \ - c));\n    } else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmppb_3573f.ts(12,9): error TS2304: Cannot find name ''is_valid_triangle''.

    ../../../../tmp/tmppb_3573f.ts(13,26): error TS2304: Cannot find name ''get_semiperimeter''.

    ../../../../tmp/tmppb_3573f.ts(13,56): error TS2304: Cannot find name ''get_semiperimeter''.

    ../../../../tmp/tmppb_3573f.ts(13,91): error TS2304: Cannot find name ''get_semiperimeter''.

    ../../../../tmp/tmppb_3573f.ts(13,126): error TS2304: Cannot find name ''get_semiperimeter''.

    '
  timestamp: 1660333681
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    //fill\
    \ in code here.\n    let perimeter = (a + b + c) / 2;\n    let area = Math.sqrt(perimeter\
    \ * (perimeter - a) * (perimeter - b) * (perimeter - c));\n    if (area === 0)\
    \ {\n        return -1;\n    }\n    else {\n        return area;\n    }\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpewxkp4er.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpewxkp4er.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333682
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let result\
    \ = -1\n    if (a + b > c && a + c > b && b + c > a) {\n        let p = (a + b\
    \ + c) / 2\n        result = Math.sqrt(p * (p - a) * (p - b) * (p - c))\n    }\n\
    \    return Math.round(result * 100) / 100\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333682
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b > c && a + c > b && b + c > a) {\n        const s = (a + b + c) / 2;\n   \
    \     return Math.sqrt(s * (s - a) * (s - b) * (s - c)).toFixed(2);\n    }\n \
    \   return -1;\n}\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpenp8utlq.ts(14,9): error TS2322: Type ''string'' is
    not assignable to type ''number''.

    '
  timestamp: 1660333682
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let s =\
    \ (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    return area > 0 ? Math.round(area * 100) / 100 : -1;\n}\nconsole.log(triangle_area(1,\
    \ 2, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-1

    '
  timestamp: 1660333682
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  // Write\
    \ your code here...\n  let t: number = triangle(a, b, c);\n  return t;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpj7rwrs71.ts(13,19): error TS2304: Cannot find name ''triangle''.

    '
  timestamp: 1660333682
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    // your\
    \ code here\n    if (a + b > c && a + c > b && b + c > a) {\n        return (a\
    \ + b + c) / 2;\n    } else {\n        return -1;\n    }\n}\nconsole.log(triangle_area(3,\
    \ 4, 5));\nconsole.log(triangle_area(1, 2, 10));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.5\n\nshould\
    \ loosely deep-equal\n\n8.18\n    at test (/tmp/tmpf35eoaai.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpf35eoaai.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    -1

    '
  timestamp: 1660333682
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let s =\
    \ (a + b + c) / 2\n    let a2 = Math.sqrt(s * (s - a) * (s - b) * (s - c))\n \
    \   return (a2 == a2) ? Number(a2.toFixed(2)) : -1\n}\n\nconsole.log(triangle_area(3,\
    \ 4, 5))\nconsole.log(triangle_area(1, 2, 10))\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n-1\n    at test (/tmp/tmpt6jkkke2.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpt6jkkke2.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    -1

    '
  timestamp: 1660333682
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a + b\
    \ > c && a + c > b && b + c > a) {\n    return Number((0.5 * a * b).toFixed(2));\n\
    \  }\n  return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely\
    \ deep-equal\n\n8.18\n    at test (/tmp/tmprfi9f6b6.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprfi9f6b6.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333682
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    // your\
    \ code here\n    let x: number = (a + b + c) / 2;\n    if (x < a || x < b || x\
    \ < c) {\n        return -1;\n    }\n    return Math.round(Math.sqrt(x * (x -\
    \ a) * (x - b) * (x - c)) * 100) / 100;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n-1\n    at test (/tmp/tmpt1oj79bo.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpt1oj79bo.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333682
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a + b\
    \ <= c || a + c <= b || b + c <= a) {\n    return -1;\n  }\n  const s = (a + b\
    \ + c) / 2;\n  return Number((Math.sqrt(s * (s - a) * (s - b) * (s - c))).toFixed(2));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333682
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let area\
    \ = -1;\n  const sorted = [a, b, c].sort((x, y) => y - x);\n  if (sorted[0] <\
    \ sorted[1] + sorted[2]) {\n    area = (a + b + c) / 2;\n  }\n  return Number(area.toFixed(2));\n\
    }\n\nconsole.log(triangle_area(1, 2, 10));\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.5\n\nshould\
    \ loosely deep-equal\n\n8.18\n    at test (/tmp/tmpdo230z3b.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpdo230z3b.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '-1

    '
  timestamp: 1660333682
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    const s\
    \ = (a + b + c) / 2;\n    const area = Math.sqrt(s * (s - a) * (s - b) * (s -\
    \ c));\n    return Number.isNaN(area) ? -1 : area;\n}\n\nexport default triangle_area;\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: "(node:18415) Warning: To load an ES module, set \"type\": \"module\" in\
    \ the package.json or use the .mjs extension.\n(Use `node --trace-warnings ...`\
    \ to show where the warning was created)\n/tmp/tmpauahjs9g.js:16\nexport default\
    \ triangle_area;\n^^^^^^\n\nSyntaxError: Unexpected token 'export'\n    at Object.compileFunction\
    \ (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333682
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < b\
    \ + c && b < a + c && c < a + b) {\n    let semiP = (a + b + c) / 2;\n    let\
    \ area = Math.sqrt(semiP * (semiP - a) * (semiP - b) * (semiP - c));\n    return\
    \ Number(area.toFixed(2));\n  } else {\n    return -1;\n  }\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333682
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area:\
    \ number = -1;\n    if (a+b > c && a+c > b && b+c > a) {\n        let s: number\
    \ = (a+b+c)/2;\n        area = Math.sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    return\
    \ area;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmp0v3_0q2_.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0v3_0q2_.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333682
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let longest\
    \ = Math.max(a, b, c);\n  if (longest > a + b + c - longest) {\n    return -1;\n\
    \  } else {\n    let s = (a + b + c) / 2;\n    return +Math.sqrt(s * (s - a) *\
    \ (s - b) * (s - c)).toFixed(2);\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n-1\n    at test (/tmp/tmpn81pwyu5.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn81pwyu5.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333683
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    const [min,\
    \ mid, max] = [a, b, c].sort((x, y) => x - y);\n    if (min + mid > max) {\n \
    \       return 0.5 * min * Math.sqrt(mid ** 2 - (min ** 2 / 4));\n    }\n    return\
    \ -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5.562148865321747\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpkswduzf5.js:21:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpkswduzf5.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5.562148865321747,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333683
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let [s1,\
    \ s2, s3] = [a, b, c].sort((a, b) => a - b);\n  if (s1 + s2 > s3) {\n    return\
    \ ((s1 + s2) / 2) * Math.sqrt(Math.pow(s3, 2) - Math.pow((s1 - s2) / 2, 2));\n\
    \  }\n  return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n17.41228014936585\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpmcob1dcy.js:21:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpmcob1dcy.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 17.41228014936585,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333683
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  const s =\
    \ (a + b + c) / 2;\n  const area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \  return area > 0 ? area : -1;\n}\n\ndescribe('simple test', () => {\n  it('invalid\
    \ triangle', () => {\n    expect(triangle_area(1, 2, 10)).toEqual(-1);\n  });\n\
    \  it('valid triangle', () => {\n    expect(triangle_area(3, 4, 5)).toEqual(6);\n\
    \  });\n});\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpx2pmvrhm.ts(17,1): error TS2582: Cannot find name ''describe''.
    Do you need to install type definitions for a test runner? Try `npm i --save-dev
    @types/jest` or `npm i --save-dev @types/mocha`.

    ../../../../tmp/tmpx2pmvrhm.ts(18,3): error TS2582: Cannot find name ''it''. Do
    you need to install type definitions for a test runner? Try `npm i --save-dev
    @types/jest` or `npm i --save-dev @types/mocha`.

    ../../../../tmp/tmpx2pmvrhm.ts(19,5): error TS2304: Cannot find name ''expect''.

    ../../../../tmp/tmpx2pmvrhm.ts(21,3): error TS2582: Cannot find name ''it''. Do
    you need to install type definitions for a test runner? Try `npm i --save-dev
    @types/jest` or `npm i --save-dev @types/mocha`.

    ../../../../tmp/tmpx2pmvrhm.ts(22,5): error TS2304: Cannot find name ''expect''.

    '
  timestamp: 1660333682
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  // TODO\n\
    \  return 0\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp6ua1vo8o.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6ua1vo8o.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333684
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let A: number\
    \ = (a * b * c) / 2;\n  let sum: number = a + b + c;\n  let avg: number = sum\
    \ / 3;\n  let min = a;\n  let max = a;\n  if (b < min) {\n    min = b;\n  }\n\
    \  if (c < min) {\n    min = c;\n  }\n  if (b > max) {\n    max = b;\n  }\n  if\
    \ (c > max) {\n    max = c;\n  }\n  if (min + max < avg) {\n    return A;\n  }\
    \ else {\n    return -1;\n  }\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpg987m5i2.js:39:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpg987m5i2.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333685
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b > c && a + c > b && b + c > a) {\n        return Math.round(a * b / 2 * 100)\
    \ / 100;\n    } else {\n        return -1;\n    }\n}\nconsole.log(triangle_area(3,\
    \ 4, 5));\nconsole.log(triangle_area(1, 2, 10));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely\
    \ deep-equal\n\n8.18\n    at test (/tmp/tmptmvmp3tk.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptmvmp3tk.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    -1

    '
  timestamp: 1660333685
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    // your\
    \ code here\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmps3aomri8.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmps3aomri8.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333582
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area:\
    \ number;\n    if (a + b > c && a + c > b && b + c > a) {\n        let s: number\
    \ = (a + b + c) / 2;\n        area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    } else {\n        area = -1;\n    }\n    return area;\n}\n\nconsole.log(triangle_area(3,\
    \ 4, 5));\nconsole.log(triangle_area(1, 2, 10));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpqoi1ioe0.js:29:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqoi1ioe0.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    -1

    '
  timestamp: 1660333685
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let validTriangle\
    \ = ((a + b) > c) && ((a + c) > b) && ((b + c) > a);\n    if (validTriangle) {\n\
    \        let p = (a + b + c) / 2;\n        let area = Math.sqrt(p * (p - a) *\
    \ (p - b) * (p - c));\n        return Number(area.toFixed(2));\n    } else {\n\
    \        return -1;\n    }\n}\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333685
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let max =\
    \ Math.max(a, b, c);\n  let sum = a + b + c;\n  let area = sum - max;\n  if (area\
    \ <= max) {\n    return -1;\n  } else {\n    return +Math.sqrt(area * (area -\
    \ a) * (area - b) * (area - c)).toFixed(2);\n  }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n12.96\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpdpx83byi.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdpx83byi.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 12.96,\n \
    \ expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333685
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a + b\
    \ > c && a + c > b && b + c > a) {\n    return Number(((a + b + c) / 2 * (a +\
    \ b + c) / 2 - a * a - b * b - c * c).toFixed(2));\n  } else {\n    return -1;\n\
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-14\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpr9_c_u2b.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr9_c_u2b.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -14,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333501
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let s =\
    \ (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    return area.toFixed(2) === 'NaN' ? -1 : Number(area.toFixed(2));\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n-1\n    at test (/tmp/tmppa04rc87.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppa04rc87.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333685
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b > c && a + c > b && b + c > a) {\n        let s = (a + b + c) / 2;\n     \
    \   return parseFloat((Math.sqrt(s * (s - a) * (s - b) * (s - c))).toFixed(2));\n\
    \    }\n    return -1;\n}\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333686
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a > b\
    \ + c || b > a + c || c > a + b) {\n    return -1;\n  }\n  let s = (a + b + c)\
    \ / 2;\n  return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpxfyee89l.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxfyee89l.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333686
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a + b\
    \ > c && a + c > b && b + c > a) {\n    return Math.round(100 * Math.sqrt((a +\
    \ b + c) * (a + b - c) * (a + c - b) * (b + c - a)) / 4) / 100;\n  } else {\n\
    \    return -1;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333584
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let s =\
    \ (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    if (isNaN(area)) {\n        return -1;\n    }\n    return area;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmp6omvzs7g.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmp6omvzs7g.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333686
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let s =\
    \ (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    if (area <= 0) return -1;\n    return +area.toFixed(2);\n}\nconsole.log(triangle_area(3,\
    \ 4, 5));\nconsole.log(triangle_area(1, 2, 10));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpfth8qk7i.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfth8qk7i.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    NaN

    '
  timestamp: 1660333686
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let s = (a\
    \ + b + c) / 2;\n  let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n  return\
    \ area > 0 ? +area.toFixed(2) : -1;\n}\n\nconsole.log(triangle_area(3, 4, 5));\n\
    console.log(triangle_area(1, 2, 10));\nconsole.log(triangle_area(1, 2, 3));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    -1

    '
  timestamp: 1660333686
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a + b\
    \ > c && a + c > b && b + c > a) {\n    return Number(((a + b + c) / 2 * Math.sqrt(((a\
    \ + b + c) / 2) * ((a + b + c) / 2 - a) * ((a + b + c) / 2 - b) * ((a + b + c)\
    \ / 2 - c))).toFixed(2));\n  } else {\n    return -1;\n  }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n36\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp5t4za3u2.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5t4za3u2.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 36,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333497
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    return\
    \ (a + b > c && a + c > b && b + c > a) ? Number(((a * b * c) ** 0.5).toFixed(2))\
    \ : -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.75\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpkpiugi2k.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkpiugi2k.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.75,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333686
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    //your\
    \ code here\n    return 0;\n}\n\nconsole.log(triangle_area(3, 4, 5));\nconsole.log(triangle_area(1,\
    \ 2, 10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpl9mw2zp0.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl9mw2zp0.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    0

    '
  timestamp: 1660333686
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let s = (a\
    \ + b + c) / 2;\n  let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n  if\
    \ (area == 0) {\n    return -1;\n  } else {\n    return area;\n  }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmp_iu_t7ll.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_iu_t7ll.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333686
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let s =\
    \ (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    if (area > 0) {\n        return Number(area.toFixed(2));\n    } else {\n\
    \        return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333582
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    return\
    \ -1;\n}\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpexvbbvko.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpexvbbvko.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333686
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    return\
    \ -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp1mkg6u8o.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1mkg6u8o.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333686
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b > c && a + c > b && b + c > a) {\n        let p = (a + b + c) / 2;\n     \
    \   return Number((Math.sqrt(p * (p - a) * (p - b) * (p - c))).toFixed(2));\n\
    \    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333686
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    const p\
    \ = (a + b + c) / 2;\n    const A = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n\
    \    return Math.round(A * 100) / 100;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmp362m0p7e.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp362m0p7e.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333686
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let r =\
    \ -1;\n    if (isTriangle(a, b, c)) {\n        let s = (a + b + c) / 2;\n    \
    \    r = Math.sqrt(s * (s - a) * (s - b) * (s - c)).toFixed(2);\n    }\n    return\
    \ Number(r);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpd4cysnn9.ts(13,9): error TS2304: Cannot find name ''isTriangle''.

    ../../../../tmp/tmpd4cysnn9.ts(15,9): error TS2322: Type ''string'' is not assignable
    to type ''number''.

    '
  timestamp: 1660333686
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b > c && a + c > b && b + c > a) {\n        return +(0.5 * (a * b + b * c +\
    \ a * c)).toFixed(2);\n    } else {\n        return -1;\n    }\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n23.5\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpu0qak_4_.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpu0qak_4_.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 23.5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333582
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <=\
    \ 0 || b <= 0 || c <= 0) {\n        return -1;\n    }\n    if (a + b <= c || a\
    \ + c <= b || b + c <= a) {\n        return -1;\n    }\n    let p = (a + b + c)\
    \ / 2;\n    let s = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n    return Math.round(s\
    \ * 100) / 100;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333686
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b <= c || a + c <= b || b + c <= a) return -1;\n    var p = (a + b + c) / 2;\n\
    \    return Math.sqrt(p * (p - a) * (p - b) * (p - c));\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpzpah4p48.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzpah4p48.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333686
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    return\
    \ -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp1mkg6u8o.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1mkg6u8o.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333686
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let result\
    \ = -1;\n  if (a + b > c && a + c > b && b + c > a) {\n    result = (a + b + c)\
    \ / 2;\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.5\n\nshould\
    \ loosely deep-equal\n\n8.18\n    at test (/tmp/tmpunapkk0p.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpunapkk0p.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333686
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    const sum\
    \ = (a + b + c) / 2;\n    const area = Math.sqrt(sum * (sum - a) * (sum - b) *\
    \ (sum - c));\n    return area > 0 ? area : -1;\n}\nconsole.log(triangle_area(3,\
    \ 4, 5));\nconsole.log(triangle_area(1, 2, 10));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpqdk_vxr_.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqdk_vxr_.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    -1

    '
  timestamp: 1660333688
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (isValidTriangle(a,\
    \ b, c)) {\n        let p = (a + b + c) / 2;\n        return Number(Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)).toFixed(2));\n    }\n    return -1;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpyjj2hyzk.ts(12,9): error TS2304: Cannot find name ''isValidTriangle''.

    '
  timestamp: 1660333688
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b > c && a + c > b && b + c > a) {\n        return parseFloat((a * b / 2).toFixed(2));\n\
    \    } else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely\
    \ deep-equal\n\n8.18\n    at test (/tmp/tmpv0h3ey17.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpv0h3ey17.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333689
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b > c && a + c > b && b + c > a) {\n        let s = (a + b + c) / 2;\n     \
    \   return Math.round(Math.sqrt(s * (s - a) * (s - b) * (s - c)) * 100) / 100;\n\
    \    }\n    return -1;\n}\n\ntest(triangle_area(3, 4, 5), 6.0);\ntest(triangle_area(1,\
    \ 2, 10), -1);\ntest(triangle_area(2, 2, 3), 1.5);\ntest(triangle_area(4, 5, 6),\
    \ 9.92);\ntest(triangle_area(5, 5, 5), 10.83);\ntest(triangle_area(5, 5, 6), 12.04);\n\
    test(triangle_area(5, 10, 10), 24.99);\ntest(triangle_area(3, 5, 5), 7.48);\n\
    test(triangle_area(10, 10, 10), 43.3);\ntest(triangle_area(2, 2, 4), -1);\ntest(triangle_area(2,\
    \ 1, 5), -1);\ntest(triangle_area(0, 0, 0), -1);\ntest(triangle_area(2, 1, 3),\
    \ -1);\ntest(triangle_area(1, 2, 1), -1);\ntest(triangle_area(3, 4, 2), -1);\n\
    test(triangle_area(2, 3, 1), -1);\ntest(triangle_area(4, 2, 1), -1);\ntest(triangle_area(1,\
    \ 4, 2), -1);\ntest(triangle_area(2, 1, 4), -1);\ntest(triangle_area(1, 2, 4),\
    \ -1);\ntest(triangle_area(3, 2, 1), -1);\ntest(triangle_area(3, 1, 2), -1);\n\
    test(triangle_area(1, 3, 2), -1);\ntest(triangle_area(2, 3, 1), -1);\ntest(triangle_area(1\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp42baoxbz.ts(44,1): error TS1005: '','' expected.

    ../../../../tmp/tmp42baoxbz.ts(44,9): error TS1005: '','' expected.

    '
  timestamp: 1660333688
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    return\
    \ -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp1mkg6u8o.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1mkg6u8o.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333686
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  const arr\
    \ = [a, b, c];\n  arr.sort((a, b) => a - b);\n  if (arr[0] + arr[1] > arr[2])\
    \ {\n    return Number((arr[0] * arr[2] / 2).toFixed(2));\n  }\n  return -1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.5\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp73bn3656.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp73bn3656.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333689
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    // your\
    \ code here\n    let area: number = -1;\n    if (a + b > c && a + c > b && b +\
    \ c > a) {\n        let s: number = (a + b + c) / 2;\n        area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    }\n    return Math.round(area * 100) /\
    \ 100;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333689
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b <= c || a + c <= b || b + c <= a) {\n        return -1;\n    }\n    let p\
    \ = (a + b + c) / 2;\n    return Math.round(Math.sqrt(p * (p - a) * (p - b) *\
    \ (p - c)) * 100) / 100;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333689
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let mySides:\
    \ number[] = [a, b, c];\n    mySides.sort((a, b) => a - b);\n\n    if (mySides[0]\
    \ + mySides[1] <= mySides[2]) {\n        return -1;\n    } else {\n        let\
    \ s: number = (a + b + c) / 2;\n        return Number((Math.sqrt(s * (s - a) *\
    \ (s - b) * (s - c))).toFixed(2));\n    }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333689
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    // TODO:\
    \ Implement\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpo3mb0ix6.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpo3mb0ix6.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333689
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let first\
    \ = a * b * c;\n  if (a + b > c && a + c > b && b + c > a) {\n    let s = (a +\
    \ b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n  \
    \  return Math.round(area * 100) / 100;\n  } else {\n    return -1;\n  }\n}\n\
    console.log(triangle_area(3, 4, 5));\nconsole.log(triangle_area(1, 2, 10));\n\
    console.log(triangle_area(0, 4, 5));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    -1

    '
  timestamp: 1660333689
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b > c && a + c > b && b + c > a) {\n        return +(a * b / 2).toFixed(2);\n\
    \    } else {\n        return -1;\n    }\n}\nconsole.log(triangle_area(3, 4, 5));\n\
    console.log(triangle_area(1, 2, 10));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely\
    \ deep-equal\n\n8.18\n    at test (/tmp/tmpg0auyf_r.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpg0auyf_r.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    -1

    '
  timestamp: 1660333689
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c && b < a + c && c < a + b) {\n        const p = (a + b + c) / 2;\n   \
    \     return Number((Math.sqrt(p * (p - a) * (p - b) * (p - c))).toFixed(2));\n\
    \    }\n    return -1;\n}\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333689
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  // fill this\
    \ in\n  const [valid, area] = triangle_area_helper(a, b, c);\n  return valid ?\
    \ area : -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp24nny1gz.ts(13,25): error TS2304: Cannot find name ''triangle_area_helper''.

    '
  timestamp: 1660333689
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c && b < a + c && c < a + b) {\n        return Math.round(a + b + c) / 2;\n\
    \    } else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.5\n\nshould\
    \ loosely deep-equal\n\n8.18\n    at test (/tmp/tmplom5_83c.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmplom5_83c.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333689
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a + b\
    \ > c && a + c > b && b + c > a) {\n    // console.log(\n    //   `s = (${a} +\
    \ ${b} + ${c}) / 2 = ${(a + b + c) / 2} , ${\n    //     (a + b + c) / 2\n   \
    \ //   } - ${a} = ${(a + b + c) / 2 - a}`\n    // );\n    return Math.round(\n\
    \      Math.sqrt(\n        ((a + b + c) / 2) *\n          (((a + b + c) / 2) -\
    \ a) *\n          (((a + b + c) / 2) - b) *\n          (((a + b + c) / 2) - c)\n\
    \      ) *\n        100\n    ) / 100;\n  } else {\n    return -1;\n  }\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333689
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    const area\
    \ = ((a + b + c) / 2) * (((a + b + c) / 2) - a) * (((a + b + c) / 2) - b) * (((a\
    \ + b + c) / 2) - c);\n    if (a + b > c && a + c > b && b + c > a) {\n      \
    \  return Number(Math.sqrt(area).toFixed(2));\n    } else {\n        return -1;\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333689
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let temp:\
    \ number = a + b;\n  if (temp > c) {\n    return (a * b) / 2;\n  } else {\n  \
    \  return -1;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely\
    \ deep-equal\n\n8.18\n    at test (/tmp/tmp740xh7ol.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp740xh7ol.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333689
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    // if(a+b>c\
    \ && a+c>b && b+c>a){\n    //     return a*b/2\n    // }else{\n    //     return\
    \ -1\n    // }\n    return a + b > c && a + c > b && b + c > a ? a * b / 2 : -1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely\
    \ deep-equal\n\n8.18\n    at test (/tmp/tmpxg7gk7y6.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxg7gk7y6.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333689
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  return a\
    \ + b > c && a + c > b && b + c > a\n    ? (a + b + c) / 2\n    : -1;\n}\n\nconsole.log(triangle_area(3,\
    \ 4, 5));\nconsole.log(triangle_area(1, 2, 10));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.5\n\nshould\
    \ loosely deep-equal\n\n8.18\n    at test (/tmp/tmpop3560m7.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpop3560m7.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    -1

    '
  timestamp: 1660333690
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let result\
    \ = -1;\n  if (a + b > c && a + c > b && b + c > a) {\n    const s = (a + b +\
    \ c) / 2;\n    result = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n  }\n  return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpa_moepc0.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpa_moepc0.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333690
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b > c && a + c > b && b + c > a) {\n        let s = (a + b + c) / 2;\n     \
    \   return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n    return -1;\n\
    }\nconsole.log(triangle_area(3, 4, 5));\nconsole.log(triangle_area(1, 2, 10));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpea23fv7e.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpea23fv7e.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    -1

    '
  timestamp: 1660333690
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let s =\
    \ (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    if (area > 0) {\n        return Number(area.toFixed(2));\n    } else {\n\
    \        return -1;\n    }\n}\n\n\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333690
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    // your\
    \ code goes here\n    if (a + b > c && a + c > b && b + c > a) {\n        return\
    \ Number((0.5 * a * b).toFixed(2));\n    } else {\n        return -1;\n    }\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely\
    \ deep-equal\n\n8.18\n    at test (/tmp/tmpq7ms2l7i.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpq7ms2l7i.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333690
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    const s\
    \ = (a + b + c) / 2\n    const area = Math.sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \    return area > 0 ? +area.toFixed(2) : -1\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333691
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a <=\
    \ 0 || b <= 0 || c <= 0) {\n    return -1;\n  }\n  if (a + b > c && a + c > b\
    \ && b + c > a) {\n    const s = (a + b + c) / 2;\n    return Math.round(Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)) * 100) / 100;\n  }\n  return -1;\n}\n\nexport\
    \ { triangle_area };\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: "(node:19177) Warning: To load an ES module, set \"type\": \"module\" in\
    \ the package.json or use the .mjs extension.\n(Use `node --trace-warnings ...`\
    \ to show where the warning was created)\n/tmp/tmpkl_hh_o4.js:21\nexport { triangle_area\
    \ };\n^^^^^^\n\nSyntaxError: Unexpected token 'export'\n    at Object.compileFunction\
    \ (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333691
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let [max,\
    \ mid, min] = [a, b, c].sort((x, y) => y - x);\n  return max < min + mid ? 0.5\
    \ * (a + b + c) : -1;\n}\n\nconsole.log(triangle_area(3, 4, 5));\nconsole.log(triangle_area(1,\
    \ 2, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.5\n\nshould\
    \ loosely deep-equal\n\n8.18\n    at test (/tmp/tmpmxi6nnqr.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpmxi6nnqr.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    -1

    '
  timestamp: 1660333691
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    const s\
    \ = (a + b + c) / 2\n    const area = Math.sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \    return area > 0 ? +area.toFixed(2) : -1\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333691
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    const p\
    \ = (a + b + c) / 2;\n    const area = Math.sqrt(p * (p - a) * (p - b) * (p -\
    \ c));\n    if (Number.isNaN(area)) {\n        return -1;\n    }\n    return Number(area.toFixed(2));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n-1\n    at test (/tmp/tmpey8sd10f.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpey8sd10f.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333692
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  //Given the\
    \ lengths of the three sides of a triangle,\n  //Return the area of the triangle\
    \ rounded to 2 decimal points\n  // if the three sides form a valid triangle.\n\
    \  // Otherwise return -1\n\n  //I need to use a formula:\n  //  A = 1/2 ( base\
    \ * height )\n  //  base = one of the sides\n  //  height = distance from base\
    \ to the opposite point ( pythagorean theorem )\n  //  A = 1/2 ( c * b )\n  //\
    \  c = the side opposite of point A\n  //  b = side opposite of point B\n\n  //Step\
    \ 1: I need to make sure these sides actually make a triangle.\n  if ((a + b)\
    \ > c) {\n    if ((a + c) > b) {\n      if ((b + c) > a) {\n        //Step 2:\
    \ Find the height from the side that makes the base.\n        const height: number\
    \ =\n          Math.sqrt(Math.pow(c, 2) - Math.pow(b / 2, 2));\n        //Step\
    \ 3: Use formula to find area.\n        const area: number = 0.5 * c * height;\n\
    \        //Step 4: Return area.\n        return area;\n      }\n    }\n  }\n \
    \ return -1;\n}\n\nconsole.log(triangle_area(3, 4, 5));\nconsole.log(triangle_area(1,\
    \ 2, 10));\n\nexport default triangle_area;\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: "(node:19205) Warning: To load an ES module, set \"type\": \"module\" in\
    \ the package.json or use the .mjs extension.\n(Use `node --trace-warnings ...`\
    \ to show where the warning was created)\n/tmp/tmpovmv2zgk.js:40\nexport default\
    \ triangle_area;\n^^^^^^\n\nSyntaxError: Unexpected token 'export'\n    at Object.compileFunction\
    \ (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333692
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    const s\
    \ = (a + b + c) / 2;\n    const area = Math.sqrt(s * (s - a) * (s - b) * (s -\
    \ c));\n    return area > 0 ? +area.toFixed(2) : -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333582
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  // Your code\
    \ goes here\n  if (a+b>c && a+c>b && b+c>a) {\n    let s = (a+b+c)/2;\n    return\
    \ Math.sqrt(s*(s-a)*(s-b)*(s-c));\n  } else {\n    return -1;\n  }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpk08g0ufs.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpk08g0ufs.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333693
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area\
    \ = -1;\n    if (a + b > c && a + c > b && b + c > a) {\n        area = Math.sqrt((a\
    \ + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4;\n    }\n    return\
    \ area;\n}\n\nconsole.log(triangle_area(2, 3, 4));\nconsole.log(triangle_area(1,\
    \ 2, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmp1dsuqydo.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp1dsuqydo.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '2.9047375096555625

    -1

    '
  timestamp: 1660333693
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if ((a\
    \ + b) > c && (a + c) > b && (b + c) > a) {\n        let p = (a + b + c) / 2;\n\
    \        let s = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n        return +s.toFixed(2);\n\
    \    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333693
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  // TODO:\
    \ return the area of the triangle (rounded to two decimal places)\n  // if the\
    \ sum of any two sides is greater than the third, otherwise return -1\n  return\
    \ -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpi2tpuabj.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi2tpuabj.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333693
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    const s\
    \ = (a + b + c) / 2;\n    const area = Math.sqrt(s * (s - a) * (s - b) * (s -\
    \ c));\n    return isNaN(area) ? -1 : Math.round(area * 100) / 100;\n}\nconsole.log(triangle_area(3,\
    \ 4, 5));\nconsole.log(triangle_area(1, 2, 10));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n-1\n    at test (/tmp/tmp9uihewly.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9uihewly.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    -1

    '
  timestamp: 1660333693
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let s =\
    \ (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    return area > 0 ? area : -1;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpuos0y4xj.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuos0y4xj.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333497
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    // \n \
    \   if ( (a + b > c) && (b + c > a) && (a + c > b) ) {\n        // \n        let\
    \ p = (a + b + c) / 2;\n        let s = Math.sqrt(p * (p - a) * (p - b) * (p -\
    \ c));\n        return Number(s.toFixed(2));\n    }\n    else {\n        return\
    \ -1;\n    }\n}\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333693
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    // TODO:\
    \ implement function\n    // no matter the way to calculate the area, it will\
    \ be calculated only when\n    // the three sides make a valid triangle.\n   \
    \ if ((a + b) > c && (a + c) > b && (b + c) > a) {\n        return Math.round(Math.sqrt((a\
    \ + b + c) * (a + b - c) * (a + c - b) * (b + c - a)) * 100) / 100;\n    } else\
    \ {\n        return -1;\n    }\n}\n\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n24\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpc2ubgre6.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpc2ubgre6.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 24,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333693
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if ((a\
    \ + b) > c && (a + c) > b && (b + c) > a) {\n        return Number(((a + b + c)\
    \ / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.5\n\nshould\
    \ loosely deep-equal\n\n8.18\n    at test (/tmp/tmpeg0oo12g.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpeg0oo12g.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333693
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  // your code\
    \ here\n  if (isValidTriangle(a, b, c)) {\n    let s = (a + b + c) / 2;\n    return\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n  }\n  return -1;\n}\n\nconsole.log(triangle_area(3,\
    \ 4, 5));\nconsole.log(triangle_area(1, 2, 10));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp91ho5ryt.ts(13,7): error TS2304: Cannot find name ''isValidTriangle''.

    '
  timestamp: 1660333693
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    // your\
    \ code here\n    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a\
    \ + b + c) / 2;\n        return Number((Math.sqrt(s * (s - a) * (s - b) * (s -\
    \ c))).toFixed(2));\n    }\n    return -1;\n}\n\nconsole.log(triangle_area(3,\
    \ 4, 5));\nconsole.log(triangle_area(1, 2, 10));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660333693
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    const p\
    \ = (a + b + c) / 2;\n    const area = Math.sqrt(p * (p - a) * (p - b) * (p -\
    \ c));\n    return area > 0 ? +area.toFixed(2) : -1;\n}\n\nconsole.log(triangle_area(3,\
    \ 4, 5));\nconsole.log(triangle_area(1, 2, 10));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660333693
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let s =\
    \ (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    if (area > 0) {\n        return Number(area.toFixed(2));\n    } else {\n\
    \        return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333582
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b > c && a + c > b && b + c > a) {\n        let s = (a + b + c) / 2;\n     \
    \   return Math.round(Math.sqrt(s * (s - a) * (s - b) * (s - c)) * 100) / 100;\n\
    \    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333501
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  return triangle_area_solution(a,\
    \ b, c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpnl5kbrp0.ts(12,10): error TS2304: Cannot find name ''triangle_area_solution''.

    '
  timestamp: 1660333693
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    // edge\
    \ cases\n    if (a <= 0 || b <= 0 || c <= 0) {\n        return -1;\n    }\n\n\
    \    // use Heron's formula\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpzwbvslxo.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzwbvslxo.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333693
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    const area\
    \ = (a + b + c) / 2;\n    if (area <= 0) {\n        return -1;\n    }\n    return\
    \ +Math.sqrt(area * (area - a) * (area - b) * (area - c)).toFixed(2);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmp37s0xzd9.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp37s0xzd9.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333693
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if(a +\
    \ b > c && a + c > b && b + c > a){\n        return Math.round(.5 * a * b * 100)\
    \ / 100;\n    }\n    return -1;\n}\n\nconsole.log(triangle_area(3, 4, 5));\nconsole.log(triangle_area(1,\
    \ 2, 10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely\
    \ deep-equal\n\n8.18\n    at test (/tmp/tmpo5n3xg9h.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpo5n3xg9h.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    -1

    '
  timestamp: 1660333693
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a + b\
    \ > c && a + c > b && b + c > a) {\n    return Number(((a + b + c) / 2).toFixed(2));\n\
    \  }\n  return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.5\n\nshould\
    \ loosely deep-equal\n\n8.18\n    at test (/tmp/tmpvkdev3ck.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvkdev3ck.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333582
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a + b\
    \ > c && a + c > b && b + c > a) {\n    return Number((0.5 * a * b).toFixed(2));\n\
    \  }\n  return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely\
    \ deep-equal\n\n8.18\n    at test (/tmp/tmprfi9f6b6.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprfi9f6b6.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333682
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let s = (a\
    \ + b + c) / 2;\n  let area = s * (s - a) * (s - b) * (s - c);\n  return area\
    \ > 0 ? Math.sqrt(area) : -1;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpenqhbb9a.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpenqhbb9a.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333693
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a + b\
    \ > c && a + c > b && b + c > a) {\n    const perimeter = (a + b + c) / 2;\n \
    \   const area = Math.sqrt(\n      perimeter * (perimeter - a) * (perimeter -\
    \ b) * (perimeter - c)\n    );\n    return Number(area.toFixed(2));\n  } else\
    \ {\n    return -1;\n  }\n}\n\nconsole.log(triangle_area(3, 4, 5));\nconsole.log(triangle_area(1,\
    \ 2, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660333693
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let s = (a\
    \ + b + c) / 2;\n  if (s > a && s > b && s > c) {\n    return Math.round(Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)) * 100) / 100;\n  } else {\n    return -1;\n \
    \ }\n}\n\ndescribe(\"triangle_area\", function() {\n  it(\"should work for some\
    \ examples\", function() {\n    Test.assertEquals(triangle_area(1, 2, 2), 1);\n\
    \    Test.assertEquals(triangle_area(7, 2, 2), -1);\n    Test.assertEquals(triangle_area(4,\
    \ 13, 15), 24);\n    Test.assertEquals(triangle_area(9, 9, 9), 40.24);\n    Test.assertEquals(triangle_area(7,\
    \ 12, 8), 30);\n    Test.assertEquals(triangle_area(4, 2, 6), 5.33);\n    Test.assertEquals(triangle_area(5,\
    \ 10, 8), 17.88);\n    Test.assertEquals(triangle_area(10, 8, 5), 17.88);\n  \
    \  Test.assertEquals(triangle_area(10, 5, 8), 17.88);\n    Test.assertEquals(triangle_area(8,\
    \ 5, 10), 17.88);\n    Test.assertEquals(triangle_area(8, 10, 5), 17.88);\n  \
    \  Test.assertEquals(triangle_area(5, 8, 10), 17.88);\n    Test.assertEquals(triangle_area(5,\
    \ 6, 7), 14.7);\n    Test.assertEquals(triangle_area(15, 20, 25), 96);\n    Test.assertEquals(triangle_area(50,\
    \ 50, 50), 866.96);\n    Test.assertEquals(triangle_area(50, 50, 60), -1);\n \
    \   Test.assertEquals(triangle_area(51, 51, 51), -1);\n    Test.assertEquals(triangle_area(51,\
    \ 52, 51), -\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmprjo9l748.ts(40,9): error TS1005: '','' expected.

    ../../../../tmp/tmprjo9l748.ts(57,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660333693
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  //your code\
    \ here\n  return 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpdnkzk81u.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdnkzk81u.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333695
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if ((a\
    \ + b) > c && (a + c) > b && (b + c) > a) {\n        return (a + b + c) / 2;\n\
    \    } else {\n        return -1;\n    }\n}\nconsole.log(triangle_area(3, 4, 5));\n\
    console.log(triangle_area(1, 2, 10));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.5\n\nshould\
    \ loosely deep-equal\n\n8.18\n    at test (/tmp/tmpvk6jm38w.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvk6jm38w.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '6

    -1

    '
  timestamp: 1660333695
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    const triangle\
    \ = [a, b, c].sort((a, b) => a - b);\n    return triangle[0] + triangle[1] > triangle[2]\n\
    \        ? Number(((triangle[0] + triangle[1]) * triangle[2] / 2).toFixed(2))\n\
    \        : -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n17.5\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp578j_rqq.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp578j_rqq.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 17.5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333695
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b > c && a + c > b && b + c > a) {\n        const p = (a + b + c) / 2;\n   \
    \     return Math.sqrt(p * (p - a) * (p - b) * (p - c));\n    }\n    return -1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpofb5hmrn.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpofb5hmrn.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333671
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let sides:\
    \ number[] = [a, b, c];\n  // If a side is equal to 0, this is not a triangle\n\
    \  if (sides.includes(0)) {\n    return -1;\n  }\n  // sort array from lowest\
    \ to highest\n  sides.sort((a, b) => a - b);\n  // if a side is greater than the\
    \ sum of the other two sides,\n  // this is not a triangle\n  if (sides[0] + sides[1]\
    \ <= sides[2]) {\n    return -1;\n  }\n  // Heron's Formula\n  let p = sides.reduce((a,\
    \ b) => a + b) / 2;\n  let area = Math.sqrt(p * (p - sides[0]) * (p - sides[1])\
    \ * (p - sides[2]));\n  return Math.round(area * 100) / 100;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333695
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  let s = (a\
    \ + b + c) / 2;\n  let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n  return\
    \ (area > 0) ? Math.round(area * 100) / 100 : -1;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333695
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b > c && a + c > b && b + c > a) {\n        let s = (a + b + c) / 2;\n     \
    \   return +Math.sqrt(s * (s - a) * (s - b) * (s - c)).toFixed(2);\n    } else\
    \ {\n        return -1;\n    }\n}\n\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333696
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b > c && a + c > b && b + c > a) {\n        return Number((0.5 * a * b).toFixed(2));\n\
    \    } else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely\
    \ deep-equal\n\n8.18\n    at test (/tmp/tmporwhc_kc.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmporwhc_kc.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333501
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    return\
    \ a + b > c && a + c > b && b + c > a ? Math.round(\n        (a + b + c) *\n \
    \       (Math.sqrt((a + b + c) * (a + b - c) * (a + c - b) * (b + c - a))) /\n\
    \        4 *\n        100) / 100 : -1;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n72\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpl3_vwwwt.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl3_vwwwt.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 72,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333696
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if(a + b\
    \ > c && a + c > b && b + c > a)\n    return Math.round(a * b * Math.sin(c * Math.PI\
    \ / 180) * 100) / 100;\n  return -1;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.05\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp9d_ymty8.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9d_ymty8.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.05,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333696
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let s =\
    \ (a + b + c) / 2;\n    let res = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    return res > 0 ? res : -1;\n}\n\nconsole.log(triangle_area(1, 2, 10));\n\
    console.log(triangle_area(3, 4, 5));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmp0dqmq38b.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0dqmq38b.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '-1

    6

    '
  timestamp: 1660333696
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b > c && a + c > b && b + c > a) {\n        let area = ((a + b + c) / 2)\n \
    \       let triangleArea = Math.sqrt(area * (area - a) * (area - b) * (area -\
    \ c))\n        return Math.round(triangleArea * 100) / 100\n    } else {\n   \
    \     return -1\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333696
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a +\
    \ b <= c || a + c <= b || b + c <= a) {\n        return -1;\n    }\n    let s\
    \ = (a + b + c) / 2;\n    return Math.round(Math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c)) * 100) / 100;\n}\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660333696
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    const s\
    \ = (a + b + c) / 2;\n    const area = Math.sqrt(s * (s - a) * (s - b) * (s -\
    \ c));\n    return Number.isNaN(area) ? -1 : area;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpxqoa93k_.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxqoa93k_.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333696
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    const p\
    \ = (a + b + c) / 2;\n    const s = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n\
    \    if (!isNaN(s)) {\n        return Math.round(s * 100) / 100;\n    }\n    return\
    \ -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n-1\n    at test (/tmp/tmp7jyae6qn.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7jyae6qn.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333696
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    //returns\
    \ the area of a triangle\n    let s = (a + b + c) / 2;\n    return Math.round(Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)) * 100) / 100;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpieyvseb6.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpieyvseb6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333696
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    const s\
    \ = (a + b + c) / 2;\n    return Math.round(\n        Math.sqrt(s * (s - a) *\
    \ (s - b) * (s - c)) * 100\n    ) / 100;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpza8notvu.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpza8notvu.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333696
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    const first\
    \ = Math.round(a * b * Math.sin(c) * 100) / 100;\n    if (first <= 0) {\n    \
    \    return -1;\n    }\n    return first;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpyobfznp_.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyobfznp_.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333696
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < 0\
    \ || b < 0 || c < 0) {\n    return -1;\n  }\n  let s = (a + b + c) / 2;\n  return\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmp3uou860m.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3uou860m.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333696
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a <=\
    \ 0 || b <= 0 || c <= 0) {\n    return -1;\n  }\n  if (a + b > c && a + c > b\
    \ && b + c > a) {\n    return (\n      Math.round(\n        (Math.sqrt(\n    \
    \      (a + b + c) *\n            (a + b - c) *\n            (a - b + c) *\n \
    \           (-a + b + c)\n        ) /\n          4) *\n          100\n      )\
    \ / 100\n    );\n  } else {\n    return -1;\n  }\n}\nconsole.log(triangle_area(3,\
    \ 4, 5));\nconsole.log(triangle_area(1, 2, 10));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    -1

    '
  timestamp: 1660333696
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area:\
    \ number = ((a + b + c) / 2) * Math.sqrt(((a + b + c) / 2) - a) * Math.sqrt(((a\
    \ + b + c) / 2) - b) * Math.sqrt(((a + b + c) / 2) - c);\n    if (area) {\n  \
    \      return area;\n    } else {\n        return -1;\n    }\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n14.69693845669907\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp3l99zzn4.js:23:12)\n  \
    \  at Object.<anonymous> (/tmp/tmp3l99zzn4.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 14.69693845669907,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333696
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    const result\
    \ = area(a, b, c);\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmphbqzhs1z.ts(12,20): error TS2304: Cannot find name ''area''.

    '
  timestamp: 1660333696

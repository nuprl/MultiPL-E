name: HumanEval_91_is_bored
language: ts
prompt: "//You'll be given a string of words, and your task is to count the number\n\
  // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
  \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\"\
  )\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
  )\n// 1\nfunction is_bored(S: string): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
  ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
  I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
  I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
  You and I are going for a walk\"),0);\n}\n\ntest();"
completions: ["    let boredoms: number = 0;\n    let sentences: string[] = S.split(/[.!?]/);\n\
    \    for (let i in sentences) {\n        let words: string[] = sentences[i].split(\"\
    \ \");\n        for (let j in words) {\n            if (words[j] === \"I\") {\n\
    \                boredoms += 1;\n                break;\n            }\n     \
    \   }\n    }\n    return boredoms;\n}\nconsole.log(is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\"));", "    let arr = S.split(/\\.|\\\
    ?|\\!/);\n    let boredoms = 0;\n    arr.forEach(sentence => {\n        if (sentence.startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n",
  "    return S.split(/[.?!]/).filter(x => x.trim().startsWith(\"I\")).length;\n}\n",
  "    let boredoms = 0;\n    let words = S.split(/\\.|\\?|\\!/);\n    words.forEach(word\
    \ => {\n        if (word.startsWith(\"I\")) {\n            boredoms += 1;\n  \
    \      }\n    });\n    return boredoms;\n}\n\nconsole.log(is_bored(\"The sky is\
    \ blue. The sun is shining. I love this weather\"));", "    let sentences = S.split(/[.?!]/);\n\
    \    let boredoms = 0;\n    for (let sentence of sentences) {\n        if (sentence.split(\"\
    \ \")[0] === \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;\n\
    }\n", "    const boredoms = S.split(/[.?!]/).filter(word => word.startsWith('I'));\n\
    \    return boredoms.length;\n}\n", "    let words: string[] = S.split(/[.?!]/);\n\
    \    let count: number = 0;\n    for (let w of words) {\n        if (w.startsWith(\"\
    I\")) {\n            count++;\n        }\n    }\n    return count;\n}\n", "  \
    \  const boredoms = S.split('. ').filter(sentence => sentence.startsWith('I'));\n\
    \    return boredoms.length;\n}\n", "  const words = S.split(\" \");\n  let boredom\
    \ = 0;\n  for (let i = 0; i < words.length; i++) {\n    if (words[i] === \"I\"\
    ) {\n      boredom++;\n    }\n  }\n  return boredom;\n}\n", "  let counter = 0;\n\
    \  let array = S.split(\" \");\n  for (let i = 0; i < array.length; i++) {\n \
    \   if (array[i] === \"I\") {\n      counter++;\n    }\n  }\n  return counter;\n\
    }\n", "    let result = 0;\n    const words = S.split(/[.?!]/);\n    words.forEach(word\
    \ => {\n        if (word.startsWith('I')) result++;\n    });\n    return result;\n\
    }\n", "  const index = S.split(\".\").findIndex(x => x.trim().startsWith(\"I\"\
    ));\n  if (index > -1) {\n    return index + 1;\n  }\n  return 0;\n}\n", "   \
    \ return S.split(/[.?!]/).filter(x => x.trim().startsWith(\"I\")).length;\n}\n",
  "  let boredoms: number = 0;\n  S.split(\" \").forEach((word) => {\n    if (word[0]\
    \ === \"I\") {\n      boredoms++;\n    }\n  });\n  return boredoms;\n}\n", " \
    \   let boredoms = 0;\n    const sentences = S.split(/[\\.!\\?]+/);\n    for (let\
    \ i = 0; i < sentences.length; i++) {\n        if (sentences[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    let test_S = \"Hello world\";\nconsole.log(is_bored(test_S));\ntest_S = \"The\
    \ sky is blue. The sun is shining. I love this weather\";\nconsole.log(is_bored(test_S));\n",
  "    let sentences = S.split(/[?!.]/);\n    return sentences.filter(s => s.trim().startsWith(\"\
    I\")).length;\n}\n", "  const senetences = S.split(/[.!?]/);\n  const boredoms\
    \ = senetences.filter(s => s.trim().startsWith(\"I\"));\n  return boredoms.length;\n\
    }\n", "    return S.match(/I.*?[.?!]/g) ? S.match(/I.*?[.?!]/g).length : 0;\n}",
  "    let boredoms = 0;\n    S.split('.').forEach( s => {\n        s.split('?').forEach(\
    \ t => {\n            t.split('!').forEach( u => {\n                if (u.trim().split('\
    \ ')[0] === 'I') {\n                    boredoms++;\n                }\n     \
    \       });\n        });\n    });\n    return boredoms;\n}\n\nconsole.log( is_bored('I\
    \ am definitely not bored.') );\nconsole.log( is_bored('The sky is blue. The sun\
    \ is shining. I love this weather') );\nconsole.log( is_bored('I am definitely\
    \ not bored. The sky is blue. The sun is shining. I love this weather') );\nconsole.log(\
    \ is_bored('?') );\nconsole.log( is_bored('I!') );\nconsole.log( is_bored('I?')\
    \ );\nconsole.log( is_bored('!?I!?') );\nconsole.log( is_bored('I?!') );\nconsole.log(\
    \ is_bored('I') );\nconsole.log( is_bored('I.I') );\nconsole.log( is_bored('I.I.I')\
    \ );\nconsole.log( is_bored('I.I.I.I') );\nconsole.log( is_bored('I.I.I.I.I')\
    \ );\nconsole.log( is_bored('I.I.I.I.I.I') );\nconsole.log( is_bored('I.I.I.I.I.I.I')\
    \ );\nconsole.log( is_bored('I.I.I.I.I.I.I.I') );\nconsole.log( is_bored('I.I.I.I.I.I.I.I.I')\
    \ );\nconsole.log( is_bored('I.I.I.I.I.I.I.I.I.I') );\nconsole.log( is_bored('I.I.I.I.I.I.I.I.I.I.I')\
    \ );\nconsole.log( is_bored('I.I.I.", "    const sentences = S.split(/[\\.\\?!]/);\n\
    \    return sentences.filter(sentence => sentence.startsWith('I')).length;\n}\n",
  "  return S.split(\".\").filter(s => s.startsWith(\"I\")).length;\n}\n", "    return\
    \ S.split(/[.?!]/).filter(x => x.trim().match(/^I\\s/)).length;\n}\n\nconsole.log(is_bored(\"\
    I am bored\"), 1);\nconsole.log(is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\"), 1);\nconsole.log(is_bored(\"I am bored.\"), 1);\nconsole.log(is_bored(\"\
    abc\"), 0);\nconsole.log(is_bored(\"You're boring\"), 0);\nconsole.log(is_bored(\"\
    This is boring\"), 0);\nconsole.log(is_bored(\"You're boring.\"), 0);\nconsole.log(is_bored(\"\
    This is boring.\"), 0);\nconsole.log(is_bored(\"My hamster is dead. He was nice.\"\
    ), 0);\nconsole.log(is_bored(\"I like trains.\"), 0);\nconsole.log(is_bored(\"\
    I like trains\"), 0);\nconsole.log(is_bored(\"I am bored. I like trains\"), 1);\n\
    console.log(is_bored(\"I am bored! I like trains\"), 1);\nconsole.log(is_bored(\"\
    I am bored? I like trains\"), 1);\nconsole.log(is_bored(\"Hello world\"), 0);\n\
    console.log(is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ), 1);\nconsole.log(is_bored(\"The sky is blue. The sun is shining. I love this\
    \ weather.\"), 1);\nconsole.log(is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather!\"), 1);\nconsole.log(is_bored(\"I am bored. The sky is\
    \ blue. The sun is shining. I love this weather!\"), 2);\nconsole.log(is_bored(\"\
    I am bored. The sky is blue. The sun is shining. I love this weather.\"), 2);\n\
    console.log(is_bored(\"I am bored. The sky is blue. The sun is shining. I love\
    \ this weather\"), 2);\nconsole.log(is_bored(\"I am bored. The sky is blue. The\
    \ sun is shining. I love", "    let boredoms: number = 0;\n    let listOfSentences:\
    \ string[] = S.split(/\\.|\\?|\\!/);\n    for (let sentence of listOfSentences)\
    \ {\n        let listOfWords: string[] = sentence.split(' ');\n        if (listOfWords[0]\
    \ === 'I') boredoms++;\n    }\n    return boredoms;\n}\n", "    var boredoms:\
    \ number = 0;\n    var initialI: string = S.substring(0, 1);\n    if (initialI\
    \ == \"I\") {\n        boredoms++;\n    }\n    var dot: number = S.indexOf(\"\
    .\");\n    var exclam: number = S.indexOf(\"!\");\n    var quest: number = S.indexOf(\"\
    ?\");\n    if (dot > -1) {\n        var subS: string = S.substring(dot + 1);\n\
    \        boredoms += is_bored(subS);\n    }\n    if (exclam > -1) {\n        var\
    \ subS: string = S.substring(exclam + 1);\n        boredoms += is_bored(subS);\n\
    \    }\n    if (quest > -1) {\n        var subS: string = S.substring(quest +\
    \ 1);\n        boredoms += is_bored(subS);\n    }\n    return boredoms;\n}\n\n",
  "    let i = 0;\n    const listOfStrings = S.split('.').map(s => s.trim().split('\
    \ '));\n    for (const list of listOfStrings) {\n        if (list[0] === 'I')\
    \ {\n            i += 1;\n        }\n    }\n    return i;\n}\n", "    let count:\
    \ number = 0;\n    let A: string[] = S.split(/[.?!]/);\n    for (let i: number\
    \ = 0; i < A.length; i++) {\n        let B: string[] = A[i].split(' ');\n    \
    \    if (B[0] === 'I') {\n            count++;\n        }\n    }\n    return count;\n\
    }\nconsole.log(is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ));\n", "  // your code here...\n  return S.split(\".\").filter(v => v.includes(\"\
    I\")).length;\n}\n", "  return (S.match(/\\bI[a-zA-Z\\s]*[.!?]/g) || []).length;\n\
    }\n\nconsole.log(is_bored(\"Hello world\"));\nconsole.log(is_bored(\"The sky is\
    \ blue. The sun is shining. I love this weather\"));", "    let count: number\
    \ = 0;\n    S.split(/[.!?]/).forEach(function (value) {\n        let trimmed:\
    \ string = value.trim();\n        if (trimmed.substring(0, 2) === \"I \") {\n\
    \            count++;\n        }\n    });\n    return count;\n}\n", "  return\
    \ S.match(/I/gi) === null ? 0 : S.match(/I/gi).length;\n}\n", "    let sentences\
    \ = S.split(/[.?!]/);\n    return sentences.filter(sentence => sentence.trim().startsWith(\"\
    I\")).length;\n}\n", "  let bored = 0;\n  for (let i = 0; i < S.length; i++) {\n\
    \    if (S[i] === \"I\") {\n      let j = i;\n      while (S[j] !== \".\" && S[j]\
    \ !== \"?\" && S[j] !== \"!\") {\n        j++;\n      }\n      bored++;\n    \
    \  i = j;\n    }\n  }\n  return bored;\n}\n", "    let sentence = S.split(/[.?!]/);\n\
    \    let bored = 0;\n    for (let i = 0; i < sentence.length; i++) {\n       \
    \ if (sentence[i].charAt(0) === \"I\") {\n            bored++;\n        }\n  \
    \  }\n    return bored;\n}\n", "  let i = 0;\n  for (let sentence of S.split(/[.?!]/))\
    \ {\n    if (sentence.trim().toLowerCase().startsWith(\"i\")) {\n      i++;\n\
    \    }\n  }\n  return i;\n}\nconsole.log(is_bored(\"The sky is blue. The sun is\
    \ shining. I love this weather\"));\n", "    let result = 0;\n    let rows = S.split(/[.?!]/);\n\
    \    rows.forEach(value => {\n        if (value.search(/^i/i) === 0) {\n     \
    \       result++;\n        }\n    });\n    return result;\n}\n", "    let arr\
    \ = S.split(/[!.? ]+/);\n    let sum = 0;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i].startsWith(\"I\")) {\n            sum++;\n      \
    \  }\n    }\n    return sum;\n}\n", "  return S.match(/I.*[.!?]/g) ? S.match(/I.*[.!?]/g).length\
    \ : 0;\n}\n", "  return S.split(/[.?!]/).filter(s => s.trim().startsWith('I')).length;\n\
    }\n", "    return S.split(/[!?.]/).reduce((x, y) => {\n        return (x + (y.match(/^\\\
    s*I\\s/) ? 1 : 0));\n    }, 0);\n}\n\n", "    let boredoms = 0;\n    const sentences\
    \ = S.split(/[\\.!?]\\s/);\n    for (let i = 0; i < sentences.length; i++) {\n\
    \        if (sentences[i].match(/^I\\s/i)) {\n            boredoms++;\n      \
    \  }\n    }\n    return boredoms;\n}\nconsole.log(is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\"));\nconsole.log(is_bored(\"Hello world\"\
    ));\n", "    const res = S.split(/[\\.!?]/);\n    let cnt = 0;\n    for (let i\
    \ = 0; i < res.length; i++) {\n        if (res[i].split(' ')[0] === 'I') {\n \
    \           cnt++;\n        }\n    }\n    return cnt;\n}\n", "  let boredoms =\
    \ 0;\n  S.split(/[.!?]/).forEach(s => {\n    const words = s.split(' ');\n   \
    \ if (words[0] === 'I') {\n      boredoms++;\n    }\n  });\n  return boredoms;\n\
    }\n", "  // Write your code here\n  let count = 0;\n  S.split(\".\")\n    .join(\"\
    \")\n    .split(\"?\")\n    .join(\"\")\n    .split(\"!\")\n    .join(\"\")\n\
    \    .split(\" \")\n    .forEach(element => {\n      if (element === \"I\") {\n\
    \        count++;\n      }\n    });\n  return count;\n}\n\nexport { is_bored };",
  "  let result = 0;\n  let i = 0;\n  while (i < S.length) {\n    if (S[i] === \"\
    I\") {\n      result++;\n    }\n    while (i < S.length && S[i] !== \".\" && S[i]\
    \ !== \"?\" && S[i] !== \"!\") {\n      i++;\n    }\n    i++;\n  }\n  return result;\n\
    }\n", "    let boredoms = 0;\n    let words = S.split(\".\").join(\"\").split(\"\
    ?\").join(\"\").split(\"!\").join(\"\").split(\" \");\n    for (let i = 0; i <\
    \ words.length; i++) {\n        if (words[i] === \"I\") {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "  let r: number = 0;\n  const\
    \ reg: RegExp = /\\bi\\b/gi;\n  for (let i: number = 0; i < S.length; i++) {\n\
    \    if (S[i] === \"I\") {\n      if (S[i - 1] === \".\" || S[i - 1] === \"?\"\
    \ || S[i - 1] === \"!\") {\n        r += 1;\n      }\n    }\n  }\n  return r;\n\
    }\n", "  const sentences = S.split(/[.?!]/);\n  const boredoms = sentences.filter(s\
    \ => s.startsWith(\"I\"));\n  return boredoms.length;\n}\n", "  const words =\
    \ S.split(/[.!?]/);\n  let boredoms = 0;\n  for (let word of words) {\n    const\
    \ arr = word.split(\" \");\n    if (arr[0] === \"I\") {\n      boredoms++;\n \
    \   }\n  }\n  return boredoms;\n}\n", "    let sentences = S.split(/[!.?]/);\n\
    \    let bored = 0;\n    for (let i = 0; i < sentences.length; i++) {\n      \
    \  if (sentences[i].startsWith(\"I\")) {\n            bored++;\n        }\n  \
    \  }\n    return bored;\n}\nconsole.log(is_bored(\"The sky is blue. The sun is\
    \ shining. I love this weather\"));\n", "  let sentenceArr = S.split(/[.?!]/g);\n\
    \  let boredoms = 0;\n  sentenceArr.forEach(sentence => {\n    let sentenceWords\
    \ = sentence.split(\" \");\n    if (sentenceWords[0] === \"I\") {\n      boredoms++;\n\
    \    }\n  });\n  return boredoms;\n}\n", "    // your code goes here\n    let\
    \ boredoms = 0;\n    let index = 0;\n    while (index < S.length) {\n        if\
    \ (S[index] === 'I') {\n            boredoms += 1;\n        }\n        if (S[index]\
    \ === '.' || S[index] === '?' || S[index] === '!') {\n            index += 1;\n\
    \        }\n        index += 1;\n    }\n    return boredoms;\n}", "    let count\
    \ = 0;\n    let words = S.split(\" \");\n    for (let i = 0; i < words.length;\
    \ i++) {\n        if (words[i] === \"I\") {\n            count++;\n        }\n\
    \    }\n    return count;\n}\n", "  const sentences = S.split(/[!.?]/)\n  return\
    \ sentences.filter(sentence => sentence.startsWith('I')).length\n}\n", "    var\
    \ B = 0;\n    var D = S.split(/[.!?]/g);\n    for (var i = 0; i < D.length; i++)\
    \ {\n        if (/^i/i.test(D[i])) {\n            B++;\n        }\n    }\n   \
    \ return B;\n}\n", "  let words: string[] = S.split(\" \");\n  let boredoms: number\
    \ = 0;\n  words.forEach(word => {\n    if (word === \"I\") {\n      boredoms++;\n\
    \    }\n  });\n  return boredoms;\n}\n", "    return S.match(/I/gi).length;\n\
    }\n", "    let boredoms = 0;\n    let I = 'I';\n    let is_start = false;\n  \
    \  let is_bored = false;\n    for (let c of S) {\n        if (is_bored) {\n  \
    \          if (c === '.' || c === '?' || c === '!') {\n                is_bored\
    \ = false;\n            }\n        } else {\n            if (c === 'I') {\n  \
    \              is_bored = true;\n                boredoms += 1;\n            }\n\
    \        }\n    }\n    return boredoms;\n}\n", "    const sentences = S.split(/[.!?]/);\n\
    \    return sentences.reduce((boredoms, sentence) => {\n        return boredoms\
    \ + /^\\s*I/.test(sentence);\n    }, 0);\n}", "    let num = 0;\n    for (let\
    \ i = 0; i < S.length; i++) {\n        if (S[i] === 'I') {\n            num++;\n\
    \        }\n    }\n    return num;\n}\nconsole.log(is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\"));\n", "    let bored = 0;\n    let\
    \ sentence = S.split(/[!?.]/);\n    for (let i = 0; i < sentence.length; i++)\
    \ {\n        if (sentence[i].charAt(0) === \"I\") bored++;\n    }\n    return\
    \ bored;\n}\n", "    let bored = 0\n    let sentences = S.split(/[.?!]/)\n   \
    \ sentences.forEach(sentence => {\n        sentence = sentence.trim()\n      \
    \  let words = sentence.split(' ')\n        if (words[0] === 'I') {\n        \
    \    bored++\n        }\n    })\n    return bored\n}\n", "    return S.split(/[\\\
    .\\?!]/).filter(s => s.trim().startsWith('I')).length;\n}\n", "    let reg: RegExp\
    \ = /^I/;\n    let boredoms: number = 0;\n    for (let s of S.split(/[.!?]/))\
    \ {\n        if (reg.test(s)) {\n            boredoms++;\n        }\n    }\n \
    \   return boredoms;\n}\n", "  const sentences = S.split(/[.?!]/);\n  return sentences.filter(s\
    \ => s.trim().startsWith(\"I\")).length;\n}\n", "  return S.split(/[.?!]/).filter(sentence\
    \ => sentence.match(/^I/)).length;\n}\nconsole.log(is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\"));", "  const s = S.toLowerCase();\n\
    \  const splitArr = s.split(\" \");\n  return splitArr.filter(word => word ===\
    \ \"i\").length;\n}\n\nconsole.log(is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\"));\nconsole.log(is_bored(\"The sky is blue. The sun is\
    \ shining. This is cool weather\"));\n", "  return S.split(\".\").reduce((a, b)\
    \ => a + (b.split(\" \")[0] === \"I\" ? 1 : 0), 0);\n}\n", "    let boredoms:\
    \ number = 0;\n    let sentences: string[] = S.split(/\\.|\\?|\\!/g);\n    sentences.forEach(sentence\
    \ => {\n        let words: string[] = sentence.split(' ');\n        if (words[0]\
    \ == 'I') {\n            boredoms += 1;\n        }\n    });\n    return boredoms;\n\
    }\n", "    // your code here\n    return 0;\n}\n", "    let regex = /I\\s/\n \
    \   // return new RegExp(regex).test(S) ? true : false\n    return S.split(' ').filter(x\
    \ => x === 'I').length\n}\n", "  return S.split(/[.!?]/).filter(s => s.trim().startsWith('I')).length;\n\
    }\n\nexport { is_bored };", "    return S.match(/^I/gm) ? S.match(/^I/gm).length\
    \ : 0;\n}\n", "  let boredoms: number = 0;\n  S.split(/\\.|\\?|\\!/).forEach(sentence\
    \ => {\n    if (sentence.split(' ')[0] === 'I') {\n      boredoms++;\n    }\n\
    \  });\n  return boredoms;\n}\n", "    return S.split(/[.!?]/).filter(s => s.startsWith('I')).length;\n\
    }\n", "    let ret = 0;\n    const arr = S.split(/\\.|\\?|\\!/);\n    arr.forEach(s\
    \ => {\n        if (s.trim().split(' ')[0] === 'I') {\n            ret++;\n  \
    \      }\n    });\n    return ret;\n}\n", "    let Boredoms: number = 0;\n   \
    \ S = S.replace(/[.!?]/g, ' ');\n    let Words: string[] = S.split(' ');\n   \
    \ Words.forEach(word => {\n        if (word.includes('I')) {\n            Boredoms\
    \ += 1;\n        }\n    });\n    return Boredoms;\n}\n", "    var counter = 0;\n\
    \    var hasBoredom = false;\n    for (var i = 0; i < S.length; i++) {\n     \
    \   if (S[i] == \"I\") {\n            hasBoredom = true;\n        } else if (S[i]\
    \ == \".\" || S[i] == \"?\" || S[i] == \"!\") {\n            if (hasBoredom) {\n\
    \                counter++;\n                hasBoredom = false;\n           \
    \ }\n        }\n    }\n    return counter;\n}\n", "  const boredoms = [];\n  let\
    \ boredom = 0;\n  S.split(\" \").forEach(word => {\n    if (word === \"I\") {\n\
    \      boredom = 1;\n    } else if (boredom && word.includes(\".\")) {\n     \
    \ boredoms.push(word);\n      boredom = 0;\n    }\n  });\n  return boredoms.length;\n\
    }\n", "    let boredoms = 0\n    const reg = /[.?!]/\n    let words = S.split(reg)\n\
    \    for (let word of words) {\n        if (word.slice(0, 2) === 'I ') {\n   \
    \         boredoms++\n        }\n    }\n    return boredoms\n}\n", "  const sentences\
    \ = S.split(/[.?!]/);\n  let boredoms = 0;\n  for (let i = 0; i < sentences.length;\
    \ i++) {\n    if (sentences[i].startsWith(\"I\")) {\n      boredoms++;\n    }\n\
    \  }\n  return boredoms;\n}\n", "    let boredoms = 0;\n    let p = 0;\n    while\
    \ (p < S.length) {\n        while (p < S.length && !/[.?!]/.test(S[p])) p++;\n\
    \        if (p + 1 < S.length && S[p + 1] === ' ' && S[p + 2] === 'I') boredoms++;\n\
    \        p += 2;\n    }\n    return boredoms;\n}", "    // Counter to sum the\
    \ boredoms\n    let boredoms: number = 0;\n    // Split the string by the delimiters\n\
    \    let sentences: string[] = S.split(/[.!?]/);\n    // Loop over the sentences\n\
    \    for (let sentence of sentences) {\n        // Split the sentence by spaces\n\
    \        let words: string[] = sentence.split(' ');\n        // If the first word\
    \ of the sentence is \"I\", then increase the counter\n        if (words[0] ===\
    \ 'I') {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\
    \nconsole.log(is_bored(\"Hello world\"));\nconsole.log(is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\"));", "  let count = 0;\n  S.split(\"\
    .\").forEach(sentence => {\n    if (sentence.split(\" \")[0] === \"I\") {\n  \
    \    count++;\n    }\n  });\n  return count;\n}\n", "    let boredoms = 0;\n \
    \   for (let i = 0; i < S.length; i++) {\n        if (S[i] === 'I') {\n      \
    \      boredoms += 1;\n        }\n    }\n    return boredoms;\n}\n\ndescribe(\"\
    Is bored\", () => {\n    it(\"0 boredoms\", () => {\n        assert.equal(is_bored(\"\
    Hello world\"), 0);\n    });\n    it(\"1 boredom\", () => {\n        assert.equal(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\"), 1);\n    });\n});",
  "    return S.split(/[.?!]/).filter(s => s.trim().startsWith('I')).length;\n}\n",
  "  return S.split(/[.?!]/).filter(s => s.trim().indexOf('I') === 0).length;\n}\n",
  "  const sentences = S.split(/\\.|\\?|\\!/);\n  return sentences.filter(s => s.trim().startsWith(\"\
    I\")).length;\n}\n", "    // YOUR CODE HERE\n    let boredoms = 0;\n    let arr\
    \ = S.split(/[.!?]/g);\n    for (let s of arr) {\n        if (s.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}",
  "    let boredoms: number = 0;\n    let sentences: string[] = S.split(/[.?!]/);\n\
    \    let word: string;\n    let words: string[];\n    for (let sentence of sentences)\
    \ {\n        words = sentence.split(\" \");\n        if (words.length > 0) {\n\
    \            word = words[0];\n            if (word == \"I\") {\n            \
    \    boredoms += 1;\n            }\n        }\n    }\n    return boredoms;\n}\n\
    \n", "    const BORED = \"I \";\n    let boredoms = 0;\n    let i = 0;\n    while\
    \ (i < S.length) {\n        let l = S.substring(i).length;\n        let temp =\
    \ BORED.length;\n        if (l >= temp) {\n            if (S.substring(i, i +\
    \ temp) === BORED) {\n                boredoms++;\n            }\n        }\n\
    \        i++;\n    }\n    return boredoms;\n}", "    let boredoms = 0;\n    let\
    \ words = S.split(/[.,?!]/);\n    for (let i = 0; i < words.length; i++) {\n \
    \       if (words[i].indexOf(\"I\") == 0) {\n            boredoms++;\n       \
    \ }\n    }\n    return boredoms;\n}", "    let count = 0;\n    S.split(/[.?!]/).map(v\
    \ => v.trim()).forEach(s => {\n        if (s.indexOf('I') === 0) {\n         \
    \   count++;\n        }\n    });\n    return count;\n}\n", "    let bored: number\
    \ = 0;\n    const sentences: string[] = S.split(/[\\.!\\?]/);\n    for (let i:\
    \ number = 0; i < sentences.length; i++) {\n        const words: string[] = sentences[i].split(\"\
    \ \");\n        if (words[0] === \"I\") {\n            bored++;\n        }\n \
    \   }\n    return bored;\n}\n", "  return S.split(/[\\.\\?!]/).filter(a => a.startsWith(\"\
    I\")).length;\n}\n", "  let count = 0;\n  const regex = /[I].\\b/g;\n  const sentences\
    \ = S.split(/[.!?]/);\n  for (let i = 0; i < sentences.length; i++) {\n    if\
    \ (regex.test(sentences[i])) {\n      count++;\n    }\n  }\n  return count;\n\
    }\n", "  const exp = /I[^\\?]/;\n  let count = 0;\n  let array = S.split(/\\.|\\\
    ?|\\!/);\n  for (let i = 0; i < array.length; i++) {\n    if (exp.test(array[i]))\
    \ {\n      count++;\n    }\n  }\n  return count;\n}", "  let count = 0;\n  let\
    \ splitS = S.split(/[.!?]/);\n  let arr = [];\n  for (let i = 0; i < splitS.length;\
    \ i++) {\n    if (splitS[i][0] === \"I\") {\n      arr.push(splitS[i]);\n    }\n\
    \  }\n  count = arr.length;\n  return count;\n}\n", "    return S.split(/[.?!]/).filter(x\
    \ => x.trim().startsWith(\"I\")).length;\n}\n", "  var boredoms = 0;\n  var split_sentences\
    \ = S.split(/[!.?]/);\n  for (var sentence of split_sentences) {\n    if (sentence.startsWith(\"\
    I\")) {\n      boredoms += 1;\n    }\n  }\n  return boredoms;\n}\n", "    let\
    \ boredom = 0;\n    let current = '';\n    for (let i = 0; i < S.length; i++)\
    \ {\n        if (current === '' && S[i] === 'I') {\n            current = S[i];\n\
    \        } else if (current === 'I' && S[i] === ' ') {\n            current +=\
    \ S[i];\n        } else if (current === 'I ') {\n            boredom++;\n    \
    \        current = '';\n        } else if (S[i] === '.' || S[i] === '?' || S[i]\
    \ === '!') {\n            current = '';\n        }\n    }\n    return boredom;\n\
    }", "  let array = S.split(\".\").map(s => s.trim().split(\" \"));\n  let boredoms\
    \ = 0;\n  for (let i = 0; i < array.length; i++) {\n    if (array[i][0] === \"\
    I\") {\n      boredoms++;\n    }\n  }\n  return boredoms;\n}\n", "  return S.split(/\\\
    .|\\?|!/).filter(s => s.startsWith('I')).length;\n}\n", "  const words = S.split(\"\
    \ \");\n  let boredoms = 0;\n  for (let i = 0; i < words.length; i++) {\n    if\
    \ (words[i] === \"I\") {\n      if (words[i + 1] === \".\") {\n        boredoms++;\n\
    \      } else if (words[i + 1] === \"?\") {\n        boredoms++;\n      } else\
    \ if (words[i + 1] === \"!\") {\n        boredoms++;\n      }\n    }\n  }\n  return\
    \ boredoms;\n}\n", "    const sentences = S.match(/[^.!?]+[.!?]/g) || [];\n  \
    \  return sentences.reduce((acc, s) => {\n        return acc + (s.startsWith('I')\
    \ ? 1 : 0);\n    }, 0);\n}\n", "    let arr = S.split(/[.?!]/);\n    let count\
    \ = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i].startsWith(\"\
    I\")) {\n            count++;\n        }\n    }\n    return count;\n}", "    const\
    \ words = S.split(/[\\s.?!]/).filter(w => w.length > 0);\n    let count = 0;\n\
    \    for (let i = 0; i < words.length; i++) {\n        if (words[i] === 'I') {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "  let boredoms\
    \ = 0;\n  const sentenceSplit = S.split(/[.?!]/);\n  sentenceSplit.forEach((sentence)\
    \ => {\n    if (sentence.startsWith(\"I\")) {\n      boredoms++;\n    }\n  });\n\
    \  return boredoms;\n}\n", "    let s = S.toLowerCase();\n    let boredoms = 0;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'i' && (s[i -\
    \ 1] === '.' || s[i - 1] === '?' || s[i - 1] === '!')) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\nconsole.log(is_bored(\"The sky is\
    \ blue. The sun is shining. I love this weather\"));\n", "    let boredoms = 0;\n\
    \    let sentences = S.split(/[\\.\\?\\!]/);\n    for (let i = 0; i < sentences.length;\
    \ i++) {\n        if (sentences[i].trim().startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\nlet TEST_STRING = \"The sky is blue.\
    \ The sun is shining. I love this weather\";\nconsole.log(is_bored(TEST_STRING));",
  "  let count = 0;\n  S.split(\".\").forEach(e => {\n    const match = e.match(/^\\\
    s*I/);\n    if (match) {\n      count++;\n    }\n  });\n  return count;\n}\n",
  "    return S.split(/[.?!]/).filter(s => s.startsWith('I')).length;\n}\n", "   \
    \ return 0;\n}\n", "    let boredoms = 0;\n    let sentence_start = 0;\n    for\
    \ (let i = 0; i < S.length; i++) {\n        if (S[i] === '.' || S[i] === '?' ||\
    \ S[i] === '!') {\n            let sentence = S.slice(sentence_start, i);\n  \
    \          if (sentence.includes('I')) {\n                boredoms++;\n      \
    \      }\n            sentence_start = i + 1;\n        }\n    }\n    return boredoms;\n\
    }\n", "  let bored = 0;\n  let sent = S.split(/\\.|\\?|\\!/g);\n  for (let i =\
    \ 0; i < sent.length; i++) {\n    if (sent[i].startsWith(\"I\")) {\n      bored++;\n\
    \    }\n  }\n  return bored;\n}\n", "  const words = S.split(/[.?!]/);\n  let\
    \ boredomCount = 0;\n  for (let i = 0; i < words.length; i++) {\n    if (words[i].startsWith(\"\
    I\")) {\n      boredomCount++;\n    }\n  }\n  return boredomCount;\n}\n", "  \
    \  let rs = 0;\n    let s = S.split(/[.!?]/);\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s[i].charAt(0) === 'I') {\n            rs++;\n        }\n\
    \    }\n    return rs;\n}", "  return S.split(/[\\?\\.\\!]/).filter(s => s.match(/^\\\
    s*I\\s+/)).length;\n}\n", "    var str = S.split(/[.?!]/);\n    var count = 0;\n\
    \    for (var i = 0; i < str.length; i++) {\n        if (str[i].startsWith(\"\
    I\")) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(is_bored(\"\
    Hello world\"));\nconsole.log(is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\"));", "  let count = 0;\n  let split = S.split(/[.?!]/);\n\
    \  for (let i = 0; i < split.length; i++) {\n    if (split[i].charAt(0) === \"\
    I\") {\n      count++;\n    }\n  }\n  return count;\n}\n", "    let sentences\
    \ = S.split(/[.?!]/);\n    let boredoms = 0;\n    for (let s of sentences) {\n\
    \        if (s.trim().startsWith(\"I\")) {\n            boredoms++;\n        }\n\
    \    }\n    return boredoms;\n}\n", "    let bored = 0;\n    let words = S.split(\"\
    \ \");\n    for (let i = 0; i < words.length; i++) {\n        if (words[i] ===\
    \ \"I\") {\n            bored++;\n        }\n    }\n    return bored;\n}\n", " \
    \ return (S.match(/I /g) || []).length;\n}\n\nconsole.log(is_bored(\"The sky is\
    \ blue. The sun is shining. I love this weather\"));\n", "    let strs = S.split('.');\n\
    \    let count = 0;\n    for (let str of strs) {\n        let words = str.split('\
    \ ');\n        if (words[0] === 'I') {\n            count += 1;\n        }\n \
    \   }\n    return count;\n}\n", "    const matches = S.match(/I.*?[\\.\\?\\!]/g);\n\
    \    return matches ? matches.length : 0;\n}\n", "    let sentences = S.split(/(?<=[.!?])/);\n\
    \    let boredoms = 0;\n    sentences.forEach(sentence => {\n        if (sentence.startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n",
  "  let boredoms = 0;\n  const sentences = S.split(/[.!?]/g);\n  for (let sentence\
    \ of sentences) {\n    if (sentence.trim()[0] === \"I\") {\n      boredoms++;\n\
    \    }\n  }\n  return boredoms;\n}\n\nconsole.log(is_bored(\"This is a boring\
    \ statement\"));\nconsole.log(is_bored(\"I am bored\"));\nconsole.log(is_bored(\"\
    I am not bored\"));\nconsole.log(is_bored(\"I'm not bored\"));\nconsole.log(is_bored(\"\
    It's a boring day\"));\nconsole.log(is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\"));\nconsole.log(is_bored(\"This is a boring statement.\"\
    ));\nconsole.log(is_bored(\"I'm not bored. I'm really not bored.\"));\nconsole.log(is_bored(\"\
    I'm not bored! I'm really not bored!\"));\nconsole.log(is_bored(\"This is a boring\
    \ statement?\"));\nconsole.log(is_bored(\"I'm not bored! I'm really not bored?\"\
    ));\nconsole.log(is_bored(\"I'm not bored? I'm really not bored!\"));\nconsole.log(is_bored(\"\
    I'm not bored. I'm really not bored!\"));\nconsole.log(is_bored(\"I'm not bored?\
    \ I'm really not bored.\"));\nconsole.log(is_bored(\"I'm not bored. I'm really\
    \ not bored?\"));\nconsole.log(is_bored(\"I'm not bored! I'm really not bored.\"\
    ));\nconsole.log(is_bored(\"I'm not bored! I'm really not bored?\"));\nconsole.log(is_bored(\"\
    I'm not bored? I'm really not bored.\"));\nconsole.log(is_bored(\"I'm not bored?\
    \ I'm really not bored!\"));\nconsole.log(is_bored(\"I'm not bored! I'm really\
    \ not bored.\"));\nconsole.log(is_bored(\"I'm not bored. I'm really not bored.\"\
    ));\nconsole.log(is_bored(\"I'm", "    return S.split(/[.?!]/)\n        .filter(s\
    \ => s.trim().startsWith('I'))\n        .length;\n}\n", "  return S.split(/[?!.]/).reduce((boredoms,\
    \ s) => boredoms + (s.startsWith('I') ? 1 : 0), 0);\n}\n", "    let sentence:\
    \ string[] = S.split(/[.?!]/g);\n    let count: number = 0;\n    for (let i: number\
    \ = 0; i < sentence.length; i++) {\n        let words: string[] = sentence[i].split(\"\
    \ \");\n        if (words[0] === \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;\n}\n", "  const sentences = S.split(/[.?!]/);\n  const\
    \ boreds = sentences.filter(s => s.startsWith(\"I\"));\n  return boreds.length;\n\
    }", "    let boredoms = 0;\n    let regex = /\\s*I\\s+/;\n    let sentences =\
    \ S.split(/[.!?]/);\n    for (let sentence of sentences) {\n        if (regex.test(sentence))\
    \ boredoms++;\n    }\n    return boredoms;\n}\n\nconsole.log(is_bored(\"The sky\
    \ is blue. The sun is shining. I love this weather\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather.\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather!\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!?\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather!?!\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!!!\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!?!!\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!?!?!!\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!!\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!?\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!!\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!?\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather?!\"));\nconsole.log(is_",
  "    return 0;\n}\n", "  let r: number = 0;\n  S.split(\".\").forEach(x => {\n \
    \   x.split(\"!\").forEach(y => {\n      y.split(\"?\").forEach(z => {\n     \
    \   if (z.trim()[0] === \"I\") {\n          r += 1;\n        }\n      });\n  \
    \  });\n  });\n  return r;\n}\n", "    let count = 0;\n    let sen = S.split(/[.?!]/);\n\
    \    for (let i = 0; i < sen.length; i++) {\n        if (sen[i].match(/^( )*I(\
    \ )/)) count++;\n    }\n    return count;\n}\n", "  const regex = /(^I |\\sI )/g;\n\
    \  const found = S.match(regex);\n  return found ? found.length : 0;\n}\n", " \
    \ let count = 0;\n  let is_bored_string = \"I\";\n  let is_not_bored_string =\
    \ \"\";\n  let is_bored_index = S.indexOf(is_bored_string);\n  while (is_bored_index\
    \ !== -1) {\n    count++;\n    is_not_bored_string = S.substring(is_bored_index);\n\
    \    is_bored_index = is_not_bored_string.indexOf(is_bored_string);\n  }\n  return\
    \ count;\n}\n", "  let i: number = 0;\n  const sen: string[] = S.split(/[.?!]/);\n\
    \  sen.forEach((v: string) => {\n    if (v.startsWith(\"I\")) {\n      i++;\n\
    \    }\n  });\n  return i;\n}\n", "    return S.split(/\\.|\\?|\\!/).filter(s\
    \ => s.match(/^\\s*I/)).length;\n}\n", "    return 0;\n}\n\nexport const isBored\
    \ = is_bored;", "  let count = 0;\n  const sentences = S.split(/[.?!]/);\n  for\
    \ (let sentence of sentences) {\n    if (sentence.split(' ')[0] === 'I') {\n \
    \     count++;\n    }\n  }\n  return count;\n}\n", "    let words = S.split(/[.!?]/);\n\
    \    words = words.filter(word => word.length > 1);\n    let boredoms = 0;\n \
    \   for (let i in words) {\n        let word = words[i].trim();\n        let firstWord\
    \ = word.split(' ')[0];\n        if (firstWord == 'I') {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "  const sentences = S.split(/[.?!]/);\n\
    \  let boredoms = 0;\n  for (let i = 0; i < sentences.length; i++) {\n    if (sentences[i].trim().startsWith(\"\
    I\")) {\n      boredoms++;\n    }\n  }\n  return boredoms;\n}\n", "    return\
    \ S.split(/[.?!]/).filter(el => el.startsWith('I')).length;\n}\n", "  if (S.indexOf(\"\
    .\") == -1 && S.indexOf(\"?\") == -1 && S.indexOf(\"!\") == -1)\n    return S.split(\"\
    \ \").find(i => i == \"I\") ? 1 : 0;\n  else {\n    return S.split(/\\.|\\?|\\\
    !/).reduce((a, b) => {\n      if (b.indexOf(\"I\") == 0) a++;\n      return a;\n\
    \    }, 0);\n  }\n}\n", "    const sentence_list = S.split(/[!?.]/g);\n    let\
    \ boredom_count = 0;\n    sentence_list.forEach(sentence => {\n        const words\
    \ = sentence.split(' ');\n        if (words[0] === 'I') {\n            boredom_count\
    \ += 1;\n        }\n    });\n    return boredom_count;\n}\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\"));\n", "    let reg\
    \ = /\\s*(I\\s*)/;\n    let res = 0;\n    let newS = S.split(/[.!?]/);\n    for\
    \ (let i = 0; i < newS.length; i++) {\n        if (reg.test(newS[i])) {\n    \
    \        res++;\n        }\n    }\n    return res;\n}\n", "    let num: number\
    \ = 0;\n    S = S.replace(/(\\?|\\!|\\.)/g, \"$1 \").replace(/\\s+/g, \" \");\n\
    \    let match: string[] = S.match(/I\\s/g);\n    if (match) {\n        num =\
    \ match.length;\n    }\n    return num;\n}\n", "  let boredoms = 0;\n  let words\
    \ = S.split(/[.!?]/g);\n  for (let i = 0; i < words.length; i++) {\n    if (words[i].charAt(0)\
    \ === \"I\") {\n      boredoms++;\n    }\n  }\n  return boredoms;\n}\nconsole.log(is_bored(\"\
    Hello world\"));\nconsole.log(is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\"));\n", "    let boredoms = 0;\n    let inSentence = false;\n\
    \    let inWord = false;\n    let startI = false;\n    for (let c of S) {\n  \
    \      if (!inSentence) {\n            if (c == 'I') {\n                inSentence\
    \ = true;\n                startI = true;\n            }\n        } else {\n \
    \           if (c == ' ' || c == ',') {\n                if (startI) {\n     \
    \               startI = false;\n                    inWord = true;\n        \
    \        }\n            } else if (!inWord) {\n                inSentence = false;\n\
    \            } else if (c == '.' || c == '?' || c == '!') {\n                inSentence\
    \ = false;\n                inWord = false;\n                boredoms++;\n   \
    \         }\n        }\n    }\n    return boredoms;\n}\n", "    // your code here\n\
    \    let arr = S.split(\" \");\n    let boredoms = 0;\n    for (let i = 0; i <\
    \ arr.length; i++) {\n        if (arr[i] === \"I\") {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "    let sentence: string[] = S.split(/\\\
    .|\\?|\\!/g);\n    let count: number = 0;\n    for (let i: number = 0; i < sentence.length;\
    \ i++) {\n        let sen: string = sentence[i].trim();\n        if (sen[0] ===\
    \ 'I') {\n            count++;\n        }\n    }\n    return count;\n}\n", " \
    \   let count = 0;\n    const sentences = S.split(/[.?!]/);\n    for (let i =\
    \ 0; i < sentences.length; i++) {\n        const words = sentences[i].split(\"\
    \ \");\n        if (words[0] === \"I\") {\n            count++;\n        }\n \
    \   }\n    return count;\n}\nconsole.log(is_bored(\"The sky is blue. The sun is\
    \ shining. I love this weather\"));\nconsole.log(is_bored(\"The sky is blue. The\
    \ sun is shining.\"));\nconsole.log(is_bored(\"Lorem ipsum dolor sit amet, consectetur\
    \ adipiscing elit. Proin dapibus nibh ac est convallis varius. Pellentesque posuere\
    \ quis ipsum nec bibendum. Nam at tortor sit amet sem auctor tempus. Aenean feugiat\
    \ nulla at augue hendrerit feugiat. Aenean sit amet mauris vitae ante fringilla\
    \ aliquam vitae eu ex. Cras ac urna in dolor congue fermentum. Nulla facilisi.\
    \ Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi.\
    \ Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi.\
    \ Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi.\
    \ Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi.\
    \ Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi.\
    \ Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi.\
    \ Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi.\
    \ Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi. Nulla facilisi.\
    \ Nulla fac", "  const sentence: string[] = S.split(/[\\.!?]/);\n  let count:\
    \ number = 0;\n  for (let i = 0; i < sentence.length; i++) {\n    if (sentence[i].split(\"\
    \ \")[0] === \"I\") {\n      count++;\n    }\n  }\n  return count;\n}\n", "  \
    \  let boredoms: number = 0;\n    let sentences: string[] = S.split(/[.?!]/g);\n\
    \    sentences.forEach(sentence => {\n        if (sentence.trim().startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n",
  "    const words = S.split(/[.,?!]/);\n    let boring = 0;\n    for (let i = 0;\
    \ i < words.length; i++) {\n        if (words[i].startsWith(\"I\")) {\n      \
    \      boring++;\n        }\n    }\n    return boring;\n}\n", "    let matches\
    \ = S.match(/\\s(I)\\s/g);\n    return matches ? matches.length : 0;\n}\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\"));\n", "    let temp\
    \ = S.split(/[!.?]/g);\n    let result = 0;\n    for (let i = 0; i < temp.length;\
    \ i++) {\n        if (temp[i].startsWith(\"I\")) {\n            result++;\n  \
    \      }\n    }\n    return result;\n}\n", "    let count = 0;\n    let words\
    \ = S.split(\" \");\n    let start = 0;\n    while (start < words.length) {\n\
    \        if (words[start] === \"I\") {\n            count++;\n        }\n    \
    \    start++;\n    }\n    return count;\n}\nconsole.log(is_bored(\"The sky is\
    \ blue. The sun is shining. I love this weather\"));", "    // Add code here\n\
    \    let sentences = S.split(/[\\.\\?\\!]/);\n    let boredoms = 0;\n    for (let\
    \ sentence of sentences) {\n        if (sentence.trim().startsWith(\"I\")) {\n\
    \            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\n", " \
    \ const str = S.split(\".\");\n  let boredoms = 0;\n  str.forEach((item) => {\n\
    \    if (item.charAt(0) === \"I\") {\n      boredoms++;\n    }\n  });\n  return\
    \ boredoms;\n}\n\nconsole.log(is_bored(\"Hello world\"));\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\"));", "  let boredoms\
    \ = 0;\n  const sentences = S.split(/[.?!]/g);\n  for (let i = 0; i < sentences.length;\
    \ i++) {\n    if (sentences[i].trim().indexOf(\"I\") === 0) {\n      boredoms++;\n\
    \    }\n  }\n  return boredoms;\n}\n\nconsole.log(is_bored(\"I am bored\"));\n\
    console.log(is_bored(\"Hello world\"));\nconsole.log(is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\"));\n", "    const s: Array<string>\
    \ = S.split('.').join('.').split('?').join('?').split('!').join('!').split('.').join('.').split('\
    \ ');\n    let i: number = 0;\n    s.forEach(element => {\n        if (element\
    \ === 'I') {\n            i++;\n        }\n    });\n    return i;\n}\n", "  //\
    \ Your code here.\n  const sentences = S.split(/[\\.!\\?]/);\n  return sentences.filter(x\
    \ => x.trim().startsWith(\"I\")).length;\n}\n", "    let boredoms = 0;\n    let\
    \ sentences = S.split(/[!.?]/);\n    for (let sentence of sentences) {\n     \
    \   if (sentence.match(/^I/)) boredoms++;\n    }\n    return boredoms;\n}\n\n\
    describe(\"is_bored\", function() {\n    it(\"\", function() {\n        assert.equal(is_bored(\"\
    Hello world\"), 0);\n        assert.equal(is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\"), 1);\n        assert.equal(is_bored(\"The\
    \ sky is blue. The sun is shining. I love this weather? I love this weather!\"\
    ), 2);\n    });\n});", "  let x = 0;\n  let s = S.split(\" \");\n  for (let i\
    \ = 0; i < s.length; i++) {\n    if (s[i] === \"I\") {\n      x++;\n    }\n  }\n\
    \  return x;\n}\nconsole.log(is_bored(\"I am bored\"));\nconsole.log(is_bored(\"\
    I am boring\"));\nconsole.log(is_bored(\"I am not Boring\"));\n", "    let boredoms\
    \ = 0;\n    let arr = S.split(/[!.?]/);\n    let i = 0;\n    for (i = 0; i < arr.length;\
    \ i++) {\n        let words = arr[i].split(\" \");\n        if (words[0] === \"\
    I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n",
  "  let check = S.split(/[.!?]/);\n  let boredoms = 0;\n  for (let i = 0; i < check.length;\
    \ i++) {\n    if (check[i].indexOf(\"I\") === 0) {\n      boredoms++;\n    }\n\
    \  }\n  return boredoms;\n}\n", "  let array = S.split(\".\");\n  let count =\
    \ 0;\n  array.forEach((element) => {\n    let words = element.split(\" \");\n\
    \    if (words[0] === \"I\") {\n      count++;\n    }\n  });\n  return count;\n\
    }\n", "  let numBoredoms = 0;\n  const sentences = S.split(/[.?!]/);\n  sentences.forEach((sentence)\
    \ => {\n    if (sentence.startsWith(\"I\")) {\n      numBoredoms++;\n    }\n \
    \ });\n  return numBoredoms;\n}", "  let count = 0;\n  S.split(\"\").map((chr,\
    \ i) => {\n    if (\n      chr === \"I\" &&\n      (S[i - 1] === \".\" || S[i\
    \ - 1] === \"?\" || S[i - 1] === \"!\")\n    ) {\n      count++;\n    }\n  });\n\
    \  return count;\n}\n", "    let sentences = S.split(/[.?!]/);\n    let boredoms\
    \ = 0;\n    for (let sentence of sentences) {\n        let sentence_arr = sentence.split('\
    \ ');\n        if (sentence_arr[0] === 'I') {\n            boredoms++;\n     \
    \   }\n    }\n    return boredoms;\n}\n", "    var result = 0;\n    S = S.toLowerCase();\n\
    \    var str_arr = S.split(/[.?!]/);\n    for (var i = 0; i < str_arr.length;\
    \ i++) {\n        if (str_arr[i].indexOf(\"i\") == 0) {\n            result++;\n\
    \        }\n    }\n    return result;\n}\n", "  let boredoms: number = 0;\n  const\
    \ sentences: string[] = S.split(/[.?!]/g);\n  sentences.forEach((sentence: string)\
    \ => {\n    if (sentence.startsWith(\"I\")) {\n      boredoms++;\n    }\n  });\n\
    \  return boredoms;\n}\n", "  let boredoms = 0;\n  let capital_letter_i = false;\n\
    \  let end_sentence = false;\n  for (let i = 0; i < S.length; i++) {\n    // first\
    \ letter of sentence\n    if (\n      S[i - 1] === \".\" ||\n      S[i - 1] ===\
    \ \"?\" ||\n      S[i - 1] === \"!\" ||\n      S[i - 1] === undefined\n    ) {\n\
    \      if (S[i] === \"I\") {\n        capital_letter_i = true;\n      } else {\n\
    \        capital_letter_i = false;\n      }\n    }\n    // end of sentence\n \
    \   if (S[i] === \".\" || S[i] === \"?\" || S[i] === \"!\") {\n      end_sentence\
    \ = true;\n    } else {\n      end_sentence = false;\n    }\n    if (capital_letter_i\
    \ && end_sentence) {\n      boredoms++;\n    }\n  }\n  return boredoms;\n}\n",
  "    let sentances = S.split(/[.!?]/);\n    return sentances.filter(s => s.trim().indexOf(\"\
    I\") === 0).length;\n}\n", "  let bored = 0;\n  let sentence = S.split(/[!.?]/);\n\
    \  sentence.forEach(s => {\n    if (s.indexOf(\"I\") == 0) {\n      bored++;\n\
    \    }\n  });\n  return bored;\n}\n", "  const sentences = S.split(/[.?!]/);\n\
    \  const boredoms = sentences.filter(sentence => sentence.split(\" \")[0] ===\
    \ \"I\");\n  return boredoms.length;\n}\n", "    let boredoms = 0;\n    let arrayOfStrings\
    \ = S.split(/[.?!]/);\n    for (let i = 0; i < arrayOfStrings.length; i++) {\n\
    \        if (arrayOfStrings[i].startsWith(\"I\")) {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n", "  let bored = 0;\n  S.split(/[!.?]/).forEach(sentence\
    \ => {\n    const words = sentence.split(' ');\n    if (words[0] === 'I') {\n\
    \      bored++;\n    }\n  });\n  return bored;\n}\n\nconst test: string = 'The\
    \ sky is blue. The sun is shining. I love this weather!';\nconsole.log(is_bored(test));",
  "  return S.split(/[.?!]/).filter(x => x.trim().startsWith(\"I\")).length;\n}\n\
    console.log(is_bored(\"I am bored today, I want to go somewhere.\"));\n", "  \
    \  let boredoms: number = 0;\n    let sentence: string[] = S.split(/[\\.\\?!]/);\n\
    \    for (let i = 0; i < sentence.length; i++) {\n        let word: string[] =\
    \ sentence[i].split(\" \");\n        for (let j = 0; j < word.length; j++) {\n\
    \            if (word[j] === \"I\") {\n                boredoms++;\n         \
    \       break;\n            }\n        }\n    }\n    return boredoms;\n}", " \
    \   let boredoms: number = 0;\n    let sentences: string[] = S.split(/[.!?]/);\n\
    \    for (let i = 0; i < sentences.length; i++) {\n        if (sentences[i].substring(0,\
    \ 2) === \"I \") {\n            boredoms++;\n        }\n    }\n    return boredoms;\n\
    }\n", "    let boredoms: number = 0;\n    let words: string[] = S.split(\" \"\
    );\n    for (let i = 0; i < words.length; i++) {\n        if (words[i] === \"\
    I\") {\n            boredoms += 1;\n        }\n    }\n    return boredoms;\n}\n",
  "    const st = new StringTokenizer(S);\n    let cnt = 0;\n    while (st.hasMoreTokens())\
    \ {\n        const token = st.nextToken();\n        if (token.startsWith(\"I\"\
    )) {\n            cnt++;\n        }\n    }\n    return cnt;\n}", "  const r =\
    \ S.split(\".\").filter(item => item.trim().startsWith(\"I\"));\n  return r.length;\n\
    }\n", "  let count = 0;\n  let arr = S.split(\" \");\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] === \"I\") {\n      count++;\n    }\n  }\n  return count;\n\
    }\nconsole.log(is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ));\n", "    let boredom = 0;\n    let i = 0;\n    while (i < S.length) {\n  \
    \      let j = i;\n        while (j < S.length && S[j] !== '.' && S[j] !== '?'\
    \ && S[j] !== '!') {\n            j++;\n        }\n        let words = S.substring(i,\
    \ j).split(' ');\n        if (words.length > 0 && words[0] === 'I') {\n      \
    \      boredom++;\n        }\n        i = j + 1;\n    }\n    return boredom;\n\
    }", "    let boredoms = 0;\n    for (let i = 0; i < S.length; i++) {\n       \
    \ if (S[i] === 'I') {\n            boredoms++;\n        }\n    }\n    return boredoms;\n\
    }\n", "    let count = 0;\n    const sentenceArray = S.split(/[.!?]/);\n    sentenceArray.forEach(sentence\
    \ => {\n        const words = sentence.split(\" \");\n        if (words[0] ===\
    \ \"I\") {\n            count++;\n        }\n    });\n    return count;\n}\n",
  "  let boredoms: number = 0;\n  S.split(\" \").forEach((word) => {\n    if (word.length\
    \ > 0 && word[0] === \"I\") {\n      boredoms++;\n    }\n  });\n  return boredoms;\n\
    }\n", "    let arrS = S.split(/[.!?]+/);\n    let boredoms = 0;\n    arrS.forEach(sentence\
    \ => {\n        let arrSentence = sentence.split(' ');\n        if (arrSentence[0]\
    \ === 'I') boredoms++;\n    });\n    return boredoms;\n}\n", "    let result =\
    \ 0;\n    let sentences = S.split(/[.?!]/);\n    for (let sentence of sentences)\
    \ {\n        if (sentence.split(' ')[0] === 'I') result++;\n    }\n    return\
    \ result;\n}\n", "  let re = /[\\.\\?\\!]\\s+/g;\n  let sentences = S.split(re);\n\
    \  let boredoms = 0;\n  sentences.forEach(sentence => {\n    if (sentence.charAt(0)\
    \ === \"I\") {\n      boredoms++;\n    }\n  });\n  return boredoms;\n}\nconsole.log(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\"));\n", "    return\
    \ S.split(/[.?!]/)\n        .filter(s => s.trim().indexOf('I') === 0)\n      \
    \  .length;\n}\n", "  let result = 0;\n  const stringArray = S.split(\" \");\n\
    \  const length = stringArray.length;\n  stringArray.forEach((word, index) =>\
    \ {\n    if (word === \"I\" && index !== length - 1) {\n      result += 1;\n \
    \   }\n  });\n  return result;\n}\n", "    const sentences = S.split(/[.?!]/);\n\
    \    return sentences.filter(s => s.length > 0 && s.toLowerCase().startsWith('i')).length;\n\
    }\n", "  return S.split(/[.?!]/).filter(s => s.trim().startsWith('I')).length;\n\
    }\n", "  const sentences = S.split(/[!?.]/g);\n  let boredoms = 0;\n  for (const\
    \ sentence of sentences) {\n    const words = sentence.split(\" \");\n    if (words[0]\
    \ === \"I\") {\n      boredoms++;\n    }\n  }\n  return boredoms;\n}\n", "   \
    \ let boredoms = 0;\n    let sentences = S.split(/[.!?]/);\n    for (let i = 0;\
    \ i < sentences.length; i++) {\n        let words = sentences[i].split(' ');\n\
    \        if (words[0] === 'I') boredoms++;\n    }\n    return boredoms;\n}\n",
  "  // your code here\n  let arr = S.split(/[.!?]/g);\n  return arr.filter(str =>\
    \ str.indexOf(\"I\") === 0).length;\n}\nconsole.log(is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\"));"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_91_is_bored
language: ts
prompt: "//You'll be given a string of words, and your task is to count the number\n\
  // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
  \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\"\
  )\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
  )\n// 1\nfunction is_bored(S: string): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"\
  ),0);\n  assert.deepEqual(candidate(\"Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"\
  I love It !\"),1);\n  assert.deepEqual(candidate(\"bIt\"),0);\n  assert.deepEqual(candidate(\"\
  I feel good today. I will be productive. will kill It\"),2);\n  assert.deepEqual(candidate(\"\
  You and I are going for a walk\"),0);\n}\n\ntest();"
completions: ["    let boredoms: number = 0;\n    let sentences: string[] = S.split(/[.!?]/);\n\
    \    for (let i in sentences) {\n        let words: string[] = sentences[i].split(\"\
    \ \");\n        for (let j in words) {\n            if (words[j] === \"I\") {\n\
    \                boredoms += 1;\n                break;\n            }\n     \
    \   }\n    }\n    return boredoms;\n}\nconsole.log(is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\"));", "    let arr = S.split(/\\.|\\\
    ?|\\!/);\n    let boredoms = 0;\n    arr.forEach(sentence => {\n        if (sentence.startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    });\n    return boredoms;\n}\n",
  "    return S.split(/[.?!]/).filter(x => x.trim().startsWith(\"I\")).length;\n}\n",
  "    let boredoms = 0;\n    let words = S.split(/\\.|\\?|\\!/);\n    words.forEach(word\
    \ => {\n        if (word.startsWith(\"I\")) {\n            boredoms += 1;\n  \
    \      }\n    });\n    return boredoms;\n}\n\nconsole.log(is_bored(\"The sky is\
    \ blue. The sun is shining. I love this weather\"));", "    let sentences = S.split(/[.?!]/);\n\
    \    let boredoms = 0;\n    for (let sentence of sentences) {\n        if (sentence.split(\"\
    \ \")[0] === \"I\") {\n            boredoms++;\n        }\n    }\n    return boredoms;\n\
    }\n", "    const boredoms = S.split(/[.?!]/).filter(word => word.startsWith('I'));\n\
    \    return boredoms.length;\n}\n", "    let words: string[] = S.split(/[.?!]/);\n\
    \    let count: number = 0;\n    for (let w of words) {\n        if (w.startsWith(\"\
    I\")) {\n            count++;\n        }\n    }\n    return count;\n}\n", "  \
    \  const boredoms = S.split('. ').filter(sentence => sentence.startsWith('I'));\n\
    \    return boredoms.length;\n}\n", "  const words = S.split(\" \");\n  let boredom\
    \ = 0;\n  for (let i = 0; i < words.length; i++) {\n    if (words[i] === \"I\"\
    ) {\n      boredom++;\n    }\n  }\n  return boredom;\n}\n", "  let counter = 0;\n\
    \  let array = S.split(\" \");\n  for (let i = 0; i < array.length; i++) {\n \
    \   if (array[i] === \"I\") {\n      counter++;\n    }\n  }\n  return counter;\n\
    }\n", "    let result = 0;\n    const words = S.split(/[.?!]/);\n    words.forEach(word\
    \ => {\n        if (word.startsWith('I')) result++;\n    });\n    return result;\n\
    }\n", "  const index = S.split(\".\").findIndex(x => x.trim().startsWith(\"I\"\
    ));\n  if (index > -1) {\n    return index + 1;\n  }\n  return 0;\n}\n", "   \
    \ return S.split(/[.?!]/).filter(x => x.trim().startsWith(\"I\")).length;\n}\n",
  "  let boredoms: number = 0;\n  S.split(\" \").forEach((word) => {\n    if (word[0]\
    \ === \"I\") {\n      boredoms++;\n    }\n  });\n  return boredoms;\n}\n", " \
    \   let boredoms = 0;\n    const sentences = S.split(/[\\.!\\?]+/);\n    for (let\
    \ i = 0; i < sentences.length; i++) {\n        if (sentences[i].startsWith(\"\
    I\")) {\n            boredoms++;\n        }\n    }\n    return boredoms;\n}\n\n\
    let test_S = \"Hello world\";\nconsole.log(is_bored(test_S));\ntest_S = \"The\
    \ sky is blue. The sun is shining. I love this weather\";\nconsole.log(is_bored(test_S));\n",
  "    let sentences = S.split(/[?!.]/);\n    return sentences.filter(s => s.trim().startsWith(\"\
    I\")).length;\n}\n", "  const senetences = S.split(/[.!?]/);\n  const boredoms\
    \ = senetences.filter(s => s.trim().startsWith(\"I\"));\n  return boredoms.length;\n\
    }\n", "    return S.match(/I.*?[.?!]/g) ? S.match(/I.*?[.?!]/g).length : 0;\n}",
  "    let boredoms = 0;\n    S.split('.').forEach( s => {\n        s.split('?').forEach(\
    \ t => {\n            t.split('!').forEach( u => {\n                if (u.trim().split('\
    \ ')[0] === 'I') {\n                    boredoms++;\n                }\n     \
    \       });\n        });\n    });\n    return boredoms;\n}\n\nconsole.log( is_bored('I\
    \ am definitely not bored.') );\nconsole.log( is_bored('The sky is blue. The sun\
    \ is shining. I love this weather') );\nconsole.log( is_bored('I am definitely\
    \ not bored. The sky is blue. The sun is shining. I love this weather') );\nconsole.log(\
    \ is_bored('?') );\nconsole.log( is_bored('I!') );\nconsole.log( is_bored('I?')\
    \ );\nconsole.log( is_bored('!?I!?') );\nconsole.log( is_bored('I?!') );\nconsole.log(\
    \ is_bored('I') );\nconsole.log( is_bored('I.I') );\nconsole.log( is_bored('I.I.I')\
    \ );\nconsole.log( is_bored('I.I.I.I') );\nconsole.log( is_bored('I.I.I.I.I')\
    \ );\nconsole.log( is_bored('I.I.I.I.I.I') );\nconsole.log( is_bored('I.I.I.I.I.I.I')\
    \ );\nconsole.log( is_bored('I.I.I.I.I.I.I.I') );\nconsole.log( is_bored('I.I.I.I.I.I.I.I.I')\
    \ );\nconsole.log( is_bored('I.I.I.I.I.I.I.I.I.I') );\nconsole.log( is_bored('I.I.I.I.I.I.I.I.I.I.I')\
    \ );\nconsole.log( is_bored('I.I.I.", "    const sentences = S.split(/[\\.\\?!]/);\n\
    \    return sentences.filter(sentence => sentence.startsWith('I')).length;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

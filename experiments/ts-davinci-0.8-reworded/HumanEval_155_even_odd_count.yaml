name: HumanEval_155_even_odd_count
language: ts
prompt: "//Given an integer. return an array that has the number of even and odd digits\
  \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n// >>> even_odd_count(123)\n\
  // [1, 2]\nfunction even_odd_count(num: number): [number, number] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
  \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
  \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
  \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
  \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
completions: ["  let evens = 0;\n  let odds = 0;\n  let arr = Math.abs(num).toString().split(\"\
    \");\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n\
    \      evens++;\n    } else {\n      odds++;\n    }\n  }\n  return [evens, odds];\n\
    }\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\nconsole.log(even_odd_count(1000));\n\
    console.log(even_odd_count(100100100));\n", "  let evens = 0;\n  let odds = 0;\n\
    \  num = Math.abs(num);\n  while (num > 0) {\n    if (num % 2 === 0) {\n     \
    \ evens++;\n    } else {\n      odds++;\n    }\n    num = Math.floor(num / 10);\n\
    \  }\n  return [evens, odds];\n}\n\ntest(\"even_odd_count\", () => {\n  expect(even_odd_count(-12)).toEqual([1,\
    \ 1]);\n  expect(even_odd_count(123)).toEqual([1, 2]);\n});\n", "    let even_count\
    \ = 0;\n    let odd_count = 0;\n    let arr = [];\n    let num_string = num.toString();\n\
    \    for (let i = 0; i < num_string.length; i++) {\n        if (num_string[i]\
    \ % 2 == 0) {\n            even_count++;\n        } else {\n            odd_count++;\n\
    \        }\n    }\n    arr.push(even_count);\n    arr.push(odd_count);\n    return\
    \ arr;\n}\n", "    let even: number = 0;\n    let odd: number = 0;\n    const\
    \ str = Math.abs(num).toString();\n    for (let i = 0; i < str.length; i++) {\n\
    \        const current = Number(str[i]);\n        if (current % 2 === 0) {\n \
    \           even++;\n        } else {\n            odd++;\n        }\n    }\n\
    \    return [even, odd];\n}\n", "  let evens = 0;\n  let odds = 0;\n  const arr\
    \ = num.toString().split(\"\");\n  for (let i = 0; i < arr.length; i++) {\n  \
    \  const element = arr[i];\n    parseInt(element) % 2 == 0 ? evens++ : odds++;\n\
    \  }\n  return [evens, odds];\n}\n", "    let even = 0;\n    let odd = 0;\n  \
    \  let n = num.toString();\n    for (let i = 0; i < n.length; i++) {\n       \
    \ if (n[i] % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n\
    \        }\n    }\n    return [even, odd];\n}\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n", "    let even_count = 0;\n    let odd_count\
    \ = 0;\n    let div = Math.abs(num);\n    while (div > 0) {\n        let digit\
    \ = div % 10;\n        if (digit % 2 == 0) {\n            even_count += 1;\n \
    \       } else {\n            odd_count += 1;\n        }\n        div = Math.floor(div\
    \ / 10);\n    }\n    return [even_count, odd_count];\n}\n", "    // TODO: implementation\n\
    \    return [0, 0];\n}\n", "  const result: [number, number] = [0, 0];\n  const\
    \ numString = num.toString();\n  for (let i = 0; i < numString.length; i++) {\n\
    \    const digit = Number(numString[i]);\n    if (digit % 2 === 0) {\n      result[0]++;\n\
    \    } else {\n      result[1]++;\n    }\n  }\n  return result;\n}\n", "  let\
    \ even = 0;\n  let odd = 0;\n  let number = num;\n  while (number != 0) {\n  \
    \  if (number % 2 == 0) {\n      even++;\n    } else {\n      odd++;\n    }\n\
    \    number = Math.floor(number / 10);\n  }\n  return [even, odd];\n}\n", "  \
    \  let even = 0;\n    let odd = 0;\n    const numArray = num.toString().split('');\n\
    \    for (let i = 0; i < numArray.length; i++) {\n        const char = numArray[i];\n\
    \        if (char === '-') {\n            continue;\n        }\n        const\
    \ digit = parseInt(char);\n        if (digit % 2 === 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return [even, odd];\n\
    }\n\nconsole.log(even_odd_count(-12)); // [1, 1]\nconsole.log(even_odd_count(123));\
    \ // [1, 2]\n", "  const numString: string = num.toString();\n  let evenNumber\
    \ = 0;\n  let oddNumber = 0;\n  for (let i = 0; i < numString.length; i++) {\n\
    \    const number = parseInt(numString[i]);\n    if (number % 2 === 0) {\n   \
    \   evenNumber += 1;\n    } else {\n      oddNumber += 1;\n    }\n  }\n  return\
    \ [evenNumber, oddNumber];\n}\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n",
  "    let even: number = 0;\n    let odd: number = 0;\n    while (num !== 0) {\n\
    \        if (num % 2 === 0) {\n            even++;\n        } else {\n       \
    \     odd++;\n        }\n        num = Math.floor(num / 10);\n    }\n    return\
    \ [even, odd];\n}\n\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n\
    console.log(even_odd_count(0));", "  let even = 0;\n  let odd = 0;\n  for (let\
    \ index = 0; index < num.toString().length; index++) {\n    if (Number(num.toString()[index])\
    \ % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n  }\n  return\
    \ [even, odd];\n}\n", "    const str = Math.abs(num).toString();\n    const even\
    \ = str.split('').reduce((acc, curr) => {\n        if (Number(curr) % 2 === 0)\
    \ acc++;\n        return acc;\n    }, 0);\n    const odd = str.length - even;\n\
    \    return [even, odd];\n}\n", "    let even = 0;\n    let odd = 0;\n    let\
    \ digit = 0;\n    while (num !== 0) {\n        digit = num % 10;\n        if (digit\
    \ % 2 === 0) {\n            even++;\n        } else {\n            odd++;\n  \
    \      }\n        num = Math.floor(num / 10);\n    }\n    return [even, odd];\n\
    }\n", "  let even: number = 0;\n  let odd: number = 0;\n  let abs: number = Math.abs(num);\n\
    \  while (abs > 0) {\n    let digit: number = abs % 10;\n    if (digit % 2 ===\
    \ 0) {\n      even++;\n    } else {\n      odd++;\n    }\n    abs = Math.floor(abs\
    \ / 10);\n  }\n  return [even, odd];\n}", "    let evens = 0;\n    let odds =\
    \ 0;\n    let newNum = num.toString().split('');\n    for (let i = 0; i < newNum.length;\
    \ i++) {\n        if (newNum[i] % 2 === 0) {\n            evens++;\n        }\
    \ else {\n            odds++;\n        }\n    }\n    return [evens, odds];\n}\n",
  "    let even = 0;\n    let odd = 0;\n    num = Math.abs(num);\n    while (num !==\
    \ 0) {\n        if (num % 2 === 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num = Math.floor(num / 10);\n    }\n \
    \   return [even, odd];\n}\n", "    let even_count = 0\n    let odd_count = 0\n\
    \    for (let digit of num.toString()) {\n        if (parseInt(digit) % 2 ===\
    \ 0) {\n            even_count++\n        } else {\n            odd_count++\n\
    \        }\n    }\n    return [even_count, odd_count]\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

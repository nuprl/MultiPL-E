name: HumanEval_155_even_odd_count
language: ts
prompt: "//Given an integer. return an array that has the number of even and odd digits\
  \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n// >>> even_odd_count(123)\n\
  // [1, 2]\nfunction even_odd_count(num: number): [number, number] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
  \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
  \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
  \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
  \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
completions: ["  let evens = 0;\n  let odds = 0;\n  let arr = Math.abs(num).toString().split(\"\
    \");\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n\
    \      evens++;\n    } else {\n      odds++;\n    }\n  }\n  return [evens, odds];\n\
    }\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\nconsole.log(even_odd_count(1000));\n\
    console.log(even_odd_count(100100100));\n", "  let evens = 0;\n  let odds = 0;\n\
    \  num = Math.abs(num);\n  while (num > 0) {\n    if (num % 2 === 0) {\n     \
    \ evens++;\n    } else {\n      odds++;\n    }\n    num = Math.floor(num / 10);\n\
    \  }\n  return [evens, odds];\n}\n\ntest(\"even_odd_count\", () => {\n  expect(even_odd_count(-12)).toEqual([1,\
    \ 1]);\n  expect(even_odd_count(123)).toEqual([1, 2]);\n});\n", "    let even_count\
    \ = 0;\n    let odd_count = 0;\n    let arr = [];\n    let num_string = num.toString();\n\
    \    for (let i = 0; i < num_string.length; i++) {\n        if (num_string[i]\
    \ % 2 == 0) {\n            even_count++;\n        } else {\n            odd_count++;\n\
    \        }\n    }\n    arr.push(even_count);\n    arr.push(odd_count);\n    return\
    \ arr;\n}\n", "    let even: number = 0;\n    let odd: number = 0;\n    const\
    \ str = Math.abs(num).toString();\n    for (let i = 0; i < str.length; i++) {\n\
    \        const current = Number(str[i]);\n        if (current % 2 === 0) {\n \
    \           even++;\n        } else {\n            odd++;\n        }\n    }\n\
    \    return [even, odd];\n}\n", "  let evens = 0;\n  let odds = 0;\n  const arr\
    \ = num.toString().split(\"\");\n  for (let i = 0; i < arr.length; i++) {\n  \
    \  const element = arr[i];\n    parseInt(element) % 2 == 0 ? evens++ : odds++;\n\
    \  }\n  return [evens, odds];\n}\n", "    let even = 0;\n    let odd = 0;\n  \
    \  let n = num.toString();\n    for (let i = 0; i < n.length; i++) {\n       \
    \ if (n[i] % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n\
    \        }\n    }\n    return [even, odd];\n}\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n", "    let even_count = 0;\n    let odd_count\
    \ = 0;\n    let div = Math.abs(num);\n    while (div > 0) {\n        let digit\
    \ = div % 10;\n        if (digit % 2 == 0) {\n            even_count += 1;\n \
    \       } else {\n            odd_count += 1;\n        }\n        div = Math.floor(div\
    \ / 10);\n    }\n    return [even_count, odd_count];\n}\n", "    // TODO: implementation\n\
    \    return [0, 0];\n}\n", "  const result: [number, number] = [0, 0];\n  const\
    \ numString = num.toString();\n  for (let i = 0; i < numString.length; i++) {\n\
    \    const digit = Number(numString[i]);\n    if (digit % 2 === 0) {\n      result[0]++;\n\
    \    } else {\n      result[1]++;\n    }\n  }\n  return result;\n}\n", "  let\
    \ even = 0;\n  let odd = 0;\n  let number = num;\n  while (number != 0) {\n  \
    \  if (number % 2 == 0) {\n      even++;\n    } else {\n      odd++;\n    }\n\
    \    number = Math.floor(number / 10);\n  }\n  return [even, odd];\n}\n", "  \
    \  let even = 0;\n    let odd = 0;\n    const numArray = num.toString().split('');\n\
    \    for (let i = 0; i < numArray.length; i++) {\n        const char = numArray[i];\n\
    \        if (char === '-') {\n            continue;\n        }\n        const\
    \ digit = parseInt(char);\n        if (digit % 2 === 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return [even, odd];\n\
    }\n\nconsole.log(even_odd_count(-12)); // [1, 1]\nconsole.log(even_odd_count(123));\
    \ // [1, 2]\n", "  const numString: string = num.toString();\n  let evenNumber\
    \ = 0;\n  let oddNumber = 0;\n  for (let i = 0; i < numString.length; i++) {\n\
    \    const number = parseInt(numString[i]);\n    if (number % 2 === 0) {\n   \
    \   evenNumber += 1;\n    } else {\n      oddNumber += 1;\n    }\n  }\n  return\
    \ [evenNumber, oddNumber];\n}\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n",
  "    let even: number = 0;\n    let odd: number = 0;\n    while (num !== 0) {\n\
    \        if (num % 2 === 0) {\n            even++;\n        } else {\n       \
    \     odd++;\n        }\n        num = Math.floor(num / 10);\n    }\n    return\
    \ [even, odd];\n}\n\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n\
    console.log(even_odd_count(0));", "  let even = 0;\n  let odd = 0;\n  for (let\
    \ index = 0; index < num.toString().length; index++) {\n    if (Number(num.toString()[index])\
    \ % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n  }\n  return\
    \ [even, odd];\n}\n", "    const str = Math.abs(num).toString();\n    const even\
    \ = str.split('').reduce((acc, curr) => {\n        if (Number(curr) % 2 === 0)\
    \ acc++;\n        return acc;\n    }, 0);\n    const odd = str.length - even;\n\
    \    return [even, odd];\n}\n", "    let even = 0;\n    let odd = 0;\n    let\
    \ digit = 0;\n    while (num !== 0) {\n        digit = num % 10;\n        if (digit\
    \ % 2 === 0) {\n            even++;\n        } else {\n            odd++;\n  \
    \      }\n        num = Math.floor(num / 10);\n    }\n    return [even, odd];\n\
    }\n", "  let even: number = 0;\n  let odd: number = 0;\n  let abs: number = Math.abs(num);\n\
    \  while (abs > 0) {\n    let digit: number = abs % 10;\n    if (digit % 2 ===\
    \ 0) {\n      even++;\n    } else {\n      odd++;\n    }\n    abs = Math.floor(abs\
    \ / 10);\n  }\n  return [even, odd];\n}", "    let evens = 0;\n    let odds =\
    \ 0;\n    let newNum = num.toString().split('');\n    for (let i = 0; i < newNum.length;\
    \ i++) {\n        if (newNum[i] % 2 === 0) {\n            evens++;\n        }\
    \ else {\n            odds++;\n        }\n    }\n    return [evens, odds];\n}\n",
  "    let even = 0;\n    let odd = 0;\n    num = Math.abs(num);\n    while (num !==\
    \ 0) {\n        if (num % 2 === 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num = Math.floor(num / 10);\n    }\n \
    \   return [even, odd];\n}\n", "    let even_count = 0\n    let odd_count = 0\n\
    \    for (let digit of num.toString()) {\n        if (parseInt(digit) % 2 ===\
    \ 0) {\n            even_count++\n        } else {\n            odd_count++\n\
    \        }\n    }\n    return [even_count, odd_count]\n}\n", "    let evens =\
    \ 0;\n    let odds = 0;\n    num.toString().split('').forEach(element => {\n \
    \       if (parseInt(element) % 2 == 0) {\n            evens += 1;\n        }\
    \ else {\n            odds += 1;\n        }\n    });\n    return [evens, odds];\n\
    }", "  let even_count = 0;\n  let odd_count = 0;\n  let all_nums = num.toString().split(\"\
    \");\n  all_nums.forEach(num => {\n    if (parseInt(num) % 2 === 0) {\n      even_count++;\n\
    \    } else {\n      odd_count++;\n    }\n  });\n  return [even_count, odd_count];\n\
    }\n", "    let even = 0;\n    let odd = 0;\n    let arr: number[] = []\n    for\
    \ (let i = 0; i < String(num).length; i++) {\n        arr.push(Number(String(num)[i]))\n\
    \    }\n    for (let j = 0; j < arr.length; j++) {\n        if (arr[j] % 2 ===\
    \ 0) {\n            even++;\n        } else {\n            odd++;\n        }\n\
    \    }\n    return [even, odd]\n}\n", "    return [\n        Array.from(String(num),\
    \ (char) => Number(char)).filter((num) => num % 2 === 0).length,\n        Array.from(String(num),\
    \ (char) => Number(char)).filter((num) => num % 2 === 1).length\n    ];\n}\n",
  "  // Code here\n  let result: [number, number] = [0, 0];\n  const len = num.toString().length;\n\
    \  let i = 0;\n  while (i < len) {\n    const digit = num % 10;\n    num = Math.floor(num\
    \ / 10);\n    if (digit % 2 === 0) {\n      result[0] += 1;\n    } else {\n  \
    \    result[1] += 1;\n    }\n    i += 1;\n  }\n  return result;\n}\n", "  let\
    \ even_count = 0;\n  let odd_count = 0;\n  // \uC74C\uC218\uAC00 \uC544\uB2C8\uBA74\
    \ \uC74C\uC218\uB85C \uBC14\uAFD4\uC90C\n  if (num >= 0) {\n    num = num * -1;\n\
    \  }\n\n  // \uC22B\uC790\uB97C \uD558\uB098\uC529 \uBE7C\uC11C \uC9DD\uC218\uB0D0\
    \ \uD640\uC218\uB0D0 \uD310\uBCC4\n  while (num < 0) {\n    let digit = num %\
    \ 10;\n    if (digit % 2 === 0) {\n      even_count += 1;\n    } else {\n    \
    \  odd_count += 1;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [even_count,\
    \ odd_count];\n}\n\nconsole.log(even_odd_count(-12)); // [1, 1]\nconsole.log(even_odd_count(123));\
    \ // [1, 2]\n", "  let even: number = 0;\n  let odd: number = 0;\n  let str =\
    \ num.toString();\n  str.split(\"\").forEach((element) => {\n    let temp = parseInt(element);\n\
    \    if (temp % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n\
    \  });\n  return [even, odd];\n}", "  // return [Math.floor(num / 2), num - Math.floor(num\
    \ / 2)];\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n   \
    \ if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n", " \
    \ let even_count = 0;\n  let odd_count = 0;\n  let numbers: number[] = Array.from(String(num),\
    \ Number);\n  numbers.forEach(function (number) {\n    if (number % 2 === 0) {\n\
    \      even_count++;\n    } else {\n      odd_count++;\n    }\n  });\n  return\
    \ [even_count, odd_count];\n}\n", "  let str = num.toString();\n  let evenCount\
    \ = 0;\n  let oddCount = 0;\n  for (let i = 0; i < str.length; i++) {\n    if\
    \ (Number(str[i]) % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n  }\n  return [evenCount, oddCount];\n}\n", "    if (num < 0) {\n    \
    \    num = -num;\n    }\n    let evens = 0;\n    let odds = 0;\n    for (let i\
    \ = num; i > 0; i = Math.floor(i / 10)) {\n        if (i % 2 === 0) {\n      \
    \      evens += 1;\n        } else {\n            odds += 1;\n        }\n    }\n\
    \    return [evens, odds];\n}\n\nexport function suite() {\n    describe(\"Problem\
    \ 1 - Sum Digits\", () => {\n        it(\"Test 1\", () => {\n            expect(sum_digits(54321)).toBe(15);\n\
    \        });\n        it(\"Test 2\", () => {\n            expect(sum_digits(0)).toBe(0);\n\
    \        });\n        it(\"Test 3\", () => {\n            expect(sum_digits(-3)).toBe(3);\n\
    \        });\n        it(\"Test 4\", () => {\n            expect(sum_digits(123)).toBe(6);\n\
    \        });\n        it(\"Test 5\", () => {\n            expect(sum_digits(123456789)).toBe(45);\n\
    \        });\n    });\n    describe(\"Problem 2 - Palindrome\", () => {\n    \
    \    it(\"Test 1\", () => {\n            expect(is_palindrome(12321)).toBe(true);\n\
    \        });\n        it(\"Test 2\", () => {\n            expect(is_palindrome(12345)).toBe(false);\n\
    \        });\n        it(\"Test 3\", () => {\n            expect(is_palindrome(0)).toBe(true);\n\
    \        });\n        it(\"Test 4\", () => {\n            expect(is_palindrome(-12)).toBe(false);\n\
    \        });\n        it(\"Test 5\", () => {\n            expect(is_palindrome(12321)).toBe(true);\n\
    \        });\n    });\n    describe(\"Problem 3 - Consecutive Ones\", () => {\n\
    \        it(\"Test 1\", () => {\n            expect(consecutive_ones(5)).toBe(2);\n\
    \        });\n        it(\"Test 2\", () => {\n            expect(consecutive_ones",
  "  let even: number = 0;\n  let odd: number = 0;\n  for (let i: number = 0; i <\
    \ num.toString().length; i++) {\n    let digit: number = parseInt(num.toString()[i]);\n\
    \    if (digit % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n\
    \  }\n  return [even, odd];\n}\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n",
  "    let evens = 0;\n    let odds = 0;\n    let arr = num.toString().split('');\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (parseInt(arr[i]) % 2\
    \ === 0) {\n            evens++;\n        } else {\n            odds++;\n    \
    \    }\n    }\n    return [evens, odds];\n}\n", "    if (num < 0) {\n        num\
    \ = -num;\n    }\n    let even: number = 0;\n    let odd: number = 0;\n    while\
    \ (num > 0) {\n        let dig: number = num % 10;\n        if (dig % 2 == 0)\
    \ {\n            even++;\n        } else {\n            odd++;\n        }\n  \
    \      num = Math.floor(num / 10);\n    }\n    return [even, odd];\n}\n", "  const\
    \ str: string = String(num);\n  let odd_count: number = 0;\n  let even_count:\
    \ number = 0;\n  for (let i: number = 0; i < str.length; i++) {\n    if (Number(str[i])\
    \ % 2 === 0) {\n      even_count++;\n    } else {\n      odd_count++;\n    }\n\
    \  }\n  return [even_count, odd_count];\n}\n", "  let odds = 0;\n  let evens =\
    \ 0;\n  if (num < 0) {\n    num = Math.abs(num);\n  }\n  let s = num.toString();\n\
    \  for (let i = 0; i < s.length; i++) {\n    if (Number(s[i]) % 2 === 0) {\n \
    \     evens++;\n    } else {\n      odds++;\n    }\n  }\n  return [evens, odds];\n\
    }\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n", " \
    \   let evens = 0;\n    let odds = 0;\n    let str = String(num);\n    let arr\
    \ = str.split('');\n    for (let i = 0; i < arr.length; i++) {\n        if (parseInt(arr[i])\
    \ % 2 === 0) {\n            evens++;\n        } else {\n            odds++;\n\
    \        }\n    }\n    return [evens, odds];\n}\n\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n", "  return [0, 0];\n}\n", "    let even:\
    \ number = 0;\n    let odd: number = 0;\n    for (let i = 0; i < num.toString().length;\
    \ i++) {\n        if (num.toString()[i] % 2 === 0) {\n            even++;\n  \
    \      } else {\n            odd++;\n        }\n    }\n    return [even, odd];\n\
    }\n", "    let even = 0;\n    let odd = 0;\n    if (num < 0) {\n        return\
    \ [1, 1];\n    } else {\n        let str = num.toString();\n        for (let i\
    \ = 0; i < str.length; i++) {\n            if (parseInt(str[i]) % 2 === 0) {\n\
    \                even++;\n            } else {\n                odd++;\n     \
    \       }\n        }\n        return [even, odd];\n    }\n}\n", "    const even_count\
    \ = 0;\n    const odd_count = 0;\n    if (num > 0) {\n        for (let i = 0;\
    \ i < num.toString().length; i++) {\n            if (parseInt(num.toString()[i])\
    \ % 2 === 0) {\n                even_count++\n            } else {\n         \
    \       odd_count++\n            }\n        }\n    } else {\n        for (let\
    \ i = 0; i < num.toString().length; i++) {\n            if (parseInt(num.toString()[i])\
    \ % 2 === 0) {\n                even_count++\n            } else {\n         \
    \       odd_count++\n            }\n        }\n    }\n    return [even_count,\
    \ odd_count]\n}\n", "  let even_count = 0;\n  let odd_count = 0;\n  let n = Math.abs(num);\n\
    \  while (n !== 0) {\n    let digit = n % 10;\n    if (digit % 2 === 0) {\n  \
    \    even_count++;\n    } else {\n      odd_count++;\n    }\n    n = Math.floor(n\
    \ / 10);\n  }\n  return [even_count, odd_count];\n}\n", "  let x: number = 0;\n\
    \  let y: number = 0;\n  num = Math.abs(num);\n  for (let i = 1; i <= num; i *=\
    \ 10) {\n    if (Math.floor(num / i) % 2 == 0) {\n      x++;\n    } else {\n \
    \     y++;\n    }\n  }\n  return [x, y];\n}\n", "    let even = 0;\n    let odd\
    \ = 0;\n    for (let i = 0; i < Math.abs(num).toString().length; i++) {\n    \
    \    if (Math.abs(num).toString()[i] % 2 === 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n    }\n    return [even, odd];\n\
    }\n", "  let arr: number[] = [];\n  for (let i = 0; i < num.toString().length;\
    \ i++) {\n    if (num.toString()[i] % 2 === 0) {\n      arr.push(num.toString()[i]);\n\
    \    }\n  }\n  return [arr.length, num.toString().length - arr.length];\n}\n",
  "  const result: [number, number] = [0, 0];\n  for (let i = 0; i < num.toString().length;\
    \ i++) {\n    if (Number(num.toString()[i]) % 2 === 0) {\n      result[0]++;\n\
    \    } else {\n      result[1]++;\n    }\n  }\n  return result;\n}\n", "    let\
    \ even = 0;\n    let odd = 0;\n    num = Math.abs(num);\n    while (num > 0) {\n\
    \        if (num % 2 == 0) {\n            even++;\n        } else {\n        \
    \    odd++;\n        }\n        num = Math.floor(num / 10);\n    }\n    return\
    \ [even, odd];\n}\n\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n",
  "    return [num].map(x => String(x).split(''))\n        .map(x => x.map(y => Number(y)))\n\
    \        .map(x => x.reduce((a, b) => {\n            if (b % 2 === 0) {\n    \
    \            a[0]++;\n            } else {\n                a[1]++;\n        \
    \    }\n            return a;\n        }, [0, 0]))[0];\n}\n", "  let res: [number,\
    \ number] = [0, 0];\n  for (let i = 0; i < String(num).length; i++) {\n    if\
    \ (num % 2 === 0) {\n      res[0]++;\n    } else {\n      res[1]++;\n    }\n \
    \ }\n  return res;\n}\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n",
  "  let evens = 0;\n  let odds = 0;\n  num.toString().split(\"\").forEach(element\
    \ => {\n    if (element % 2 === 0) {\n      evens += 1;\n    } else {\n      odds\
    \ += 1;\n    }\n  });\n  return [evens, odds];\n}\n", "  let even = 0;\n  let\
    \ odd = 0;\n  let numStr = num.toString();\n  for (let i = 0; i < numStr.length;\
    \ i++) {\n    if (parseInt(numStr[i]) % 2 === 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n  }\n  return [even, odd];\n}\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n", "  let digit: number = 0;\n  let odd: number\
    \ = 0;\n  let even: number = 0;\n  while (num > 0) {\n    digit = num % 10;\n\
    \    if (digit % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n\
    \    num = Math.floor(num / 10);\n  }\n  return [even, odd];\n}\n", "    let odd_count\
    \ = 0;\n    let even_count = 0;\n    let number = \"\";\n    let num_arr = [];\n\
    \    if (num >= 0) {\n        number = num.toString();\n    } else {\n       \
    \ number = (num * -1).toString();\n    }\n    let number_length = number.length;\n\
    \    for (let index = 0; index < number_length; index++) {\n        num_arr.push(+number.charAt(index));\n\
    \    }\n    for (let index = 0; index < number_length; index++) {\n        if\
    \ (num_arr[index] % 2 === 0) {\n            even_count++;\n        } else {\n\
    \            odd_count++;\n        }\n    }\n    return [even_count, odd_count];\n\
    }\n", "    let even_count = 0;\n    let odd_count = 0;\n    let arr = [];\n  \
    \  while (num > 0) {\n        let curr = num % 10;\n        if (curr % 2 == 0)\
    \ {\n            even_count++;\n        } else {\n            odd_count++;\n \
    \       }\n        num = Math.floor(num / 10);\n    }\n    arr.push(even_count);\n\
    \    arr.push(odd_count);\n    return arr;\n}\n", "  let even = 0;\n  let odd\
    \ = 0;\n  for (let i = 0; i < num.toString().length; i++) {\n    if (Number(num.toString()[i])\
    \ % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n  }\n  return\
    \ [even, odd];\n}\n", "    let even = 0;\n    let odd = 0;\n    for (let d of\
    \ num.toString()) {\n        if (Number(d) % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return [even, odd];\n\
    }\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n", " \
    \   let evens = 0;\n    let odds = 0;\n    for (let i = 0; i < Math.abs(num).toString().length;\
    \ i++) {\n        if (Math.abs(num).toString()[i] % 2 === 0) {\n            evens\
    \ += 1;\n        } else {\n            odds += 1;\n        }\n    }\n    return\
    \ [evens, odds];\n}\n\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));",
  "  return [\n    String(num)\n      .split(\"\")\n      .filter((val) => parseInt(val)\
    \ % 2 === 0).length,\n    String(num)\n      .split(\"\")\n      .filter((val)\
    \ => parseInt(val) % 2 !== 0).length,\n  ];\n}\n", "    let strNum = num.toString();\n\
    \    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < strNum.length; i++)\
    \ {\n        let currNum = parseInt(strNum[i]);\n        if (currNum % 2 === 0)\
    \ {\n            even++;\n        } else {\n            odd++;\n        }\n  \
    \  }\n    return [even, odd];\n}\n", "  let even: number = 0;\n  let odd: number\
    \ = 0;\n  while (num !== 0) {\n    const last_digit: number = num % 10;\n    if\
    \ (last_digit % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n\
    \    num = Math.floor(num / 10);\n  }\n  return [even, odd];\n}\n", "    // check\
    \ that the number is not zero\n    if (num === 0) return [0, 0];\n    let even_count\
    \ = 0;\n    let odd_count = 0;\n    const num_str = Math.abs(num).toString();\n\
    \    for (let i = 0; i < num_str.length; i++) {\n        const digit = Number(num_str[i]);\n\
    \        if (digit % 2 === 0) {\n            even_count++;\n        } else {\n\
    \            odd_count++;\n        }\n    }\n    return [even_count, odd_count];\n\
    }\n\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n",
  "  const result: [number, number] = [0, 0];\n  let abs_num = Math.abs(num);\n  while\
    \ (abs_num > 0) {\n    if (abs_num % 2 === 0) {\n      result[0] += 1;\n    }\
    \ else {\n      result[1] += 1;\n    }\n    abs_num = Math.floor(abs_num / 10);\n\
    \  }\n  return result;\n}\n", "    let arr: number[] = num.toString().split('').map(Number);\n\
    \    let even: number = 0;\n    let odd: number = 0;\n    for (let i: number =\
    \ 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return [even, odd];\n\
    }\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n", " \
    \ const result: [number, number] = [0, 0];\n  const list = Math.abs(num).toString().split(\"\
    \");\n  list.forEach((num: string) => {\n    result[parseInt(num) % 2]++;\n  });\n\
    \  return result;\n}\n", "    let even = 0;\n    let odd = 0;\n    if (num > 0)\
    \ {\n        while (num !== 0) {\n            if (num % 2 === 0) {\n         \
    \       even++;\n            } else {\n                odd++;\n            }\n\
    \            num = Math.floor(num / 10);\n        }\n    } else {\n        num\
    \ = num * -1;\n        while (num !== 0) {\n            if (num % 2 === 0) {\n\
    \                even++;\n            } else {\n                odd++;\n     \
    \       }\n            num = Math.floor(num / 10);\n        }\n    }\n    return\
    \ [even, odd];\n}\n", "    let even: number = 0;\n    let odd: number = 0;\n \
    \   for (let x of num.toString()) {\n        if (parseInt(x) % 2 === 0) {\n  \
    \          even++;\n        } else {\n            odd++;\n        }\n    }\n \
    \   return [even, odd];\n}", "    let evens = 0;\n    let odds = 0;\n    let split\
    \ = Math.abs(num).toString().split('');\n    for (let i = 0; i < split.length;\
    \ i++) {\n        if (+split[i] % 2 === 0) {\n            evens += 1;\n      \
    \  } else {\n            odds += 1;\n        }\n    }\n    return [evens, odds];\n\
    }\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n", " \
    \   let evenCount = 0\n    let oddCount = 0\n    let absoluteValue: number\n \
    \   if (num < 0) {\n        absoluteValue = num * -1\n    } else {\n        absoluteValue\
    \ = num\n    }\n    let stringNum = absoluteValue.toString()\n    for (let i =\
    \ 0; i < stringNum.length; i++) {\n        if (parseInt(stringNum[i]) % 2 ===\
    \ 0) {\n            evenCount++\n        } else {\n            oddCount++\n  \
    \      }\n    }\n    return [evenCount, oddCount]\n}\n", "    let count_even =\
    \ 0;\n    let count_odd = 0;\n    for (let i = 0; i < Math.abs(num); i++) {\n\
    \        if (Math.abs(num[i]) % 2 === 0) {\n            count_even += 1;\n   \
    \     } else {\n            count_odd += 1;\n        }\n    }\n    return [count_even,\
    \ count_odd];\n}\n", "  let even_count = 0;\n  let odd_count = 0;\n  let str =\
    \ String(num);\n  for (let i = 0; i < str.length; i++) {\n    let digit = parseInt(str[i]);\n\
    \    if (digit % 2 === 0) {\n      even_count++;\n    } else {\n      odd_count++;\n\
    \    }\n  }\n  return [even_count, odd_count];\n}\n", "    let str = num.toString()\n\
    \    let even: number = 0\n    let odd: number = 0\n    for (let i = 0; i < str.length;\
    \ i++) {\n        let digit = parseInt(str[i])\n        if (digit % 2 == 0) {\n\
    \            even++\n        } else {\n            odd++\n        }\n    }\n \
    \   return [even, odd]\n}\n", "  let even = 0;\n  let odd = 0;\n  num = Math.abs(num);\n\
    \  while (num > 0) {\n    let digit = num % 10;\n    if (digit % 2 === 0) {\n\
    \      even++;\n    } else {\n      odd++;\n    }\n    num = Math.floor(num /\
    \ 10);\n  }\n  return [even, odd];\n}\n", "  const str = `${num}`;\n  let evens\
    \ = 0;\n  let odds = 0;\n  for (let i = 0; i < str.length; i++) {\n    const char\
    \ = str[i];\n    const number = Number(char);\n    if (number % 2 === 0) {\n \
    \     evens++;\n    } else {\n      odds++;\n    }\n  }\n  return [evens, odds];\n\
    }\n", "  let even: number = 0;\n  let odd: number = 0;\n  for (let i: number =\
    \ 0; i < num.toString().length; i++) {\n    let digit: number = parseInt(num.toString()[i]);\n\
    \    if (digit % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n\
    \  }\n  return [even, odd];\n}\n", "    let even = 0;\n    let odd = 0;\n    num\
    \ = Math.abs(num);\n    let numStr = num.toString();\n    for (let index = 0;\
    \ index < numStr.length; index++) {\n        const element = numStr[index];\n\
    \        if (element % 2 === 0) {\n            even++;\n        } else {\n   \
    \         odd++;\n        }\n    }\n    return [even, odd];\n}\n", "  if (num\
    \ < 0) {\n    num = num * -1;\n  }\n  let even = 0;\n  let odd = 0;\n  let arr\
    \ = num.toString().split(\"\");\n  for (let i = 0; i < arr.length; i++) {\n  \
    \  if (parseInt(arr[i]) % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n\
    \    }\n  }\n  return [even, odd];\n}\n", "  let even: number = 0;\n  let odd:\
    \ number = 0;\n  for (let i = num; i > 0; i = Math.floor(i / 10)) {\n    const\
    \ digit: number = i % 10;\n    if (digit % 2 === 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n  }\n  return [even, odd];\n}\n", "  let even_count\
    \ = 0;\n  let odd_count = 0;\n  let num_list = num.toString().split(\"\");\n \
    \ for (let i = 0; i < num_list.length; i++) {\n    if (Number(num_list[i]) % 2\
    \ === 0) {\n      even_count++;\n    } else {\n      odd_count++;\n    }\n  }\n\
    \  return [even_count, odd_count];\n}\n", "  //YOUR CODE HERE\n  let res: [number,\
    \ number] = [0, 0];\n  let str = Math.abs(num).toString();\n  let arr = str.split(\"\
    \");\n  arr.forEach((e) => (parseInt(e) % 2 == 0 ? res[0]++ : res[1]++));\n  return\
    \ res;\n}\n", "    let evens = 0;\n    let odds = 0;\n    let digits = num.toString().split('');\n\
    \    for (let digit of digits) {\n        if (digit == '-') {\n            continue;\n\
    \        }\n        if (parseInt(digit) % 2 == 0) {\n            evens++;\n  \
    \      } else {\n            odds++;\n        }\n    }\n    return [evens, odds];\n\
    }\n", "    let even = 0;\n    let odd = 0;\n    num = Math.abs(num);\n    num.toString().split('').forEach(value\
    \ => {\n        const valueInt = parseInt(value);\n        if (valueInt % 2 ===\
    \ 0) {\n            even++;\n        } else {\n            odd++;\n        }\n\
    \    });\n    return [even, odd];\n}\n", "    const even_odd_count: [number, number]\
    \ = [0, 0];\n    const str_num: string = String(num);\n    for (let index: number\
    \ = 0; index < str_num.length; index++) {\n        if (parseInt(str_num[index])\
    \ % 2 === 0) {\n            even_odd_count[0] += 1;\n        } else {\n      \
    \      even_odd_count[1] += 1;\n        }\n    }\n    return even_odd_count;\n\
    }\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n", " \
    \   const even = (num: number): number => {\n        if (num == 0) {\n       \
    \     return 0;\n        }\n        return num % 2 == 0 ? 1 + even(Math.floor(num\
    \ / 10)) : even(Math.floor(num / 10));\n    };\n    const odd = (num: number):\
    \ number => {\n        if (num == 0) {\n            return 0;\n        }\n   \
    \     return num % 2 != 0 ? 1 + odd(Math.floor(num / 10)) : odd(Math.floor(num\
    \ / 10));\n    };\n    return [even(num), odd(num)];\n}\n", "    let numArr =\
    \ num.toString().split('');\n    let evenCounter = 0;\n    let oddCounter = 0;\n\
    \    numArr.forEach(e => {\n        if (parseInt(e) % 2 == 0) {\n            evenCounter++;\n\
    \        } else {\n            oddCounter++;\n        }\n    });\n    return [evenCounter,\
    \ oddCounter];\n}\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n",
  "  let even: number = 0;\n  let odd: number = 0;\n  let asString: string = num.toString();\n\
    \  for (let i: number = 0; i < asString.length; i++) {\n    let digit: number\
    \ = Number(asString[i]);\n    if (digit % 2 === 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n  }\n  return [even, odd];\n}\n", "  const str = num.toString();\n\
    \  let evenCount = 0;\n  let oddCount = 0;\n  for (let index = 0; index < str.length;\
    \ index++) {\n    const value = Number(str[index]);\n    if (value % 2 === 0)\
    \ {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "    let even = 0;\n    let odd = 0;\n    num\
    \ = Math.abs(num);\n    while (num != 0) {\n        let mod = num % 10;\n    \
    \    if (mod % 2 == 0) {\n            even += 1;\n        } else {\n         \
    \   odd += 1;\n        }\n        num = Math.floor(num / 10);\n    }\n    return\
    \ [even, odd];\n}\n", "    let even_count = 0;\n    let odd_count = 0;\n    let\
    \ c = 0;\n    num = Math.abs(num);\n    while (num > 0) {\n        c = num % 10;\n\
    \        if (c % 2 == 0) {\n            even_count++;\n        } else {\n    \
    \        odd_count++;\n        }\n        num = Math.floor(num / 10);\n    }\n\
    \    return [even_count, odd_count];\n}\n", "  if (num < 0) {\n    num = num *\
    \ -1;\n  }\n  let evenCount = 0;\n  let oddCount = 0;\n  for (let i = 0; i < num.toString().length;\
    \ i++) {\n    if (num.toString()[i] % 2 === 0) {\n      evenCount++;\n    } else\
    \ {\n      oddCount++;\n    }\n  }\n  return [evenCount, oddCount];\n}\n", " \
    \   return [0, 0];\n}\n", "    let evens = 0;\n    let odds = 0;\n    num = Math.abs(num);\n\
    \    while (num > 0) {\n        let digit = num % 10;\n        if (digit % 2 ===\
    \ 0) {\n            evens += 1;\n        } else {\n            odds += 1;\n  \
    \      }\n        num = Math.floor(num / 10);\n    }\n    return [evens, odds];\n\
    }\n", "    let even = 0;\n    let odd = 0;\n    num = Math.abs(num);\n    while\
    \ (num > 0) {\n        const lastDigit = num % 10;\n        if (lastDigit % 2\
    \ === 0) {\n            even++;\n        } else {\n            odd++;\n      \
    \  }\n        num = Math.floor(num / 10);\n    }\n    return [even, odd];\n}\n\
    \nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n", " \
    \ let even = 0;\n  let odd = 0;\n  num.toString().split(\"\").forEach(digit =>\
    \ {\n    if (parseInt(digit) % 2 === 0) {\n      even++;\n    } else {\n     \
    \ odd++;\n    }\n  });\n  return [even, odd];\n}\n", "  const num_str = num.toString();\n\
    \  let even_count = 0;\n  let odd_count = 0;\n  for (let i = 0; i < num_str.length;\
    \ i++) {\n    if (Number(num_str[i]) % 2 === 0) {\n      even_count++;\n    }\
    \ else {\n      odd_count++;\n    }\n  }\n  return [even_count, odd_count];\n\
    }\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n", " \
    \ let evens = 0;\n  let odds = 0;\n  num\n    .toString()\n    .split(\"\")\n\
    \    .forEach((digit) => {\n      if (parseInt(digit) % 2 === 0) {\n        evens++;\n\
    \      } else {\n        odds++;\n      }\n    });\n  return [evens, odds];\n\
    }\n\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n",
  "    const arr = num.toString().split('');\n    let evens = 0;\n    let odds = 0;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (parseInt(arr[i]) % 2\
    \ === 0) {\n            evens++;\n        } else {\n            odds++;\n    \
    \    }\n    }\n    return [evens, odds];\n}\n", "    let even = 0;\n    let odd\
    \ = 0;\n    let str = num.toString();\n    for (let i = 0; i < str.length; i++)\
    \ {\n        if (parseInt(str[i]) % 2 === 0) {\n            even += 1;\n     \
    \   } else {\n            odd += 1;\n        }\n    }\n    return [even, odd];\n\
    }\n", "    let digits: string = num.toString();\n    let even: number = 0;\n \
    \   let odd: number = 0;\n    for (let i: number = 0; i < digits.length; i++)\
    \ {\n        if (parseInt(digits[i]) % 2 === 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n    }\n    return [even, odd];\n\
    }\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));", "  \
    \  let num_str = num.toString();\n    let even = 0;\n    let odd = 0;\n    for\
    \ (let i = 0; i < num_str.length; i++) {\n        if (parseInt(num_str[i]) % 2\
    \ === 0) {\n            even++;\n        } else {\n            odd++;\n      \
    \  }\n    }\n    return [even, odd];\n}\n", "    const stringNum = num.toString();\n\
    \    let oddCount = 0;\n    let evenCount = 0;\n    for (let i = 0; i < stringNum.length;\
    \ i++) {\n        if (parseInt(stringNum[i]) % 2 === 0) {\n            evenCount++;\n\
    \        } else {\n            oddCount++;\n        }\n    }\n    return [evenCount,\
    \ oddCount];\n}\n\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));",
  "    const numArr = num.toString().split('');\n    let evenArr = [];\n    let oddArr\
    \ = [];\n    for (let i = 0; i < numArr.length; i++) {\n        if (numArr[i]\
    \ % 2 === 0) {\n            evenArr.push(numArr[i]);\n        } else {\n     \
    \       oddArr.push(numArr[i]);\n        }\n    }\n    return [evenArr.length,\
    \ oddArr.length];\n}\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));",
  "  let even_count = 0;\n  let odd_count = 0;\n  let temp = num.toString();\n  if\
    \ (num < 0) {\n    temp = temp.slice(1);\n  }\n  for (let item of temp) {\n  \
    \  if (Number(item) % 2 === 0) {\n      even_count++;\n    } else {\n      odd_count++;\n\
    \    }\n  }\n  return [even_count, odd_count];\n}\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n", "  let even_count = 0;\n  let odd_count\
    \ = 0;\n  for (let i = 0; i < num.toString().length; i++) {\n    if (parseInt(num.toString()[i])\
    \ % 2 === 0) {\n      even_count++;\n    } else {\n      odd_count++;\n    }\n\
    \  }\n  return [even_count, odd_count];\n}\n", "  let even = 0;\n  let odd = 0;\n\
    \  for (let i = 0; i < String(num).length; i++) {\n    if (String(num)[i] % 2\
    \ === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n  }\n  return [even,\
    \ odd];\n}\n", "  let even = 0;\n  let odd = 0;\n  for (let i = 0; i < num.toString().length;\
    \ i++) {\n    if (Math.abs(num.toString()[i]) % 2 === 0) {\n      even++;\n  \
    \  } else {\n      odd++;\n    }\n  }\n  return [even, odd];\n}\n", "  let evenCounter\
    \ = 0;\n  let oddCounter = 0;\n  let currentNum = Math.abs(num);\n  while (currentNum\
    \ > 0) {\n    const digit = currentNum % 10;\n    if (digit % 2 === 0) {\n   \
    \   evenCounter++;\n    } else {\n      oddCounter++;\n    }\n    currentNum =\
    \ Math.floor(currentNum / 10);\n  }\n  return [evenCounter, oddCounter];\n}",
  "  let even = 0;\n  let odd = 0;\n  num.toString().split(\"\").forEach(num => {\n\
    \    if (num % 2 == 0) {\n      even++;\n    } else {\n      odd++;\n    }\n \
    \ });\n  return [even, odd];\n}\n", "    let result: [number, number] = [0, 0];\n\
    \    let strNum: string = num.toString();\n    let arrNum: number[] = strNum.split('').map(Number);\n\
    \    for (let i: number = 0; i < arrNum.length; i++) {\n        if (arrNum[i]\
    \ % 2 === 0) {\n            result[0]++;\n        } else {\n            result[1]++;\n\
    \        }\n    }\n    return result;\n}\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n", "    return [0, 0];\n}\n", "    let even_count\
    \ = 0;\n    let odd_count = 0;\n    let digit: number;\n    for (let i = num;\
    \ i !== 0; i = Math.floor(i / 10)) {\n        digit = i % 10;\n        if (digit\
    \ % 2 === 0) {\n            even_count += 1;\n        } else {\n            odd_count\
    \ += 1;\n        }\n    }\n    return [even_count, odd_count];\n}\nlet num: number\
    \ = -12;\nconsole.log(`Number of even digits in ${num} is: ${even_odd_count(num)[0]}`);\n\
    console.log(`Number of odd digits in ${num} is: ${even_odd_count(num)[1]}`);\n",
  "    let evenDigits = 0;\n    let oddDigits = 0;\n    let digits = String(num).split('');\n\
    \    for (let i = 0; i < digits.length; i++) {\n        if (digits[i] % 2 ===\
    \ 0) {\n            evenDigits++;\n        } else {\n            oddDigits++;\n\
    \        }\n    }\n    return [evenDigits, oddDigits];\n}\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n", "  let evens = 0;\n  let odds = 0;\n  let\
    \ abs = Math.abs(num);\n  while (abs) {\n    let digit = abs % 10;\n    if (digit\
    \ % 2 === 0) {\n      evens++;\n    } else {\n      odds++;\n    }\n    abs =\
    \ Math.floor(abs / 10);\n  }\n  return [evens, odds];\n}\n", "    // todo\n  \
    \  return [0, 0];\n}\n", "    let even = 0;\n    let odd = 0;\n    let numStr\
    \ = String(num);\n    for (let i = 0; i < numStr.length; i++) {\n        if (Number(numStr[i])\
    \ % 2 === 0) {\n            even++;\n        } else {\n            odd++;\n  \
    \      }\n    }\n    return [even, odd];\n}\n", "  const even = [];\n  const odd\
    \ = [];\n  let res = [];\n  if (num > 0) {\n    res = num.toString().split(\"\"\
    );\n  } else {\n    res = num.toString().split(\"\").slice(1);\n  }\n  res.forEach((el:\
    \ any) => {\n    if (el % 2 === 0) {\n      even.push(el);\n    } else {\n   \
    \   odd.push(el);\n    }\n  });\n  return [even.length, odd.length];\n}\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\nconsole.log(even_odd_count(1234));\n", "  //\
    \ Your Code here\n  let evenCount = 0;\n  let oddCount = 0;\n  const numString\
    \ = num.toString();\n  for (let i = 0; i < numString.length; i++) {\n    if (numString[i]\
    \ % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n \
    \ }\n  return [evenCount, oddCount];\n}\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n",
  "  let even: number = 0;\n  let odd: number = 0;\n  if (num < 0) {\n    num = num\
    \ * -1;\n  }\n  while (num > 0) {\n    if (num % 2 === 0) {\n      even += 1;\n\
    \    } else {\n      odd += 1;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [even, odd];\n}\n\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n",
  "    let even: number = 0;\n    let odd: number = 0;\n    let digit: number;\n \
    \   num = Math.abs(num);\n    while (num > 0) {\n        digit = num % 10;\n \
    \       if (digit % 2 == 0) {\n            even += 1;\n        } else {\n    \
    \        odd += 1;\n        }\n        num = Math.floor(num / 10);\n    }\n  \
    \  return [even, odd];\n}\n", "  let even: number = 0;\n  let odd: number = 0;\n\
    \  for (let i: number = 0; i < String(num).length; i++) {\n    if (String(num)[i]\
    \ % 2 === 0) {\n      even += 1;\n    } else {\n      odd += 1;\n    }\n  }\n\
    \  return [even, odd];\n}\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n",
  "    let even_count = 0;\n    let odd_count = 0;\n    const abs_num = Math.abs(num);\n\
    \    const num_digits = num_digits_in_num(abs_num);\n    let digit_counter = 0;\n\
    \    while (digit_counter < num_digits) {\n        const current_digit = (abs_num\
    \ % Math.pow(10, digit_counter + 1)) / Math.pow(10, digit_counter);\n        if\
    \ (current_digit % 2 == 0) {\n            even_count++;\n        } else {\n  \
    \          odd_count++;\n        }\n        digit_counter++;\n    }\n    return\
    \ [even_count, odd_count];\n}\n\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));",
  "    return [\n        num.toString().split('').filter(x => Number(x) % 2 === 0).length,\n\
    \        num.toString().split('').filter(x => Number(x) % 2 === 1).length\n  \
    \  ]\n}", "    let evenCount = 0;\n    let oddCount = 0;\n    let numString =\
    \ num.toString();\n    for (let i = 0; i < numString.length; i++) {\n        if\
    \ (Number(numString[i]) % 2 === 0) {\n            evenCount++;\n        } else\
    \ {\n            oddCount++;\n        }\n    }\n    return [evenCount, oddCount];\n\
    }\nconsole.log(even_odd_count(-12)); // [1, 1]\nconsole.log(even_odd_count(123));\
    \ // [1, 2]\n\n", "    let even = 0;\n    let odd = 0;\n    while (num > 0) {\n\
    \        if (num % 2 === 0) {\n            even++;\n        } else {\n       \
    \     odd++;\n        }\n        num = Math.floor(num / 10);\n    }\n    return\
    \ [even, odd];\n}\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n",
  "    let evens = 0;\n    let odds = 0;\n    let numStr = num.toString();\n    let\
    \ arr = numStr.split('');\n    for (let i = 0; i < arr.length; i++) {\n      \
    \  if (+arr[i] % 2 === 0) {\n            evens++;\n        } else {\n        \
    \    odds++;\n        }\n    }\n    return [evens, odds];\n}\nconsole.log(even_odd_count(-12));\
    \ // [1, 1]\nconsole.log(even_odd_count(123)); // [1, 2]\nconsole.log(even_odd_count(2467));\
    \ // [2, 2]\n", "    let evens = 0;\n    let odds = 0;\n    num = Math.abs(num);\n\
    \    while (num > 0) {\n        const digit = num % 10;\n        if (digit % 2\
    \ === 0) {\n            evens++;\n        } else {\n            odds++;\n    \
    \    }\n        num = Math.floor(num / 10);\n    }\n    return [evens, odds];\n\
    }\n", "  let even_count = 0;\n  let odd_count = 0;\n  while (num > 0) {\n    const\
    \ digit = num % 10;\n    if (digit % 2 === 0) {\n      even_count++;\n    } else\
    \ {\n      odd_count++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [even_count, odd_count];\n}\n", "    let even: number = 0;\n    let odd: number\
    \ = 0;\n    if (num >= 0) {\n        while (num > 0) {\n            let last_digit:\
    \ number = num % 10;\n            if (last_digit % 2 == 0) {\n               \
    \ even += 1;\n            } else {\n                odd += 1;\n            }\n\
    \            num = Math.floor(num / 10);\n        }\n    } else {\n        while\
    \ (num < 0) {\n            let last_digit: number = num % 10;\n            if\
    \ (last_digit % 2 == 0) {\n                even += 1;\n            } else {\n\
    \                odd += 1;\n            }\n            num = Math.floor(num /\
    \ 10);\n        }\n    }\n    return [even, odd];\n}\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\nconsole.log(even_odd_count(0));", "    let\
    \ even = 0;\n    let odd = 0;\n    num.toString().split('').forEach(digit => {\n\
    \        if (parseInt(digit) % 2 === 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n    });\n    return [even, odd];\n}\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n", "  let evens = 0;\n  let odds = 0;\n  let\
    \ num_arr = num.toString().split(\"\");\n  num_arr.forEach((element) => {\n  \
    \  if (parseInt(element) % 2 === 0) {\n      evens++;\n    } else {\n      odds++;\n\
    \    }\n  });\n  return [evens, odds];\n}\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n", "  let even_count = 0;\n  let odd_count\
    \ = 0;\n  num = Math.abs(num);\n  while (num > 0) {\n    let curr_digit = num\
    \ % 10;\n    if (curr_digit % 2 === 0) {\n      even_count++;\n    } else {\n\
    \      odd_count++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [even_count,\
    \ odd_count];\n}\n", "  let odd_count = 0;\n  let even_count = 0;\n  while (num\
    \ != 0) {\n    if (num % 2 == 0) {\n      even_count++;\n    } else {\n      odd_count++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [even_count, odd_count];\n\
    }\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n", " \
    \   const digits = String(num).split('');\n    let evenCount = 0;\n    let oddCount\
    \ = 0;\n    digits.forEach(function (d) {\n        if (Number(d) % 2 === 0) {\n\
    \            evenCount += 1;\n        } else {\n            oddCount += 1;\n \
    \       }\n    });\n    return [evenCount, oddCount];\n}\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n", "    const digits: number[] = Math.abs(num).toString().split('').map(Number);\n\
    \    const even: number = digits.filter(digit => digit % 2 === 0).length;\n  \
    \  const odd: number = digits.filter(digit => digit % 2 !== 0).length;\n    return\
    \ [even, odd];\n}\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n",
  "  // let even_digit = 0;\n  // let odd_digit = 0;\n  // let num_abs = Math.abs(num);\n\
    \  // while (num_abs > 0) {\n  //   let digit = num_abs % 10;\n  //   if (digit\
    \ % 2 === 0) {\n  //     even_digit += 1;\n  //   } else {\n  //     odd_digit\
    \ += 1;\n  //   }\n  //   num_abs = Math.floor(num_abs / 10);\n  // }\n  // return\
    \ [even_digit, odd_digit];\n  let even_digit = 0;\n  let odd_digit = 0;\n  let\
    \ str_num = String(num);\n  for (let i = 0; i < str_num.length; i++) {\n    if\
    \ (Number(str_num[i]) % 2 === 0) {\n      even_digit += 1;\n    } else {\n   \
    \   odd_digit += 1;\n    }\n  }\n  return [even_digit, odd_digit];\n}\n", "  \
    \  let evenCount = 0;\n    let oddCount = 0;\n    let numString = num.toString();\n\
    \    for (let index = 0; index < numString.length; index++) {\n        const element\
    \ = Number(numString[index]);\n        if (element % 2 === 0) {\n            evenCount++;\n\
    \        } else {\n            oddCount++;\n        }\n    }\n    return [evenCount,\
    \ oddCount];\n}", "  let evenCount = 0;\n  let oddCount = 0;\n  const newNum =\
    \ Math.abs(num);\n  const digits = newNum.toString().split(\"\");\n  for (let\
    \ digit of digits) {\n    const digitNum = parseInt(digit);\n    if (digitNum\
    \ % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n \
    \ }\n  return [evenCount, oddCount];\n}\n\ntest(\"01. even_odd_count\", () =>\
    \ {\n  expect(even_odd_count(-12)).toEqual([1, 1]);\n  expect(even_odd_count(12)).toEqual([2,\
    \ 0]);\n  expect(even_odd_count(123)).toEqual([1, 2]);\n});\n", "    let even\
    \ = 0;\n    let odd = 0;\n    let i = 0;\n    let temp: number;\n    while (num\
    \ > 0) {\n        temp = num % 10;\n        num = Math.floor(num / 10);\n    \
    \    if (temp % 2 == 0) {\n            even++;\n        } else {\n           \
    \ odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n", "    let evens = 0;\n    let odds = 0;\n\
    \    let digits = num.toString().split('').map(Number);\n    for (let i = 0; i\
    \ < digits.length; i++) {\n        if (digits[i] % 2 === 0) {\n            evens++;\n\
    \        } else {\n            odds++;\n        }\n    }\n    return [evens, odds];\n\
    }\n", "    let even_count = 0;\n    let odd_count = 0;\n    let num_string = num.toString();\n\
    \    for (let i = 0; i < num_string.length; i++) {\n        if (num_string[i]\
    \ % 2 == 0) {\n            even_count++;\n        } else {\n            odd_count++;\n\
    \        }\n    }\n    return [even_count, odd_count];\n}\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n", "  //const even_odd_count = ([num]) => {\n\
    \n  var even = 0;\n  var odd = 0;\n  // const evenOddCount = (num) => {\n  num.toString().split(\"\
    \").forEach((n) => {\n    if (n % 2 === 0) {\n      even++;\n    } else {\n  \
    \    odd++;\n    }\n  });\n  return [even, odd];\n}", "  //make sure num is absolute\
    \ value\n  let absNum = Math.abs(num);\n  let numString = absNum.toString();\n\
    \  let evens = 0;\n  let odds = 0;\n  for (let i = 0; i < numString.length; i++)\
    \ {\n    let digit = numString[i];\n    if (digit === \"1\" || digit === \"3\"\
    \ || digit === \"5\" || digit === \"7\" || digit === \"9\") {\n      odds += 1;\n\
    \    } else {\n      evens += 1;\n    }\n  }\n  return [evens, odds];\n}\n", " \
    \   let even_count = 0;\n    let odd_count = 0;\n    let digit = num;\n    if\
    \ (num < 0) {\n        digit = num * -1;\n    }\n    do {\n        if (digit %\
    \ 2 === 0) {\n            even_count++;\n        } else {\n            odd_count++;\n\
    \        }\n        digit = Math.floor(digit / 10);\n    } while (digit !== 0);\n\
    \    return [even_count, odd_count];\n}\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n",
  "    // write your code here.\n    let even_count = 0;\n    let odd_count = 0;\n\
    \    for (let digit of num.toString()) {\n        if (digit == '-') {\n      \
    \      continue;\n        }\n        if (digit % 2 == 0) {\n            even_count\
    \ += 1;\n        } else {\n            odd_count += 1;\n        }\n    }\n   \
    \ return [even_count, odd_count];\n}\n", "  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  let absNum = Math.abs(num);\n  while (absNum > 0) {\n    let digit =\
    \ absNum % 10;\n    if (digit % 2 === 0) {\n      evenCount++;\n    } else {\n\
    \      oddCount++;\n    }\n    absNum = Math.floor(absNum / 10);\n  }\n  return\
    \ [evenCount, oddCount];\n}\n", "    let evenDigits: number = 0;\n    let oddDigits:\
    \ number = 0;\n    let digit: number;\n    while (num != 0) {\n        digit =\
    \ num % 10;\n        if (digit % 2 == 0) {\n            evenDigits += 1;\n   \
    \     } else {\n            oddDigits += 1;\n        }\n        num = Math.floor(num\
    \ / 10);\n    }\n    return [evenDigits, oddDigits];\n}\n", "    let evenCount\
    \ = 0;\n    let oddCount = 0;\n    num.toString().split('').forEach(digit => {\n\
    \        if (Number(digit) % 2 == 0) {\n            evenCount += 1;\n        }\
    \ else {\n            oddCount += 1;\n        }\n    });\n    return [evenCount,\
    \ oddCount];\n}\n\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n\
    console.log('***************************');\n", "  let even: number = 0;\n  let\
    \ odd: number = 0;\n  if (num >= 0) {\n    for (let i: number = num; i > 0; i\
    \ = Math.floor(i / 10)) {\n      if (i % 2 === 0) {\n        even++;\n      }\
    \ else {\n        odd++;\n      }\n    }\n  } else {\n    for (let i: number =\
    \ num; i < 0; i = Math.floor(i / 10)) {\n      if (i % 2 === 0) {\n        even++;\n\
    \      } else {\n        odd++;\n      }\n    }\n  }\n  return [even, odd];\n\
    }\n", "    return [num, num];\n}\n", "    let evens = 0;\n    let odds = 0;\n\
    \    num = Math.abs(num);\n    while (num > 0) {\n        if (num % 2 === 0) {\n\
    \            evens++;\n        } else {\n            odds++;\n        }\n    \
    \    num = Math.floor(num / 10);\n    }\n    return [evens, odds];\n}\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n", "    let even = 0;\n    let odd = 0;\n \
    \   const arr = Array.from(String(num).replace('-', ''));\n    arr.forEach(element\
    \ => {\n        parseInt(element) % 2 === 0 ? even++ : odd++;\n    });\n    return\
    \ [even, odd];\n}", "  return [\n    (num + \"\").replace(/[^02468]/g, \"\").length,\n\
    \    (num + \"\").replace(/[^13579]/g, \"\").length\n  ];\n}\n", "  const nums\
    \ = num.toString().split(\"\");\n  const evens = nums.filter((n) => parseInt(n)\
    \ % 2 === 0);\n  const odds = nums.filter((n) => parseInt(n) % 2 !== 0);\n  return\
    \ [evens.length, odds.length];\n}\n\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n",
  "    let even_count = 0;\n    let odd_count = 0;\n    let is_negative = num < 0;\n\
    \    let num_string = Math.abs(num).toString();\n    for (let i = 0; i < num_string.length;\
    \ i++) {\n        let c = num_string[i];\n        if (c === '0' || c === '2' ||\
    \ c === '4' || c === '6' || c === '8') {\n            even_count++;\n        }\
    \ else {\n            odd_count++;\n        }\n    }\n    if (is_negative) {\n\
    \        odd_count++;\n    }\n    return [even_count, odd_count];\n}\n", "   \
    \ let even_count = 0;\n    let odd_count = 0;\n    let n = Math.abs(num);\n  \
    \  while (n > 0) {\n        let digit = n % 10;\n        if (digit % 2 == 0) {\n\
    \            even_count++;\n        } else {\n            odd_count++;\n     \
    \   }\n        n = Math.floor(n / 10);\n    }\n    return [even_count, odd_count];\n\
    }\n", "    if (num < 0) {\n        num = -num;\n    }\n    const evens = [];\n\
    \    const odds = [];\n    for (let digit of num.toString()) {\n        if (parseInt(digit)\
    \ % 2 === 0) {\n            evens.push(digit);\n        } else {\n           \
    \ odds.push(digit);\n        }\n    }\n    return [evens.length, odds.length];\n\
    }\n", "  let evens = 0;\n  let odds = 0;\n  let remainder = num;\n  while (remainder\
    \ > 0) {\n    const digit = remainder % 10;\n    if (digit % 2 === 0) {\n    \
    \  evens++;\n    } else {\n      odds++;\n    }\n    remainder = Math.floor(remainder\
    \ / 10);\n  }\n  return [evens, odds];\n}\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n", "  let even = 0,\n    odd = 0;\n  for (const\
    \ digit of num.toString()) {\n    const num = Number(digit);\n    if (num % 2\
    \ === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n  }\n  return [even,\
    \ odd];\n}\n", "  let result = [0, 0];\n  let strNum = num.toString();\n  for\
    \ (let i = 0; i < strNum.length; i++) {\n    if (strNum[i] === \"-\") {\n    \
    \  continue;\n    }\n    if (Number(strNum[i]) % 2 === 0) {\n      result[0]++;\n\
    \    } else {\n      result[1]++;\n    }\n  }\n  return result;\n}\n", "    let\
    \ evenCount = 0;\n    let oddCount = 0;\n    let numArray = num.toString().split('');\n\
    \    for (let i = 0; i < numArray.length; i++) {\n        if (numArray[i] % 2\
    \ === 0) {\n            evenCount += 1;\n        } else {\n            oddCount\
    \ += 1;\n        }\n    }\n    return [evenCount, oddCount];\n}\n", "    const\
    \ result: [number, number] = [0, 0];\n    const stringNum: string = num.toString();\n\
    \    for (let i: number = 0; i < stringNum.length; i++) {\n        if (Number(stringNum[i])\
    \ % 2 === 0) {\n            result[0]++;\n        } else {\n            result[1]++;\n\
    \        }\n    }\n    return result;\n}\n", "    return [1,2];\n}\n", "  const\
    \ strNum = String(num);\n  let even = 0;\n  let odd = 0;\n  for (let i = 0; i\
    \ < strNum.length; i++) {\n    const temp = Number(strNum[i]);\n    if (temp %\
    \ 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n  }\n  return\
    \ [even, odd];\n}\n\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n",
  "    //make array of strings into an array of numbers\n    // map()\n    let string_arr\
    \ = num.toString().split(\"\");\n    let num_arr = string_arr.map(x => parseInt(x));\n\
    \    let evens = 0;\n    let odds = 0;\n    for (let i = 0; i < num_arr.length;\
    \ i++) {\n        if (num_arr[i] % 2 == 0) {\n            evens++;\n        }\
    \ else {\n            odds++;\n        }\n    }\n    return [evens, odds];\n}\n\
    console.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n", "   \
    \ let even_count = 0;\n    let odd_count = 0;\n    while (num > 0) {\n       \
    \ let last_digit = num % 10;\n        if (last_digit % 2 == 0) {\n           \
    \ even_count++;\n        } else {\n            odd_count++;\n        }\n     \
    \   num = Math.floor(num / 10);\n    }\n    return [even_count, odd_count];\n\
    }\n", "  let evenCount = 0;\n  let oddCount = 0;\n  let numStr = Math.abs(num).toString();\n\
    \  for (let i = 0; i < numStr.length; i++) {\n    let digit = parseInt(numStr[i]);\n\
    \    if (digit % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n  }\n  return [evenCount, oddCount];\n}\n", "    // TODO: Implement me!\n\
    \    let evenCount = 0;\n    let oddCount = 0;\n    let result = new Array();\n\
    \    result[0] = evenCount;\n    result[1] = oddCount;\n    if (num < 0) {\n \
    \       num = num * -1;\n    }\n    while (num > 0) {\n        let dig = num %\
    \ 10;\n        if (dig % 2 == 0) {\n            evenCount++;\n        } else {\n\
    \            oddCount++;\n        }\n        num = Math.floor(num / 10);\n   \
    \ }\n    result[0] = evenCount;\n    result[1] = oddCount;\n    return result;\n\
    }\n", "    const strNum = num.toString();\n    let evenCount = 0;\n    let oddCount\
    \ = 0;\n    for (let char of strNum) {\n        if (char === '-') {\n        \
    \    continue;\n        }\n        const charNum = Number(char);\n        if (charNum\
    \ % 2 === 0) {\n            evenCount++;\n        } else {\n            oddCount++;\n\
    \        }\n    }\n    return [evenCount, oddCount];\n}\n", "  //  write code\
    \ here\n  const result = [0, 0];\n  for (let i = 0; i < Math.abs(num).toString().length;\
    \ i++) {\n    if (Math.abs(num).toString()[i] % 2 === 0) {\n      result[0]++;\n\
    \    } else {\n      result[1]++;\n    }\n  }\n  return result;\n}\n", "  let\
    \ evenNum = 0;\n  let oddNum = 0;\n  const numStr = num.toString();\n  for (let\
    \ i = 0; i < numStr.length; i++) {\n    const digit = parseInt(numStr[i]);\n \
    \   if (digit % 2 === 0) {\n      evenNum++;\n    } else {\n      oddNum++;\n\
    \    }\n  }\n  return [evenNum, oddNum];\n}\n\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n", "  let even = 0;\n  let odd = 0;\n  let\
    \ pos = 1;\n  let temp = num;\n  if (num < 0) {\n    temp = num * -1;\n  }\n \
    \ if (temp === 0) {\n    return [0, 0];\n  }\n  while (temp !== 0) {\n    if (temp\
    \ % 10 % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n    temp\
    \ = Math.floor(temp / 10);\n  }\n  if (num < 0) {\n    odd++;\n  }\n  return [even,\
    \ odd];\n}\n", "    let count: [number, number] = [0, 0];\n    let num_str: string\
    \ = num.toString();\n    for (let char of num_str) {\n        let digit: number\
    \ = parseInt(char);\n        if (digit % 2 == 0) {\n            count[0]++;\n\
    \        } else {\n            count[1]++;\n        }\n    }\n    return count;\n\
    }\n", "  let even_count = 0;\n  let odd_count = 0;\n  let newNum = Math.abs(num);\n\
    \  while (newNum > 0) {\n    let temp_num = newNum % 10;\n    if (temp_num % 2\
    \ === 0) {\n      even_count++;\n    } else {\n      odd_count++;\n    }\n   \
    \ newNum = Math.floor(newNum / 10);\n  }\n  return [even_count, odd_count];\n}",
  "  let even: number = 0;\n  let odd: number = 0;\n  let num_str: string = String(num);\n\
    \  for (let i: number = 0; i < num_str.length; i++) {\n    if (Number(num_str[i])\
    \ % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n  }\n  return\
    \ [even, odd];\n}\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n",
  "  let result: [number, number] = [0, 0];\n  let str = num.toString();\n  for (let\
    \ i = 0; i < str.length; i++) {\n    if (parseInt(str[i]) % 2 == 0) {\n      result[0]++;\n\
    \    } else {\n      result[1]++;\n    }\n  }\n  return result;\n}\n", "    let\
    \ even: number = 0;\n    let odd: number = 0;\n    let absNum: number = Math.abs(num);\n\
    \    let numArr: number[] = [];\n    for (let i: number = 0; i < absNum.toString().length;\
    \ i++) {\n        numArr.push(absNum.toString()[i]);\n    }\n    for (let i: number\
    \ = 0; i < numArr.length; i++) {\n        if (numArr[i] % 2 === 0) {\n       \
    \     even += 1;\n        } else {\n            odd += 1;\n        }\n    }\n\
    \    return [even, odd];\n}\n", "    let evenCount = 0;\n    let oddCount = 0;\n\
    \    let absoluteValue = Math.abs(num);\n    while (absoluteValue > 0) {\n   \
    \     let result = absoluteValue % 10;\n        if (result % 2 === 0) {\n    \
    \        evenCount++;\n        } else {\n            oddCount++;\n        }\n\
    \        absoluteValue = Math.floor(absoluteValue / 10);\n    }\n    return [evenCount,\
    \ oddCount];\n}\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n",
  "  let even: number = 0;\n  let odd: number = 0;\n  let arr: number[] = [];\n  num.toString().split(\"\
    \").forEach(element => {\n    if (parseInt(element) % 2 === 0) {\n      even++;\n\
    \    } else {\n      odd++;\n    }\n  });\n  arr.push(even, odd);\n  return arr;\n\
    }\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n", " \
    \   // let even = 0\n    // let odd = 0\n    // let digits = num.toString().split('')\n\
    \    // let ints = digits.map(Number)\n    // for (let i = 0; i < ints.length;\
    \ i++) {\n    //     if (ints[i] % 2 === 0) {\n    //         even += 1\n    //\
    \     } else {\n    //         odd += 1\n    //     }\n    // }\n    // return\
    \ [even, odd]\n    // all that above^ is one line with built in methods below...\n\
    \    let even: number = (num.toString().split('').map(Number).filter(x => x %\
    \ 2 === 0)).length\n    let odd: number = (num.toString().split('').map(Number).filter(x\
    \ => x % 2 !== 0)).length\n    return [even, odd]\n}\n", "    const arr = num.toString().split('');\n\
    \    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        if (arr[i] === \"-\" && i == 0) {\n            continue;\n      \
    \  }\n        if (parseInt(arr[i]) % 2 == 0) {\n            even += 1;\n     \
    \   } else {\n            odd += 1;\n        }\n    }\n    return [even, odd];\n\
    }\nconsole.log(even_odd_count(-123));", "  let even = 0;\n  let odd = 0;\n  let\
    \ abs = Math.abs(num);\n  while (abs > 0) {\n    const digit = abs % 10;\n   \
    \ if (digit % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n \
    \   abs = Math.floor(abs / 10);\n  }\n  return [even, odd];\n}\n", "  let evenCount\
    \ = 0;\n  let oddCount = 0;\n  const digits: number[] = getDigits(num);\n  digits.forEach((el)\
    \ => {\n    if (el % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n  });\n  return [evenCount, oddCount];\n}\n", "  let sum_even: number\
    \ = 0;\n  let sum_odd: number = 0;\n  let num_str: string = num.toString();\n\
    \  for (let i: number = 0; i < num_str.length; i++) {\n    if (num_str[i] ===\
    \ \"-\") {\n      continue;\n    }\n    if (parseInt(num_str[i]) % 2 === 0) {\n\
    \      sum_even++;\n    } else {\n      sum_odd++;\n    }\n  }\n  return [sum_even,\
    \ sum_odd];\n}\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n\
    console.log(even_odd_count(0));\nconsole.log(even_odd_count(123321));\n", "  let\
    \ countOfEvens = 0;\n  let countOfOdds = 0;\n  let remainder;\n  let currentNum\
    \ = num;\n  while (currentNum > 0) {\n    remainder = currentNum % 10;\n    if\
    \ (remainder % 2 === 0) {\n      countOfEvens++;\n    } else {\n      countOfOdds++;\n\
    \    }\n    currentNum = Math.floor(currentNum / 10);\n  }\n  return [countOfEvens,\
    \ countOfOdds];\n}\n", "    const even = [2, 4, 6, 8, 0];\n    const odd = [1,\
    \ 3, 5, 7, 9];\n    let evenCount = 0;\n    let oddCount = 0;\n    num.toString().split('').forEach(s\
    \ => {\n        if (even.includes(parseInt(s))) {\n            evenCount++;\n\
    \        } else if (odd.includes(parseInt(s))) {\n            oddCount++;\n  \
    \      }\n    });\n    return [evenCount, oddCount];\n}\n\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n", "  let even_count = 0;\n  let odd_count\
    \ = 0;\n  // base case\n  if (num < 10) {\n    if (num % 2 === 0) {\n      even_count++;\n\
    \    } else {\n      odd_count++;\n    }\n    return [even_count, odd_count];\n\
    \  }\n  let num_of_digits = num.toString().length;\n  let first_digit = parseInt(num.toString().slice(0,\
    \ 1));\n  if (first_digit % 2 === 0) {\n    even_count++;\n  } else {\n    odd_count++;\n\
    \  }\n  let rest_of_digits = parseInt(num.toString().slice(1, num_of_digits));\n\
    \  even_count += even_odd_count(rest_of_digits)[0];\n  odd_count += even_odd_count(rest_of_digits)[1];\n\
    \  return [even_count, odd_count];\n}\n", "  // Write your code here\n  let even\
    \ = 0;\n  let odd = 0;\n  let n = 0;\n  if (num < 0) {\n    n = -num;\n  } else\
    \ {\n    n = num;\n  }\n  let numArr = n.toString().split(\"\");\n  for (let i\
    \ = 0; i < numArr.length; i++) {\n    let c = parseInt(numArr[i]);\n    if (c\
    \ % 2 == 0) {\n      even++;\n    } else {\n      odd++;\n    }\n  }\n  return\
    \ [even, odd];\n}\n", "  let even = 0,\n    odd = 0;\n  num = Math.abs(num);\n\
    \  while (num > 0) {\n    if (num % 2 == 0) {\n      even++;\n    } else {\n \
    \     odd++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [even, odd];\n\
    }\n", "    let even_count = 0\n    let odd_count = 0\n    if (num == 0) {\n  \
    \      return [1, 0]\n    } else if (num < 0) {\n        num = num * -1\n    }\n\
    \    while (num > 0) {\n        if (num % 2 == 0) {\n            even_count +=\
    \ 1\n        } else {\n            odd_count += 1\n        }\n        num = Math.floor(num\
    \ / 10)\n    }\n    return [even_count, odd_count]\n}\nconsole.log(even_odd_count(-12))\n\
    console.log(even_odd_count(123))\n", "    let evenCount = 0;\n    let oddCount\
    \ = 0;\n    for (let i = 0; i < num.toString().length; i++) {\n        if (num.toString()[i]\
    \ % 2 === 0) {\n            evenCount += 1;\n        } else {\n            oddCount\
    \ += 1;\n        }\n    }\n    return [evenCount, oddCount];\n}\n", "  let even:\
    \ number = 0;\n  let odd: number = 0;\n  let r: number;\n  while (num != 0) {\n\
    \    r = num % 10;\n    if (r % 2 == 0) {\n      even++;\n    } else {\n     \
    \ odd++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [even, odd];\n\
    }\nconsole.log(even_odd_count(-12));\nconsole.log(even_odd_count(123));\n", " \
    \ let evenCount = 0;\n  let oddCount = 0;\n  for (let i = 0; i < num.toString().length;\
    \ i++) {\n    if (num.toString()[i] % 2 === 0) {\n      evenCount++;\n    } else\
    \ {\n      oddCount++;\n    }\n  }\n  return [evenCount, oddCount];\n}\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n", "    let odd = 0;\n    let even = 0;\n \
    \   num = Math.abs(num);\n    while (num > 0) {\n        const digit = num % 10;\n\
    \        if (digit % 2 === 0) {\n            even++;\n        } else {\n     \
    \       odd++;\n        }\n        num = Math.floor(num / 10);\n    }\n    return\
    \ [even, odd];\n}\n", "    const str = num.toString();\n    let result = [0, 0];\n\
    \    for (let i = 0; i < str.length; i++) {\n        const char = str[i];\n  \
    \      if (Number(char) % 2 === 0) {\n            result[0]++;\n        } else\
    \ {\n            result[1]++;\n        }\n    }\n    return result;\n}\n\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));", "  let even = 0;\n  let odd = 0;\n  const\
    \ numArr = Math.abs(num).toString().split(\"\");\n  for (let i = 0; i < numArr.length;\
    \ i++) {\n    if (Number(numArr[i]) % 2 === 0) {\n      even++;\n    } else {\n\
    \      odd++;\n    }\n  }\n  return [even, odd];\n}\n\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\n", "  let evens = 0;\n  let odds = 0;\n  let\
    \ number = Math.abs(num);\n  while (number > 0) {\n    if (number % 2 === 0) {\n\
    \      evens++;\n    } else {\n      odds++;\n    }\n    number = Math.floor(number\
    \ / 10);\n  }\n  return [evens, odds];\n}\nconsole.log(even_odd_count(-12)); //\
    \ [1, 1]\nconsole.log(even_odd_count(123)); // [1, 2]\n", "  let even_count =\
    \ 0;\n  let odd_count = 0;\n  num.toString().split(\"\").forEach(element => {\n\
    \    if (parseInt(element) % 2 === 0) {\n      even_count++;\n    } else {\n \
    \     odd_count++;\n    }\n  });\n  return [even_count, odd_count];\n}\n", " \
    \   let even = 0;\n    let odd = 0;\n    let absVal = Math.abs(num);\n    while\
    \ (absVal > 0) {\n        let currVal = absVal % 10;\n        if (currVal % 2\
    \ === 0) {\n            even++;\n        } else {\n            odd++;\n      \
    \  }\n        absVal = Math.floor(absVal / 10);\n    }\n    return [even, odd];\n\
    }\n\ndescribe(\"#even_odd_count\", () => {\n    it(\"should return the correct\
    \ answer\", () => {\n        assert.deepEqual(even_odd_count(-12), [1, 1]);\n\
    \        assert.deepEqual(even_odd_count(123), [1, 2]);\n    });\n});\n", "  \
    \  let result: [number, number] = [0, 0];\n    let negativeFlag: boolean = false;\n\
    \    if (num < 0) {\n        negativeFlag = true;\n        num = num * -1;\n \
    \   }\n    let string_num: string = num.toString();\n    let strings: string[]\
    \ = string_num.split(\"\");\n    for (let i: number = 0; i < strings.length; i++)\
    \ {\n        if (parseInt(strings[i]) % 2 == 0) {\n            result[0] += 1;\n\
    \        } else {\n            result[1] += 1;\n        }\n    }\n    if (negativeFlag)\
    \ {\n        result[1] += 1;\n    }\n    return result;\n}", "  const even_odd_count:\
    \ [number, number] = [0, 0];\n  const digits: number[] = Math.abs(num).toString().split(\"\
    \").map(Number);\n  for (let i = 0; i < digits.length; i++) {\n    if (digits[i]\
    \ % 2 === 0) {\n      even_odd_count[0] += 1;\n    } else {\n      even_odd_count[1]\
    \ += 1;\n    }\n  }\n  return even_odd_count;\n}\n\nconsole.log(even_odd_count(-12));\n\
    console.log(even_odd_count(123));\nconsole.log(even_odd_count(0));\nconsole.log(even_odd_count(1));\n\
    console.log(even_odd_count(100));\nconsole.log(even_odd_count(101));\nconsole.log(even_odd_count(1000));\n\
    console.log(even_odd_count(1001));\nconsole.log(even_odd_count(5));\nconsole.log(even_odd_count(23));\n\
    console.log(even_odd_count(345));\nconsole.log(even_odd_count(1234));\nconsole.log(even_odd_count(12345));\n\
    console.log(even_odd_count(123456));\nconsole.log(even_odd_count(1234567));\n\
    console.log(even_odd_count(12345678));\nconsole.log(even_odd_count(123456789));\n\
    console.log(even_odd_count(1234567890));\nconsole.log(even_odd_count(12345678901));\n\
    console.log(even_odd_count(123456789012));\nconsole.log(even_odd_count(1234567890123));\n\
    console.log(even_odd_count(12345678901234));\nconsole.log(even_odd_count(123456789012345));\n\
    console.log(even_odd_count(1234567890123456));\nconsole.log(even_odd_count(12345678901234567));\n\
    console.log(even_odd_count(", "  let even_count = 0;\n  let odd_count = 0;\n \
    \ let num_array = (\"\" + num).split(\"\");\n  for (let i = 0; i < num_array.length;\
    \ i++) {\n    if (parseInt(num_array[i]) % 2 === 0) {\n      even_count++;\n \
    \   } else {\n      odd_count++;\n    }\n  }\n  return [even_count, odd_count];\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

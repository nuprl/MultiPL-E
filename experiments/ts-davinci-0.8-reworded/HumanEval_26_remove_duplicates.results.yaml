language: ts
name: HumanEval_26_remove_duplicates
results:
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    //I will use a dictionary to store the unique numbers\n    const unique:\
    \ { [number: number]: number } = {};\n    //Store the unique numbers\n    numbers.forEach(number\
    \ => {\n        if (!unique[number]) {\n            unique[number] = number;\n\
    \        }\n    });\n    //Format output\n    const output: number[] = [];\n \
    \   for (let num in unique) {\n        output.push(unique[num]);\n    }\n    return\
    \ output;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpun4lizaj.js:27:12)\n    at Object.<anonymous> (/tmp/tmpun4lizaj.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659821790
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n  \
    \      if (numbers.indexOf(numbers[i]) === numbers.lastIndexOf(numbers[i])) {\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 3, 4 ]

    '
  timestamp: 1659821790
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((number, index) => {\n        return numbers.indexOf(number)\
    \ === index;\n    });\n}\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpktwd3gb9.js:16:12)\n    at Object.<anonymous> (/tmp/tmpktwd3gb9.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659821790
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const uniqNumbers = [];\n    numbers.forEach(number => {\n        if\
    \ (!uniqNumbers.includes(number)) {\n            uniqNumbers.push(number);\n \
    \       }\n    });\n    return uniqNumbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxd82i7hn.ts(8,26): error TS2339: Property ''includes''
    does not exist on type ''any[]''.

    '
  timestamp: 1659821790
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    //console.log(numbers);\n    let output: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        //console.log(numbers[i]);\n\
    \        if (output.indexOf(numbers[i]) === -1) {\n            output.push(numbers[i]);\n\
    \        }\n    }\n    return output;\n}\nconsole.log(remove_duplicates([1, 2,\
    \ 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp7k295kfy.js:22:12)\n    at Object.<anonymous> (/tmp/tmp7k295kfy.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659821790
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let toReturn: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (toReturn.indexOf(numbers[i]) === -1) {\n            toReturn.push(numbers[i]);\n\
    \        }\n    }\n    return toReturn;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpleegjujg.js:19:12)\n    at Object.<anonymous> (/tmp/tmpleegjujg.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821790
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((element, index) => numbers.indexOf(element) ===\
    \ index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmptjzvi935.js:13:12)\n    at Object.<anonymous> (/tmp/tmptjzvi935.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821790
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(element => {\n\
    \        if (!uniqueNumbers.includes(element)) {\n            uniqueNumbers.push(element);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpnwtvzust.ts(8,28): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659821790
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (numbers.indexOf(numbers[i]) === i) {\n            uniqueNumbers.push(numbers[i]);\n\
    \        }\n    }\n    return uniqueNumbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp7h5pca0w.js:19:12)\n    at Object.<anonymous> (/tmp/tmp7h5pca0w.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821790
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    let check_dup: boolean;\n    for (let\
    \ i = 0; i < numbers.length; i++) {\n        check_dup = false;\n        for (let\
    \ j = 0; j < numbers.length; j++) {\n            if (i !== j && numbers[i] ===\
    \ numbers[j]) {\n                check_dup = true;\n            }\n        }\n\
    \        if (!check_dup) {\n            result.push(numbers[i]);\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821790
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, self) => {\n        return self.indexOf(value)\
    \ === index;\n    });\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\
    \n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp02k3fagu.js:16:12)\n    at Object.<anonymous> (/tmp/tmp02k3fagu.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659821790
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const unique = new Set();\n    const uniqArr = [];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        if (!unique.has(numbers[i])) {\n    \
    \        unique.add(numbers[i]);\n            uniqArr.push(numbers[i]);\n    \
    \    }\n    }\n    return uniqArr;\n}\n\nconsole.log(remove_duplicates([1, 2,\
    \ 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp03uy3y57.ts(6,24): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659821790
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let sorted: number[] = numbers.sort();\n    let result: number[] = [];\n\
    \    for (let i: number = 0; i < sorted.length; i++) {\n        if (sorted[i]\
    \ !== sorted[i + 1]) {\n            result.push(sorted[i]);\n        }\n    }\n\
    \    return result;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\nconsole.log(remove_duplicates([6,\
    \ 6, 0, 0, 9, 5, 5, 4, 1, 1, 3, 3, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6,\
    \ 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9,\
    \ 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6,\
    \ 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9,\
    \ 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6,\
    \ 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9,\
    \ 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6,\
    \ 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5, 6, 6, 9, 5\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppbit685e.ts(18,1): error TS1005: '','' expected.

    ../../../../../tmp/tmppbit685e.ts(18,9): error TS1005: '','' expected.

    '
  timestamp: 1659821790
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return Array.from(new Set(numbers));\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcgw_2tyo.ts(6,18): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpcgw_2tyo.ts(6,27): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659821790
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(function (element)\
    \ {\n        if (uniqueNumbers.indexOf(element) == -1) {\n            uniqueNumbers.push(element);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp3qsb5x3q.js:20:12)\n    at Object.<anonymous> (/tmp/tmp3qsb5x3q.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659821790
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return Array.from(new Set(numbers));\n}\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprazdydrj.ts(6,18): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmprazdydrj.ts(6,27): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659821790
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const result: number[] = [];\n    const unique: { [key: number]: boolean\
    \ } = {};\n    for (const number of numbers) {\n        if (!unique[number]) {\n\
    \            unique[number] = true;\n            result.push(number);\n      \
    \  }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1, 2, 3,\
    \ 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpwsxink93.js:23:12)\n    at Object.<anonymous> (/tmp/tmpwsxink93.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659821790
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let newList: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (newList.indexOf(numbers[i]) === -1) {\n            newList.push(numbers[i]);\n\
    \        }\n    }\n    return newList;\n}\nconsole.log(remove_duplicates([1, 2,\
    \ 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp9uk7jf0q.js:20:12)\n    at Object.<anonymous> (/tmp/tmp9uk7jf0q.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659821790
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let arr: number[] = []\n    let count: number = 0\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (numbers[i] !== numbers[i + 1])\
    \ {\n            arr[count] = numbers[i]\n            count++\n        }\n   \
    \ }\n    return arr\n}\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]))\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  2,\n  4,\n  3,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n\
    \  5\n]\n    at test (/tmp/tmpdd6xvxy0.js:22:12)\n    at Object.<anonymous> (/tmp/tmpdd6xvxy0.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 2, 3, 2,\n    4, 3, 5\n  ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 2, 4 ]

    '
  timestamp: 1659821790
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return [...new Set(numbers)];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_cizuooo.ts(6,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659821790
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (numbers.indexOf(numbers[i]) == numbers.lastIndexOf(numbers[i]))\
    \ {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979316
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let numberCounts: { [index: number]: number } = {};\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        if (numberCounts[numbers[i]] == undefined)\
    \ {\n            numberCounts[numbers[i]] = 1;\n        } else {\n           \
    \ numberCounts[numbers[i]] += 1;\n        }\n    }\n    let result: number[] =\
    \ [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (numberCounts[numbers[i]]\
    \ == 1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 3, 4 ]

    '
  timestamp: 1659979316
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((item, index) => {\n        return numbers.indexOf(item)\
    \ === index;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpkout_c5v.js:15:12)\n    at Object.<anonymous> (/tmp/tmpkout_c5v.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979316
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\nlet result: number[] = remove_duplicates([1, 2, 3, 2, 4]);\nconsole.log(result);\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpgvyr_9yw.js:21:12)\n    at Object.<anonymous> (/tmp/tmpgvyr_9yw.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979316
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const map = new Map();\n    for (let num of numbers) {\n        const\
    \ count = map.get(num) || 0;\n        map.set(num, count + 1);\n    }\n    return\
    \ numbers.filter(n => map.get(n) === 1);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmptae4egi9.ts(6,21): error TS2552: Cannot find name
    ''Map''. Did you mean ''map''?

    '
  timestamp: 1659979316
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    numbers.forEach(function (number)\
    \ {\n        if (unique_numbers.indexOf(number) === -1) {\n            unique_numbers.push(number);\n\
    \        }\n    });\n    return unique_numbers;\n}\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp1pb3_mc6.js:20:12)\n    at Object.<anonymous> (/tmp/tmp1pb3_mc6.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979316
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const newArray: number[] = [];\n    const seen: number[] = [];\n    for\
    \ (let i: number = 0; i < numbers.length; i++) {\n        if (seen.indexOf(numbers[i])\
    \ === -1) {\n            newArray.push(numbers[i]);\n            seen.push(numbers[i]);\n\
    \        }\n    }\n    return newArray;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmps80_mmcs.js:21:12)\n    at Object.<anonymous> (/tmp/tmps80_mmcs.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979316
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const store: number[] = [];\n    for (let index = 0; index < numbers.length;\
    \ index++) {\n        if (store.indexOf(numbers[index]) === -1) {\n          \
    \  store.push(numbers[index]);\n        }\n    }\n    return store;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmptoqav89v.js:20:12)\n    at Object.<anonymous> (/tmp/tmptoqav89v.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979316
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return [...new Set(numbers)];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_cizuooo.ts(6,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659821790
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let out: number[] = [];\n    numbers.forEach(function (item) {\n    \
    \    if (out.indexOf(item) === -1) {\n            out.push(item);\n        }\n\
    \    });\n    return out;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp9dxnhklb.js:20:12)\n    at Object.<anonymous> (/tmp/tmp9dxnhklb.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979316
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result = [];\n    numbers.forEach(number => {\n        if (!result.includes(number))\
    \ {\n            result.push(number);\n        }\n    });\n    return result;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmptir31s__.ts(8,21): error TS2339: Property ''includes''
    does not exist on type ''any[]''.

    '
  timestamp: 1659979316
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const newNumbers: number[] = [];\n    numbers.forEach(number => {\n \
    \       if (!newNumbers.includes(number)) {\n            newNumbers.push(number);\n\
    \        }\n    });\n    return newNumbers;\n}\n\nconst numbers: number[] = [1,\
    \ 2, 3, 2, 4];\nconsole.log(remove_duplicates(numbers));\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplpwwnxwp.ts(8,25): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659979316
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const result = [];\n    const map = {};\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (!map[numbers[i]]) {\n            map[numbers[i]] = true;\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp1jjr3_jl.js:21:12)\n    at Object.<anonymous> (/tmp/tmp1jjr3_jl.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979316
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    //throw \"TODO: remove_duplicates\";\n    let unique: number[] = [];\n\
    \    numbers.forEach(number => {\n        if (!unique.includes(number)) {\n  \
    \          unique.push(number);\n        }\n    });\n    return unique;\n}\n\n\
    test(remove_duplicates([1, 2, 3, 2, 4]), [1, 3, 4]);\ntest(remove_duplicates([1,\
    \ 2, 3, 2, 1]), [3]);\ntest(remove_duplicates([1, 1, 1, 1, 1]), []);\ntest(remove_duplicates([1,\
    \ 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\ntest(remove_duplicates([1, 1, 2, 2, 3, 3, 4,\
    \ 4, 5, 5]), []);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpr7v6lenw.ts(9,21): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    ../../../../../tmp/tmpr7v6lenw.ts(16,6): error TS2554: Expected 0 arguments, but
    got 2.

    ../../../../../tmp/tmpr7v6lenw.ts(17,6): error TS2554: Expected 0 arguments, but
    got 2.

    ../../../../../tmp/tmpr7v6lenw.ts(18,6): error TS2554: Expected 0 arguments, but
    got 2.

    ../../../../../tmp/tmpr7v6lenw.ts(19,6): error TS2554: Expected 0 arguments, but
    got 2.

    ../../../../../tmp/tmpr7v6lenw.ts(20,6): error TS2554: Expected 0 arguments, but
    got 2.

    '
  timestamp: 1659979316
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const uniqueNumbers: number[] = [];\n    numbers.forEach(number => {\n\
    \        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpcybl_ncs.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcybl_ncs.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979316
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, self) => {\n        return self.indexOf(value)\
    \ === index;\n    });\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp3onmf46q.js:16:12)\n    at Object.<anonymous> (/tmp/tmp3onmf46q.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979316
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) == -1) {\n          \
    \  unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\nlet result: number[] = remove_duplicates([1, 2, 3, 2, 4]);\nconsole.log(result);\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpdvccv_v0.js:21:12)\n    at Object.<anonymous> (/tmp/tmpdvccv_v0.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979316
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, array) => array.indexOf(value) ===\
    \ index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpb6ateh_b.js:13:12)\n    at Object.<anonymous> (/tmp/tmpb6ateh_b.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979316
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const unique = [];\n    for (let i = 0; i < numbers.length; i++) {\n\
    \        let isUnique = true;\n        for (let j = 0; j < numbers.length; j++)\
    \ {\n            if (numbers[i] === numbers[j] && i !== j) {\n               \
    \ isUnique = false;\n            }\n        }\n        if (isUnique) {\n     \
    \       unique.push(numbers[i]);\n        }\n    }\n    return unique;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979316
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((number, index) => numbers.indexOf(number) ===\
    \ index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpnoshmt4i.js:13:12)\n    at Object.<anonymous> (/tmp/tmpnoshmt4i.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979316
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let distinctNumbers: number[] = [];\n    numbers.forEach(num => {\n \
    \       if (distinctNumbers.indexOf(num) === -1) {\n            distinctNumbers.push(num);\n\
    \        }\n    });\n    return distinctNumbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpbzhg5uye.js:19:12)\n    at Object.<anonymous> (/tmp/tmpbzhg5uye.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979316
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniques: number[] = [];\n    for (let num of numbers) {\n       \
    \ if (uniques.indexOf(num) == -1) uniques.push(num);\n    }\n    return uniques;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpgo88aj84.js:19:12)\n    at Object.<anonymous> (/tmp/tmpgo88aj84.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979316
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    numbers.forEach(function (i) {\n    \
    \    if (unique.indexOf(i) === -1) {\n            unique.push(i);\n        }\n\
    \    });\n    return unique;\n}\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmphwkhn1u1.js:20:12)\n    at Object.<anonymous> (/tmp/tmphwkhn1u1.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979316
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    let duplicates: number[] = [];\n    numbers.forEach(function\
    \ (element) {\n        if (result.indexOf(element) === -1) {\n            result.push(element);\n\
    \        } else {\n            duplicates.push(element);\n        }\n    });\n\
    \    duplicates.forEach(function (element) {\n        let index = result.indexOf(element);\n\
    \        result.splice(index, 1);\n    });\n    return result;\n}\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 3, 4 ]

    '
  timestamp: 1659979316
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return [...new Set(numbers)];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_cizuooo.ts(6,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659821790
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniques: number[] = [];\n    numbers.forEach(function (number) {\n\
    \        if (numbers.indexOf(number) === numbers.lastIndexOf(number)) {\n    \
    \        uniques.push(number);\n        }\n    });\n    return uniques;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979318
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    var i: number;\n    var j: number;\n    var new_numbers: number[] = numbers;\n\
    \    for (i = 0; i < numbers.length; i++) {\n        for (j = i + 1; j < numbers.length;\
    \ j++) {\n            if (numbers[i] == numbers[j]) {\n                new_numbers.splice(j,\
    \ 1);\n            }\n        }\n    }\n    return new_numbers;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpexevh04q.js:24:12)\n    at Object.<anonymous> (/tmp/tmpexevh04q.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979318
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    let unique: boolean = true;\n\
    \    for (let i: number = 0; i < numbers.length; i++) {\n        for (let j: number\
    \ = 0; j < uniqueNumbers.length; j++) {\n            if (numbers[i] === uniqueNumbers[j])\
    \ {\n                unique = false;\n            }\n        }\n        if (unique)\
    \ {\n            uniqueNumbers.push(numbers[i]);\n        }\n        unique =\
    \ true;\n    }\n    return uniqueNumbers;\n}\n\nlet myArray1: number[] = [1, 2,\
    \ 3, 2, 4];\nconsole.log(remove_duplicates(myArray1));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmplc8sqh78.js:28:12)\n    at Object.<anonymous> (/tmp/tmplc8sqh78.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979318
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_array: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        let num = numbers[i];\n        if (unique_array.indexOf(num)\
    \ === -1) {\n            unique_array.push(num);\n        }\n    }\n    return\
    \ unique_array;\n}\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpbcav0s76.js:21:12)\n    at Object.<anonymous> (/tmp/tmpbcav0s76.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979318
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let numbers_list: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        let count: number = 0;\n        for (let j: number = 0; j <\
    \ numbers.length; j++) {\n            if (numbers[i] === numbers[j]) {\n     \
    \           count++;\n            }\n        }\n        if (count < 2) {\n   \
    \         numbers_list.push(numbers[i]);\n        }\n    }\n    return numbers_list;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979318
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((e, i) => numbers.indexOf(e) === i);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpkohbj3bw.js:13:12)\n    at Object.<anonymous> (/tmp/tmpkohbj3bw.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979318
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, self) => self.indexOf(value) ===\
    \ index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpicmithmo.js:13:12)\n    at Object.<anonymous> (/tmp/tmpicmithmo.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979318
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpygj3itxk.js:20:12)\n    at Object.<anonymous> (/tmp/tmpygj3itxk.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979318
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let arr: number[] = [];\n    let j: number = 0;\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (numbers.indexOf(numbers[i]) ==\
    \ numbers.lastIndexOf(numbers[i])) {\n            arr[j] = numbers[i];\n     \
    \       j++;\n        }\n    }\n    return arr;\n}\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979318
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const set = new Set(numbers);\n    return Array.from(set);\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpx1woo86i.ts(6,21): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    ../../../../../tmp/tmpx1woo86i.ts(7,18): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1659979318
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let sortedNumbers = numbers.sort();\n    let lastElement: number = sortedNumbers[0];\n\
    \    let result: number[] = [];\n    result.push(lastElement);\n    for (let i\
    \ = 1; i < sortedNumbers.length; i++) {\n        if (sortedNumbers[i] != lastElement)\
    \ {\n            result.push(sortedNumbers[i]);\n            lastElement = sortedNumbers[i];\n\
    \        }\n    }\n    return result;\n}\n\nlet numbers: number[] = [1, 2, 3,\
    \ 2, 4];\nconsole.log(remove_duplicates(numbers));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpfdyet0uo.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpfdyet0uo.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979318
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const uniqueNumbers: number[] = [];\n    numbers.forEach(element => {\n\
    \        if (uniqueNumbers.indexOf(element) === -1) {\n            uniqueNumbers.push(element);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpg_l6mg90.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg_l6mg90.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979318
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((v, i) => {\n        return numbers.indexOf(v)\
    \ === i;\n    });\n}\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpzjku6ocf.js:16:12)\n    at Object.<anonymous> (/tmp/tmpzjku6ocf.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979319
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    var unique: number[] = [];\n    for (var i = 0; i < numbers.length; i++)\
    \ {\n        if (numbers.indexOf(numbers[i]) == numbers.lastIndexOf(numbers[i]))\
    \ {\n            unique.push(numbers[i]);\n        }\n    }\n    return unique;\n\
    }\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 3, 4 ]

    '
  timestamp: 1659979319
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((v, i) => numbers.indexOf(v) === i);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp515b25e9.js:13:12)\n    at Object.<anonymous> (/tmp/tmp515b25e9.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979318
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const uniqueNumbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\nlet a: number[] = [1, 2, 3, 2, 4];\nconsole.log(remove_duplicates(a));\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp2v0ei2wh.js:21:12)\n    at Object.<anonymous> (/tmp/tmp2v0ei2wh.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979318
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    numbers.forEach(e => {\n     \
    \   if (uniqueNumbers.indexOf(e) === -1) {\n            uniqueNumbers.push(e);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpppklywjr.js:20:12)\n    at Object.<anonymous> (/tmp/tmpppklywjr.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979319
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((element, index) => numbers.indexOf(element) ===\
    \ index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmptjzvi935.js:13:12)\n    at Object.<anonymous> (/tmp/tmptjzvi935.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821790
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueArray: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueArray.indexOf(numbers[i]) === -1) {\n            uniqueArray.push(numbers[i]);\n\
    \        }\n    }\n    return uniqueArray;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpmy24us1l.js:19:12)\n    at Object.<anonymous> (/tmp/tmpmy24us1l.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979319
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, array) => {\n        return array.indexOf(value)\
    \ === index;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpo_kifddt.js:15:12)\n    at Object.<anonymous> (/tmp/tmpo_kifddt.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979318
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((v, i) => numbers.indexOf(v) === i);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp515b25e9.js:13:12)\n    at Object.<anonymous> (/tmp/tmp515b25e9.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979318
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((x, i) => numbers.indexOf(x) === i);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpstvokzr8.js:13:12)\n    at Object.<anonymous> (/tmp/tmpstvokzr8.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979319
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    var result: number[] = [];\n    for (var i = 0; i < numbers.length; i++)\
    \ {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpi_tzjio3.js:19:12)\n    at Object.<anonymous> (/tmp/tmpi_tzjio3.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979318
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const distinct = [...new Set(numbers)];\n    return distinct;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp22nc2401.ts(6,30): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659979318
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const numbers_to_return: number[] = [];\n    let i: number = 0;\n   \
    \ while (i < numbers.length) {\n        let add: boolean = true;\n        for\
    \ (let j: number = 0; j < numbers_to_return.length; j++) {\n            if (numbers[i]\
    \ === numbers_to_return[j]) {\n                add = false;\n            }\n \
    \       }\n        if (add) {\n            numbers_to_return.push(numbers[i]);\n\
    \        }\n        i++;\n    }\n    return numbers_to_return;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp_5jzyrgx.js:28:12)\n    at Object.<anonymous> (/tmp/tmp_5jzyrgx.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979319
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique = [];\n    for (let number of numbers) {\n        if (unique.indexOf(number)\
    \ === -1) {\n            unique.push(number);\n        }\n    }\n    return unique;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpi3xuffha.js:20:12)\n    at Object.<anonymous> (/tmp/tmpi3xuffha.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979321
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result = [];\n    let count = 0;\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        for (let j = 0; j < numbers.length; j++) {\n            if (numbers[i]\
    \ === numbers[j]) {\n                count++;\n            }\n        }\n    \
    \    if (count < 2) {\n            result.push(numbers[i]);\n        }\n     \
    \   count = 0;\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979321
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const result: number[] = [];\n    numbers.forEach(num => {\n        if\
    \ (result.indexOf(num) === -1) {\n            result.push(num);\n        }\n \
    \   });\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpm6aqkv4h.js:19:12)\n    at Object.<anonymous> (/tmp/tmpm6aqkv4h.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979321
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let number of numbers) {\n\
    \        if (unique_numbers.indexOf(number) == -1) {\n            unique_numbers.push(number);\n\
    \        }\n    }\n    return unique_numbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpxze7xyrm.js:20:12)\n    at Object.<anonymous> (/tmp/tmpxze7xyrm.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979321
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result = [];\n    //remove duplicates\n    numbers.forEach(n => {\n\
    \        if (result.indexOf(n) == -1) {\n            result.push(n);\n       \
    \ }\n    });\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp7lwotwet.js:20:12)\n    at Object.<anonymous> (/tmp/tmp7lwotwet.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979321
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    numbers.forEach(function (value: number)\
    \ {\n        if (result.indexOf(value) === -1) {\n            result.push(value);\n\
    \        }\n    });\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfjpx7cr7.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfjpx7cr7.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979321
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, array) => array.indexOf(value) ===\
    \ index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpb6ateh_b.js:13:12)\n    at Object.<anonymous> (/tmp/tmpb6ateh_b.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979316
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const set = new Set();\n    return numbers.filter(num => {\n        if\
    \ (set.has(num)) {\n            return false;\n        } else {\n            set.add(num);\n\
    \            return true;\n        }\n    });\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpogsb6bkp.ts(6,21): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659979321
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return [...new Set(numbers)];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_cizuooo.ts(6,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659821790
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const initialLength = numbers.length;\n    const dupeFreeArray = Array.from(new\
    \ Set(numbers));\n    const dupeFreeLength = dupeFreeArray.length;\n    let dupeFreeIndex\
    \ = dupeFreeLength - 1;\n    let index = initialLength - 1;\n    while (dupeFreeIndex\
    \ >= 0) {\n        numbers[index] = dupeFreeArray[dupeFreeIndex];\n        dupeFreeIndex--;\n\
    \        index--;\n    }\n    return numbers.slice(index + 1);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp17j5kwox.ts(7,33): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmp17j5kwox.ts(7,42): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659979321
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const uniqueNumbers: number[] = [];\n    numbers.forEach(function (number)\
    \ {\n        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp7593kuti.js:19:12)\n    at Object.<anonymous> (/tmp/tmp7593kuti.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979321
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((x, i) => numbers.indexOf(x) === i);\n}\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpvob0bw9k.js:14:12)\n    at Object.<anonymous> (/tmp/tmpvob0bw9k.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979321
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let temp: number[] = [];\n    for (let n of numbers) {\n        if (temp.indexOf(n)\
    \ === -1) {\n            temp.push(n);\n        }\n    }\n    return temp;\n}\n\
    \nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpiu5n1j7v.js:21:12)\n    at Object.<anonymous> (/tmp/tmpiu5n1j7v.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979321
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let numbersMap: Map<number, number> = new Map<number, number>();\n  \
    \  numbers.forEach(num => {\n        if (numbersMap.has(num)) {\n            let\
    \ currentOccurrence: number = numbersMap.get(num);\n            numbersMap.set(num,\
    \ currentOccurrence + 1);\n        } else {\n            numbersMap.set(num, 1);\n\
    \        }\n    });\n    return numbers.filter(num => numbersMap.get(num) < 2);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwro2qc4k.ts(6,21): error TS2583: Cannot find name
    ''Map''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpwro2qc4k.ts(6,47): error TS2583: Cannot find name ''Map''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659979321
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, self) => {\n        return self.indexOf(value)\
    \ === index;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpxgnj67yu.js:15:12)\n    at Object.<anonymous> (/tmp/tmpxgnj67yu.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979321
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let numbers_sorted: number[] = numbers.sort();\n    let numbers_unique:\
    \ number[] = [];\n    for (let i: number = 0; i < numbers_sorted.length; i++)\
    \ {\n        if (numbers_sorted[i] !== numbers_sorted[i - 1]) {\n            numbers_unique.push(numbers_sorted[i]);\n\
    \        }\n    }\n    return numbers_unique;\n}\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpaqbsa4k2.js:21:12)\n    at Object.<anonymous> (/tmp/tmpaqbsa4k2.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979321
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((v, i) => numbers.indexOf(v) === i);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp515b25e9.js:13:12)\n    at Object.<anonymous> (/tmp/tmp515b25e9.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979318
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniques: number[] = [];\n    for (let index = 0; index < numbers.length;\
    \ index++) {\n        if (index === numbers.lastIndexOf(numbers[index])) {\n \
    \           uniques.push(numbers[index]);\n        }\n    }\n    return uniques;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  4,\n  3,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpwbj5_d4g.js:19:12)\n    at Object.<anonymous> (/tmp/tmpwbj5_d4g.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 4,\
    \ 3, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979321
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let newArray: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (newArray.indexOf(numbers[i]) === -1) {\n            newArray.push(numbers[i]);\n\
    \        }\n    }\n    return newArray;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpfmcq99sb.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfmcq99sb.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979321
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) == -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\nconsole.log(remove_duplicates([1, 2,\
    \ 3, 2, 4]));\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmphexhl0mu.js:20:12)\n    at Object.<anonymous> (/tmp/tmphexhl0mu.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979321
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const set: Set<number> = new Set();\n    const result: number[] = [];\n\
    \    for (const number of numbers) {\n        if (!set.has(number)) {\n      \
    \      set.add(number);\n            result.push(number);\n        }\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmptovj70n2.ts(6,16): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmptovj70n2.ts(6,34): error TS2552: Cannot find name ''Set''.
    Did you mean ''set''?

    '
  timestamp: 1659979321
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n          \
    \  uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpjpoxbrml.js:19:12)\n    at Object.<anonymous> (/tmp/tmpjpoxbrml.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979321
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((number, index) =>\n        numbers.indexOf(number)\
    \ === index);\n}\nconsole.log(\"remove_duplicates: \", remove_duplicates([1, 2,\
    \ 3, 2, 4]));\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4a_uz_22.js:16:12)\n    at Object.<anonymous> (/tmp/tmp4a_uz_22.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'remove_duplicates:  [ 1, 2, 3, 4 ]

    '
  timestamp: 1659979321
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    numbers.forEach(function (value) {\n\
    \        if (result.indexOf(value) === -1) {\n            result.push(value);\n\
    \        }\n    });\n    return result;\n}\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpo2d197n4.js:20:12)\n    at Object.<anonymous> (/tmp/tmpo2d197n4.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979321
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const uniqueNumbers: number[] = [];\n    for (let i: number = 0; i <\
    \ numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) < 0) {\n\
    \            uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp1smrh1v6.js:19:12)\n    at Object.<anonymous> (/tmp/tmp1smrh1v6.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979321
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let new_array: number[] = [];\n    let i: number = 0;\n    while (i <\
    \ numbers.length) {\n        if (new_array.indexOf(numbers[i]) === -1) {\n   \
    \         new_array.push(numbers[i]);\n        }\n        i++;\n    }\n    return\
    \ new_array;\n}\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4503mwun.js:22:12)\n    at Object.<anonymous> (/tmp/tmp4503mwun.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979321
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniques: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniques.indexOf(numbers[i]) === -1) {\n            uniques.push(numbers[i]);\n\
    \        }\n    }\n    return uniques;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpvqn92tbm.js:20:12)\n    at Object.<anonymous> (/tmp/tmpvqn92tbm.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979323
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return [...new Set(numbers)];\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfu38tgik.ts(6,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659979323
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let newArr: number[] = [];\n    let duplicates: number[] = [];\n    let\
    \ unique: number[] = [];\n    for (let i: number = 0; i < numbers.length; i++)\
    \ {\n        newArr.push(numbers[i]);\n    }\n    for (let i: number = 0; i <\
    \ newArr.length; i++) {\n        for (let j: number = 0; j < newArr.length; j++)\
    \ {\n            if (newArr[i] === newArr[j] && i !== j) {\n                duplicates.push(newArr[i]);\n\
    \            }\n        }\n    }\n    for (let i: number = 0; i < newArr.length;\
    \ i++) {\n        let isDuplicate: boolean = false;\n        for (let j: number\
    \ = 0; j < duplicates.length; j++) {\n            if (newArr[i] === duplicates[j])\
    \ {\n                isDuplicate = true;\n            }\n        }\n        if\
    \ (!isDuplicate) {\n            unique.push(newArr[i]);\n        }\n    }\n  \
    \  return unique;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979323
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    // TODO: implement\n    let result: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        let temp: number = numbers[i];\n  \
    \      let counter: number = 0;\n        for (let j: number = 0; j < numbers.length;\
    \ j++) {\n            if (temp === numbers[j]) {\n                counter++;\n\
    \            }\n        }\n        if (counter === 1) {\n            result.push(temp);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979324
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const unique: number[] = [];\n    numbers.forEach(function (item) {\n\
    \        if (unique.indexOf(item) < 0) {\n            unique.push(item);\n   \
    \     }\n    });\n    return unique;\n}\nconsole.log(remove_duplicates([1, 2,\
    \ 3, 2, 4]));\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpt_axzesq.js:20:12)\n    at Object.<anonymous> (/tmp/tmpt_axzesq.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979323
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let numbersMap: Map<number, number> = new Map<number, number>();\n  \
    \  let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (numbersMap.has(numbers[i])) {\n            numbersMap.set(numbers[i],\
    \ numbersMap.get(numbers[i]) + 1);\n        } else {\n            numbersMap.set(numbers[i],\
    \ 1);\n        }\n    }\n    for (let i: number = 0; i < numbers.length; i++)\
    \ {\n        if (numbersMap.get(numbers[i]) === 1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpevnxghgj.ts(6,21): error TS2583: Cannot find name
    ''Map''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpevnxghgj.ts(6,47): error TS2583: Cannot find name ''Map''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659979323
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let newNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        let counter: number = 0;\n        for (let j: number = 0; j\
    \ < numbers.length; j++) {\n            if (numbers[i] === numbers[j]) {\n   \
    \             counter++;\n            }\n        }\n        if (counter === 1)\
    \ {\n            newNumbers.push(numbers[i]);\n        }\n    }\n    return newNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979324
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp3p9tcwr4.js:19:12)\n    at Object.<anonymous> (/tmp/tmp3p9tcwr4.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979323
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((num, index) => numbers.indexOf(num) === index);\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpijqyjt28.js:14:12)\n    at Object.<anonymous> (/tmp/tmpijqyjt28.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979324
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let seen = new Set();\n    let result = [];\n    for (let i = 0; i <\
    \ numbers.length; i++) {\n        if (!seen.has(numbers[i])) {\n            seen.add(numbers[i]);\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpp782qhhi.ts(6,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659979323
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n  \
    \      if (numbers.indexOf(numbers[i]) === numbers.lastIndexOf(numbers[i])) {\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 3, 4 ]

    '
  timestamp: 1659979324
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const result: number[] = [];\n    const unique = new Set();\n    for\
    \ (const num of numbers) {\n        if (!unique.has(num)) {\n            unique.add(num);\n\
    \            result.push(num);\n        }\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcojgmlqo.ts(7,24): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659979324
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let new_array: number[] = [];\n    let same_number: boolean = false;\n\
    \    numbers.forEach(number => {\n        same_number = false;\n        new_array.forEach(number2\
    \ => {\n            if (number === number2) {\n                same_number = true;\n\
    \            }\n        });\n        if (!same_number) {\n            new_array.push(number);\n\
    \        }\n    });\n    return new_array;\n}\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpnd8bi4xo.js:27:12)\n    at Object.<anonymous> (/tmp/tmpnd8bi4xo.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979324
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let check: number[] = [];\n    let newNumbers: number[] = [];\n    for\
    \ (let i: number = 0; i < numbers.length; i++) {\n        if (check.indexOf(numbers[i])\
    \ !== -1) {\n            numbers.splice(i, 1);\n            i--;\n        } else\
    \ {\n            check.push(numbers[i]);\n        }\n    }\n    return numbers;\n\
    }\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpnt3607c6.js:25:12)\n    at Object.<anonymous> (/tmp/tmpnt3607c6.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979324
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let results: number[] = [];\n    let seen: { [key: number]: boolean }\
    \ = {};\n    numbers.forEach(num => {\n        if (!seen[num]) {\n           \
    \ seen[num] = true;\n            results.push(num);\n        }\n    });\n    return\
    \ results;\n}\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpo6789y16.js:22:12)\n    at Object.<anonymous> (/tmp/tmpo6789y16.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979324
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return Array.from(new Set(numbers));\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcgw_2tyo.ts(6,18): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpcgw_2tyo.ts(6,27): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659821790
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let numbersCopy = numbers.slice();\n    for (let i = 0; i < numbersCopy.length;\
    \ i++) {\n        for (let j = 0; j < numbersCopy.length; j++) {\n           \
    \ if (i !== j && numbersCopy[i] === numbersCopy[j]) {\n                let indexToRemove\
    \ = numbersCopy.indexOf(numbersCopy[j]);\n                numbersCopy.splice(indexToRemove,\
    \ 1);\n            }\n        }\n    }\n    return numbersCopy;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  4,\n  3,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp67zhhv6p.js:22:12)\n    at Object.<anonymous> (/tmp/tmp67zhhv6p.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 4,\
    \ 3, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979324
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result = [];\n    // [1, 1, 2, 3, 2, 4]\n    for (let i = 0; i <\
    \ numbers.length; i++) {\n        if (numbers.indexOf(numbers[i]) === i) {\n \
    \           result.push(numbers[i]);\n        }\n    }\n    return result;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpg4jijafh.js:20:12)\n    at Object.<anonymous> (/tmp/tmpg4jijafh.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979324
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const uniqueNumbers: Set<number> = new Set<number>();\n    const answer:\
    \ number[] = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (!uniqueNumbers.has(numbers[i]))\
    \ {\n            uniqueNumbers.add(numbers[i]);\n            answer.push(numbers[i]);\n\
    \        }\n    }\n    return answer;\n}\nconsole.log(remove_duplicates([1, 2,\
    \ 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe6c9lxsi.ts(6,26): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpe6c9lxsi.ts(6,44): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659979323
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let newNumbers: number[] = []\n    let newNumbersObj: object = {}\n \
    \   for (let i = 0; i < numbers.length; i++) {\n        if (newNumbersObj[numbers[i]]\
    \ === undefined) {\n            newNumbersObj[numbers[i]] = true\n           \
    \ newNumbers.push(numbers[i])\n        }\n    }\n    return newNumbers\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmplxh606ay.js:21:12)\n    at Object.<anonymous> (/tmp/tmplxh606ay.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979324
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        let exist: boolean = false;\n        for (let j: number = 0;\
    \ j < numbers.length; j++) {\n            if (numbers[i] === numbers[j] && i !==\
    \ j) {\n                exist = true;\n            }\n        }\n        if (!exist)\
    \ {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979324
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((number, index) => numbers.indexOf(number) ===\
    \ index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpnoshmt4i.js:13:12)\n    at Object.<anonymous> (/tmp/tmpnoshmt4i.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979316
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    //array for result\n    let resultArray: number[] = [];\n    //loop over\
    \ array until the end of the array\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        //if the array does not have the same number in it, add the\
    \ current number\n        if (resultArray.indexOf(numbers[i]) === -1) {\n    \
    \        resultArray.push(numbers[i]);\n        }\n    }\n    return resultArray;\n\
    }\n\nlet numbers: number[] = [1, 2, 3, 2, 4];\n\nconsole.log(remove_duplicates(numbers));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpmsvr8efs.js:24:12)\n    at Object.<anonymous> (/tmp/tmpmsvr8efs.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979324
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    //return Array.from(new Set(numbers));\n    return [...new Set(numbers)];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfv860we3.ts(7,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659979324
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    numbers.forEach(function (num) {\n  \
    \      if (unique.indexOf(num) === -1) {\n            unique.push(num);\n    \
    \    }\n    });\n    return unique;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpxquv8_6y.js:19:12)\n    at Object.<anonymous> (/tmp/tmpxquv8_6y.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979324
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((v, i) => numbers.indexOf(v) === i);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp515b25e9.js:13:12)\n    at Object.<anonymous> (/tmp/tmp515b25e9.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979318
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const listSet = new Set(numbers);\n    const uniques = Array.from(listSet);\n\
    \    return uniques;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0jq2ff83.ts(6,25): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmp0jq2ff83.ts(7,27): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1659979325
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const set: Set<number> = new Set();\n    const result: number[] = [];\n\
    \    for (const number of numbers) {\n        if (!set.has(number)) {\n      \
    \      set.add(number);\n            result.push(number);\n        }\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmptovj70n2.ts(6,16): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmptovj70n2.ts(6,34): error TS2552: Cannot find name ''Set''.
    Did you mean ''set''?

    '
  timestamp: 1659979321
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((x, index) => index === numbers.indexOf(x));\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpm_xgtwhx.js:14:12)\n    at Object.<anonymous> (/tmp/tmpm_xgtwhx.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979326
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    let unique: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\nconsole.log(remove_duplicates([1, 2,\
    \ 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp2_f6q1gk.js:22:12)\n    at Object.<anonymous> (/tmp/tmp2_f6q1gk.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979326
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    numbers.forEach(function (currentValue:\
    \ number, index: number) {\n        if (numbers.indexOf(currentValue) === index)\
    \ {\n            result.push(currentValue);\n        }\n    });\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpd3nmiy4z.js:19:12)\n    at Object.<anonymous> (/tmp/tmpd3nmiy4z.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979326
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    let count = 1;\n    numbers.forEach(function\
    \ (value) {\n        if (numbers.indexOf(value) !== numbers.lastIndexOf(value))\
    \ {\n            result.push(value);\n        }\n    });\n    return result;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmpsws7ixep.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmpsws7ixep.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979326
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    numbers.forEach(function (value:\
    \ number) {\n        if (unique_numbers.indexOf(value) === -1) {\n           \
    \ unique_numbers.push(value);\n        }\n    });\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp43n4suxn.js:19:12)\n    at Object.<anonymous> (/tmp/tmp43n4suxn.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979326
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        let temp: number = numbers[i];\n        if (result.indexOf(temp)\
    \ === -1) {\n            result.push(temp);\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp4gp3hb58.js:20:12)\n    at Object.<anonymous> (/tmp/tmp4gp3hb58.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979326
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const result: number[] = [];\n    numbers.forEach(function (number: number)\
    \ {\n        if (result.indexOf(number) === -1) {\n            result.push(number);\n\
    \        }\n    });\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpa88zknif.js:19:12)\n    at Object.<anonymous> (/tmp/tmpa88zknif.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979326
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return Array.from(new Set(numbers));\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcgw_2tyo.ts(6,18): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpcgw_2tyo.ts(6,27): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659821790
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((n, i) => numbers.indexOf(n) === i);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp8xdefscs.js:13:12)\n    at Object.<anonymous> (/tmp/tmp8xdefscs.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979326
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    //make a new list to hold the non duplicate items\n    let newList: number[]\
    \ = [];\n    //loop through the items in the numbers list\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        //check if the number is already in\
    \ the newList\n        if (newList.indexOf(numbers[i]) == -1) {\n            //if\
    \ not add it to the newList\n            newList.push(numbers[i]);\n        }\n\
    \    }\n    //return the new list\n    return newList;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpu5lh2xtq.js:24:12)\n    at Object.<anonymous> (/tmp/tmpu5lh2xtq.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979326
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let numberSet = new Set(numbers);\n    return Array.from(numberSet);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpslgk5d_y.ts(6,25): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpslgk5d_y.ts(7,18): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1659979326
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, array) => array.indexOf(value) ===\
    \ index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpb6ateh_b.js:13:12)\n    at Object.<anonymous> (/tmp/tmpb6ateh_b.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979316
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) == -1) {\n          \
    \  unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp2ahp9t3_.js:19:12)\n    at Object.<anonymous> (/tmp/tmp2ahp9t3_.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979326
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    // create a dictionary where key are\
    \ the numbers and the value is the number of ocurrences\n    let dict: { [key:\
    \ number]: number } = {};\n    for (let i = 0; i < numbers.length; i++) {\n  \
    \      let number: number = numbers[i];\n        if (dict[number] === undefined)\
    \ {\n            dict[number] = 1;\n        } else {\n            dict[number]\
    \ += 1;\n        }\n    }\n    // iterate again, this time adding only the numbers\
    \ which has a value of 1\n    for (let i = 0; i < numbers.length; i++) {\n   \
    \     let number: number = numbers[i];\n        if (dict[number] === 1) {\n  \
    \          result.push(number);\n        }\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979326
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, self) => self.indexOf(value) ===\
    \ index);\n}\n\ntest('remove_duplicates', () => {\n    expect(remove_duplicates([1,\
    \ 2, 3, 2, 4])).toEqual([1, 3, 4]);\n});\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqktwhhey.ts(9,6): error TS2554: Expected 0 arguments,
    but got 2.

    ../../../../../tmp/tmpqktwhhey.ts(10,5): error TS2304: Cannot find name ''expect''.

    '
  timestamp: 1659979326
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const set = new Set(numbers);\n    return Array.from(set);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbg2800in.ts(6,21): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    ../../../../../tmp/tmpbg2800in.ts(7,18): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1659979326
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    var output: number[] = [];\n    var used: number[] = [];\n    for (var\
    \ i = 0; i < numbers.length; i++) {\n        if (used.indexOf(numbers[i]) == -1)\
    \ {\n            output.push(numbers[i]);\n            used.push(numbers[i]);\n\
    \        }\n    }\n    return output;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpb651jexf.js:21:12)\n    at Object.<anonymous> (/tmp/tmpb651jexf.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979326
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let mySet = new Set(numbers);\n    let arr = Array.from(mySet);\n   \
    \ return arr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpnk3e3ru3.ts(6,21): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpnk3e3ru3.ts(7,21): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1659979326
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let counts: number[] = [];\n    numbers.forEach(function (x) {\n    \
    \    if (counts[x] === undefined) {\n            counts[x] = 1;\n        } else\
    \ {\n            counts[x] += 1;\n        }\n    });\n    return numbers.filter(function\
    \ (x) {\n        return counts[x] === 1;\n    });\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979326
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const result: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpeot00twe.js:19:12)\n    at Object.<anonymous> (/tmp/tmpeot00twe.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979326
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = []\n    numbers.forEach(function (number)\
    \ {\n        if (unique_numbers.indexOf(number) == -1) {\n            unique_numbers.push(number)\n\
    \        }\n    })\n    return unique_numbers\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpnmu4sj1t.js:19:12)\n    at Object.<anonymous> (/tmp/tmpnmu4sj1t.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979326
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    let count: number = 1;\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        for (let j: number = 0; j\
    \ < numbers.length; j++) {\n            if (numbers[i] === numbers[j]) {\n   \
    \             count++;\n            }\n        }\n        if (count === 1) {\n\
    \            result.push(numbers[i]);\n        }\n        count = 1;\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmp_e3o8f5w.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_e3o8f5w.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979326
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((item, index) => numbers.indexOf(item) === index);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp3nbjlr2o.js:13:12)\n    at Object.<anonymous> (/tmp/tmp3nbjlr2o.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979326
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    //use dictionary to keep track of each number occurance\n    let numberMap:\
    \ { [key: number]: number } = {};\n    for (let num of numbers) {\n        numberMap[num]\
    \ = numberMap[num] || 0;\n        numberMap[num]++;\n    }\n    //return only\
    \ the numbers that are only present once\n    return numbers.filter(num => numberMap[num]\
    \ === 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979327
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    var i: number;\n    var j: number;\n    var ret: number[] = [];\n   \
    \ var exists: boolean;\n    for (i = 0; i < numbers.length; i++) {\n        exists\
    \ = false;\n        for (j = 0; j < ret.length; j++) {\n            if (numbers[i]\
    \ === ret[j]) {\n                exists = true;\n                break;\n    \
    \        }\n        }\n        if (!exists) {\n            ret.push(numbers[i]);\n\
    \        }\n    }\n    return ret;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp1sgqhdjr.js:29:12)\n    at Object.<anonymous> (/tmp/tmp1sgqhdjr.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979327
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let alreadyExists: boolean[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        alreadyExists[numbers[i]] = true;\n    }\n    let unique = [];\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        if (alreadyExists[numbers[i]])\
    \ {\n            unique.push(numbers[i]);\n            alreadyExists[numbers[i]]\
    \ = false;\n        }\n    }\n    return unique;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp3pcf9mg3.js:24:12)\n    at Object.<anonymous> (/tmp/tmp3pcf9mg3.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979328
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const uniqueNumbers: number[] = [];\n    for (let i: number = 0; i <\
    \ numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1)\
    \ {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return\
    \ uniqueNumbers;\n}\n\nlet numbers: number[] = [1, 2, 3, 2, 4];\nconsole.log(remove_duplicates(numbers));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp0csmjfk8.js:21:12)\n    at Object.<anonymous> (/tmp/tmp0csmjfk8.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979328
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = []\n    let duplicates: number[] = []\n    numbers.forEach(element\
    \ => {\n        if (result.indexOf(element) > -1) {\n            duplicates.push(element)\n\
    \        } else {\n            result.push(element)\n        }\n    });\n    duplicates.forEach(element\
    \ => {\n        result.splice(result.indexOf(element), 1)\n    });\n    return\
    \ result\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979329
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((el, ind) => numbers.indexOf(el) === ind);\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpmp1i4n6e.js:13:12)\n    at Object.<anonymous> (/tmp/tmpmp1i4n6e.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979329
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const uniqueNumbers: number[] = [];\n    numbers.forEach(number => {\n\
    \        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpcybl_ncs.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcybl_ncs.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979316
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((item, index) => {\n        return numbers.indexOf(item)\
    \ == index;\n    });\n}\n\nexport {remove_duplicates};\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp9y8j9yqo.js:18:12)\n    at Object.<anonymous> (/tmp/tmp9y8j9yqo.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979329
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let hash = new Map();\n    for (let i = 0; i < numbers.length; i++) {\n\
    \        if (hash.has(numbers[i])) {\n            hash.set(numbers[i], hash.get(numbers[i])\
    \ + 1);\n        } else {\n            hash.set(numbers[i], 1);\n        }\n \
    \   }\n    let result = [];\n    for (let i = 0; i < numbers.length; i++) {\n\
    \        if (hash.get(numbers[i]) === 1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk29yoo2_.ts(6,20): error TS2583: Cannot find name
    ''Map''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659979329
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    // const uniqueNumbers = new Set(numbers);\n    // const uniqueNumbers\
    \ = [...new Set(numbers)];\n    const uniqueNumbers = numbers.filter((num, i)\
    \ => numbers.indexOf(num) === i);\n    return uniqueNumbers;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpnredajb7.js:16:12)\n    at Object.<anonymous> (/tmp/tmpnredajb7.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979329
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const tempSet = new Set(numbers);\n    return Array.from(tempSet);\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpskearalx.ts(6,25): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpskearalx.ts(7,18): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1659979328
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const indexes: number[] = [];\n    numbers.forEach((el: number, index:\
    \ number) => {\n        if (numbers.indexOf(el) !== index) {\n            indexes.push(index);\n\
    \        }\n    });\n    indexes.forEach((el: number) => {\n        numbers.splice(el,\
    \ 1);\n    });\n    return numbers;\n}\n\nconsole.log(remove_duplicates([1, 2,\
    \ 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpz8b2osw7.js:23:12)\n    at Object.<anonymous> (/tmp/tmpz8b2osw7.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 3 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979329
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let set = new Set(numbers);\n    let result: number[] = [];\n    set.forEach(element\
    \ => {\n        result.push(element);\n    });\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpl7na9swq.ts(6,19): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659979328
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_numbers: number[] = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (numbers.indexOf(numbers[i]) === i) {\n            unique_numbers.push(numbers[i]);\n\
    \        }\n    }\n    return unique_numbers;\n}\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpchit0j1w.js:20:12)\n    at Object.<anonymous> (/tmp/tmpchit0j1w.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979329
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let newNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (newNumbers.indexOf(numbers[i]) == -1) {\n            newNumbers.push(numbers[i]);\n\
    \        }\n    }\n    return newNumbers;\n}\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmprxuuzqpm.js:20:12)\n    at Object.<anonymous> (/tmp/tmprxuuzqpm.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979329
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return [...new Set(numbers)];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_cizuooo.ts(6,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659821790
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const uniqueNumbers: number[] = [];\n    numbers.forEach(function (i)\
    \ {\n        if (uniqueNumbers.indexOf(i) === -1) {\n            uniqueNumbers.push(i);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpbrsdetr4.js:19:12)\n    at Object.<anonymous> (/tmp/tmpbrsdetr4.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979329
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let mySet = new Set(numbers);\n    let newList = Array.from(mySet);\n\
    \    return newList;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1frkly54.ts(6,21): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmp1frkly54.ts(7,25): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1659979329
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let filtered = new Set(numbers);\n    let result = Array.from(filtered);\n\
    \    return result;\n}\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmptjdmt6xz.ts(6,24): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmptjdmt6xz.ts(7,24): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1659979329
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    //number[] = numbers.splice(0);\n    let newarray: number[] = [];\n \
    \   numbers.forEach(element => {\n        if (!newarray.includes(element)) {\n\
    \            newarray.push(element);\n        }\n    });\n    return newarray;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgy7jejr6.ts(9,23): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659979329
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\nconsole.log(remove_duplicates([1, 2,\
    \ 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmppmpapz8y.js:20:12)\n    at Object.<anonymous> (/tmp/tmppmpapz8y.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979329
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const seen: number[] = [];\n    const res: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        const num: number = numbers[i];\n\
    \        if (seen.indexOf(num) === -1) {\n            seen.push(num);\n      \
    \      res.push(num);\n        }\n    }\n    return res;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpo2q1_yuj.js:22:12)\n    at Object.<anonymous> (/tmp/tmpo2q1_yuj.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979329
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let output: number[] = [];\n    for (let i = 0; i < numbers.length; i++)\
    \ {\n        if (output.indexOf(numbers[i]) === -1) {\n            output.push(numbers[i]);\n\
    \        }\n    }\n    return output;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp0w581h4x.js:19:12)\n    at Object.<anonymous> (/tmp/tmp0w581h4x.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979329
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        let occurence: number = 0;\n        for (let j: number = 0;\
    \ j < numbers.length; j++) {\n            if (numbers[i] === numbers[j]) {\n \
    \               occurence++;\n            }\n        }\n        if (occurence\
    \ === 1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979329
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let results: number[] = [];\n    let seen: any = {};\n    for (let i\
    \ = 0; i < numbers.length; i++) {\n        if (!seen[numbers[i]]) {\n        \
    \    results.push(numbers[i]);\n            seen[numbers[i]] = true;\n       \
    \ }\n    }\n    return results;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp1b_cxrl7.js:21:12)\n    at Object.<anonymous> (/tmp/tmp1b_cxrl7.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979329
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((n, i) => numbers.indexOf(n) === i);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp8xdefscs.js:13:12)\n    at Object.<anonymous> (/tmp/tmp8xdefscs.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979326
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const seen = {};\n    return numbers.filter(number => !(number in seen)\
    \ && (seen[number] = true));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpt_2ddonz.js:14:12)\n    at Object.<anonymous> (/tmp/tmpt_2ddonz.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979329
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const numbers_set = new Set(numbers);\n    return Array.from(numbers_set);\n\
    }\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6l8y8sn8.ts(6,29): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmp6l8y8sn8.ts(7,18): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1659979330
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const sortedArray = numbers.sort();\n    const result: number[] = [];\n\
    \    for (let i = 0; i < sortedArray.length; i++) {\n        if (sortedArray[i]\
    \ !== sortedArray[i + 1]) {\n            result.push(sortedArray[i]);\n      \
    \  }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpwuuovab2.js:20:12)\n    at Object.<anonymous> (/tmp/tmpwuuovab2.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979331
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((item, idx) => numbers.indexOf(item) === idx);\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpemh2ygub.js:14:12)\n    at Object.<anonymous> (/tmp/tmpemh2ygub.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979331
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const result = numbers.filter((value, index, self) => self.indexOf(value)\
    \ === index);\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpkixra7em.js:14:12)\n    at Object.<anonymous> (/tmp/tmpkixra7em.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979331
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique = new Set(numbers);\n    numbers = [];\n    unique.forEach(num\
    \ => numbers.push(num));\n    return numbers;\n}\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpptc9mvus.ts(6,22): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659979331
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique_set = new Set();\n    let unique_list = [];\n    for (let\
    \ num of numbers) {\n        if (!unique_set.has(num)) {\n            unique_set.add(num);\n\
    \            unique_list.push(num);\n        }\n    }\n    return unique_list;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpenmdo2my.ts(6,26): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659979331
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniques: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (uniques.indexOf(numbers[i]) === -1) {\n            uniques.push(numbers[i]);\n\
    \        }\n    }\n    return uniques;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp7_t0iii0.js:19:12)\n    at Object.<anonymous> (/tmp/tmp7_t0iii0.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979331
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((number, index) => numbers.indexOf(number) ===\
    \ index);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpnoshmt4i.js:13:12)\n    at Object.<anonymous> (/tmp/tmpnoshmt4i.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979316
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique: number[] = [];\n    let nums: number[] = numbers.sort();\n\
    \    for (let i: number = 0; i < nums.length; i++) {\n        if (nums[i] !==\
    \ nums[i + 1]) {\n            unique.push(nums[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp7s51ln5h.js:21:12)\n    at Object.<anonymous> (/tmp/tmp7s51ln5h.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979331
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique = [];\n    numbers.forEach(n => {\n        if (unique.indexOf(n)\
    \ === -1) {\n            unique.push(n);\n        }\n    });\n    return unique;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp5n27z8cq.js:19:12)\n    at Object.<anonymous> (/tmp/tmp5n27z8cq.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979331
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let filtered: number[] = [];\n    for (let n of numbers) {\n        if\
    \ (filtered.indexOf(n) == -1) filtered.push(n);\n    }\n    return filtered;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmp1wkr78ad.js:19:12)\n    at Object.<anonymous> (/tmp/tmp1wkr78ad.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979331
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((number, index) => index === numbers.indexOf(number));\n\
    }\n\nassert.deepEqual(remove_duplicates([1, 2, 3, 2, 4]), [1, 3, 4]);\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpue8s_pbv.ts(9,1): error TS2448: Block-scoped variable
    ''assert'' used before its declaration.

    '
  timestamp: 1659979331
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let newArr: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        let element: number = numbers[i];\n        let occurance: number\
    \ = 0;\n        for (let j: number = 0; j < numbers.length; j++) {\n         \
    \   if (element === numbers[j]) {\n                occurance++;\n            }\n\
    \        }\n        if (occurance === 1) {\n            newArr.push(element);\n\
    \        }\n    }\n    return newArr;\n}\nconsole.log(remove_duplicates([1, 2,\
    \ 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 3, 4 ]

    '
  timestamp: 1659979331
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return [...new Set(numbers)];\n}\nconsole.log(remove_duplicates([1, 2,\
    \ 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpz8wivfa5.ts(6,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659979331
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let unique = [...new Set(numbers)];\n    return unique;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp10jeqm5i.ts(6,26): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659979331
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const uniques: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        let unique: boolean = true;\n        for (let j: number = 0;\
    \ j < numbers.length; j++) {\n            if (numbers[i] === numbers[j] && i !==\
    \ j) {\n                unique = false;\n            }\n        }\n        if\
    \ (unique) {\n            uniques.push(numbers[i]);\n        }\n    }\n    return\
    \ uniques;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979331
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmppivjgg1d.js:19:12)\n    at Object.<anonymous> (/tmp/tmppivjgg1d.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979331
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const mapping: { [key: number]: number } = {};\n    const output: number[]\
    \ = [];\n    for (const n of numbers) {\n        if (mapping[n] === undefined)\
    \ {\n            mapping[n] = 0;\n        }\n        mapping[n] += 1;\n    }\n\
    \    for (const n of numbers) {\n        if (mapping[n] === 1) {\n           \
    \ output.push(n);\n        }\n    }\n    return output;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979332
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        let j: number = 0;\n        for (j; j < uniqueNumbers.length;\
    \ j++) {\n            if (numbers[i] === uniqueNumbers[j]) {\n               \
    \ break;\n            }\n        }\n        if (j === uniqueNumbers.length) {\n\
    \            uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return uniqueNumbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpnyy8zec1.js:25:12)\n    at Object.<anonymous> (/tmp/tmpnyy8zec1.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979331
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((value, index, array) => {\n        return array.indexOf(value)\
    \ === index;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpo_kifddt.js:15:12)\n    at Object.<anonymous> (/tmp/tmpo_kifddt.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979318
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    return numbers.filter((num, index) => numbers.indexOf(num) === index);\n\
    }\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpics1r3px.js:14:12)\n    at Object.<anonymous> (/tmp/tmpics1r3px.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 2, 3, 4 ]

    '
  timestamp: 1659979331
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const set = new Set(numbers);\n    return Array.from(set);\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpx1woo86i.ts(6,21): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    ../../../../../tmp/tmpx1woo86i.ts(7,18): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1659979318
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    // Write your solution here\n    var result: number[] = [];\n    for\
    \ (var i = 0; i < numbers.length; i++) {\n        var n = numbers[i];\n      \
    \  if (result.indexOf(n) == -1) {\n            result.push(n);\n        }\n  \
    \  }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpg63zyfi2.js:21:12)\n    at Object.<anonymous> (/tmp/tmpg63zyfi2.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3,\
    \ 4, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979332
- exit_code: 2
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    const set = new Set(numbers);\n    return Array.from(set.values());\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpr5cu51i4.ts(6,21): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    ../../../../../tmp/tmpr5cu51i4.ts(7,18): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1659979331
- exit_code: 1
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let i;\n    let l;\n    let list = [];\n    let numbers_list = numbers.map(String);\n\
    \    for (i = 0, l = numbers_list.length; i < l; i++) {\n        if (numbers_list.lastIndexOf(numbers_list[i])\
    \ === i) {\n            list.push(numbers[i]);\n        }\n    }\n    return list;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  4,\n  3,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  5\n]\n  \
    \  at test (/tmp/tmpn9d_0u4o.js:23:12)\n    at Object.<anonymous> (/tmp/tmpn9d_0u4o.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 4,\
    \ 3, 5 ],\n  expected: [ 1, 4, 5 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 3, 2, 4 ]

    '
  timestamp: 1659979332
- exit_code: 0
  program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
    \ {\n    let result = [];\n    let numberOccurrences = {};\n    numbers.forEach(number\
    \ => {\n        numberOccurrences[number] = ++numberOccurrences[number] || 1;\n\
    \    });\n    for (let number in numberOccurrences) {\n        if (numberOccurrences[number]\
    \ === 1) {\n            result.push(Number(number));\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979332

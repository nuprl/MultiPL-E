name: HumanEval_95_check_dict_case
language: ts
prompt: "//Given an object, return true if all keys are strings in lower \n// case\
  \ or all keys are strings in upper case, else return false.\n// The function should\
  \ return false is the given object is empty.\n// Examples:\n// >>> check_dict_case({\"\
  a\": \"apple\", \"b\": \"banana\"})\n// true\n// >>> check_dict_case({\"a\": \"\
  apple\", \"A\": \"banana\", \"B\": \"banana\"})\n// false\n// >>> check_dict_case({\"\
  a\": \"apple\", 8: \"banana\", \"a\": \"apple\"})\n// false\n// >>> check_dict_case({\"\
  Name\": \"John\", \"Age\": \"36\", \"City\": \"Houston\"})\n// false\n// >>> check_dict_case({\"\
  STATE\": \"NC\", \"ZIP\": \"12345\"})\n// true\nfunction check_dict_case(dict: {[key:\
  \ string]: string}): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = check_dict_case;\n  assert.deepEqual(candidate({\"\
  p\": \"pineapple\", \"b\": \"banana\"}),true);\n  assert.deepEqual(candidate({\"\
  p\": \"pineapple\", \"A\": \"banana\", \"B\": \"banana\"}),false);\n  assert.deepEqual(candidate({\"\
  p\": \"pineapple\", \"5\": \"banana\", \"a\": \"apple\"}),false);\n  assert.deepEqual(candidate({\"\
  Name\": \"John\", \"Age\": \"36\", \"City\": \"Houston\"}),false);\n  assert.deepEqual(candidate({\"\
  STATE\": \"NC\", \"ZIP\": \"12345\"}),true);\n  assert.deepEqual(candidate({\"fruit\"\
  : \"Orange\", \"taste\": \"Sweet\"}),true);\n  assert.deepEqual(candidate({}),false);\n\
  }\n\ntest();"
completions: ["    let len: number = Object.keys(dict).length;\n    if (len > 0) {\n\
    \        let first_key = Object.keys(dict)[0];\n        let lower_case = first_key.toLowerCase()\
    \ === first_key;\n        for (let key in dict) {\n            if (lower_case\
    \ !== (key.toLowerCase() === key)) {\n                return false;\n        \
    \    }\n        }\n        return true;\n    }\n    return false;\n}\n", "   \
    \ let all_lower: boolean = true;\n    let all_upper: boolean = true;\n    let\
    \ count: number = 0;\n    for (let key in dict) {\n        count++;\n        if\
    \ (key.toLowerCase() === key) {\n            all_upper = false;\n        } else\
    \ {\n            all_lower = false;\n        }\n    }\n    if (count === 0) {\n\
    \        return false;\n    }\n    return all_lower || all_upper;\n}\n", "   \
    \ const keys = Object.keys(dict);\n    const firstKey = keys[0];\n    const lowerFirstKey\
    \ = firstKey.toLowerCase();\n    const upperFirstKey = firstKey.toUpperCase();\n\
    \    if(lowerFirstKey === firstKey){\n        return keys.every(key => key.toLowerCase()\
    \ === key);\n    } else if(upperFirstKey === firstKey){\n        return keys.every(key\
    \ => key.toUpperCase() === key);\n    } else {\n        return false;\n    }\n\
    }\nconst dict1 = {\"a\": \"apple\", \"b\": \"banana\"};\nconst dict2 = {\"a\"\
    : \"apple\", \"A\": \"banana\", \"B\": \"banana\"};\nconst dict3 = {\"a\": \"\
    apple\", 8: \"banana\", \"a\": \"apple\"};\nconst dict4 = {\"Name\": \"John\"\
    , \"Age\": \"36\", \"City\": \"Houston\"};\nconst dict5 = {\"STATE\": \"NC\",\
    \ \"ZIP\": \"12345\"};\nconsole.log(check_dict_case(dict1));\nconsole.log(check_dict_case(dict2));\n\
    console.log(check_dict_case(dict3));\nconsole.log(check_dict_case(dict4));\nconsole.log(check_dict_case(dict5));\n",
  "    if(Object.keys(dict).length === 0) return false;\n    let _keys = Object.keys(dict);\n\
    \    let _isUpper = true;\n    let _isLower = true;\n    for(let i = 0; i < _keys.length;\
    \ i++) {\n        if(_keys[i].toUpperCase() !== _keys[i]) {\n            _isUpper\
    \ = false;\n        }\n        if(_keys[i].toLowerCase() !== _keys[i]) {\n   \
    \         _isLower = false;\n        }\n    }\n    return _isUpper || _isLower;\n\
    }\nconsole.log(check_dict_case({\"a\": \"apple\", \"b\": \"banana\"}));\nconsole.log(check_dict_case({\"\
    a\": \"apple\", \"A\": \"banana\", \"B\": \"banana\"}));\nconsole.log(check_dict_case({\"\
    a\": \"apple\", 8: \"banana\", \"a\": \"apple\"}));\nconsole.log(check_dict_case({\"\
    Name\": \"John\", \"Age\": \"36\", \"City\": \"Houston\"}));\nconsole.log(check_dict_case({\"\
    STATE\": \"NC\", \"ZIP\": \"12345\"}));\n\nconsole.log('\\n#9\\n');", "    if\
    \ (Object.keys(dict).length === 0) {\n        return false;\n    }\n    let lowerCase\
    \ = true;\n    let upperCase = true;\n    Object.keys(dict).forEach(key => {\n\
    \        lowerCase = lowerCase && key.toLowerCase() === key;\n        upperCase\
    \ = upperCase && key.toUpperCase() === key;\n    });\n    return lowerCase ||\
    \ upperCase;\n}\n", "  let uppers = new Set();\n  let lowers = new Set();\n  for\
    \ (let key in dict) {\n    if (key.toUpperCase() == key) {\n      uppers.add(key);\n\
    \    } else if (key.toLowerCase() == key) {\n      lowers.add(key);\n    } else\
    \ {\n      return false;\n    }\n  }\n  if (uppers.size > 0 && lowers.size > 0)\
    \ {\n    return false;\n  }\n  return true;\n}\n", "    let result: boolean =\
    \ true;\n    let upper: boolean = false;\n    let lower: boolean = false;\n  \
    \  let dict_keys: string[] = Object.keys(dict);\n    for (let i = 0; i < dict_keys.length;\
    \ i++) {\n        let key = dict_keys[i];\n        if (key.toUpperCase() === key)\
    \ {\n            upper = true;\n        } else if (key.toLowerCase() === key)\
    \ {\n            lower = true;\n        } else {\n            result = false;\n\
    \            break;\n        }\n    }\n    return (upper !== lower) ? result :\
    \ false;\n}", "    let isLowerCase: boolean = true;\n    let isUpperCase: boolean\
    \ = true;\n    for (let k in dict) {\n        if (k.toLowerCase() !== k) {\n \
    \           isLowerCase = false;\n        }\n        if (k.toUpperCase() !== k)\
    \ {\n            isUpperCase = false;\n        }\n    }\n    return isLowerCase\
    \ || isUpperCase;\n}\n", "    let upperCase = new Set<string>();\n    let lowerCase\
    \ = new Set<string>();\n    for (let k in dict) {\n        let key = k.toString();\n\
    \        if (key.toUpperCase() === key) {\n            upperCase.add(key);\n \
    \       } else if (key.toLowerCase() === key) {\n            lowerCase.add(key);\n\
    \        } else {\n            return false;\n        }\n    }\n    if (upperCase.size\
    \ === 0 || lowerCase.size === 0) {\n        return true;\n    }\n    return false;\n\
    }", "    let check_case: boolean = true;\n    if (dict.length > 0) {\n       \
    \ let values: string[] = Object.values(dict);\n        let lower_case_values:\
    \ string[] = values.map(value => value.toLowerCase());\n        let upper_case_values:\
    \ string[] = values.map(value => value.toUpperCase());\n        for (let value\
    \ of values) {\n            if (lower_case_values.includes(value) && upper_case_values.includes(value))\
    \ {\n                check_case = false;\n            }\n        }\n    }\n  \
    \  return check_case;\n}\n", "    let lower = true;\n    let upper = true;\n \
    \   if(Object.keys(dict).length === 0) {\n        return false;\n    }\n    for(let\
    \ key in dict) {\n        if(!isNaN(+key)) {\n            return false;\n    \
    \    }\n        if(key !== key.toLowerCase()) {\n            lower = false;\n\
    \        }\n        if(key !== key.toUpperCase()) {\n            upper = false;\n\
    \        }\n    }\n    return lower || upper;\n}", "    let dict_k: string[] =\
    \ Object.keys(dict);\n    if (dict_k.length == 0) {\n        return false;\n \
    \   }\n    let flag: boolean = dict_k[0].toUpperCase() == dict_k[0];\n    for\
    \ (let k of dict_k) {\n        if (flag) {\n            if (k.toUpperCase() !=\
    \ k) {\n                return false;\n            }\n        } else {\n     \
    \       if (k.toLowerCase() != k) {\n                return false;\n         \
    \   }\n        }\n    }\n    return true;\n}\n", "    return true;\n}\n", "  \
    \  if (Object.keys(dict).length === 0) {\n        return false;\n    }\n\n   \
    \ let upper: number = 0;\n    let lower: number = 0;\n\n    for (let key in dict)\
    \ {\n        if (typeof key !== \"string\") {\n            return false;\n   \
    \     }\n        if (key.toUpperCase() === key) {\n            upper++;\n    \
    \    } else if (key.toLowerCase() === key) {\n            lower++;\n        }\
    \ else {\n            return false;\n        }\n    }\n\n    return upper ===\
    \ Object.keys(dict).length || lower === Object.keys(dict).length;\n}\n\n\n", " \
    \   return dict != null && Object.values(dict).every(value => {\n        const\
    \ str = value.toString();\n        const lowerStr = str.toLowerCase();\n     \
    \   const upperStr = str.toUpperCase();\n        return str == lowerStr || str\
    \ == upperStr;\n    });\n}\n", "    let keys_all_lower = true;\n    let keys_all_upper\
    \ = true;\n    for (let key in dict) {\n        if (key !== key.toLowerCase())\
    \ keys_all_lower = false;\n        if (key !== key.toUpperCase()) keys_all_upper\
    \ = false;\n    }\n    return keys_all_lower || keys_all_upper;\n}\nconsole.log(check_dict_case({\"\
    a\": \"apple\", \"b\": \"banana\"}));\nconsole.log(check_dict_case({\"a\": \"\
    apple\", \"A\": \"banana\", \"B\": \"banana\"}));\nconsole.log(check_dict_case({\"\
    a\": \"apple\", 8: \"banana\", \"a\": \"apple\"}));\nconsole.log(check_dict_case({\"\
    Name\": \"John\", \"Age\": \"36\", \"City\": \"Houston\"}));\nconsole.log(check_dict_case({\"\
    STATE\": \"NC\", \"ZIP\": \"12345\"}));\nconsole.log();\n\n", "    let response\
    \ = true;\n    let keys: string[] = Object.keys(dict);\n    if (keys.length ===\
    \ 0) {\n        return false;\n    }\n    let first_key: string = keys[0];\n \
    \   if (first_key === first_key.toLowerCase()) {\n        for (let i = 0; i <\
    \ keys.length; i++) {\n            if (keys[i] !== keys[i].toLowerCase()) {\n\
    \                response = false;\n            }\n        }\n    } else if (first_key\
    \ === first_key.toUpperCase()) {\n        for (let i = 0; i < keys.length; i++)\
    \ {\n            if (keys[i] !== keys[i].toUpperCase()) {\n                response\
    \ = false;\n            }\n        }\n    } else {\n        response = false;\n\
    \    }\n    return response;\n}\n", "    let lowerKeys = [];\n    let upperKeys\
    \ = [];\n    let temp: boolean = true;\n    let result: boolean = true;\n    if(!Object.keys(dict).length)\
    \ {\n        return false;\n    }\n    for(const i in dict) {\n        if(i ===\
    \ i.toUpperCase()) {\n            upperKeys.push(i);\n        }\n        else\
    \ if(i === i.toLowerCase()) {\n            lowerKeys.push(i);\n        }\n   \
    \     else {\n            return false;\n        }\n    }\n    if(!upperKeys.length)\
    \ {\n        return true;\n    }\n    if(!lowerKeys.length) {\n        return\
    \ true;\n    }\n    else {\n        return false;\n    }\n}\n", "    if (Object.keys(dict).length\
    \ < 1) return false;\n    let isUpper = isUpperCase(Object.keys(dict)[0]);\n \
    \   for (let key in dict) {\n        if (isUpperCase(key) !== isUpper) return\
    \ false;\n    }\n    return true;\n}\n\nconsole.log(\"check_dict_case\");\nconsole.log(check_dict_case({\"\
    a\": \"apple\", \"b\": \"banana\"}));\nconsole.log(check_dict_case({\"a\": \"\
    apple\", \"A\": \"banana\", \"B\": \"banana\"}));\nconsole.log(check_dict_case({\"\
    a\": \"apple\", 8: \"banana\", \"a\": \"apple\"}));\nconsole.log(check_dict_case({\"\
    Name\": \"John\", \"Age\": \"36\", \"City\": \"Houston\"}));\nconsole.log(check_dict_case({\"\
    STATE\": \"NC\", \"ZIP\": \"12345\"}));\n", "    return false;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

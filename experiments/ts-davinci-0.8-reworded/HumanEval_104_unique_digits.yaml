name: HumanEval_104_unique_digits
language: ts
prompt: "//Given an array of positive integers x. return a sorted array of all \n\
  // elements that hasn't any even digit.\n// Note: Returned array should be sorted\
  \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
  // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
  \ number[]): number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
  \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
  \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
  \ 103, 31]),[31, 135]);\n}\n\ntest();"
completions: ["    // TODO\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        if (x[i] < 10) {\n            result.push(x[i]);\n\
    \        } else {\n            let found: boolean = false;\n            for (let\
    \ j = 1; j < x[i].toString().length; j++) {\n                if (parseInt(x[i].toString()[j])\
    \ % 2 == 0) {\n                    found = true;\n                    break;\n\
    \                }\n            }\n            if (!found) {\n               \
    \ result.push(x[i]);\n            }\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n", "    return x.filter(x => x.toString().split('').every(i\
    \ => i % 2 == 1)).sort((a, b) => a - b);\n}", "    let result: number[] = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let j = x[i];\n        while\
    \ (j > 0) {\n            if (j % 2 == 0) {\n                j = -1;\n        \
    \    } else {\n                j = Math.floor(j / 10);\n            }\n      \
    \  }\n        if (j != -1) {\n            result.push(x[i]);\n        }\n    }\n\
    \    return result.sort((a, b) => a - b);\n}\n", "  let a: number[] = [];\n  for\
    \ (let i = 0; i < x.length; i++) {\n    let str: string = x[i].toString();\n \
    \   let check: boolean = true;\n    for (let j = 0; j < str.length; j++) {\n \
    \     if (str[j] % 2 == 0) {\n        check = false;\n        break;\n      }\n\
    \    }\n    if (check) {\n      a.push(x[i]);\n    }\n  }\n  return a.sort((a,\
    \ b) => a - b);\n}", "  return x.filter(function(elem){\n    return (\"\"+elem).split(\"\
    \").some(function(digit){\n      return parseInt(digit) % 2 === 1;\n    });\n\
    \  }).sort(function(a,b){\n    return a - b;\n  });\n}", "  let result: number[]\
    \ = [];\n  let numbers: number[] = [];\n  for (let i: number = 0; i < x.length;\
    \ i++) {\n    numbers.push(x[i]);\n  }\n  numbers.sort(function (a, b) {\n   \
    \ return a - b;\n  });\n  for (let i: number = 0; i < numbers.length; i++) {\n\
    \    let numArray: number[] = numbers[i].toString().split(\"\").map(Number);\n\
    \    if (numArray.every(element => element % 2 !== 0)) {\n      result.push(numbers[i]);\n\
    \    }\n  }\n  return result;\n}\n", "    let unique_arr: number[] = [];\n   \
    \ for (let i: number = 0; i < x.length; i++) {\n        let elem: number = x[i];\n\
    \        let digits: number[] = get_digits(elem);\n        if (has_even_digit(digits))\
    \ continue;\n        unique_arr.push(elem);\n    }\n    return unique_arr.sort((a,\
    \ b) => a - b);\n}\n", "  return x.filter(x => x.toString().split('').map(i =>\
    \ parseInt(i)).filter(y => y % 2 != 0).length === x.toString().split('').length).sort((a,\
    \ b) => a - b);\n}\n", "    let out = [];\n    for (let n of x) {\n        let\
    \ is_unique = true;\n        for (let c of n.toString()) {\n            if (parseInt(c)\
    \ % 2 == 0) {\n                is_unique = false;\n                break;\n  \
    \          }\n        }\n        if (is_unique) {\n            out.push(n);\n\
    \        }\n    }\n    return out.sort((a, b) => a - b);\n}\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n", "   \
    \ const arr: number[] = [];\n    for (let i = 0; i < x.length; i++) {\n      \
    \  const number: number = x[i];\n        if (number.toString().includes('2')\n\
    \            || number.toString().includes('4')\n            || number.toString().includes('6')\n\
    \            || number.toString().includes('8')\n            || number.toString().includes('0'))\
    \ {\n            continue;\n        }\n        arr.push(number);\n    }\n    return\
    \ arr.sort((a, b) => a - b);\n}\n", "  var y: number[] = [];\n  for (var i = 0;\
    \ i < x.length; i++) {\n    if (x[i].toString().match(/[02468]/g) === null) {\n\
    \      y.push(x[i]);\n    }\n  }\n  return y.sort(function(a, b) { return a -\
    \ b; });\n}\nconsole.log(unique_digits([15, 33, 1422, 1]));\nconsole.log(unique_digits([152,\
    \ 323, 1422, 10]));\n", "    const result: number[] = [];\n    x.forEach(num =>\
    \ {\n        if (num.toString().split('').filter(digit => Number(digit) % 2 ===\
    \ 0).length === 0) {\n            result.push(num);\n        }\n    });\n    return\
    \ result.sort((a, b) => a - b);\n}\nconsole.log(unique_digits([15, 33, 1422, 1]));\n\
    console.log(unique_digits([152, 323, 1422, 10]));\n", "  //My solution\n  let\
    \ sortArr = x.sort((a, b) => a - b);\n  for (let i = 0; i < sortArr.length; i++)\
    \ {\n    if (sortArr[i].toString().split(\"\").includes(\"2\") || sortArr[i].toString().split(\"\
    \").includes(\"4\") || sortArr[i].toString().split(\"\").includes(\"6\") || sortArr[i].toString().split(\"\
    \").includes(\"8\") || sortArr[i].toString().split(\"\").includes(\"0\")) {\n\
    \      sortArr.splice(i, 1);\n      i = i - 1;\n    }\n  }\n  return sortArr;\n\
    \  //solution 2 (from the exercise)\n  // return x.filter(a => !/[2468]/.test(a)).sort((a,\
    \ b) => a - b);\n}\n", "    var result: number[] = [];\n    var arr: number[]\
    \ = [];\n    var duplicates: number[] = [];\n    //remove even numbers from array\n\
    \    for (var i = 0; i < x.length; i++) {\n        if (x[i] % 2 != 0) {\n    \
    \        arr.push(x[i]);\n        }\n    }\n    //sort the array\n    for (var\
    \ i = 0; i < arr.length; i++) {\n        for (var j = i + 1; j < arr.length; j++)\
    \ {\n            if (arr[i] > arr[j]) {\n                var temp = arr[i];\n\
    \                arr[i] = arr[j];\n                arr[j] = temp;\n          \
    \  }\n        }\n    }\n    //check for unique numbers\n    for (var i = 0; i\
    \ < arr.length; i++) {\n        for (var j = i + 1; j < arr.length; j++) {\n \
    \           if (arr[i] == arr[j]) {\n                duplicates.push(arr[i]);\n\
    \            }\n        }\n    }\n    //remove duplicate numbers from array\n\
    \    for (var i = 0; i < arr.length; i++) {\n        for (var j = 0; j < duplicates.length;\
    \ j++) {\n            if (arr[i] == duplicates[j]) {\n                arr.splice(i,\
    \ 1);\n            }\n        }\n    }\n    return arr;\n}", "    let result =\
    \ [];\n    for (let i = 0; i < x.length; i++) {\n        if (x[i].toString().length\
    \ == 1) {\n            result.push(x[i]);\n        } else {\n            let flag\
    \ = false;\n            for (let j = 0; j < x[i].toString().length; j++) {\n \
    \               if (x[i].toString()[j] % 2 == 0) {\n                    flag =\
    \ true;\n                    break;\n                }\n            }\n      \
    \      if (!flag) {\n                result.push(x[i]);\n            }\n     \
    \   }\n    }\n    return result.sort((a, b) => a - b);\n}", "  const uniqueDigits\
    \ = [];\n  for (let i = 0; i < x.length; i++) {\n    let remain = x[i];\n    while\
    \ (remain > 0) {\n      const digit = remain % 10;\n      if (digit % 2 === 0)\
    \ {\n        break;\n      }\n      remain = Math.floor(remain / 10);\n    }\n\
    \    if (remain === 0) {\n      uniqueDigits.push(x[i]);\n    }\n  }\n  return\
    \ uniqueDigits.sort((a, b) => a - b);\n}\n", "    let y: number[] = [];\n    for\
    \ (let i: number = 0; i < x.length; i++) {\n        if (x[i] % 2 != 0) {\n   \
    \         y.push(x[i]);\n        }\n    }\n    return y;\n}\n\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n", "   \
    \ let is_unique: boolean = true;\n    return x.filter(function (num) {\n     \
    \   is_unique = true;\n        let num_string = num.toString();\n        for (let\
    \ i = 0; i < num_string.length; i++) {\n            if (parseInt(num_string[i])\
    \ % 2 === 0) {\n                is_unique = false;\n                break;\n \
    \           }\n        }\n        return is_unique;\n    });\n}\n", "    let unique:\
    \ number[] = [];\n    for (let i: number = 0; i < x.length; i++) {\n        if\
    \ (x[i].toString().split('').every(a => parseInt(a) % 2 != 0)) {\n           \
    \ unique.push(x[i]);\n        }\n    }\n    return unique.sort();\n}\n", "  const\
    \ arr = []\n  for (let num of x) {\n    if (num.toString().split('').every(e =>\
    \ parseInt(e) % 2 !== 0)) {\n      arr.push(num)\n    }\n  }\n  return arr.sort((a,\
    \ b) => a - b)\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_150_x_or_y
language: ts
prompt: "//A simple program which should return the value of x if n is \n// a prime\
  \ number and should return the value of y otherwise.\n// Examples:\n// >>> x_or_y(7,\
  \ 34, 12)\n// 34\n// >>> x_or_y(15, 8, 5)\n// 5\nfunction x_or_y(n: number, x: number,\
  \ y: number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = x_or_y;\n  assert.deepEqual(candidate(7, 34, 12),34);\n\
  \  assert.deepEqual(candidate(15, 8, 5),5);\n  assert.deepEqual(candidate(3, 33,\
  \ 5212),33);\n  assert.deepEqual(candidate(1259, 3, 52),3);\n  assert.deepEqual(candidate(7919,\
  \ -1, 12),-1);\n  assert.deepEqual(candidate(3609, 1245, 583),583);\n  assert.deepEqual(candidate(91,\
  \ 56, 129),129);\n  assert.deepEqual(candidate(6, 34, 1234),1234);\n  assert.deepEqual(candidate(1,\
  \ 2, 0),0);\n  assert.deepEqual(candidate(2, 2, 0),2);\n}\n\ntest();"
completions: ["  if (isPrime(n)) {\n    return x;\n  } else {\n    return y;\n  }\n\
    }\nconsole.log(x_or_y(7, 34, 12));\nconsole.log(x_or_y(15, 8, 5));", "    if (n\
    \ === 0) return x;\n    else if (n === 1) return y;\n    else if (n % 2 === 0)\
    \ return x_or_y(n - 1, x, y);\n    else return x_or_y(n - 2, x, y);\n}\n", " \
    \   return n;\n}", "    if (n === 2) {\n        return x;\n    }\n    else if\
    \ (n % 2 === 0) {\n        return y;\n    }\n    else {\n        for (let i =\
    \ 3; i < n; i += 2) {\n            if (n % i === 0) {\n                return\
    \ y;\n            }\n        }\n        return x;\n    }\n}\n", "    if (n <=\
    \ 1) {\n        return x;\n    }\n    else if (n <= 3) {\n        return y;\n\
    \    }\n    else if (n % 2 == 0 || n % 3 == 0) {\n        return x;\n    }\n \
    \   let i: number = 5;\n    while (i * i <= n) {\n        if (n % i == 0 || n\
    \ % (i + 2) == 0) {\n            return x;\n        }\n        i = i + 6;\n  \
    \  }\n    return y;\n}\n", "  if (n < 2) {\n    return y;\n  }\n  for (let i =\
    \ 2; i < n; i++) {\n    if (n % i === 0) {\n      return y;\n    }\n  }\n  return\
    \ x;\n}\n", "    if (n % 2 === 0) {\n        return y;\n    }\n    else {\n  \
    \      return x;\n    }\n}\n", "  // if n is a prime number\n  if (isPrime(n))\
    \ {\n    return x;\n  }\n  // n is not a prime number\n  return y;\n}\n", "\t\
    // ...\n}\n", "   if (isPrime(n)) {\n      return x;\n   } else {\n      return\
    \ y;\n   }\n}", "    if (n % 2 == 0) {\n        return y;\n    }\n    return x;\n\
    }\n", "  if (n % 2 == 0) {\n    return y;\n  } else {\n    return x;\n  }\n}\n",
  "    let isPrime = true;\n    for (let i = 2; i < n; i++) {\n        if (n % i ===\
    \ 0) {\n            isPrime = false;\n            break;\n        }\n    }\n \
    \   if (isPrime) {\n        return x;\n    } else {\n        return y;\n    }\n\
    }\n", "  if (isPrime(n)) {\n    return x;\n  } else {\n    return y;\n  }\n}",
  "    let z: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        if\
    \ (n % i == 0) {\n            z += 1;\n        }\n    }\n    if (z == 2) {\n \
    \       return x;\n    }\n    else {\n        return y;\n    }\n}\nconsole.log(x_or_y(3,\
    \ 9, 2));\n", "    if (isPrime(n)) {\n        return x;\n    } else {\n      \
    \  return y;\n    }\n}\n", "  // You may want to use this function to check if\
    \ a number is prime.\n  function is_prime(n: number): boolean {\n    for (let\
    \ i = 2; i < n; i++) {\n      if (n % i === 0) {\n        return false;\n    \
    \  }\n    }\n    return true;\n  }\n  // TODO: implement this function.\n  return\
    \ 0;\n}\n", "\tlet result = 0;\n\t// check if n is a prime number\n\t// if true\
    \ --> x\n\t// else --> y\n\t// hint: use the function from q3\n\t\n\tresult =\
    \ isPrime(n) ? x : y;\n\n\treturn result;\n}\n", "    if (n < 2) return y;\n \
    \   else if (n == 2) return x;\n    else {\n        for (let i = 2; i < n; i++)\
    \ {\n            if (n % i == 0) return y;\n        }\n        return x;\n   \
    \ }\n}\nconsole.log(x_or_y(7, 34, 12));\nconsole.log(x_or_y(15, 8, 5));\n", " \
    \   return is_prime(n) ? x : y;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_98_count_upper
language: ts
prompt: "//Given a string s, count the number of uppercase vowels in even indices.\n\
  // For example:\n// >>> count_upper(\"aBCdEf\")\n// 1\n// >>> count_upper(\"abcdefg\"\
  )\n// 0\n// >>> count_upper(\"dBBE\")\n// 0\nfunction count_upper(s: string): number\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
  ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
  dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
  U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
  EEEE\"),2);\n}\n\ntest();"
completions: ["    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n    \
    \    if (s[i] === 'A' || s[i] === 'E' || s[i] === 'I' || s[i] === 'O' || s[i]\
    \ === 'U') {\n            if (i % 2 === 0) {\n                count += 1;\n  \
    \          }\n        }\n    }\n    return count;\n}\n", "  let count = 0;\n \
    \ for (let i = 0; i < s.length; i++) {\n    if (is_upper(s[i]) && i % 2 === 0)\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n", "    // your code here...\n\
    \    return undefined;\n}\n", "    let count = 0;\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (i % 2 === 0 && (s[i] === 'A' || s[i] === 'E' || s[i] ===\
    \ 'I' || s[i] === 'O' || s[i] === 'U')) {\n            count++;\n        }\n \
    \   }\n    return count;\n}\n", "    var vCount = 0;\n    for (var i = 0; i <\
    \ s.length; i++) {\n        if ((s[i] == \"A\" || s[i] == \"E\" || s[i] == \"\
    I\" || s[i] == \"O\" || s[i] == \"U\") && i % 2 == 0) {\n            vCount++;\n\
    \        }\n    }\n    return vCount;\n}\n", "  let count = 0;\n  for (let i =\
    \ 0; i < s.length; i++) {\n    if (i % 2 == 0 && s[i] == s[i].toUpperCase()) {\n\
    \      count++;\n    }\n  }\n  return count;\n}\nconsole.log(count_upper(\"aBCdEf\"\
    ));\nconsole.log(count_upper(\"abcdefg\"));\nconsole.log(count_upper(\"dBBE\"\
    ));", "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if\
    \ (i % 2 === 0 && (s[i] === 'A' || s[i] === 'E' || s[i] === 'I' || s[i] === 'O'\
    \ || s[i] === 'U')) {\n            count++;\n        }\n    }\n    return count;\n\
    }\nconsole.log(count_upper(\"aBCdEf\"));\nconsole.log(count_upper(\"abcdefg\"\
    ));\nconsole.log(count_upper(\"dBBE\"));", "  let count = 0;\n  for (let i = 0;\
    \ i < s.length; i += 2) {\n    if (\n      s[i] === \"A\" ||\n      s[i] === \"\
    E\" ||\n      s[i] === \"I\" ||\n      s[i] === \"O\" ||\n      s[i] === \"U\"\
    \n    ) {\n      count++;\n    }\n  }\n  return count;\n}\n", "    let count =\
    \ 0;\n    let vowels = 'aeiouAEIOU';\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (vowels.includes(s[i]) && i % 2 === 0) {\n            count += 1;\n\
    \        }\n    }\n    return count;\n}\n\nconsole.log(count_upper('aBCdEf'));\n\
    console.log(count_upper('abcdefg'));\nconsole.log(count_upper('dBBE'));", "  \
    \  return Array.from(s)\n        .filter((letter, index) => letter.match(/[AEIOU]/)\
    \ && index % 2 === 0)\n        .length;\n}\n", "    let result: number = 0;\n\
    \    for (let i: number = 0; i < s.length; i++) {\n        if (s[i] == 'A' ||\
    \ s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n            if\
    \ (i % 2 == 0) {\n                result++;\n            }\n        }\n    }\n\
    \    return result;\n}\n", "  let v: any = { 'A': true, 'E': true, 'I': true,\
    \ 'O': true, 'U': true };\n  let count: number = 0;\n  for (let i: number = 0;\
    \ i < s.length; i++) {\n    if (v[s[i]] && i % 2 === 0) {\n      count += 1;\n\
    \    }\n  }\n  return count;\n}\n", "    let counter: number = 0;\n    for (let\
    \ i: number = 0; i < s.length; i++) {\n        if (i % 2 === 0 && isUpper(s[i]))\
    \ {\n            counter++;\n        }\n    }\n    return counter;\n}\n", "  \
    \  let count = 0;\n    for (let i = 0; i < s.length; i += 2) {\n        let c\
    \ = s.charAt(i);\n        if (c === \"A\" || c === \"E\" || c === \"I\" || c ===\
    \ \"O\" || c === \"U\") {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n", "    let index = 0;\n    let count = 0;\n    for (let char of\
    \ s) {\n        index = index + 1;\n        if (index % 2 === 0 && char === char.toUpperCase())\
    \ {\n            count = count + 1;\n        }\n    }\n    return count;\n}\n\
    console.log(count_upper(\"aBCdEf\"));\nconsole.log(count_upper(\"abcdefg\"));\n\
    console.log(count_upper(\"dBBE\"));\n", "  var count = 0;\n  var vowels = [\"\
    A\", \"E\", \"I\", \"O\", \"U\"];\n  for (var i = 0; i < s.length; i += 2) {\n\
    \    if (vowels.indexOf(s[i]) !== -1) {\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n", "  let count = 0;\n  for (let i = 0; i < s.length; i += 2) {\n\
    \    if (s[i] === \"A\" || s[i] === \"E\" || s[i] === \"I\" || s[i] === \"O\"\
    \ || s[i] === \"U\") {\n      count++;\n    }\n  }\n  return count;\n}\n", " \
    \   return count_upper_aux(s, 0);\n}\n", "  let count = 0;\n  for (let i = 0;\
    \ i < s.length; i++) {\n    if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n\
    \      count++;\n    }\n  }\n  return count;\n}\n", "    let nums = s.split('').filter((item,\
    \ index) => item === item.toUpperCase() && index % 2 === 0).length;\n    return\
    \ nums;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

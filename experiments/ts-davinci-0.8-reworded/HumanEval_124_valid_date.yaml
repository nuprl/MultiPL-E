name: HumanEval_124_valid_date
language: ts
prompt: "//You have to write a function which validates a given date string and\n\
  // returns true if the date is valid otherwise false.\n// The date is valid if all\
  \ of the following rules are satisfied:\n// 1. The date string is not empty.\n//\
  \ 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
  \ And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11.\
  \ And, the number of days is not less than 1 or higher than 29 for the month 2.\n\
  // 3. The months should not be less than 1 or higher than 12.\n// 4. The date should\
  \ be in the format: mm-dd-yyyy\n// >>> valid_date(\"03-11-2000\")\n// true\n// >>>\
  \ valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"04-0-2040\")\n// false\n\
  // >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"06/04/2020\")\n\
  // false\nfunction valid_date(date: string): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = valid_date;\n  assert.deepEqual(candidate(\"03-11-2000\"\
  ),true);\n  assert.deepEqual(candidate(\"15-01-2012\"),false);\n  assert.deepEqual(candidate(\"\
  04-0-2040\"),false);\n  assert.deepEqual(candidate(\"06-04-2020\"),true);\n  assert.deepEqual(candidate(\"\
  01-01-2007\"),true);\n  assert.deepEqual(candidate(\"03-32-2011\"),false);\n  assert.deepEqual(candidate(\"\
  \"),false);\n  assert.deepEqual(candidate(\"04-31-3000\"),false);\n  assert.deepEqual(candidate(\"\
  06-06-2005\"),true);\n  assert.deepEqual(candidate(\"21-31-2000\"),false);\n  assert.deepEqual(candidate(\"\
  04-12-2003\"),true);\n  assert.deepEqual(candidate(\"04122003\"),false);\n  assert.deepEqual(candidate(\"\
  20030412\"),false);\n  assert.deepEqual(candidate(\"2003-04\"),false);\n  assert.deepEqual(candidate(\"\
  2003-04-12\"),false);\n  assert.deepEqual(candidate(\"04-2003\"),false);\n}\n\n\
  test();"
completions: ["    const arr = date.split('-');\n    const [dateMonth, dateDay, dateYear]\
    \ = arr;\n    let isValid = true;\n    const dateData = {\n        dateMonth:\
    \ dateMonth,\n        dateDay: dateDay,\n        dateYear: dateYear\n    };\n\
    \    if (arr.length !== 3) {\n        isValid = false;\n    } else {\n       \
    \ if (dateData.dateYear.length !== 4) {\n            isValid = false;\n      \
    \  }\n        if (dateData.dateMonth > 12 || dateData.dateMonth < 1) {\n     \
    \       isValid = false;\n        }\n        if (dateData.dateMonth === 2) {\n\
    \            if (dateData.dateDay > 29 || dateData.dateDay < 1) {\n          \
    \      isValid = false;\n            }\n        } else if (dateData.dateMonth\
    \ === 4 || dateData.dateMonth === 6 || dateData.dateMonth === 9 || dateData.dateMonth\
    \ === 11) {\n            if (dateData.dateDay > 30 || dateData.dateDay < 1) {\n\
    \                isValid = false;\n            }\n        } else {\n         \
    \   if (dateData.dateDay > 31 || dateData.dateDay < 1) {\n                isValid\
    \ = false;\n            }\n        }\n    }\n    return isValid;\n}", "    const\
    \ dateArray = date.split('-');\n    const month = Number(dateArray[0]);\n    const\
    \ day = Number(dateArray[1]);\n    const year = Number(dateArray[2]);\n    const\
    \ bigMonths = [1, 3, 5, 7, 8, 10, 12];\n    const smallMonths = [4, 6, 9, 11];\n\
    \    if (date.length === 0) {\n        return false;\n    }\n    if (month > 12\
    \ || month < 1) {\n        return false;\n    }\n    if (year < 1) {\n       \
    \ return false;\n    }\n    if (month === 2) {\n        if (year % 4 === 0) {\n\
    \            if (day > 29 || day < 1) {\n                return false;\n     \
    \       }\n        } else {\n            if (day > 28 || day < 1) {\n        \
    \        return false;\n            }\n        }\n    }\n    if (bigMonths.includes(month))\
    \ {\n        if (day > 31 || day < 1) {\n            return false;\n        }\n\
    \    }\n    if (smallMonths.includes(month)) {\n        if (day > 30 || day <\
    \ 1) {\n            return false;\n        }\n    }\n    return true;\n}\n", " \
    \   const dateArr = date.split('-');\n    if (dateArr.length !== 3) {\n      \
    \  return false;\n    }\n    // month\n    if (dateArr[0] < '01' || dateArr[0]\
    \ > '12') {\n        return false;\n    }\n    // day\n    const month = parseInt(dateArr[0]);\n\
    \    if (month === 2) {\n        if (dateArr[1] < '01' || dateArr[1] > '29') {\n\
    \            return false;\n        }\n    } else if (month === 1 || month ===\
    \ 3 || month === 5 || month === 7 || month === 8 || month === 10 || month ===\
    \ 12) {\n        if (dateArr[1] < '01' || dateArr[1] > '31') {\n            return\
    \ false;\n        }\n    } else {\n        if (dateArr[1] < '01' || dateArr[1]\
    \ > '30') {\n            return false;\n        }\n    }\n    // year\n    if\
    \ (dateArr[2].length !== 4) {\n        return false;\n    }\n    return true;\n\
    }\nconsole.log(valid_date('03-11-2000'));\nconsole.log(valid_date('15-01-2012'));\n\
    console.log(valid_date('04-0-2040'));\nconsole.log(valid_date('06-04-2020'));\n\
    console.log(valid_date('06/04/2020'));", "    if(!date) {\n        return false;\n\
    \    }\n    if(!/\\d{2}-\\d{2}-\\d{4}/.test(date)) {\n        return false;\n\
    \    }\n    const dateArr = date.split('-');\n    const month = parseInt(dateArr[0]);\n\
    \    const day = parseInt(dateArr[1]);\n    const year = parseInt(dateArr[2]);\n\
    \    if(month < 1 || month > 12) {\n        return false;\n    }\n    if((month\
    \ === 1 || month === 3 || month === 5 || month === 7 || month === 8 || month ===\
    \ 10 || month === 12) && (day < 1 || day > 31)) {\n        return false;\n   \
    \ }\n    if((month === 4 || month === 6 || month === 9 || month === 11) && (day\
    \ < 1 || day > 30)) {\n        return false;\n    }\n    if(month === 2 && (day\
    \ < 1 || day > 29)) {\n        return false;\n    }\n    return true;\n}\n", " \
    \ // console.log(\"checking valid date: \" + date);\n  let dateSplit = date.split(\"\
    -\");\n  if (dateSplit.length !== 3) {\n    return false;\n  }\n  let [month,\
    \ day, year] = dateSplit;\n  let monthNumber = parseInt(month);\n  let dayNumber\
    \ = parseInt(day);\n  let yearNumber = parseInt(year);\n  let result =\n    yearNumber\
    \ >= 2000 &&\n    yearNumber <= 2999 &&\n    monthNumber > 0 &&\n    monthNumber\
    \ <= 12 &&\n    dayNumber > 0 &&\n    dayNumber <= 31;\n  return result;\n}\n",
  "  if (date === \"\") {\n    return false;\n  }\n\n  if (\n    Number(date.substring(0,\
    \ 2)) < 1 ||\n    Number(date.substring(0, 2)) > 12\n  ) {\n    return false;\n\
    \  }\n\n  if (\n    Number(date.substring(3, 5)) < 1 ||\n    Number(date.substring(3,\
    \ 5)) > 31\n  ) {\n    return false;\n  }\n\n  if (\n    Number(date.substring(6,\
    \ 10)) < 1 ||\n    Number(date.substring(6, 10)) > 9999\n  ) {\n    return false;\n\
    \  }\n\n  if (\n    Number(date.substring(0, 2)) == 2 &&\n    Number(date.substring(3,\
    \ 5)) > 29\n  ) {\n    return false;\n  }\n\n  if (\n    (Number(date.substring(0,\
    \ 2)) == 4 ||\n      Number(date.substring(0, 2)) == 6 ||\n      Number(date.substring(0,\
    \ 2)) == 9 ||\n      Number(date.substring(0, 2)) == 11) &&\n    Number(date.substring(3,\
    \ 5)) > 30\n  ) {\n    return false;\n  }\n\n  if (\n    Number(date.substring(0,\
    \ 2)) > 12 ||\n    Number(date.substring(3, 5)) > 31 ||\n    Number(date.substring(6,\
    \ 10)) > 9999\n  ) {\n    return false;\n  }\n\n  if (\n    Number(date.substring(0,\
    \ 2)) == 2 &&\n    Number(date.substring(3, 5)) > 29\n  ) {\n    return false;\n\
    \  }\n\n  if (\n    (Number(date.substring(0, 2)) == 4 ||\n      Number(date.substring(0,\
    \ 2)) == 6 ||\n      Number(date.substring(0, 2)) == 9 ||\n      Number(date.substring(0,\
    \ 2)) == 11) &&\n    Number(date.substring(3, 5)) > 30\n  ) {\n    return false;\n\
    \  }\n\n", "  const regex = /^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$/;\n\
    \  return regex.test(date);\n}\n", "  //YOUR CODE HERE\n  return false;\n}\n",
  "    let date_arr = date.split(\"-\");\n    if (date_arr.length !== 3) return false;\n\
    \    if (Number(date_arr[0]) < 1 || Number(date_arr[0]) > 12) return false;\n\
    \    if (Number(date_arr[0]) === 2) {\n        if (Number(date_arr[1]) < 1 ||\
    \ Number(date_arr[1]) > 29) return false;\n    } else if (Number(date_arr[0])\
    \ % 2 !== 0) {\n        if (Number(date_arr[1]) < 1 || Number(date_arr[1]) > 31)\
    \ return false;\n    } else {\n        if (Number(date_arr[1]) < 1 || Number(date_arr[1])\
    \ > 30) return false;\n    }\n    if (Number(date_arr[2]) < 1) return false;\n\
    \    return true;\n}\n", "    let date_arr = date.split(\"-\");\n    let month\
    \ = +date_arr[0];\n    let day = +date_arr[1];\n    let year = +date_arr[2];\n\
    \    if (month < 1 || month > 12) {\n        return false;\n    }\n    if (day\
    \ < 1 || day > 31) {\n        return false;\n    }\n    if (month === 2) {\n \
    \       if (day < 1 || day > 29) {\n            return false;\n        }\n   \
    \ }\n    if (month === 4 || month === 6 || month === 9 || month === 11) {\n  \
    \      if (day < 1 || day > 30) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n", "    let splitted = date.split(\"-\");\n    if (splitted.length\
    \ !== 3) return false;\n    let day = Number(splitted[0]);\n    let month = Number(splitted[1]);\n\
    \    let year = Number(splitted[2]);\n    if (isNaN(day) || isNaN(month) || isNaN(year))\
    \ return false;\n    if (month < 1 || month > 12) return false;\n    if (month\
    \ === 2) {\n        if (year % 4 === 0) {\n            if (day < 1 || day > 29)\
    \ return false;\n        } else {\n            if (day < 1 || day > 28) return\
    \ false;\n        }\n    } else if (\n        (month === 1 ||\n            month\
    \ === 3 ||\n            month === 5 ||\n            month === 7 ||\n         \
    \   month === 8 ||\n            month === 10 ||\n            month === 12) &&\n\
    \        (day < 1 || day > 31)\n    ) {\n        return false;\n    } else if\
    \ (day < 1 || day > 30) {\n        return false;\n    }\n    return true;\n}\n\
    console.log(valid_date(\"03-11-2000\"));\nconsole.log(valid_date(\"15-01-2012\"\
    ));\nconsole.log(valid_date(\"04-0-2040\"));\nconsole.log(valid_date(\"06-04-2020\"\
    ));\nconsole.log(valid_date(\"06/04/2020\"));\n", "    // your code here\n   \
    \ return;\n}\n", "    let arr: string[] = date.split(\"-\");\n    let [month,\
    \ day, year] = arr;\n    if (arr.length != 3) return false;\n    let m = parseInt(month);\n\
    \    let d = parseInt(day);\n    let y = parseInt(year);\n    if (d < 1 || d >\
    \ 31) return false;\n    if (m < 1 || m > 12) return false;\n    if (m == 2 &&\
    \ d > 29) return false;\n    if (m == 2 && d == 29 && y % 4 != 0) return false;\n\
    \    return true;\n}", "  //to do\n  const months = [\n    \"01\",\n    \"02\"\
    ,\n    \"03\",\n    \"04\",\n    \"05\",\n    \"06\",\n    \"07\",\n    \"08\"\
    ,\n    \"09\",\n    \"10\",\n    \"11\",\n    \"12\"\n  ];\n  const days31 = [1,\
    \ 3, 5, 7, 8, 10, 12];\n  const days30 = [4, 6, 9, 11];\n  let result = true;\n\
    \  if (date.length === 0) {\n    result = false;\n  } else {\n    const dateArr\
    \ = date.split(\"-\");\n    let month = parseInt(dateArr[0]);\n    let day = parseInt(dateArr[1]);\n\
    \    let year = parseInt(dateArr[2]);\n    if (months.indexOf(dateArr[0]) ===\
    \ -1) {\n      result = false;\n    } else if (\n      (month === 2 &&\n     \
    \   ((year % 4 === 0 && day > 29) || (year % 4 !== 0 && day > 28))) ||\n     \
    \ (days31.indexOf(month) !== -1 && day > 31) ||\n      (days30.indexOf(month)\
    \ !== -1 && day > 30)\n    ) {\n      result = false;\n    }\n  }\n  return result;\n\
    }\n", "    let valid = false;\n    let regExp = /\\d{2}-\\d{2}-\\d{4}/;\n    let\
    \ matches = date.match(regExp);\n    if (matches) {\n        let d = date.split('-');\n\
    \        if (d[0] == '01' || d[0] == '03' || d[0] == '05' || d[0] == '07' || d[0]\
    \ == '08' || d[0] == '10' || d[0] == '12') {\n            if (d[1] >= '01' &&\
    \ d[1] <= '31') {\n                valid = true;\n            }\n        } else\
    \ if (d[0] == '04' || d[0] == '06' || d[0] == '09' || d[0] == '11') {\n      \
    \      if (d[1] >= '01' && d[1] <= '30') {\n                valid = true;\n  \
    \          }\n        } else if (d[0] == '02') {\n            if (d[1] >= '01'\
    \ && d[1] <= '29') {\n                valid = true;\n            }\n        }\n\
    \    }\n    return valid;\n}\n", "  if (date.match(/^\\d{2}-\\d{2}-\\d{4}$/))\
    \ {\n    let [month, day, year] = date.split(\"-\").map(Number);\n    if (month\
    \ < 1 || month > 12) return false;\n    else if (day < 1 || day > 31) return false;\n\
    \    else if (\n      month === 2 &&\n      (day < 1 || day > 29 || (day > 28\
    \ && !(year % 4)))\n    )\n      return false;\n    else if (\n      (month ===\
    \ 4 || month === 6 || month === 9 || month === 11) &&\n      day > 30\n    )\n\
    \      return false;\n    else return true;\n  } else return false;\n}\n", " \
    \   return false;\n}\n", "    return false;\n}", "    let inputArray = date.split(\"\
    -\");\n    if (inputArray.length !== 3) {\n        return false;\n    }\n\n  \
    \  let month = parseInt(inputArray[0]);\n    let day = parseInt(inputArray[1]);\n\
    \    let year = parseInt(inputArray[2]);\n\n    if (month < 1 || month > 12) {\n\
    \        return false;\n    }\n\n    if (month === 2) {\n        if (day < 1 ||\
    \ day > 29) {\n            return false;\n        }\n    } else if (month ===\
    \ 4 || month === 6 || month === 9 || month === 11) {\n        if (day < 1 || day\
    \ > 30) {\n            return false;\n        }\n    } else {\n        if (day\
    \ < 1 || day > 31) {\n            return false;\n        }\n    }\n\n    return\
    \ true;\n}\n", "  const months = {\n    \"01\": 31,\n    \"02\": 29,\n    \"03\"\
    : 31,\n    \"04\": 30,\n    \"05\": 31,\n    \"06\": 30,\n    \"07\": 31,\n  \
    \  \"08\": 31,\n    \"09\": 30,\n    \"10\": 31,\n    \"11\": 30,\n    \"12\"\
    : 31\n  };\n  if (date.split(\"-\").length !== 3) {\n    return false;\n  }\n\
    \  let m = date.split(\"-\")[0];\n  let d = date.split(\"-\")[1];\n  let y = date.split(\"\
    -\")[2];\n  if (\n    m.length !== 2 ||\n    d.length !== 2 ||\n    y.length !==\
    \ 4 ||\n    isNaN(+m) ||\n    isNaN(+d) ||\n    isNaN(+y)\n  ) {\n    return false;\n\
    \  }\n  let max_d = months[m];\n  if (+d > max_d) {\n    return false;\n  }\n\
    \  return true;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

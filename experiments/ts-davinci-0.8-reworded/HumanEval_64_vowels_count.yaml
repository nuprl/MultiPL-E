name: HumanEval_64_vowels_count
language: ts
prompt: "//Write a function vowels_count which takes a string representing\n// a word\
  \ as input and returns the number of vowels in the string.\n// Vowels in this case\
  \ are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n// vowel, but only when it is\
  \ at the end of the given word.\n// Example:\n// >>> vowels_count(\"abcde\")\n//\
  \ 2\n// >>> vowels_count(\"ACEDY\")\n// 3\nfunction vowels_count(s: string): number\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = vowels_count;\n  assert.deepEqual(candidate(\"abcde\"\
  ),2);\n  assert.deepEqual(candidate(\"Alone\"),3);\n  assert.deepEqual(candidate(\"\
  key\"),2);\n  assert.deepEqual(candidate(\"bye\"),1);\n  assert.deepEqual(candidate(\"\
  keY\"),2);\n  assert.deepEqual(candidate(\"bYe\"),1);\n  assert.deepEqual(candidate(\"\
  ACEDY\"),3);\n}\n\ntest();"
completions: ["  // prettier-ignore\n  let isVowel = (c: string): boolean =>\n   \
    \ c === 'a' || c === 'e' || c === 'i' || c === 'o' || c === 'u' || c === 'y';\n\
    \  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (isVowel(s[i]))\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n", "  var vowels = \"aeiou\"\
    ;\n  var newS = s.toLowerCase();\n  var count = 0;\n  for (var i = 0; i < newS.length;\
    \ i++) {\n    if (vowels.indexOf(newS[i]) !== -1) {\n      count += 1;\n    }\n\
    \  }\n  return count;\n}\nconsole.log(vowels_count(\"aBcdE\"));\nconsole.log(vowels_count(\"\
    ACEDY\"));\n", "    let count = 0;\n    const vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"];\n    for (let i = 0; i < s.length; i++) {\n        if (vowels.includes(s[i]))\
    \ {\n            count++;\n        }\n    }\n    if (s[s.length - 1] === \"y\"\
    ) {\n        count++;\n    }\n    return count;\n}\n", "    const vowels = 'aeiouy';\n\
    \    let count = 0;\n    for (let ch of s) {\n        if (vowels.includes(ch.toLowerCase()))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n", "  let vcount\
    \ = 0;\n  let vowel = \"aeiou\";\n  let y: boolean = false;\n  for (let i = 0;\
    \ i < s.length; i++) {\n    if (vowel.includes(s[i].toLowerCase())) {\n      if\
    \ (s[i].toLowerCase() === \"y\") {\n        y = true;\n      } else {\n      \
    \  vcount++;\n      }\n    }\n  }\n  if (y && s[s.length - 1].toLowerCase() ===\
    \ \"y\") {\n    vcount++;\n  }\n  return vcount;\n}", "  let count = 0;\n  for\
    \ (let i = 0; i < s.length; i++) {\n    const char = s[i];\n    if (\"aeiouy\"\
    .includes(char.toLowerCase())) {\n      count++;\n    }\n  }\n  return count;\n\
    }\n", "  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === \"a\" || s[i] === \"e\" || s[i] === \"i\" || s[i] === \"o\" || s[i] ===\
    \ \"u\") {\n      count += 1;\n    }\n  }\n  return count;\n}\nconsole.log(vowels_count(\"\
    abcde\"));\nconsole.log(vowels_count(\"ACEDY\"));", "  // Replace this pass (a\
    \ do-nothing statement) with your code\n  return -1;\n}\n", "  let result = 0;\n\
    \  for (let i = 0; i < s.length; i++) {\n    if (\n      s[i] === \"a\" ||\n \
    \     s[i] === \"e\" ||\n      s[i] === \"i\" ||\n      s[i] === \"o\" ||\n  \
    \    s[i] === \"u\" ||\n      (s[i] === \"y\" && i === s.length - 1)\n    ) {\n\
    \      result += 1;\n    }\n  }\n  return result;\n}", "  const vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"];\n  if (s.length < 1) {\n    return 0;\n  }\n  let\
    \ num = 0;\n  for (let i = 0; i < s.length; i++) {\n    const c = s[i].toLowerCase();\n\
    \    if (vowels.includes(c)) {\n      num++;\n    }\n  }\n  if (s[s.length - 1].toLowerCase()\
    \ === \"y\") {\n    num++;\n  }\n  return num;\n}\n", "    let ret = 0;\n    let\
    \ v = 0;\n    for (let i = 0; i < s.length; i++) {\n        switch (s[i]) {\n\
    \            case 'a':\n            case 'e':\n            case 'i':\n       \
    \     case 'o':\n            case 'u':\n                ret++;\n             \
    \   v = 1;\n                break;\n            case 'y':\n                if\
    \ (v === 0) {\n                    ret++;\n                }\n               \
    \ break;\n            default:\n                v = 0;\n                break;\n\
    \        }\n    }\n    return ret;\n}\n", "    let num = 0;\n    let flag = false;\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (is_vowel(s[i])) {\n   \
    \         num++;\n            flag = true;\n        }\n        else {\n      \
    \      flag = false;\n        }\n    }\n    if (flag && is_vowel(s[s.length -\
    \ 1])) {\n        num++;\n    }\n    return num;\n}\n", "  const vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n  const vowels_y = ['a', 'e', 'i', 'o', 'u', 'y'];\n \
    \ let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (i == s.length\
    \ - 1) {\n      for (let j = 0; j < vowels_y.length; j++) {\n        if (s[i]\
    \ == vowels_y[j]) {\n          count++;\n        }\n      }\n    } else {\n  \
    \    for (let j = 0; j < vowels.length; j++) {\n        if (s[i] == vowels[j])\
    \ {\n          count++;\n        }\n      }\n    }\n  }\n  return count;\n}\n",
  "    const vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let vowels_count =\
    \ 0;\n    for (let index = 0; index < s.length; index++) {\n        if (vowels.includes(s[index].toLowerCase()))\
    \ {\n            vowels_count++;\n        }\n    }\n    return vowels_count;\n\
    }\n", "    const vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let count:\
    \ number = 0;\n    for (let i: number = 0; i < s.length; i++) {\n        if (vowels.includes(s[i].toLowerCase()))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n", "    const\
    \ vowels = {\n        a: true,\n        e: true,\n        i: true,\n        o:\
    \ true,\n        u: true,\n        y: true,\n    };\n    let count = 0;\n    for\
    \ (let i = 0; i < s.length; i++) {\n        const letter = s[i].toLowerCase();\n\
    \        if (vowels[letter]) {\n            count++;\n        }\n    }\n    if\
    \ (count > 0 && s[s.length - 1].toLowerCase() !== 'y') {\n        count--;\n \
    \   }\n    return count;\n}\n", "    let c = 0;\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s[i] === 'a' || s[i] === 'e' || s[i] === 'i' || s[i] ===\
    \ 'o' || s[i] === 'u' || s[i] === 'y') {\n            c++;\n        }\n    }\n\
    \    return c;\n}", "  let res = 0;\n  for (let c of s) {\n    if (c === \"a\"\
    \ || c === \"e\" || c === \"i\" || c === \"o\" || c === \"u\") {\n      res +=\
    \ 1;\n    }\n  }\n  return res;\n}\nconsole.log(vowels_count(\"abcde\"));\nconsole.log(vowels_count(\"\
    ACEDY\"));\n", "  let vowels = ['a', 'e', 'i', 'o', 'u', 'y'];\n  let count =\
    \ 0;\n  s = s.toLowerCase();\n  for (let char of s) {\n    if (vowels.includes(char))\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n", "    var vowels: string\
    \ = \"aeiou\";\n    var count: number = 0;\n    for (var i: number = 0; i < s.length;\
    \ i++) {\n        if (vowels.indexOf(s[i].toLowerCase()) != -1) {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

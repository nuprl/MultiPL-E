name: HumanEval_36_fizz_buzz
language: ts
prompt: "//Return the number of times the digit 7 appears in integers less than n\
  \ which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
  // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n: number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
  \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
  \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
  \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
  }\n\ntest();"
completions: ["    let count = 0;\n    for (let i = 0; i < n; i++) {\n        if (i\
    \ % 11 === 0 || i % 13 === 0) {\n            if (i.toString().includes('7')) {\n\
    \                count++;\n            }\n        }\n    }\n    return count;\n\
    }\n\n", "  // Write your code here\n  let num: number = 0;\n  for (let i = 0;\
    \ i < n; i++) {\n    if (i % 11 === 0 || i % 13 === 0) {\n      let findNum: string\
    \ = i.toString();\n      for (let j = 0; j < findNum.length; j++) {\n        if\
    \ (findNum[j] === \"7\") {\n          num++;\n        }\n      }\n    }\n  }\n\
    \  return num;\n}\n", "  let count = 0;\n  for (let i = 0; i < n; i++) {\n   \
    \ if (i % 11 === 0 || i % 13 === 0) {\n      let tmp = i.toString();\n      for\
    \ (let k = 0; k < tmp.length; k++) {\n        if (tmp[k] === \"7\") {\n      \
    \    count++;\n        }\n      }\n    }\n  }\n  return count;\n}\n", "    var\
    \ arr = [];\n    var sum = 0;\n    for (var i = 1; i < n; i++) {\n        if (i\
    \ % 11 == 0 || i % 13 == 0) {\n            arr.push(i);\n        }\n    }\n  \
    \  for (var i = 0; i < arr.length; i++) {\n        if (arr[i].toString().includes(\"\
    7\")) {\n            sum++;\n        }\n    }\n    return sum;\n}\n", "  let count\
    \ = 0;\n  for (let i = 7; i < n; i += 7) {\n    if (i % 11 === 0 || i % 13 ===\
    \ 0) {\n      count++;\n    }\n  }\n  return count;\n}\n", "    let count: number\
    \ = 0;\n    for (let i: number = 1; i < n; i++) {\n        if (i % 11 === 0 ||\
    \ i % 13 === 0) {\n            let numberString: string = i.toString();\n    \
    \        for (let j: number = 0; j < numberString.length; j++) {\n           \
    \     if (numberString[j] === \"7\") {\n                    count++;\n       \
    \         }\n            }\n        }\n    }\n    return count;\n}\n", "    let\
    \ counter = 0;\n    for (let i = 1; i < n; i++) {\n        if (i % 11 === 0 ||\
    \ i % 13 === 0) {\n            counter += count_digit(i, 7);\n        }\n    }\n\
    \    return counter;\n}\n", "    let count = 0;\n    for (let i = 1; i < n; i++)\
    \ {\n        if (i % 11 === 0 || i % 13 === 0) {\n            let i_str = i.toString();\n\
    \            for (let j = 0; j < i_str.length; j++) {\n                if (i_str[j]\
    \ === '7') {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}", "    return 0;\n}\n", "    let result\
    \ = 0;\n    for (let i = 1; i < n; i++) {\n        if (i % 11 === 0 || i % 13\
    \ === 0) {\n            let num = i;\n            while (num > 0) {\n        \
    \        const rem = num % 10;\n                if (rem === 7) {\n           \
    \         result++;\n                }\n                num = Math.floor(num /\
    \ 10);\n            }\n        }\n    }\n    return result;\n}\nconsole.log(fizz_buzz(50));\n\
    console.log(fizz_buzz(78));\nconsole.log(fizz_buzz(79));\n", "    let cnt: number\
    \ = 0;\n    let num: number = 0;\n    for (let i: number = 1; i < n; i++) {\n\
    \        if (i % 11 === 0 || i % 13 === 0) {\n            num = i;\n         \
    \   while (num !== 0) {\n                if (num % 10 === 7) {\n             \
    \       cnt++;\n                }\n                num = Math.floor(num / 10);\n\
    \            }\n        }\n    }\n    return cnt;\n}\n", "    // Your code here\n\
    \    let count = 0;\n    for (let i = 1; i < n; i++) {\n        if (i % 11 ===\
    \ 0 || i % 13 === 0) {\n            let str = i.toString();\n            for (let\
    \ j = 0; j < str.length; j++) {\n                if (str[j] === '7') {\n     \
    \               count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}\n", "    let count = 0;\n    for (let i = 0; i < n; i++)\
    \ {\n        if (i % 11 === 0 || i % 13 === 0) {\n            let temp = i;\n\
    \            while (temp > 0) {\n                if (temp % 10 === 7) {\n    \
    \                count++;\n                }\n                temp = Math.floor(temp\
    \ / 10);\n            }\n        }\n    }\n    return count;\n}\n", "  let count:\
    \ number = 0;\n  for (let i: number = 0; i < n; i++) {\n    if (i % 11 === 0 ||\
    \ i % 13 === 0) {\n      let str = i.toString();\n      for (let j: number = 0;\
    \ j < str.length; j++) {\n        if (str[j] === \"7\") {\n          count++;\n\
    \        }\n      }\n    }\n  }\n  return count;\n}\n", "    var arr1 = list(1,\
    \ n, 1);\n    var arr2 = filter(function (x) { return (x % 11 == 0 || x % 13 ==\
    \ 0); }, arr1);\n    var arr3 = map(function (x) { return show(x); }, arr2);\n\
    \    var arr4 = foldl(function (a, b) { return a + count_digit(b, 7); }, 0, arr3);\n\
    \    return arr4;\n}\n", "    let num = 0;\n    for (let i = 1; i < n; i++) {\n\
    \        if (i % 11 === 0 || i % 13 === 0) {\n            if (i.toString().indexOf('7')\
    \ !== -1) {\n                num++;\n            }\n        }\n    }\n    return\
    \ num;\n}\n", "    let count = 0;\n    for (let i = 1; i < n; i++) {\n       \
    \ if (i % 11 === 0 || i % 13 === 0) {\n            const str = String(i);\n  \
    \          for (let j = 0; j < str.length; j++) {\n                if (str[j]\
    \ === '7') {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n", "  let cnt: number = 0;\n  for (let\
    \ i: number = 1; i < n; i++) {\n    if (i % 11 === 0 || i % 13 === 0) {\n    \
    \  cnt += i.toString().split(\"\").filter(v => v === \"7\").length;\n    }\n \
    \ }\n  return cnt;\n}\n", "    if (n < 1)\n        return 0;\n    let sum = 0;\n\
    \    let i = 1;\n    while (i < n) {\n        if (i % 11 == 0 || i % 13 == 0)\
    \ {\n            let num = i;\n            while (num > 0) {\n               \
    \ let n1 = num % 10;\n                if (n1 == 7)\n                    sum++;\n\
    \                num = Math.floor(num / 10);\n            }\n        }\n     \
    \   i++;\n    }\n    return sum;\n}\n", "    let count = 0;\n    for (let i =\
    \ 1; i < n; i++) {\n        if (i % 11 === 0 || i % 13 === 0) {\n            count\
    \ += check_7(i);\n        }\n    }\n    return count;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

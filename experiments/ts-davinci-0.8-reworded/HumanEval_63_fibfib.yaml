name: HumanEval_63_fibfib
language: ts
prompt: "//The FibFib number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n// fibfib(2)\
  \ == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n// Please write\
  \ a function to efficiently compute the n-th element of the fibfib number sequence.\n\
  // >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n// 24\nfunction\
  \ fibfib(n: number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = fibfib;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(1),0);\n\
  \  assert.deepEqual(candidate(5),4);\n  assert.deepEqual(candidate(8),24);\n  assert.deepEqual(candidate(10),81);\n\
  \  assert.deepEqual(candidate(12),274);\n  assert.deepEqual(candidate(14),927);\n\
  }\n\ntest();"
completions: ["  const fibs = [0, 0, 1];\n  for (let i = 3; i <= n; i++) {\n    fibs[i]\
    \ = fibs[i - 1] + fibs[i - 2] + fibs[i - 3];\n  }\n  return fibs[n];\n}\n", " \
    \ let a = 0;\n  let b = 0;\n  let c = 1;\n  if (n === 0) {\n    return a;\n  }\n\
    \  if (n === 1) {\n    return b;\n  }\n  if (n === 2) {\n    return c;\n  }\n\
    \  for (let i = 2; i < n; i++) {\n    let temp = a + b + c;\n    a = b;\n    b\
    \ = c;\n    c = temp;\n  }\n  return c;\n}\nconsole.log(fibfib(0));\nconsole.log(fibfib(1));\n\
    console.log(fibfib(2));\nconsole.log(fibfib(3));\nconsole.log(fibfib(4));\nconsole.log(fibfib(5));\n\
    console.log(fibfib(6));\nconsole.log(fibfib(7));\nconsole.log(fibfib(8));\nconsole.log(fibfib(9));\n\
    console.log(fibfib(10));\nconsole.log(fibfib(11));\nconsole.log(fibfib(12));\n\
    console.log(fibfib(13));\nconsole.log(fibfib(14));\nconsole.log(fibfib(15));\n\
    console.log(fibfib(16));\nconsole.log(fibfib(17));\nconsole.log(fibfib(18));\n\
    console.log(fibfib(19));\nconsole.log(fibfib(20));\nconsole.log(fibfib(21));\n\
    console.log(fibfib(22));\nconsole.log(fibfib(23));\nconsole.log(fibfib(24));\n\
    console.log(fibfib(25));\nconsole.log(fibfib(26));\nconsole.log(fibfib(27));\n\
    console.log(fibfib(28));\nconsole.log(fibfib(29));\nconsole.log(fibfib(30));\n\
    console.log(fibfib(31));\n", "  let a = 0, b = 0, c = 1;\n  for (let i = 0; i\
    \ < n; i++) {\n    let temp = a + b + c;\n    a = b;\n    b = c;\n    c = temp;\n\
    \  }\n  return a;\n}\n", "    return 0;\n}\n\nexport {\n    nthFib,\n    fibFib,\n\
    \    fibfib\n}", "    if (n <= 1) return 0;\n    if (n == 2) return 1;\n    return\
    \ fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3);\n}\n", "    if (n === 0) {\n\
    \        return 0;\n    }\n    if (n === 1) {\n        return 0;\n    }\n    if\
    \ (n === 2) {\n        return 1;\n    }\n    return fibfib(n - 1) + fibfib(n -\
    \ 2) + fibfib(n - 3);\n}\n\nconsole.log(fibfib(0));\nconsole.log(fibfib(1));\n\
    console.log(fibfib(2));\nconsole.log(fibfib(3));\nconsole.log(fibfib(4));\nconsole.log(fibfib(5));\n\
    console.log(fibfib(6));\nconsole.log(fibfib(7));\nconsole.log(fibfib(8));\nconsole.log(fibfib(9));\n\
    console.log(fibfib(10));\nconsole.log(fibfib(11));\nconsole.log(fibfib(12));\n\
    console.log(fibfib(13));\nconsole.log(fibfib(14));\nconsole.log(fibfib(15));\n\
    console.log(fibfib(16));\nconsole.log(fibfib(17));\nconsole.log(fibfib(18));\n\
    console.log(fibfib(19));\nconsole.log(fibfib(20));\nconsole.log(fibfib(21));\n\
    console.log(fibfib(22));\nconsole.log(fibfib(23));\nconsole.log(fibfib(24));\n\
    console.log(fibfib(25));\nconsole.log(fibfib(26));\nconsole.log(fibfib(27));\n\
    console.log(fibfib(28));\nconsole.log(fibfib(29));\nconsole.log(fibfib(30));\n\
    console.log(fibfib(31));\nconsole.log(fibfib(32));\nconsole.log(fibfib(33));\n\
    console.log(fibfib(34));\nconsole.log(fibfib", "  if (n < 0) {\n    throw Error('Illegal\
    \ input');\n  }\n\n  if (n === 0) {\n    return 0;\n  }\n\n  if (n === 1) {\n\
    \    return 0;\n  }\n\n  if (n === 2) {\n    return 1;\n  }\n\n  return fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3);\n}\n", "    let dp: number[] = [0, 0,\
    \ 1];\n    for (let i = 3; i <= n; i++) {\n        dp[i] = dp[i - 1] + dp[i -\
    \ 2] + dp[i - 3];\n    }\n    return dp[n];\n}\n", "  let a = 0, b = 0, c = 1;\n\
    \  for (let i = 0; i < n; i++) {\n    a = b;\n    b = c;\n    c = a + b + c;\n\
    \  }\n  return a;\n}\n", "  let i: number = 0;\n  let j: number = 0;\n  let k:\
    \ number = 1;\n  let fibfib_n: number = 0;\n  for (let index = 0; index < n; index++)\
    \ {\n    fibfib_n = i + j + k;\n    i = j;\n    j = k;\n    k = fibfib_n;\n  }\n\
    \  return fibfib_n;\n}\nconsole.log(fibfib(8));\n", "    if (n < 3) {\n      \
    \  return n - 1;\n    }\n    return fibfib(n - 1) + fibfib(n - 2) + fibfib(n -\
    \ 3);\n}\n", "  if (n === 0) {\n    return 0;\n  }\n  if (n === 1) {\n    return\
    \ 0;\n  }\n  if (n === 2) {\n    return 1;\n  }\n  let a = 0;\n  let b = 0;\n\
    \  let c = 1;\n  let sum = 0;\n  for (let i = 3; i <= n; i++) {\n    sum = a +\
    \ b + c;\n    a = b;\n    b = c;\n    c = sum;\n  }\n  return sum;\n}\n", "  \
    \  const prev3 = 0;\n    const prev2 = 0;\n    const prev1 = 1;\n    let fibfib\
    \ = 0;\n    for (let i = 2; i <= n; i++) {\n        fibfib = prev1 + prev2 + prev3;\n\
    \        prev3 = prev2;\n        prev2 = prev1;\n        prev1 = fibfib;\n   \
    \ }\n    return fibfib;\n}\n", "  const fibonacci: number[] = [0, 0, 1];\n  for\
    \ (let i = 3; i <= n; i++) {\n    fibonacci[i] = fibonacci[i - 1] + fibonacci[i\
    \ - 2] + fibonacci[i - 3];\n  }\n  return fibonacci[n];\n}\n", "  return n;\n\
    }\n\ntest(fibfib, [[0, 0], [1, 0], [2, 1], [5, 4], [8, 24], [16, 17496]]);\n",
  "    if (n <= 1) {\n        return 0;\n    }\n    if (n == 2) {\n        return\
    \ 1;\n    }\n    if (n == 3) {\n        return 1;\n    }\n    return fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3);\n}\n", "  if (n < 2) {\n    return 0;\n\
    \  } else if (n === 2) {\n    return 1;\n  } else {\n    let prevPrev: number\
    \ = 0;\n    let prev: number = 0;\n    let next: number = 1;\n    for (let i =\
    \ 2; i < n; i++) {\n      prevPrev = prev;\n      prev = next;\n      next = prevPrev\
    \ + prev + next;\n    }\n    return next;\n  }\n}\n", "  let arr = [0, 0, 1];\n\
    \  for (let i = 3; i <= n; i++) {\n    arr[i] = arr[i - 1] + arr[i - 2] + arr[i\
    \ - 3];\n  }\n  return arr[n];\n}\n", "  if (n === 0) {\n    return 0;\n  }\n\
    \  let a = 0;\n  let b = 0;\n  let c = 1;\n  for (let i = 2; i <= n; i++) {\n\
    \    a = b;\n    b = c;\n    c = a + b + c;\n  }\n  return c;\n}\n", "  return\
    \ 0;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

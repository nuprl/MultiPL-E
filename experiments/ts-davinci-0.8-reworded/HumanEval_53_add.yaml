name: HumanEval_53_add
language: ts
prompt: "//Add two numbers x and y\n// >>> add(2, 3)\n// 5\n// >>> add(5, 7)\n// 12\n\
  function add(x: number, y: number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate(0, 1),1);\n  assert.deepEqual(candidate(1,\
  \ 0),1);\n  assert.deepEqual(candidate(2, 3),5);\n  assert.deepEqual(candidate(5,\
  \ 7),12);\n  assert.deepEqual(candidate(7, 5),12);\n}\n\ntest();"
completions: ["    return x + y;\n}\n", "    return x + y;\n}\nconsole.log(add(2,\
    \ 3));\nconsole.log(add(5, 7));\n\n", "    return x + y;\n}\n", "  return x +\
    \ y;\n}\n", "  return x + y;\n}\n", "  return x + y;\n}", "    return x + y;\n\
    }\n", "  return x + y;\n}\n", "    return x + y;\n}\n\nlet result1 = add(2, 3);\n\
    let result2 = add(5, 7);\nconsole.log(result1);\nconsole.log(result2);\n", " \
    \   return x + y;\n}\n", "    return x + y;\n}\n", "    return x + y;\n}\n", " \
    \ return x + y;\n}\n\nexport default add;", "    return x + y;\n}\n", "  return\
    \ x + y;\n}\n", "    return x + y;\n}\n", "  return x + y;\n}\n", "    return\
    \ x + y;\n}\n", "  return x + y;\n}\n", "    return x + y;\n}\n", "    return\
    \ x + y;\n}\n", "    return x + y;\n}\n", "    return x + y;\n}\nadd(2, 3);\n\
    add(5, 7);\n", "  return x + y;\n}\n", "    return x + y;\n}\n", "    return x\
    \ + y;\n}\nconsole.log(add(2, 3));\nconsole.log(add(5, 7));\n", "    return x\
    \ + y;\n}\n", "    return x + y;\n}\n", "    return x + y;\n}\n", "    return\
    \ x + y;\n}\n", "  return x + y;\n}\n", "  return x + y;\n}\nconsole.log(add(4,\
    \ 5));\n", "    return x + y;\n}\n", "  return x + y;\n}\n", "    return x + y;\n\
    }\n", "  return x + y;\n}\n", "  return x + y;\n}\n", "    return x + y;\n}\n",
  "    return x + y;\n}\n", "  return x + y;\n}\n", "  return x + y;\n}\n", "  return\
    \ x + y;\n}\n", "  return x + y;\n}\n", "    return x + y;\n}\n", "  return x\
    \ + y;\n}\n", "  return x + y;\n}\n", "    return x + y;\n}\n", "    return x\
    \ + y;\n}\n", "  return x + y;\n}\n", "  return x + y;\n}\n", "    return x +\
    \ y;\n}\n", "  return x + y;\n}\n", "    return x + y;\n}\n", "  return x + y;\n\
    }\n", "    // TODO\n    return 0;\n}\n", "    return x + y;\n}\n", "    return\
    \ x + y;\n}\n", "    return x + y;\n}\n", "  return x + y;\n}\n", "  return x\
    \ + y;\n}\n", "  return x + y;\n}\n\nexport default add;", "  return x + y;\n\
    }\n", "  return x + y;\n}\n", "  return x + y;\n}\n", "  return x + y;\n}\n\n\
    console.log(add(2, 3));\nconsole.log(add(5, 7));\n", "    return x + y;\n}\n",
  "  return x + y;\n}\n", "    return x + y;\n}\n", "  return x + y;\n}\n", "    return\
    \ x + y;\n}\n", "    return x + y;\n}", "  return x + y;\n}\n", "    return x\
    \ + y;\n}\n", "  return x + y;\n}\n", "    return x + y;\n}\n", "  return x +\
    \ y;\n}\n", "  return x + y;\n}\n", "  return x + y;\n}\n", "  return x + y;\n\
    }\n", "    return x + y;\n}\n", "    return x + y;\n}\n", "  return x + y;\n}\n",
  "    return x + y;\n}", "    return x + y;\n}\n", "  return x + y;\n}\n", "  return\
    \ x + y;\n}\n", "    return x + y;\n}\n", "    return x + y;\n}\n", "    return\
    \ x + y;\n}\n\nconsole.log(add(3, 6));\n", "    return x + y;\n}\n", "  return\
    \ x + y;\n}\n", "    return x + y;\n}\n", "  return x + y;\n}\n", "  return x\
    \ + y;\n}\n", "  return x + y;\n}\n", "  return x + y;\n}\n\nexport default add;",
  "    return x + y;\n}\n\nconsole.log(add(2, 3));\nconsole.log(add(5, 7));\n", " \
    \ return x + y;\n}\n", "    return x + y;\n}\n", "    return x + y;\n}\n", " \
    \ return x + y;\n}\n", "    return x + y;\n}\n", "    return x + y;\n}\n", " \
    \ return x + y;\n}\n```\n\n## How to Use\n\n```javascript\nconst doc = require(\"\
    jsdoc-api\");\nconst fs = require(\"fs\");\nconst testFile = fs.readFileSync(\"\
    ./test.js\", \"utf8\");\n\nconst docs = doc(testFile);\nconsole.log(docs);", " \
    \ return x + y;\n}\n\ntest(\"add() correctly sums up two numbers\", () => {\n\
    \  expect(add(2, 3)).toBe(5);\n  expect(add(5, 7)).toBe(12);\n});\n", "  return\
    \ x + y;\n}", "    return x + y;\n}\n", "    return x + y;\n}\n", "    return\
    \ x + y;\n}\n", "    return x + y;\n}\n", "    return x + y;\n}\n", "  return\
    \ x + y;\n}\n", "    return x + y;\n}\n", "  return x + y;\n}\n", "  return x\
    \ + y;\n}\n", "  return x + y;\n}\n", "  return x + y;\n}\n", "    return x +\
    \ y;\n}", "  return x + y;\n}\n", "    return x + y;\n}\n", "  return x + y;\n\
    }\n", "  return x + y;\n}\n", "  return x + y;\n}\n", "  return x + y;\n}\n",
  "  return x + y;\n}\nconsole.log(add(5, 4));\n", "  return x + y;\n}\n", "    return\
    \ x + y;\n}\nconsole.log(add(2, 3));\nconsole.log(add(5, 7));\n", "    return\
    \ x + y;\n}\n", "  return x + y;\n}\n", "  return x + y;\n}\n", "    return x\
    \ + y;\n}\n\nadd(2, 3);\n", "  return x + y;\n}\n", "    return x + y;\n}\n",
  "    return x + y;\n}\n", "    return x + y;\n}\n", "    return x + y;\n}\nconsole.log(add(2,\
    \ 3));\nconsole.log(add(5, 7));\n", "  return x + y;\n}\n", "    return x + y;\n\
    }\n", "  return x + y;\n}\nconsole.log(add(2, 3));\nconsole.log(add(5, 7));\n",
  "  return x + y;\n}\n", "    return x + y;\n}\n", "  return x + y;\n}\n", "  return\
    \ x + y;\n}\n", "  return x + y;\n}\n", "    return x + y;\n}\nadd(2, 3);\n",
  "  return x + y;\n}\n", "    return x + y;\n}\n", "  return x + y;\n}\n", "  return\
    \ x + y;\n}\n", "    return x + y;\n}\nconsole.log(add(2, 3));\nconsole.log(add(5,\
    \ 7));\n", "  return x + y;\n}\n", "    return x + y;\n}\n", "    return x + y;\n\
    }\n", "    return x + y;\n}\n", "  return x + y;\n}\nconsole.log(\"Add two numbers\"\
    );\nconsole.log(add(1, 2));\nconsole.log(add(5, 7));\n", "    return x + y;\n\
    }\n", "    return x + y;\n}\n", "    return x + y;\n}\n", "    return x + y;\n\
    }\n", "    return x + y;\n}\n", "    return x + y;\n}\n", "    return x + y;\n\
    }\n", "    // Return the sum of x and y\n    return x + y;\n}\n", "    return\
    \ x + y;\n}\n", "  return x + y;\n}\n", "    return x + y;\n}\nconsole.log(add(2,\
    \ 3));\nconsole.log(add(5, 7));\n", "  //Function body\n  return x + y;\n}\n",
  "  return x + y;\n}\n", "  return x + y;\n}\n", "    return x + y;\n}\nconsole.log(add(2,\
    \ 3));\nconsole.log(add(5, 7));", "    return x + y;\n}\n", "    return x + y;\n\
    }\n", "  return x + y;\n}\n", "    return x + y;\n}\n", "    return x + y;\n}\n",
  "  return x + y;\n}\n", "  return x + y;\n}\n", "    return x + y;\n}\n", "    return\
    \ x + y;\n}", "    return x + y;\n}\n", "    return x + y;\n}\n", "    return\
    \ x + y;\n}\n", "  return x + y;\n}\n", "  return x + y;\n}\n", "  return x +\
    \ y;\n}\n", "  return x + y;\n}\n", "  return x + y;\n}\n", "  return x + y;\n\
    }\n", "  return x + y;\n}\n", "    return x + y;\n}\n", "  return x + y;\n}\n",
  "    return x + y;\n}\n", "    return x + y;\n}\n", "    return x + y;\n}\n", " \
    \ return x + y;\n}\n", "    return x + y;\n}\n", "  return x + y;\n}\n", "  return\
    \ x + y;\n}\n", "    return x + y;\n}\n", "  return x + y;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

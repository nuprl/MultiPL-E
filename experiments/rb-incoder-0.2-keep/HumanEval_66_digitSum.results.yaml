language: ruby
name: HumanEval_66_digitSum
results:
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpgt4mvq__.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpgt4mvq__.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006488711 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    154.11 tests/s, 308.23 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpgt4mvq__.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpgt4mvq__.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006488711 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    154.11 tests/s, 308.23 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.map { |c| c.ord - 'A'.ord }.inject(:+)\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpdhocq_4s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpdhocq_4s.ruby:18:in `test_digitSum'\n\
    \     15: class TestHumanEval < Test::Unit::TestCase\n     16:   def test_digitSum\n\
    \     17:     candidate = method(:digitSum)\n  => 18:     assert_equal(0, candidate.call(\"\
    \"))\n     19:     assert_equal(131, candidate.call(\"abAB\"))\n     20:     assert_equal(67,\
    \ candidate.call(\"abcCd\"))\n     21:     assert_equal(69, candidate.call(\"\
    helloE\"))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.006788604 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    147.31 tests/s, 147.31 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 96\n  end\n\
    \  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmptufy9p_c.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmptufy9p_c.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-58>\n===============================================================================\n\
    \nFinished in 0.00631265 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    158.41 tests/s, 316.82 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.map { |c| c.ord - 'A'.ord }.inject(:+)\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpdhocq_4s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpdhocq_4s.ruby:18:in `test_digitSum'\n\
    \     15: class TestHumanEval < Test::Unit::TestCase\n     16:   def test_digitSum\n\
    \     17:     candidate = method(:digitSum)\n  => 18:     assert_equal(0, candidate.call(\"\
    \"))\n     19:     assert_equal(131, candidate.call(\"abAB\"))\n     20:     assert_equal(67,\
    \ candidate.call(\"abcCd\"))\n     21:     assert_equal(69, candidate.call(\"\
    helloE\"))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.006788604 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    147.31 tests/s, 147.31 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 'A'.ord\n\
    \  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp5o863h1_.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmp5o863h1_.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006563232 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.36 tests/s, 304.73 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 'A'.ord\n\
    \  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp5o863h1_.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmp5o863h1_.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006563232 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.36 tests/s, 304.73 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.map { |c| c.ord - 'A'.ord }.inject(:+)\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpdhocq_4s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpdhocq_4s.ruby:18:in `test_digitSum'\n\
    \     15: class TestHumanEval < Test::Unit::TestCase\n     16:   def test_digitSum\n\
    \     17:     candidate = method(:digitSum)\n  => 18:     assert_equal(0, candidate.call(\"\
    \"))\n     19:     assert_equal(131, candidate.call(\"abAB\"))\n     20:     assert_equal(67,\
    \ candidate.call(\"abcCd\"))\n     21:     assert_equal(69, candidate.call(\"\
    helloE\"))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.006788604 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    147.31 tests/s, 147.31 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.map { |c| c.ord }.inject(:+)\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n    candidate\
    \ = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n    assert_equal(131,\
    \ candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"abcCd\"))\n\
    \    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131, candidate.call(\"\
    woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"))\n    assert_equal(151,\
    \ candidate.call(\" How are yOu?\"))\n    assert_equal(327, candidate.call(\"\
    You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpd63i9kz_.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpd63i9kz_.ruby:18:in `test_digitSum'\n\
    \     15: class TestHumanEval < Test::Unit::TestCase\n     16:   def test_digitSum\n\
    \     17:     candidate = method(:digitSum)\n  => 18:     assert_equal(0, candidate.call(\"\
    \"))\n     19:     assert_equal(131, candidate.call(\"abAB\"))\n     20:     assert_equal(67,\
    \ candidate.call(\"abcCd\"))\n     21:     assert_equal(69, candidate.call(\"\
    helloE\"))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.006455082 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    154.92 tests/s, 154.92 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord - '0'}\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp01heiq_6.ruby\nStarted\nE\n===============================================================================\n\
    Error: test_digitSum(TestHumanEval): TypeError: String can't be coerced into Integer\n\
    /tmp/tmp01heiq_6.ruby:12:in `-'\n/tmp/tmp01heiq_6.ruby:12:in `block in digitSum'\n\
    /tmp/tmp01heiq_6.ruby:12:in `each'\n/tmp/tmp01heiq_6.ruby:12:in `inject'\n/tmp/tmp01heiq_6.ruby:12:in\
    \ `digitSum'\n/tmp/tmp01heiq_6.ruby:19:in `call'\n/tmp/tmp01heiq_6.ruby:19:in\
    \ `test_digitSum'\n     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n\
    \     18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n===============================================================================\n\
    \nFinished in 0.001240033 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    806.43 tests/s, 806.43 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord - '0'}\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp01heiq_6.ruby\nStarted\nE\n===============================================================================\n\
    Error: test_digitSum(TestHumanEval): TypeError: String can't be coerced into Integer\n\
    /tmp/tmp01heiq_6.ruby:12:in `-'\n/tmp/tmp01heiq_6.ruby:12:in `block in digitSum'\n\
    /tmp/tmp01heiq_6.ruby:12:in `each'\n/tmp/tmp01heiq_6.ruby:12:in `inject'\n/tmp/tmp01heiq_6.ruby:12:in\
    \ `digitSum'\n/tmp/tmp01heiq_6.ruby:19:in `call'\n/tmp/tmp01heiq_6.ruby:19:in\
    \ `test_digitSum'\n     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n\
    \     18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n===============================================================================\n\
    \nFinished in 0.001240033 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    806.43 tests/s, 806.43 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord - '0'}\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp01heiq_6.ruby\nStarted\nE\n===============================================================================\n\
    Error: test_digitSum(TestHumanEval): TypeError: String can't be coerced into Integer\n\
    /tmp/tmp01heiq_6.ruby:12:in `-'\n/tmp/tmp01heiq_6.ruby:12:in `block in digitSum'\n\
    /tmp/tmp01heiq_6.ruby:12:in `each'\n/tmp/tmp01heiq_6.ruby:12:in `inject'\n/tmp/tmp01heiq_6.ruby:12:in\
    \ `digitSum'\n/tmp/tmp01heiq_6.ruby:19:in `call'\n/tmp/tmp01heiq_6.ruby:19:in\
    \ `test_digitSum'\n     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n\
    \     18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n===============================================================================\n\
    \nFinished in 0.001240033 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    806.43 tests/s, 806.43 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 'A'.ord\n\
    \  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp5o863h1_.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmp5o863h1_.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006563232 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.36 tests/s, 304.73 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmppd5gaeqg.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmppd5gaeqg.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006150655 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    162.58 tests/s, 325.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 96\n  end\n\
    \  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmptufy9p_c.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmptufy9p_c.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-58>\n===============================================================================\n\
    \nFinished in 0.00631265 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    158.41 tests/s, 316.82 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 'A'.ord\n\
    \  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp5o863h1_.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmp5o863h1_.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006563232 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.36 tests/s, 304.73 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.chars.each do |c|\n    sum += c.ord - 'A'.ord\n\
    \  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmphb73ufje.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmphb73ufje.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006419536 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    155.77 tests/s, 311.55 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord - 'A'.ord}\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpxa5jxyom.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpxa5jxyom.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.012842944 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    77.86 tests/s, 155.73 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 96\n  end\n\
    \  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmptufy9p_c.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmptufy9p_c.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-58>\n===============================================================================\n\
    \nFinished in 0.00631265 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    158.41 tests/s, 316.82 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 'A'.ord\n\
    \  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp5o863h1_.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmp5o863h1_.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006563232 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.36 tests/s, 304.73 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum,c| sum + c.ord - '0'}\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpoogjx4mo.ruby\nStarted\nE\n===============================================================================\n\
    Error: test_digitSum(TestHumanEval): TypeError: String can't be coerced into Integer\n\
    /tmp/tmpoogjx4mo.ruby:12:in `-'\n/tmp/tmpoogjx4mo.ruby:12:in `block in digitSum'\n\
    /tmp/tmpoogjx4mo.ruby:12:in `each'\n/tmp/tmpoogjx4mo.ruby:12:in `inject'\n/tmp/tmpoogjx4mo.ruby:12:in\
    \ `digitSum'\n/tmp/tmpoogjx4mo.ruby:19:in `call'\n/tmp/tmpoogjx4mo.ruby:19:in\
    \ `test_digitSum'\n     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n\
    \     18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n===============================================================================\n\
    \nFinished in 0.001218774 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    820.50 tests/s, 820.50 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |char|\n    sum += char.ord - 'A'.ord\n\
    \  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp22ehilj8.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmp22ehilj8.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006214086 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    160.92 tests/s, 321.85 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.map { |c| c.ord - 'A'.ord }.inject(:+)\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpdhocq_4s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpdhocq_4s.ruby:18:in `test_digitSum'\n\
    \     15: class TestHumanEval < Test::Unit::TestCase\n     16:   def test_digitSum\n\
    \     17:     candidate = method(:digitSum)\n  => 18:     assert_equal(0, candidate.call(\"\
    \"))\n     19:     assert_equal(131, candidate.call(\"abAB\"))\n     20:     assert_equal(67,\
    \ candidate.call(\"abcCd\"))\n     21:     assert_equal(69, candidate.call(\"\
    helloE\"))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.006788604 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    147.31 tests/s, 147.31 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.map { |c| c.ord - 'A'.ord }.inject(:+)\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpdhocq_4s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpdhocq_4s.ruby:18:in `test_digitSum'\n\
    \     15: class TestHumanEval < Test::Unit::TestCase\n     16:   def test_digitSum\n\
    \     17:     candidate = method(:digitSum)\n  => 18:     assert_equal(0, candidate.call(\"\
    \"))\n     19:     assert_equal(131, candidate.call(\"abAB\"))\n     20:     assert_equal(67,\
    \ candidate.call(\"abcCd\"))\n     21:     assert_equal(69, candidate.call(\"\
    helloE\"))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.006788604 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    147.31 tests/s, 147.31 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum,c| sum + c.ord }\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n    candidate\
    \ = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n    assert_equal(131,\
    \ candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"abcCd\"))\n\
    \    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131, candidate.call(\"\
    woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"))\n    assert_equal(151,\
    \ candidate.call(\" How are yOu?\"))\n    assert_equal(327, candidate.call(\"\
    You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpm8xhr1yo.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpm8xhr1yo.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.00652381 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    153.28 tests/s, 306.57 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord - '0'}\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp01heiq_6.ruby\nStarted\nE\n===============================================================================\n\
    Error: test_digitSum(TestHumanEval): TypeError: String can't be coerced into Integer\n\
    /tmp/tmp01heiq_6.ruby:12:in `-'\n/tmp/tmp01heiq_6.ruby:12:in `block in digitSum'\n\
    /tmp/tmp01heiq_6.ruby:12:in `each'\n/tmp/tmp01heiq_6.ruby:12:in `inject'\n/tmp/tmp01heiq_6.ruby:12:in\
    \ `digitSum'\n/tmp/tmp01heiq_6.ruby:19:in `call'\n/tmp/tmp01heiq_6.ruby:19:in\
    \ `test_digitSum'\n     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n\
    \     18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n===============================================================================\n\
    \nFinished in 0.001240033 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    806.43 tests/s, 806.43 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmppd5gaeqg.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmppd5gaeqg.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006150655 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    162.58 tests/s, 325.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.chars.each do |c|\n    sum += c.ord - 'A'.ord\n\
    \  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmphb73ufje.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmphb73ufje.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006419536 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    155.77 tests/s, 311.55 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 96\n  end\n\
    \  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmptufy9p_c.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmptufy9p_c.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-58>\n===============================================================================\n\
    \nFinished in 0.00631265 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    158.41 tests/s, 316.82 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmppd5gaeqg.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmppd5gaeqg.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006150655 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    162.58 tests/s, 325.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmppd5gaeqg.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmppd5gaeqg.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006150655 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    162.58 tests/s, 325.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 'A'.ord\n\
    \  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp5o863h1_.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmp5o863h1_.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006563232 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.36 tests/s, 304.73 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 96\n  end\n\
    \  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmptufy9p_c.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmptufy9p_c.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-58>\n===============================================================================\n\
    \nFinished in 0.00631265 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    158.41 tests/s, 316.82 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord if char >= '0'\
    \ && char <= '9'}\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmppmdzfi0_.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmppmdzfi0_.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.006351267 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    157.45 tests/s, 314.90 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord if char >= '0'\
    \ && char <= '9'}\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmppmdzfi0_.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmppmdzfi0_.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.006351267 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    157.45 tests/s, 314.90 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.chars.each do |c|\n    sum += c.ord - 96\n  end\n\
    \  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpzlic1p6p.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpzlic1p6p.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-58>\n===============================================================================\n\
    \nFinished in 0.006363763 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    157.14 tests/s, 314.28 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.map { |c| c.ord }.inject { |sum, digit| sum + digit\
    \ }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def\
    \ test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpaz77emr0.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpaz77emr0.ruby:18:in `test_digitSum'\n\
    \     15: class TestHumanEval < Test::Unit::TestCase\n     16:   def test_digitSum\n\
    \     17:     candidate = method(:digitSum)\n  => 18:     assert_equal(0, candidate.call(\"\
    \"))\n     19:     assert_equal(131, candidate.call(\"abAB\"))\n     20:     assert_equal(67,\
    \ candidate.call(\"abcCd\"))\n     21:     assert_equal(69, candidate.call(\"\
    helloE\"))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.006226135 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    160.61 tests/s, 160.61 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord - '0'}\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp01heiq_6.ruby\nStarted\nE\n===============================================================================\n\
    Error: test_digitSum(TestHumanEval): TypeError: String can't be coerced into Integer\n\
    /tmp/tmp01heiq_6.ruby:12:in `-'\n/tmp/tmp01heiq_6.ruby:12:in `block in digitSum'\n\
    /tmp/tmp01heiq_6.ruby:12:in `each'\n/tmp/tmp01heiq_6.ruby:12:in `inject'\n/tmp/tmp01heiq_6.ruby:12:in\
    \ `digitSum'\n/tmp/tmp01heiq_6.ruby:19:in `call'\n/tmp/tmp01heiq_6.ruby:19:in\
    \ `test_digitSum'\n     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n\
    \     18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n===============================================================================\n\
    \nFinished in 0.001240033 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    806.43 tests/s, 806.43 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord - '0'}\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp01heiq_6.ruby\nStarted\nE\n===============================================================================\n\
    Error: test_digitSum(TestHumanEval): TypeError: String can't be coerced into Integer\n\
    /tmp/tmp01heiq_6.ruby:12:in `-'\n/tmp/tmp01heiq_6.ruby:12:in `block in digitSum'\n\
    /tmp/tmp01heiq_6.ruby:12:in `each'\n/tmp/tmp01heiq_6.ruby:12:in `inject'\n/tmp/tmp01heiq_6.ruby:12:in\
    \ `digitSum'\n/tmp/tmp01heiq_6.ruby:19:in `call'\n/tmp/tmp01heiq_6.ruby:19:in\
    \ `test_digitSum'\n     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n\
    \     18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n===============================================================================\n\
    \nFinished in 0.001240033 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    806.43 tests/s, 806.43 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 'A'.ord\n\
    \  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp5o863h1_.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmp5o863h1_.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006563232 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.36 tests/s, 304.73 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 'A'.ord\n\
    \  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp5o863h1_.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmp5o863h1_.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006563232 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.36 tests/s, 304.73 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 96 if c.ord\
    \ >= 65 && c.ord <= 90\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_digitSum\n    candidate = method(:digitSum)\n\
    \    assert_equal(0, candidate.call(\"\"))\n    assert_equal(131, candidate.call(\"\
    abAB\"))\n    assert_equal(67, candidate.call(\"abcCd\"))\n    assert_equal(69,\
    \ candidate.call(\"helloE\"))\n    assert_equal(131, candidate.call(\"woArBld\"\
    ))\n    assert_equal(153, candidate.call(\"aAaaaXa\"))\n    assert_equal(151,\
    \ candidate.call(\" How are yOu?\"))\n    assert_equal(327, candidate.call(\"\
    You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpe5l2q31k.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpe5l2q31k.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-61>\n\ndiff:\n? -6131\n\
    ===============================================================================\n\
    \nFinished in 0.010444626 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    95.74 tests/s, 191.49 assertions/s\n"
  timestamp: 1659795054
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 'A'.ord\n\
    \  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp5o863h1_.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmp5o863h1_.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006563232 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.36 tests/s, 304.73 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord - '0'}\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp01heiq_6.ruby\nStarted\nE\n===============================================================================\n\
    Error: test_digitSum(TestHumanEval): TypeError: String can't be coerced into Integer\n\
    /tmp/tmp01heiq_6.ruby:12:in `-'\n/tmp/tmp01heiq_6.ruby:12:in `block in digitSum'\n\
    /tmp/tmp01heiq_6.ruby:12:in `each'\n/tmp/tmp01heiq_6.ruby:12:in `inject'\n/tmp/tmp01heiq_6.ruby:12:in\
    \ `digitSum'\n/tmp/tmp01heiq_6.ruby:19:in `call'\n/tmp/tmp01heiq_6.ruby:19:in\
    \ `test_digitSum'\n     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n\
    \     18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n===============================================================================\n\
    \nFinished in 0.001240033 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    806.43 tests/s, 806.43 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.map { |c| c.ord - 'A'.ord }.inject(:+)\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpdhocq_4s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpdhocq_4s.ruby:18:in `test_digitSum'\n\
    \     15: class TestHumanEval < Test::Unit::TestCase\n     16:   def test_digitSum\n\
    \     17:     candidate = method(:digitSum)\n  => 18:     assert_equal(0, candidate.call(\"\
    \"))\n     19:     assert_equal(131, candidate.call(\"abAB\"))\n     20:     assert_equal(67,\
    \ candidate.call(\"abcCd\"))\n     21:     assert_equal(69, candidate.call(\"\
    helloE\"))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.006788604 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    147.31 tests/s, 147.31 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 'A'.ord\n\
    \  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp5o863h1_.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmp5o863h1_.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006563232 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.36 tests/s, 304.73 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 'A'.ord\n\
    \  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp5o863h1_.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmp5o863h1_.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006563232 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.36 tests/s, 304.73 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 48\n  end\n\
    \  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpduszzswx.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpduszzswx.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<134>\n\ndiff:\n? 131\n\
    ?   4\n?   ?\n===============================================================================\n\
    \nFinished in 0.010331273 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    96.79 tests/s, 193.59 assertions/s\n"
  timestamp: 1659795054
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmppd5gaeqg.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmppd5gaeqg.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006150655 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    162.58 tests/s, 325.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 'A'.ord\n\
    \  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp5o863h1_.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmp5o863h1_.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006563232 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.36 tests/s, 304.73 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord - '0'}\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp01heiq_6.ruby\nStarted\nE\n===============================================================================\n\
    Error: test_digitSum(TestHumanEval): TypeError: String can't be coerced into Integer\n\
    /tmp/tmp01heiq_6.ruby:12:in `-'\n/tmp/tmp01heiq_6.ruby:12:in `block in digitSum'\n\
    /tmp/tmp01heiq_6.ruby:12:in `each'\n/tmp/tmp01heiq_6.ruby:12:in `inject'\n/tmp/tmp01heiq_6.ruby:12:in\
    \ `digitSum'\n/tmp/tmp01heiq_6.ruby:19:in `call'\n/tmp/tmp01heiq_6.ruby:19:in\
    \ `test_digitSum'\n     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n\
    \     18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n===============================================================================\n\
    \nFinished in 0.001240033 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    806.43 tests/s, 806.43 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 'A'.ord\n\
    \  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp5o863h1_.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmp5o863h1_.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006563232 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.36 tests/s, 304.73 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 'A'.ord\n\
    \  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp5o863h1_.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmp5o863h1_.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006563232 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.36 tests/s, 304.73 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.map { |c| c.ord - 'A'.ord }.inject(:+)\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpdhocq_4s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpdhocq_4s.ruby:18:in `test_digitSum'\n\
    \     15: class TestHumanEval < Test::Unit::TestCase\n     16:   def test_digitSum\n\
    \     17:     candidate = method(:digitSum)\n  => 18:     assert_equal(0, candidate.call(\"\
    \"))\n     19:     assert_equal(131, candidate.call(\"abAB\"))\n     20:     assert_equal(67,\
    \ candidate.call(\"abcCd\"))\n     21:     assert_equal(69, candidate.call(\"\
    helloE\"))\n<0> expected but was\n<nil>\n===============================================================================\n\
    \nFinished in 0.006788604 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    147.31 tests/s, 147.31 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord - '0'}\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp01heiq_6.ruby\nStarted\nE\n===============================================================================\n\
    Error: test_digitSum(TestHumanEval): TypeError: String can't be coerced into Integer\n\
    /tmp/tmp01heiq_6.ruby:12:in `-'\n/tmp/tmp01heiq_6.ruby:12:in `block in digitSum'\n\
    /tmp/tmp01heiq_6.ruby:12:in `each'\n/tmp/tmp01heiq_6.ruby:12:in `inject'\n/tmp/tmp01heiq_6.ruby:12:in\
    \ `digitSum'\n/tmp/tmp01heiq_6.ruby:19:in `call'\n/tmp/tmp01heiq_6.ruby:19:in\
    \ `test_digitSum'\n     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n\
    \     18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n===============================================================================\n\
    \nFinished in 0.001240033 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    806.43 tests/s, 806.43 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmppd5gaeqg.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmppd5gaeqg.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006150655 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    162.58 tests/s, 325.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 96\n  end\n\
    \  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmptufy9p_c.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmptufy9p_c.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-58>\n===============================================================================\n\
    \nFinished in 0.00631265 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    158.41 tests/s, 316.82 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord - 'A'.ord}\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpxa5jxyom.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpxa5jxyom.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.012842944 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    77.86 tests/s, 155.73 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord - '0'}\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp01heiq_6.ruby\nStarted\nE\n===============================================================================\n\
    Error: test_digitSum(TestHumanEval): TypeError: String can't be coerced into Integer\n\
    /tmp/tmp01heiq_6.ruby:12:in `-'\n/tmp/tmp01heiq_6.ruby:12:in `block in digitSum'\n\
    /tmp/tmp01heiq_6.ruby:12:in `each'\n/tmp/tmp01heiq_6.ruby:12:in `inject'\n/tmp/tmp01heiq_6.ruby:12:in\
    \ `digitSum'\n/tmp/tmp01heiq_6.ruby:19:in `call'\n/tmp/tmp01heiq_6.ruby:19:in\
    \ `test_digitSum'\n     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n\
    \     18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n===============================================================================\n\
    \nFinished in 0.001240033 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    806.43 tests/s, 806.43 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 96\n  end\n\
    \  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmptufy9p_c.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmptufy9p_c.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-58>\n===============================================================================\n\
    \nFinished in 0.00631265 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    158.41 tests/s, 316.82 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 96\n  end\n\
    \  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmptufy9p_c.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmptufy9p_c.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-58>\n===============================================================================\n\
    \nFinished in 0.00631265 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    158.41 tests/s, 316.82 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmppd5gaeqg.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmppd5gaeqg.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006150655 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    162.58 tests/s, 325.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmppd5gaeqg.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmppd5gaeqg.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006150655 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    162.58 tests/s, 325.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) {|sum, char| sum + char.ord - '0'}\nend\n\
    require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp01heiq_6.ruby\nStarted\nE\n===============================================================================\n\
    Error: test_digitSum(TestHumanEval): TypeError: String can't be coerced into Integer\n\
    /tmp/tmp01heiq_6.ruby:12:in `-'\n/tmp/tmp01heiq_6.ruby:12:in `block in digitSum'\n\
    /tmp/tmp01heiq_6.ruby:12:in `each'\n/tmp/tmp01heiq_6.ruby:12:in `inject'\n/tmp/tmp01heiq_6.ruby:12:in\
    \ `digitSum'\n/tmp/tmp01heiq_6.ruby:19:in `call'\n/tmp/tmp01heiq_6.ruby:19:in\
    \ `test_digitSum'\n     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n\
    \     18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n===============================================================================\n\
    \nFinished in 0.001240033 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 1 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    806.43 tests/s, 806.43 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 'A'.ord\n\
    \  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp5o863h1_.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmp5o863h1_.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006563232 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.36 tests/s, 304.73 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |c|\n    sum += c.ord - 'A'.ord\n\
    \  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp5o863h1_.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmp5o863h1_.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006563232 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.36 tests/s, 304.73 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'A'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpf7n9zx9q.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpf7n9zx9q.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006553119 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    152.60 tests/s, 305.20 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  sum = 0\n  s.each_char do |char|\n    sum += char.ord - 'A'.ord\n\
    \  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_digitSum\n    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\
    \"))\n    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmp22ehilj8.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmp22ehilj8.ruby:23:in `test_digitSum'\n\
    \     20:   def test_digitSum\n     21:     candidate = method(:digitSum)\n  \
    \   22:     assert_equal(0, candidate.call(\"\"))\n  => 23:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     24:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     25:     assert_equal(69, candidate.call(\"helloE\"))\n     26:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<66>\n===============================================================================\n\
    \nFinished in 0.006214086 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    160.92 tests/s, 321.85 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord }\nend\nrequire\
    \ 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpha2sal5s.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpha2sal5s.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<326>\n\ndiff:\n? 131\
    \ \n?   26\n? - ?\n===============================================================================\n\
    \nFinished in 0.006687715 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    149.53 tests/s, 299.06 assertions/s\n"
  timestamp: 1659795053
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    def digitSum(s)\n  s.chars.inject(0) { |sum, char| sum + char.ord - 'a'.ord }\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digitSum\n\
    \    candidate = method(:digitSum)\n    assert_equal(0, candidate.call(\"\"))\n\
    \    assert_equal(131, candidate.call(\"abAB\"))\n    assert_equal(67, candidate.call(\"\
    abcCd\"))\n    assert_equal(69, candidate.call(\"helloE\"))\n    assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n    assert_equal(153, candidate.call(\"aAaaaXa\"\
    ))\n    assert_equal(151, candidate.call(\" How are yOu?\"))\n    assert_equal(327,\
    \ candidate.call(\"You arE Very Smart\"))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpz2x8cx2v.ruby\nStarted\nF\n===============================================================================\n\
    Failure: test_digitSum(TestHumanEval)\n/tmp/tmpz2x8cx2v.ruby:19:in `test_digitSum'\n\
    \     16:   def test_digitSum\n     17:     candidate = method(:digitSum)\n  \
    \   18:     assert_equal(0, candidate.call(\"\"))\n  => 19:     assert_equal(131,\
    \ candidate.call(\"abAB\"))\n     20:     assert_equal(67, candidate.call(\"abcCd\"\
    ))\n     21:     assert_equal(69, candidate.call(\"helloE\"))\n     22:     assert_equal(131,\
    \ candidate.call(\"woArBld\"))\n<131> expected but was\n<-62>\n===============================================================================\n\
    \nFinished in 0.006406816 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    156.08 tests/s, 312.17 assertions/s\n"
  timestamp: 1659795053

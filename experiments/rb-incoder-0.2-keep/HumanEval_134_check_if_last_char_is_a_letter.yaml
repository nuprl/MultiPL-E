name: HumanEval_134_check_if_last_char_is_a_letter
language: ruby
prompt: "# Create a function that returns True if the last character\n# of a given\
  \ string is an alphabetical character and is not\n# a part of a word, and False\
  \ otherwise.\n# Note: \"word\" is a group of characters separated by space.\n# Examples:\n\
  # check_if_last_char_is_a_letter(\"apple pie\") \u279E False\n# check_if_last_char_is_a_letter(\"\
  apple pi e\") \u279E True\n# check_if_last_char_is_a_letter(\"apple pi e \") \u279E\
  \ False\n# check_if_last_char_is_a_letter(\"\") \u279E False\ndef check_if_last_char_is_a_letter(txt)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_check_if_last_char_is_a_letter\n\
  \    candidate = method(:check_if_last_char_is_a_letter)\n    assert_equal(false,\
  \ candidate.call(\"apple\"))\n    assert_equal(true, candidate.call(\"apple pi e\"\
  ))\n    assert_equal(false, candidate.call(\"eeeee\"))\n    assert_equal(true, candidate.call(\"\
  A\"))\n    assert_equal(false, candidate.call(\"Pumpkin pie \"))\n    assert_equal(false,\
  \ candidate.call(\"Pumpkin pie 1\"))\n    assert_equal(false, candidate.call(\"\"\
  ))\n    assert_equal(false, candidate.call(\"eeeee e \"))\n    assert_equal(false,\
  \ candidate.call(\"apple pie\"))\n    assert_equal(false, candidate.call(\"apple\
  \ pi e \"))\n  end\nend\n"
completions: ["  txt.downcase!\n  txt.slice!(0..-2).each do |char|\n    return false\
    \ if char.upcase != char\n  end\n  true\nend", "  txt.downcase!\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  ", "  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  ", "  txt.split(\" \").each do |word|\n\
    \    return false if word.empty?\n    return true if word[word.length-1].upcase\
    \ == word[word.length-1]\n  end\n  return false\nend", "  txt.downcase!\n  txt.slice!(-1)\
    \ if txt.empty?\n  txt.slice!(0..-2) if txt.slice!(0..-1).empty?\n  txt.slice!(0..-2).empty?\
    \ && txt.slice!(0..-1).empty?\nend", "  txt.downcase!\n  txt.split.each do |word|\n\
    \    word.split.each do |letter|\n      return false if letter.upcase == letter\n\
    \    end\n  end\n  true\nend", "  txt.downcase!\n  txt.split(\" \").each do |word|\n\
    \    word.downcase!\n    return false if word.empty?\n    return true if word[-1]\
    \ != word[0]\n  end\n  true\nend", "  txt.split(\" \").each do |word|\n    if\
    \ word[word.length-1].upcase == word[word.length-1]\n      return false\n    end\n\
    \  end\n  return true\nend", "  txt.slice!(-1) # Remove the last character from\
    \ the string\n  txt.downcase! # Convert to all lowercase\n  txt.split.each do\
    \ |word|\n    word.split.each do |letter|\n      if letter.upcase == letter\n\
    \        return false\n      end\n    end\n  end\n  return true\nend", "  txt.downcase!\n\
    \  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice",
  "  txt.downcase!\n  txt.slice!(0..-1)\n  txt.include?(\" \")\nend", "  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1", " \
    \ txt.downcase!\n  txt.slice!(-1) # remove last char\n  txt.split(\" \").each\
    \ do |word|\n    word.downcase!\n    return false if word.include?(txt[-1])\n\
    \  end\n  true\nend", "  txt.downcase!\n  txt.slice!(0..-2).each do |char|\n \
    \   return false if char.upcase != char\n  end\n  true\nend", "  txt.slice!(-1)\
    \ # Remove the last character from the string\n  txt.downcase! # Convert to all\
    \ lowercase\n  txt.split(\" \").each do |word|\n    return false if word.include?(txt[-1])\n\
    \  end\n  true\nend", "  txt.split(\" \").each do |word|\n    return false if\
    \ word.last.include?(\" \")\n    return false if word.last.include?(\"a\")\n \
    \   return false if word.last.include?(\"e\")\n    return false if word.last.include?(\"\
    i\")\n    return false if word.last.include?(\"o\")\n    return false if word.last.include?(\"\
    u\")\n  end\n  return true\nend", "  txt.downcase!\n  txt.slice!(-1) # Remove\
    \ the last character\n  txt.split(\" \").each do |word|\n    return false if word.include?(txt[-1])\n\
    \  end\n  true\nend", "  txt.split(\" \").each do |word|\n    word.split(\"\"\
    ).each do |char|\n      if char.upcase == char\n        return false\n      end\n\
    \    end\n  end\n  return true\nend", "  txt.downcase!\n  txt.slice!(-1) # remove\
    \ last character\n  txt.split.each do |word|\n    word.split.each do |letter|\n\
    \      return false if letter.upcase == letter\n    end\n  end\n  true\nend",
  "  txt.downcase!\n  txt.slice!(-1) # remove last character\n  txt.split(\" \").each\
    \ do |word|\n    word.downcase!\n    return false if word.include?(txt[-1])\n\
    \  end\n  true\nend", "  txt.split(\" \").each do |word|\n    if word[word.length-1].upcase\
    \ == word[word.length-1]\n      return false\n    end\n  end\n  return true\n\
    end", "  txt.chars.last.upcase.include?(txt.chars.last.downcase)\nend", "  txt.split(\"\
    \ \").each do |word|\n    word.split(\"\").each do |char|\n      return false\
    \ if char.upcase != char\n    end\n  end\n  true\nend", "  txt.downcase!\n  txt.slice!(-1)\
    \ if txt.empty?\n  txt.slice!(0..-2) if txt.slice!(0..-1).empty?\n  txt.slice!(0..-2).each\
    \ do |c|\n    break if c.upcase == c\n  end\n  !txt.empty?\nend", "  txt.split(\"\
    \ \").each do |word|\n    return false if word[word.length-1].upcase == word[word.length-1]\n\
    \  end\n  return true\nend", "  txt.slice!(-1) # remove last character\n  txt.downcase!\n\
    \  txt.split(\" \").each do |word|\n    word.slice!(-1) # remove last character\n\
    \    word.downcase!\n    return false if word.include?(txt[-1])\n  end\n  true\n\
    end", "  txt.split(\" \").last.match?(/[a-z]/)\nend", "  txt.downcase!\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  ", "  txt.split(\"\
    \ \").each do |word|\n    word.split(\" \").each do |letter|\n      letter ==\
    \ word[word.length-1]\n    end\n  end\nend", "  txt.slice!(-1) # remove last char\n\
    \  txt.downcase!\n  txt.split.each do |word|\n    word.slice!(-1) # remove last\
    \ char\n    word.downcase!\n    return true if word =~ /^[a-z]+$/\n  end\n  false\n\
    end", "  txt.downcase!\n  txt.slice!(-1) # remove last character\n  txt.slice!(0..-2)\
    \ # remove first character\n  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).gsub(/[^a-z]/i,\
    \ '')\nend", "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  ",
  "  txt.downcase!\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice", "  txt.chars.last.upcase.gsub(/[^A-Za-z]/, '').empty?\nend",
  "  txt.slice!(-1) # remove last char\n  txt.downcase!\n  txt.split(\" \").each do\
    \ |word|\n    word.slice!(-1) # remove last char\n    word.downcase!\n    return\
    \ false if word.include?(txt[-1])\n  end\n  true\nend", "  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  ", "  txt.split(\" \").each do |word|\n    return false if\
    \ word[word.length-1].upcase == word[word.length-1]\n  end\n  return true\nend",
  "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  ", "  txt.chars.last.upcase.include?(txt.chars.last)\n\
    end", "  txt.split(\" \").each do |word|\n    word.split(\"\").each do |letter|\n\
    \      return false if letter == word[word.length-1]\n    end\n  end\n  return\
    \ true\nend", "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  ",
  "  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1",
  "  txt.downcase!\n  txt.slice!(0..-1)\n  txt.include?(\" \")\nend", "  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1", " \
    \ txt.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n\
    \  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n\
    \  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n\
    \  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n\
    \  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n\
    \  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n\
    \  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n\
    \  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n\
    \  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n\
    \  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n\
    \  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n\
    \  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n\
    \  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n\
    \  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last", "  txt.downcase!\n\
    \  txt.slice!(0..-2).each do |char|\n    return false if char.upcase == char\n\
    \  end\n  true\nend", "  txt.downcase!\n  txt.slice!(0..-1)\n  txt.include?(\"\
    \ \")\nend", "  txt.downcase!\n  txt.strip!\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice", "  txt.downcase!\n  txt.slice!(0..-2).each do |c|\n\
    \    return false if c.upcase == c.downcase\n  end\n  true\nend", "  txt.downcase!\n\
    \  txt.slice!(0..-2).each do |char|\n    return false if char.upcase == char\n\
    \  end\n  true\nend", "  txt.slice!(-1) # remove last character\n  txt.empty?\
    \ || txt.split.any? { |word| word.include?(txt.slice!(-1)) }\nend", "  txt.split(\"\
    \ \").each do |word|\n    return false if word.empty?\n    return true if word[word.length-1].upcase\
    \ == word[word.length-1]\n  end\n  return false\nend", "  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  ", "  txt.split(\" \").last.include?(txt.last.downcase)\n\
    end", "  txt.slice!(-1)\n  txt.slice!(-1..-1)\n  txt.slice!(-1..-1).empty? &&\
    \ txt.slice!(-1..-1).empty?\nend", "  txt.downcase!\n  txt.strip!\n  txt.chars.last.match?(/[a-z]/)\n\
    end", "  txt.chars.last.upcase !~ /\\w/\nend", "  txt.downcase!\n  txt.split(\"\
    \ \").each do |word|\n    word.downcase!\n    return false if word.include?(txt[-1])\n\
    \  end\n  true\nend", "  txt.split(\" \").each do |word|\n    word.split(\" \"\
    ).each do |letter|\n      return false if letter[-1] != word[-1]\n    end\n  end\n\
    \  return true\nend", "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  ", "  txt.downcase!\n  txt.split.each do |word|\n    word.split.each do |letter|\n\
    \      return false if letter.upcase == letter\n    end\n  end\n  true\nend",
  "  txt.split(\" \").each do |word|\n    return false if word.empty?\n    return\
    \ false if word[word.length-1].upcase != word[word.length-1]\n  end\n  return\
    \ true\nend", "  txt.slice!(-1)\n  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).gsub!(/[^a-z]/,\
    \ '')\n  txt.slice!(0..-2).empty?\nend", "  txt.downcase!\n  txt.split.each do\
    \ |word|\n    word.split.each do |char|\n      char.downcase!\n      char.split.each\
    \ do |letter|\n        return false if letter.include?(txt[-1])\n      end\n \
    \   end\n  end\n  true\nend", "  txt.split(\" \").each do |word|\n    word.split(\"\
    \").each do |letter|\n      return false if letter == txt[-1]\n    end\n  end\n\
    \  return true\nend", "  txt.split(\" \").each do |word|\n    word.split(\"\"\
    ).each do |letter|\n      return false if letter == word[word.length-1]\n    end\n\
    \  end\n  true\nend", "  txt.slice!(-1)\n  txt.slice!(-2)\n  txt.slice!(-2)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)",
  "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  ", "  txt.split(\" \"\
    ).each do |word|\n    word.split(\" \").each do |letter|\n      letter == word[word.length-1]\
    \ && !word.include?(letter)\n    end\n  end\nend", "  txt.downcase!\n  txt.split.each\
    \ do |word|\n    word.split.each do |char|\n      return false if char.upcase\
    \ == char\n    end\n  end\n  true\nend", "  txt.downcase!\n  txt.split(\" \").each\
    \ do |word|\n    word.downcase!\n    return false if word.empty?\n    return false\
    \ if word[word.length-1].match(/[a-z]/i)\n  end\n  true\nend", "  txt.downcase!\n\
    \  txt.split(\" \").each do |word|\n    word.downcase!\n    return false if word[word.length-1].match(/[a-z]/i)\n\
    \  end\n  true\nend", "  txt.downcase!\n  txt.split.each do |word|\n    word.split.each\
    \ do |char|\n      return false if char.upcase == char\n    end\n  end\n  true\n\
    end", "  txt.downcase!\n  txt.split(\" \").each do |word|\n    word.downcase!\n\
    \    word.split(\" \").each do |char|\n      char.downcase!\n      if char ==\
    \ txt[-1]\n        return false\n      end\n    end\n  end\n  return true\nend",
  "  txt.downcase!\n  txt.strip!\n  txt.slice!(-1) # remove last character\n  txt.slice!(0..-2)\
    \ # remove first and last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(0..-2) # remove first and last character\n  txt.slice!(-1) # remove\
    \ last character\n  txt.slice!(0..-2) # remove first and last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(0..-2) # remove first and last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(0..-2) # remove first\
    \ and last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(0..-2)\
    \ # remove first and last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(0..-2) # remove first and last character\n  txt.slice!(-1) # remove\
    \ last character\n  txt.slice!(0..-2) # remove first and last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(0..-2) # remove first and last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(0..-2) # remove first\
    \ and last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(0..-2)\
    \ # remove first and last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(0..-2) # remove first and last character\n  txt.slice!(-1) # remove\
    \ last character\n  txt.slice!(0..-2) # remove first and last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(0..-2) # remove first and last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(0..-2) # remove first\
    \ and last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(0..-2)\
    \ # remove first and last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(0..-2) # remove first and last character\n  txt.slice!(-1) # remove\
    \ last character\n  txt.slice!(0..-2) # remove first and last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(0..-2) # remove first and last character\n\
    \  txt.slice!(", "  txt.downcase!\n  txt.strip!\n  txt.split(\" \").each do |word|\n\
    \    word.downcase!\n    word.strip!\n    return false if word.empty?\n    return\
    \ true if word[word.length-1].upcase == word[word.length-1]\n  end\n  true\nend",
  "  txt.downcase!\n  txt.slice!(-1) # remove last char\n  txt.split(\" \").each do\
    \ |word|\n    word.downcase!\n    return false if word.include?(txt[-1])\n  end\n\
    \  true\nend", "  txt.downcase!\n  txt.split(\" \").each do |word|\n    word.downcase!\n\
    \    return false if word.empty?\n    return true if word[word.length-1].match?(/[a-z]/)\n\
    \  end\n  true\nend", "  txt.split(\" \").each do |word|\n    return false if\
    \ word.empty?\n    return true if word[word.length-1].match?(/[a-z]/i)\n  end\n\
    \  false\nend", "  txt.slice!(-1)\n  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).gsub(/[^a-z]/i,\
    \ '')\nend", "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  ",
  "  txt.downcase!\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char", "  txt.downcase!\n  txt.split(\" \").each do |word|\n    word.downcase!\n\
    \    return false if word.include?(txt[-1])\n  end\n  true\nend", "  txt.downcase!\n\
    \  txt.split(\" \").each do |word|\n    word.downcase!\n    return false if word[word.length-1].match(/[a-z]/i)\n\
    \  end\n  true\nend", "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  ", "  txt.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.include?(\"\
    \ \")\nend", "  txt.downcase!\n  txt.split.each do |word|\n    word.split.each\
    \ do |letter|\n      return false if letter.include?(txt[-1])\n    end\n  end\n\
    \  true\nend", "  txt.split(\" \").each do |word|\n    word.split(\" \").each\
    \ do |char|\n      return false if char.include?(txt[-1])\n    end\n  end\n  true\n\
    end", "  txt.downcase!\n  txt.split!\n  txt.each do |word|\n    word.downcase!\n\
    \    word.split!\n    word.each do |letter|\n      letter == word[word.length-1]\n\
    \    end\n  end\nend", "  txt.chars.last.upcase.include?(txt.chars.last)\nend",
  "  txt.split(\" \").each do |word|\n    return false if word[word.length-1].upcase\
    \ == word[word.length-1]\n  end\n  return true\nend", "  txt.downcase!\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character\n  txt.slice!(-1)\
    \ # remove last character\n  txt.slice!(-1) # remove last character", "  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  ", "  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1) # remove last character\n\
    \  txt.slice!(-1) # remove last character\n  txt.slice!(-1", "  txt.downcase!\n\
    \  txt.slice!(-1) # remove last character\n  txt.split.any? { |word| word.include?(txt[-1])\
    \ }\nend", "  txt.slice!(-1)\n  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).gsub!(/[^a-z]/,\
    \ \"\")\n  txt.slice!(0..-2).empty?\nend", "  txt.split(\" \").each do |word|\n\
    \    return false if word[word.length-1].match(/[a-z]/)\n  end\n  true\nend",
  "  txt.downcase!\n  txt.slice!(0..-2).each do |char|\n    return false if char.upcase\
    \ != char\n  end\n  true\nend", "  txt.split(\" \").each do |word|\n    word.split(\"\
    \").each do |char|\n      char.upcase == char.downcase ? false : true\n    end\n\
    \  end\nend", "  txt.slice!(-1) # Remove the last character from the string\n\
    \  txt.slice!(-1) # Remove the last character from the string\n  txt.slice!(-1)\
    \ # Remove the last character from the string\n  txt.slice!(-1) # Remove the last\
    \ character from the string\n  txt.slice!(-1) # Remove the last character from\
    \ the string\n  txt.slice!(-1) # Remove the last character from the string\n \
    \ txt.slice!(-1) # Remove the last character from the string\n  txt.slice!(-1)\
    \ # Remove the last character from the string\n  txt.slice!(-1) # Remove the last\
    \ character from the string\n  txt.slice!(-1) # Remove the last character from\
    \ the string\n  txt.slice!(-1) # Remove the last character from the string\n \
    \ txt.slice!(-1) # Remove the last character from the string\n  txt.slice!(-1)\
    \ # Remove the last character from the string\n  txt.slice!(-1) # Remove the last\
    \ character from the string\n  txt.slice!(-1) # Remove the last character from\
    \ the string\n  txt.slice!(-1) # Remove the last character from the string\n \
    \ txt.slice!(-1) # Remove the last character from the string\n  txt.slice!(-1)\
    \ # Remove the last character from the string\n  txt.slice!(-1) # Remove the last\
    \ character from the string\n  txt.slice!(-1) # Remove the last character from\
    \ the string\n  txt.slice!(-1) # Remove the last character from the string\n \
    \ txt.slice!(-1) # Remove the last character from the string\n  txt.slice!(-1)\
    \ # Remove the last character from the string\n  txt.slice!(-1) # Remove the last\
    \ character from the string\n  txt.slice!(-1) # Remove the last character from\
    \ the string\n  txt.slice!(-1) # Remove the last character from the string\n \
    \ txt.slice!(-1) # Remove the last character from the string\n  txt.slice!(-1)\
    \ # Remove the last character from the string\n  txt.slice!(-1) # Remove the last\
    \ character from the string\n  txt.slice!(-1) # Remove the last character from\
    \ the string\n  txt.slice!(-1) # Remove the last character from the string\n \
    \ txt.slice!(-1) # Remove the last character from the string\n  txt.slice!(-1)\
    \ # Remove the last character from the string\n  txt.slice!(-1) # Remove the last\
    \ character from the string\n  txt.slice!(-1) # Remove the last character from\
    \ the string\n  txt.slice!(-1) # Remove the last character from the string\n \
    \ txt.slice!(-1) # Remove the last character from the string\n  txt.slice!(-1)\
    \ # Remove the last character from the string\n  txt.slice!(-1) # Remove the last\
    \ character from the string\n  txt.slice!(", "  txt.chars.last.upcase!\n  txt.chars.last.split.any?\
    \ { |c| c.is_a?(String) }\nend", "  txt.split(\" \").each do |word|\n    return\
    \ false if word.last.match(/[a-z]/)\n  end\n  true\nend", "  txt.split(\" \").last.chars.all?\
    \ { |c| c.upcase != c.downcase }\nend", "  txt.split(\" \").each do |word|\n \
    \   word.split(\"\").each do |char|\n      return false if char.upcase != char\n\
    \    end\n  end\n  true\nend", "  txt.split(\" \").each do |word|\n    word.split(\"\
    \").each do |letter|\n      if letter == word[word.length-1]\n        return false\n\
    \      end\n    end\n  end\n  return true\nend", "  txt.downcase!\n  txt.slice!(-1)\
    \ # remove last char\n  txt.split(\" \").each do |word|\n    word.downcase!\n\
    \    return false if word.include?(txt[-1])\n  end\n  true\nend", "  txt.slice!(-1)\n\
    \  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2,\
    \ -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2,\
    \ -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2,\
    \ -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2,\
    \ -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2,\
    \ -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2,\
    \ -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2,\
    \ -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2,\
    \ -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2,\
    \ -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2,\
    \ -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2,\
    \ -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2,\
    \ -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2,\
    \ -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2, -1)\n  txt.slice!(-2,\
    \ -1)\n  ", "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  ",
  "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  ", "  txt.downcase!\n\
    \  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice",
  "  txt.chars.last.upcase.include?(txt.chars.last)\nend", "  txt.split(\" \").last.chars.all?\
    \ { |c| c.upcase != c.downcase }\nend", "  txt.split(\" \").last.chars.all? {\
    \ |c| c.upcase != c.downcase }\nend", "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  ", "  txt.downcase!\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice", "  txt.downcase!\n  txt.split.each do |word|\n    word.split.each\
    \ do |char|\n      return false if char.upcase == char\n    end\n  end\n  true\n\
    end", "  txt.downcase!\n  txt.slice!(-1) # remove last char\n  txt.split(\" \"\
    ).each do |word|\n    word.downcase!\n    word.slice!(-1) # remove last char\n\
    \    return false if word.empty?\n    return true if word[-1] != word[-2]\n  end\n\
    \  true\nend", "  txt.slice!(-1) # remove last character\n  txt.slice!(0..-2)\
    \ # remove first character\n  txt.slice!(0..-2).empty? # remove last character\n\
    end", "  txt.downcase!\n  txt.slice!(-1) # remove last character\n  txt.split.each\
    \ do |word|\n    word.split.each do |letter|\n      letter == txt[-1] && return\
    \ false\n    end\n  end\n  true\nend", "  txt.slice!(-1)\n  txt.slice!(-1)\n \
    \ txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  ", "  txt.downcase!\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char", "  txt.slice!(-1)\n  txt.slice!(-1)\n \
    \ txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  ", "  txt.downcase!\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \".\"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \",\"\n  txt.slice!(-1) if txt.slice!(-1) == \"-\"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \"(\"\n  txt.slice!(-1) if txt.slice!(-1) == \")\"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \":\"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(", "  txt.split(\" \").each do |word|\n    return false if word[word.length-1].upcase\
    \ == word[word.length-1]\n  end\n  true\nend", "  txt.downcase!\n  txt.split.each\
    \ do |word|\n    word.split.each do |letter|\n      return false if letter.include?(txt[-1])\n\
    \    end\n  end\n  true\nend", "  txt.downcase!\n  txt.slice!(0..-2).downcase!\n\
    \  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n\
    \  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n\
    \  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n\
    \  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n\
    \  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n\
    \  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n\
    \  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n\
    \  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n\
    \  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n\
    \  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n\
    \  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n\
    \  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase!\n\
    \  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).downcase", "  txt.downcase!\n\
    \  txt.slice!(-1) # remove last character\n  txt.split(\" \").each do |word|\n\
    \    word.downcase!\n    word.slice!(-1) # remove last character\n    return false\
    \ if word.include?(txt[-1])\n  end\n  true\nend", "  txt.downcase!\n  txt.split.each\
    \ do |word|\n    word.split.each do |char|\n      return false if char.upcase\
    \ == char\n    end\n  end\n  true\nend", "  txt.chars.last.upcase!\n  txt.chars.last.empty?\
    \ && txt.chars.last.nil? ? false : true\nend", "  txt.downcase!\n  txt.split(\"\
    \ \").each do |word|\n    word.downcase!\n    return false if word.include?(txt[-1])\n\
    \  end\n  true\nend", "  txt.downcase!\n  txt.split.each do |word|\n    word.split.each\
    \ do |letter|\n      return false if letter.upcase == letter\n    end\n  end\n\
    \  true\nend", "  txt.slice!(-1)\n  txt.slice!(txt.rindex(\"-\"))\n  txt.slice!(txt.rindex(\"\
    \ \"))\n  txt.slice!(txt.rindex(\",\"))\n  txt.slice!(txt.rindex(\".\"))\n  txt.slice!(txt.rindex(\"\
    !\"))\n  txt.slice!(txt.rindex(\"?\"))\n  txt.slice!(txt.rindex(\";\"))\n  txt.slice!(txt.rindex(\"\
    :\"))\n  txt.slice!(txt.rindex(\";\"))\n  txt.slice!(txt.rindex(\"=\"))\n  txt.slice!(txt.rindex(\"\
    '\"))\n  txt.slice!(txt.rindex(\"\\\"\"))\n  txt.slice!(txt.rindex(\"'\"))\n \
    \ txt.slice!(txt.rindex(\"\\\"\"))\n  txt.slice!(txt.rindex(\"'\"))\n  txt.slice!(txt.rindex(\"\
    \\\"\"))\n  txt.slice!(txt.rindex(\"'\"))\n  txt.slice!(txt.rindex(\"\\\"\"))\n\
    \  txt.slice!(txt.rindex(\"'\"))\n  txt.slice!(txt.rindex(\"\\\"\"))\n  txt.slice!(txt.rindex(\"\
    '\"))\n  txt.slice!(txt.rindex(\"\\\"\"))\n  txt.slice!(txt.rindex(\"'\"))\n \
    \ txt.slice!(txt.rindex(\"\\\"\"))\n  txt.slice!(txt.rindex(\"'\"))\n  txt.slice!(txt.rindex(\"\
    \\\"\"))\n  txt.slice!(txt.rindex(\"'\"))\n  txt.slice!(txt.rindex(\"\\\"\"))\n\
    \  txt.slice!(txt.rindex(\"'\"))\n  txt.slice!(txt.rindex(\"\\\"\"))\n  txt.slice!(txt.rindex(\"\
    '\"))\n  txt.slice!(txt.rindex(\"\\\"\"))\n  txt.slice!(txt.rindex(\"'\"))\n \
    \ txt.slice!(txt.rindex(\"\\\"\"))\n  txt.slice!(txt.rindex(\"'\"))\n  txt.slice!(txt.rindex(\"\
    \\\"\"))\n  txt.slice!(txt.rindex(\"'\"))\n  txt.slice!(txt.rindex(\"\\\"\"))\n\
    \  txt.slice!(txt.rindex(\"'\"))\n  ", "  txt.slice!(-1)\n  txt.slice!(-1)\n \
    \ txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  ", "  txt.chars.last.upcase!\n  txt.chars.last.empty?\nend",
  "  txt.downcase!\n  txt.split(\" \").each do |word|\n    word.downcase!\n    return\
    \ false if word.empty?\n    return true if word[-1] != word[word.length-1]\n \
    \ end\n  true\nend", "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n \
    \ txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  ", "  txt.downcase!\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char", "  txt.downcase!\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n\
    \  txt.slice!(0..-1)\n  txt.slice!(0..-1)\n  ", "  txt.split(\" \").each do |word|\n\
    \    word.split(\"\").each do |letter|\n      return false if letter == word[word.length-1]\n\
    \    end\n  end\n  return true\nend", "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  ", "  txt.slice!(-1) # Remove last char\n  txt.slice!(-1) # Remove last char\n\
    \  txt.slice!(-1) # Remove last char\n  txt.slice!(-1) # Remove last char\n  txt.slice!(-1)\
    \ # Remove last char\n  txt.slice!(-1) # Remove last char\n  txt.slice!(-1) #\
    \ Remove last char\n  txt.slice!(-1) # Remove last char\n  txt.slice!(-1) # Remove\
    \ last char\n  txt.slice!(-1) # Remove last char\n  txt.slice!(-1) # Remove last\
    \ char\n  txt.slice!(-1) # Remove last char\n  txt.slice!(-1) # Remove last char\n\
    \  txt.slice!(-1) # Remove last char\n  txt.slice!(-1) # Remove last char\n  txt.slice!(-1)\
    \ # Remove last char\n  txt.slice!(-1) # Remove last char\n  txt.slice!(-1) #\
    \ Remove last char\n  txt.slice!(-1) # Remove last char\n  txt.slice!(-1) # Remove\
    \ last char\n  txt.slice!(-1) # Remove last char\n  txt.slice!(-1) # Remove last\
    \ char\n  txt.slice!(-1) # Remove last char\n  txt.slice!(-1) # Remove last char\n\
    \  txt.slice!(-1) # Remove last char\n  txt.slice!(-1) # Remove last char\n  txt.slice!(-1)\
    \ # Remove last char\n  txt.slice!(-1) # Remove last char\n  txt.slice!(-1) #\
    \ Remove last char\n  txt.slice!(-1) # Remove last char\n  txt.slice!(-1) # Remove\
    \ last char\n  txt.slice!(-1) # Remove last char\n  txt.slice!(-1) # Remove last\
    \ char\n  txt.slice!(-1) # Remove last char\n  txt.slice!(-1) # Remove last char\n\
    \  txt.slice!(-1) # Remove last char\n  txt.slice!(-1) # Remove last char\n  txt.slice!(-1)\
    \ # Remove last char\n  txt.slice!(-1) # Remove last char\n  txt.slice!(-1) #\
    \ Remove last char\n  txt.slice!(-1) # Remove last char\n  txt.slice!(-1) # Remove\
    \ last char\n  txt.slice!(-1) # Remove last char\n  txt.slice!(-1) # Remove last\
    \ char\n  txt.slice!(-1) # Remove last char\n  txt.slice!(-1) # Remove last char\n\
    \  txt.slice!(-1", "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  ",
  "  txt.split(\" \").each do |word|\n    return false if word[-1] =~ /[a-z]/\n  end\n\
    \  true\nend", "  txt.slice!(-1) # remove last character\n  txt.downcase!\n  txt.split.each\
    \ do |word|\n    word.split.each do |letter|\n      letter = letter.to_sym\n \
    \     if letter.between?(:a, :z) && !word.end_with?(letter)\n        return false\n\
    \      end\n    end\n  end\n  return true\nend", "  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1", "  txt.downcase!\n\
    \  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n\
    \  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n\
    \  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n\
    \  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n\
    \  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n\
    \  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n\
    \  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n\
    \  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n\
    \  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n\
    \  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n\
    \  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n\
    \  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n\
    \  txt.split!\n  txt.last.downcase!\n  txt.split!\n  txt.last.downcase!\n  txt.split!\n\
    \  txt.last.downcase!\n  txt.split!\n  txt.last", "  txt.downcase!\n  txt.slice!(0..-1)\n\
    \  txt.include?(\" \")\nend", "  txt.split(\" \").each do |word|\n    word.split(\"\
    \ \").each do |letter|\n      letter == word[word.length-1]\n    end\n  end\n\
    end", "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  ",
  "  txt.downcase!\n  txt.split(\" \").each do |word|\n    word.downcase!\n    word.split(\"\
    \").each do |char|\n      char.upcase!\n      if char == txt[-1]\n        return\
    \ false\n      end\n    end\n  end\n  return true\nend", "  txt.split(\" \").each\
    \ do |word|\n    if word[word.length-1].upcase == word[word.length-1]\n      return\
    \ false\n    end\n  end\n  return true\nend", "  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  ", "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  ", "  txt.split(\" \").each do |word|\n    if word[-1] == word[-1][0]\n   \
    \   return false\n    end\n  end\n  return true\nend", "  txt.downcase!\n  txt.split.each\
    \ do |word|\n    word.split.each do |char|\n      return false if char.upcase\
    \ != char\n    end\n  end\n  return true\nend", "  txt.split(\" \").each do |word|\n\
    \    word.split(\"\").each do |letter|\n      return false if letter == word[-1]\n\
    \    end\n  end\n  return true\nend", "  txt.split(\" \").each do |word|\n   \
    \ word.split(\"\").each do |letter|\n      if letter == txt[-1]\n        return\
    \ false\n      end\n    end\n  end\n  return true\nend", "  txt.downcase!\n  txt.slice!(0..-2).each\
    \ do |char|\n    return false if char.upcase == char\n  end\n  true\nend", " \
    \ txt.split(\" \").each do |word|\n    word.split(\"\").each do |letter|\n   \
    \   return false if letter == word[word.length-1]\n    end\n  end\n  return true\n\
    end", "  txt.downcase!\n  txt.strip!\n  txt.slice!(0..-2).downcase!\n  txt.slice!(0..-2).gsub(/[^a-z]/i,\
    \ '')\n  txt.slice!(0..-2).empty?\nend", "  txt.slice!(-1)\n  txt.slice!(0..-2).downcase!\n\
    \  txt.slice!(0..-2).gsub!(/[^a-z]/i, '')\n  txt.slice!(0..-2).empty?\nend", " \
    \ txt.slice!(-1) # remove last character\n  txt.downcase!\n  txt.split.each do\
    \ |word|\n    word.slice!(-1) # remove last character\n    word.downcase!\n  \
    \  word.split.each do |letter|\n      letter == word[-1] ? true : false\n    end\n\
    \  end\nend", "  txt.chars.last.upcase!\n  txt.chars.last.downcase!\n  txt.chars.last.match?(/\\\
    w/)\nend", "  txt.downcase!\n  txt.split.each do |word|\n    word.split.each do\
    \ |char|\n      return false if char.upcase == char\n    end\n  end\n  true\n\
    end", "  txt.downcase!\n  txt.split(\" \").each do |word|\n    return false if\
    \ word.empty?\n    return true if word[word.length-1].upcase == word[word.length-1]\n\
    \  end\n  true\nend", "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  ", "  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1)\
    \ # remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) #\
    \ remove last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove\
    \ last char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last\
    \ char\n  txt.slice!(-1) # remove last char\n  txt.slice!(-1) # remove last char\n\
    \  txt.slice!(-1", "  txt.split(\" \").each do |word|\n    if word[word.length-1].upcase\
    \ == word[word.length-1]\n      return false\n    end\n  end\n  return true\n\
    end", "  txt.downcase!\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice", "  txt.split(\" \").each do |word|\n    word.split(\"\").each\
    \ do |letter|\n      letter == word[word.length-1] && !word.include?(letter)\n\
    \    end\n  end\nend", "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  ", "  txt.chars.last.upcase!\n  txt.chars.last.empty?\nend", "  txt.split(\"\
    \ \").last.include?(txt.last.downcase)\nend", "  txt.slice!(-1) # remove last\
    \ character\n  txt.downcase! # convert to lowercase\n  txt.split(\" \").each do\
    \ |word|\n    word.slice!(-1) # remove last character\n    return false if word.empty?\n\
    \    return true if word[word.length-1].upcase == word[word.length-1]\n  end\n\
    \  true\nend", "  txt.downcase!\n  txt.split(\" \").each do |word|\n    word.downcase!\n\
    \    return false if word.empty?\n    return true if word[-1] != word[0]\n  end\n\
    \  true\nend", "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  ",
  "  txt.downcase!\n  txt.split.each do |word|\n    word.split.each do |letter|\n\
    \      letter == word[word.length-1]\n    end\n  end\nend", "  txt.downcase!\n\
    \  txt.split.each do |word|\n    word.split.each do |char|\n      return false\
    \ if char.upcase == char\n    end\n  end\n  true\nend", "  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  ", "  txt.split(\" \").each do |word|\n    word.split(\"\"\
    ).each do |letter|\n      return false if letter == word[-1]\n    end\n  end\n\
    \  return true\nend", "  txt.split(\" \").each do |word|\n    word.split(\"\"\
    ).each do |char|\n      return false if char.upcase == char\n    end\n  end\n\
    \  true\nend", "  txt.downcase!\n  txt.split!\n  txt.last.match?(/[a-z]/)\nend",
  "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  ", "  txt.chars.last.upcase.include?(txt.chars.last)\n\
    end", "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  ",
  "  txt.downcase!\n  txt.split(\" \").each do |word|\n    word.downcase!\n    return\
    \ false if word.empty?\n    return true if word[word.length-1].upcase == word[word.length-1]\n\
    \  end\n  false\nend", "  txt.downcase!\n  txt.slice!(-1) if txt.empty?\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \".\"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \",\"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \":\"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1)\
    \ if txt.slice!(-1", "  txt.slice!(-1) # remove last character\n  txt.downcase!\n\
    \  txt.split.each do |word|\n    word.split.each do |letter|\n      return false\
    \ if letter.upcase == letter\n    end\n  end\n  true\nend", "  txt.downcase!\n\
    \  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice!(-1)\
    \ == \" \"\n  txt.slice!(-1) if txt.slice!(-1) == \" \"\n  txt.slice!(-1) if txt.slice",
  "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  ", "  txt.downcase!\n\
    \  txt.strip!\n  txt.slice!(0..-2).each do |char|\n    return false if char.upcase\
    \ != char\n  end\n  true\nend", "  txt.chars.last.upcase!\n  txt.chars.last.empty?\n\
    end", "  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  ",
  "  txt.split(\" \").each do |word|\n    return false if word.last.include?(txt.last)\n\
    \  end\n  true\nend", "  txt.chars.last.upcase!\n  txt.chars.last.empty? && txt.chars.last.nil?\n\
    end", "  txt.chars.last.upcase.gsub(/[^A-Za-z]/, \"\").empty?\nend", "  txt.slice!(-1)\
    \ # remove last character\n  txt.empty? || txt.include?(\" \")\nend", "  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n  txt.slice!(-1)\n\
    \  txt.slice!(-1)\n  txt.slice!(-1)\n  ", "  txt.downcase!\n  txt.slice!(-1) if\
    \ txt.empty?\n  txt.slice!(0..-2) if txt.slice!(0..-1).empty?\n  txt.slice!(0..-2).downcase!\n\
    \  txt.slice!(0..-2).include?(\" \")\nend", "  txt.downcase!\n  txt.split(\" \"\
    ).each do |word|\n    return false if word.empty?\n    return true if word[-1]\
    \ =~ /[a-z]/i\n  end\n  false\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

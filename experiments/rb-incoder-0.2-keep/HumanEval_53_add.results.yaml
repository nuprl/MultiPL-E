language: ruby
name: HumanEval_53_add
results:
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  x + y\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_add\n    candidate = method(:add)\n    assert_equal(1, candidate.call(0,\
    \ 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5, candidate.call(2,\
    \ 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12, candidate.call(7,\
    \ 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpystvvsox.ruby

    Started

    .

    Finished in 0.000327014 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3057.97 tests/s, 15289.87 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105
- exit_code: 0
  program: "# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5, 7)\n# 12\n\
    def add(x, y)\n  return x + y\nend\nrequire 'test/unit'\nclass TestHumanEval <\
    \ Test::Unit::TestCase\n  def test_add\n    candidate = method(:add)\n    assert_equal(1,\
    \ candidate.call(0, 1))\n    assert_equal(1, candidate.call(1, 0))\n    assert_equal(5,\
    \ candidate.call(2, 3))\n    assert_equal(12, candidate.call(5, 7))\n    assert_equal(12,\
    \ candidate.call(7, 5))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkcut_82z.ruby

    Started

    .

    Finished in 0.000323226 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    3093.81 tests/s, 15469.05 assertions/s

    '
  stdout: ''
  timestamp: 1659794105

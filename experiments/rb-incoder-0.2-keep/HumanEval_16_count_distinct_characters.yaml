name: HumanEval_16_count_distinct_characters
language: ruby
prompt: "# Given a string, find out how many distinct characters (regardless of case)\
  \ does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n# >>> count_distinct_characters('Jerry')\n\
  # 4\ndef count_distinct_characters(string)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_count_distinct_characters\n\
  \    candidate = method(:count_distinct_characters)\n    assert_equal(0, candidate.call(\"\
  \"))\n    assert_equal(5, candidate.call(\"abcde\"))\n    assert_equal(5, candidate.call(\"\
  abcdecadeCADE\"))\n    assert_equal(1, candidate.call(\"aaaaAAAAaaaa\"))\n    assert_equal(5,\
  \ candidate.call(\"Jerry jERRY JeRRRY\"))\n  end\nend\n"
completions: ["  string.downcase!\n  string.gsub(/[[:upper:]]/, '').length\nend",
  "  string.downcase!\n  string.gsub(/[[:upper:]]/, '')\n  string.gsub(/[[:lower:]]/,\
    \ '')\n  string.count('a')\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i,\
    \ '')\n  string.count('a')\nend\n</code>\n<|/ a tags=ruby,string |>\n<| c |>\n\
    `string.downcase!` doesn't modify the original string. `downcase!` returns a new\
    \ string.\n<|/ c |>\n<| c |>\nThanks, I fixed it.\n<|/ c |>\n<| a dscore=2 |>\n\
    <code>", "  string.downcase!\n  string.gsub(/[[:alpha:]]/, '').length\nend", " \
    \ string.downcase!\n  string.gsub(/[^a-z]/i, '').length\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/i, '')\n  string.count('a')\nend", "  string.downcase!\n\
    \  string.gsub(/[[:upper:]]/, '')\n  string.gsub(/[[:lower:]]/, '')\n  string.count('a')\n\
    end", "  string.downcase!\n  string.gsub(/[[:alpha:]]/, '').length\nend", "  string.downcase!\n\
    \  string.gsub(/[[:alpha:]]/) { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i,\
    \ '')\nend", "  string.downcase!\n  string.gsub(/[^a-z]+/, '').length\nend", " \
    \ string.downcase!\n  string.gsub(/[[:alpha:]]/).uniq.size\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/, '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i,\
    \ '')\n  string.count('a')\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i,\
    \ '')\n    .count\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/, '').length\n\
    end", "  string.downcase!\n  string.gsub(/[[:alpha:]]/) { |c| c.length }\nend",
  "  string.downcase!\n  string.gsub(/[[:alpha:]]/) { |c| c.length }\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/i, '')\n  string.count('a')\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/i, '')\n    .count\nend", "  string.downcase!\n  string.gsub(/[[:upper:]]/,\
    \ '')\n    .gsub(/[[:lower:]]/, '')\n    .count\nend", "  string.downcase!\n \
    \ string.gsub(/[[:alpha:]]/) { |c| c.length }\nend", "  string.split(//).uniq.size\n\
    end", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\n  string.count('a')\n\
    end", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\nend", "  string.downcase!\n\
    \  string.gsub(/[[:alpha:]]/) { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[^a-z]+/,\
    \ '').length\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/) { |c| c.length\
    \ }\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/) { |c| c.ord }.length\n\
    end", "  string.downcase!\n  string.gsub(/[[:alpha:]]/).uniq.size\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/i, '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i,\
    \ '')\n    .count\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\nend",
  "  string.downcase!\n  string.gsub(/[[:alpha:]]/) { |c| c.length }\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/i, '')\nend", "  string.downcase!\n  string.gsub(/[[:upper:]]/,\
    \ '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\n  string.count('a')\n\
    end", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\nend", "  string.downcase!\n\
    \  string.gsub(/[[:alpha:]]/) { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/)\
    \ { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[^a-z]+/, '').length\n\
    end", "  string.downcase!\n  string.gsub(/[[:upper:]]/, '')\n  string.gsub(/[[:lower:]]/,\
    \ '')\n  string.count('a')\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/).length\n\
    end", "  string.downcase!\n  string.gsub(/[[:alpha:]]/) { |c| c.length }\nend",
  "  string.downcase!\n  string.gsub(/[^a-z]/i, '').length\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/i, '')\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i,\
    \ '')\n  string.count('a')\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i,\
    \ '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\n  string.count('a')\n\
    end", "  string.split(//).uniq.size\nend", "  string.split(\"\").uniq.size\nend",
  "  string.downcase!\n  string.gsub(/[[:alpha:]]/) { |c| c.length }\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/, '').length\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/,\
    \ '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '').length\n\
    end", "  string.downcase!\n  string.gsub(/[[:alpha:]]/) { |c| c.length }\nend",
  "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\n  string.count('a')\nend\n</code>\n\
    <|/ a tags=ruby,string |>\n<| c |>\nThe `downcase!` method modifies the string\
    \ in place, so you don't need to assign it to a variable. Also, `gsub` returns\
    \ a new string, which you don't need to assign to a variable. Also, `count` returns\
    \ the number of occurrences, so you don't need to assign it to a variable.\n<|/\
    \ c |>\n<| c |>\nThanks for your comments. I updated my answer to reflect your\
    \ comments.\n<|/ c |>\n<| a tags=ruby,string |>\n<code>", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/i, '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i,\
    \ '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\n  string.count('a')\n\
    end", "  string.downcase!\n  string.gsub(/[^a-z]/i, '').length\nend", "  string.downcase!\n\
    \  string.gsub(/[[:upper:]]/, '')\n  string.gsub(/[[:lower:]]/, '')\n  string.count('a')\n\
    end", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/i, '').length\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/)\
    \ { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\n\
    \  string.count('a')\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/)\
    \ { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\n\
    \  string.count('a')\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\n\
    \  string.count('a')\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '').length\n\
    end", "  string.downcase!\n  string.gsub(/[[:alpha:]]/) { |c| c.length }\nend",
  "  string.downcase!\n  string.gsub(/[^a-z]/i, '').length\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/i, '').length\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/)\
    \ { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\n\
    \  string.count('a')\nend", "  string.downcase!\n  string.gsub(/[[:upper:]]/,\
    \ '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\n  string.count('a')\n\
    end", "  string.downcase!\n  string.gsub(/[[:alpha:]]/).length\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/, '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i,\
    \ '')\n    .size\nend", "  string.downcase!\n  string.gsub(/[[:upper:]]/, '')\n\
    \  string.gsub(/[[:lower:]]/, '')\n  string.count('a')\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/i, '')\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/).uniq.size\n\
    end", "  string.downcase!\n  string.gsub(/[[:alpha:]]/) { |char| char.ord }.length\n\
    end", "  string.downcase!\n  string.gsub(/[^a-z]/, '').length\nend", "  string.downcase!\n\
    \  string.gsub(/[[:alpha:]]/) { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[[:upper:]]/,\
    \ '')\n  string.gsub(/[[:lower:]]/, '')\n  string.gsub(/[^[:alnum:]]/, '')\nend",
  "  string.downcase!\n  string.gsub(/[[:alpha:]]/, '').length\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/i, '').length\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/)\
    \ { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\n\
    end", "  string.downcase!\n  string.gsub(/[^a-z]/, '').length\nend", "  string.downcase!\n\
    \  string.gsub(/[[:upper:]]/, '').length\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/)\
    \ { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[[:upper:]]/, '')\n\
    \  string.gsub(/[[:lower:]]/, '')\n  string.count('a')\nend\n</code>\n<|/ a dscore=2\
    \ |>\n<| a tags=ruby,string |>\n<code>", "  string.downcase!\n  string.gsub(/[^a-z]/i,\
    \ '')\n  string.count('a')\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/)\
    \ { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\n\
    end", "  string.downcase!\n  string.gsub(/[^a-z]+/,'')\n  string.count('a')\n\
    end", "  string.downcase!\n  string.gsub(/[[:upper:]]/, '')\n  string.gsub(/[[:lower:]]/,\
    \ '')\n  string.count('a')\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i,\
    \ '')\n  string.count('a')\nend", "  string.downcase!\n  string.gsub(/[^a-z]+/,\
    \ '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\nend", " \
    \ string.downcase!\n  string.gsub(/[^a-z]/i, '')\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/i, '')\n  string.count('a')\nend", "  string.downcase!\n\
    \  string.gsub(/[[:alpha:]]/) { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/)\
    \ { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/) {\
    \ |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/) { |c|\
    \ c.length }\nend", "  string.downcase!\n  string.gsub(/[^a-z]/, '').length\n\
    end", "  string.downcase!\n  string.gsub(/[^a-z]/, '').length\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/i, '')\n  string.count('a')\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/, '').length\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/)\
    \ { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/).uniq.size\n\
    end", "  string.downcase!\n  string.gsub(/[^a-z]/i, '').length\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/i, '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]/,\
    \ '').length\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/) { |c| c.length\
    \ }\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\n  string.count('a')\n\
    end", "  string.downcase!\n  string.gsub(/[[:upper:]]/, '')\n  string.gsub(/[[:lower:]]/,\
    \ '')\n  string.gsub(/[[:digit:]]/, '')\n  string.gsub(/[[:punct:]]/, '')\n  string.gsub(/[[:space:]]/,\
    \ '')\n  string.gsub(/[[:blank:]]/, '')\n  string.gsub(/[[:punct:]]/, '')\n  string.gsub(/[[:space:]]/,\
    \ '')\n  string.gsub(/[[:digit:]]/, '')\n  string.gsub(/[[:lower:]]/, '')\n  string.gsub(/[[:upper:]]/,\
    \ '')\n  string.gsub(/[[:space:]]/, '')\n  string.gsub(/[[:blank:]]/, '')\n  string.gsub(/[[:punct:]]/,\
    \ '')\n  string.gsub(/[[:space:]]/, '')\n  string.gsub(/[[:digit:]]/, '')\n  string.gsub(/[[:lower:]]/,\
    \ '')\n  string.gsub(/[[:upper:]]/, '')\n  string.gsub(/[[:space:]]/, '')\n  string.gsub(/[[:blank:]]/,\
    \ '')\n  string.gsub(/[[:punct:]]/, '')\n  string.gsub(/[[:space:]]/, '')\n  string.gsub(/[[:digit:]]/,\
    \ '')\n  string.gsub(/[[:lower:]]/, '')\n  string.gsub(/[[:upper:]]/, '')\n  string.gsub(/[[:space:]]/,\
    \ '')\n  string.gsub(/[[:blank:]]/, '')\n  string.gsub(/[[:punct:]]/, '')\n  string.gsub(/[[:space:]]/,\
    \ '')\n  string.gsub(/[[:digit:]]/, '')\n  string.gsub(/[[:lower:]]/, '')\n  string.gsub(/[[:upper:]]/,\
    \ '')\n  string.gsub(/[[:space:]]/, '')\n  string.gsub(/[[:blank:]]/, '')\n  string.gsub(/[[:punct:]]/,\
    \ '')\n  string.gsub(/[[:space:]]/, '')\n  string.gsub(/[[:digit:]]/, '')\n  string.gsub(/[[:lower:]]/,\
    \ '')\n  string.gsub(/[", "  string.downcase!\n  string.gsub(/[[:upper:]]/, '').length\n\
    end", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\nend", "  string.downcase!\n\
    \  string.gsub(/[[:alpha:]]/) { |char| char.ord }.uniq.size\nend", "  string.downcase!\n\
    \  string.gsub(/[[:alpha:]]/) { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[[:upper:]]/,\
    \ '')\n  string.gsub(/[[:lower:]]/, '')\n  string.count('a')\nend", "  string.downcase!\n\
    \  string.gsub(/[[:upper:]]/, '')\n  string.gsub(/[[:lower:]]/, '')\n  string.count('a')\n\
    end\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/i, '').length\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/)\
    \ { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[[:upper:]]/, '')\n\
    \  string.gsub(/[[:lower:]]/, '')\n  string.gsub(/[^[:alpha:]]/, '')\nend", " \
    \ string.downcase!\n  string.gsub(/[[:upper:]]/, '')\n  string.gsub(/[[:lower:]]/,\
    \ '')\n  string.count('a')\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i,\
    \ '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '').length\n\
    end", "  string.downcase!\n  string.gsub(/[[:alpha:]]/, '').length\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/i, '').length\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/)\
    \ { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\n\
    end", "  string.downcase!\n  string.gsub(/[[:upper:]]/, '')\n  string.gsub(/[[:lower:]]/,\
    \ '')\n  string.count('a')\nend", "  string.downcase!\n  string.gsub(/[^a-z]/,\
    \ '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\nend", " \
    \ string.downcase!\n  string.gsub(/[[:upper:]]/, '').length\nend", "  string.downcase!\n\
    \  string.gsub(/[[:alpha:]]/) { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[[:upper:]]/,\
    \ '')\n  string.gsub(/[[:lower:]]/, '')\n  string.gsub(/[[:digit:]]/, '')\n  string.gsub(/[[:punct:]]/,\
    \ '')\n  string.gsub(/[[:space:]]/, '')\n  string.gsub(/[[:alpha:]]/, '')\n  string.gsub(/[[:punct:]]/,\
    \ '')\n  string.gsub(/[[:space:]]/, '')\n  string.gsub(/[[:digit:]]/, '')\n  string.gsub(/[[:lower:]]/,\
    \ '')\n  string.gsub(/[[:upper:]]/, '')\n  string.gsub(/[[:alpha:]]/, '')\n  string.gsub(/[[:space:]]/,\
    \ '')\n  string.gsub(/[[:digit:]]/, '')\n  string.gsub(/[[:punct:]]/, '')\n  string.gsub(/[[:space:]]/,\
    \ '')\n  string.gsub(/[[:alpha:]]/, '')\n  string.gsub(/[[:space:]]/, '')\n  string.gsub(/[[:digit:]]/,\
    \ '')\n  string.gsub(/[[:punct:]]/, '')\n  string.gsub(/[[:space:]]/, '')\n  string.gsub(/[[:alpha:]]/,\
    \ '')\n  string.gsub(/[[:space:]]/, '')\n  string.gsub(/[[:digit:]]/, '')\n  string.gsub(/[[:punct:]]/,\
    \ '')\n  string.gsub(/[[:space:]]/, '')\n  string.gsub(/[[:alpha:]]/, '')\n  string.gsub(/[[:space:]]/,\
    \ '')\n  string.gsub(/[[:digit:]]/, '')\n  string.gsub(/[[:punct:]]/, '')\n  string.gsub(/[[:space:]]/,\
    \ '')\n  string.gsub(/[[:alpha:]]/, '')\n  string.gsub(/[[:space:]]/, '')\n  string.gsub(/[[:digit:]]/,\
    \ '')\n  string.gsub(/[[:punct:]]/, '')\n  string.gsub(/[[:space:]]/, '')\n  string.gsub(/[[:alpha:]]/,\
    \ '')\n  string.gsub(/[[:space:]]/, '')\n  string.gsub(/", "  string.downcase!\n\
    \  string.gsub(/[[:alpha:]]/) { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i,\
    \ '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '').length\n\
    end", "  string.downcase!\n  string.gsub(/[[:alpha:]]/) { |c| c.length }\nend",
  "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\nend", "  string.downcase!\n \
    \ string.gsub(/[^a-z]/i, '')\n  string.count('a')\nend\n</code>\n<|/ a tags=ruby,string\
    \ |>\n<| a tags=ruby,string |>\n<code>", "  string.downcase!\n  string.gsub(/[^a-z]/,\
    \ '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '').length\n\
    end", "  string.downcase!\n  string.gsub(/[^a-z]+/, '').length\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/i, '').length\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/,\
    \ '').length\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/).uniq.size\n\
    end", "  string.downcase!\n  string.gsub(/[[:upper:]]/, '').length\nend", "  string.downcase!\n\
    \  string.gsub(/[[:alpha:]]/) { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i,\
    \ '')\n  string.count('a')\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i,\
    \ '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]+/, '').length\n\
    end", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\nend", "  string.downcase!\n\
    \  string.gsub(/[[:alpha:]]/) { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i,\
    \ '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\n  string.count('a')\n\
    end", "  string.downcase!\n  string.gsub(/[[:upper:]]/, '').length\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/i, '').length\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/,\
    \ '')\n  string.count('a')\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/,\
    \ '')\n  string.count('a')\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/)\
    \ { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[^a-z]+/, '').length\n\
    end", "  string.downcase!\n  string.gsub(/[^a-z]/, '').length\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/i, '')\nend", "  string.downcase!\n  string.gsub(/[^a-z]/,\
    \ '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '').length\n\
    end", "  string.downcase!\n  string.gsub(/[[:alpha:]]/) { |c| c.length }\nend",
  "  string.downcase!\n  string.gsub(/[^a-z]/i, '').length\nend", "  string.downcase!\n\
    \  string.gsub(/[[:upper:]]/, '')\n  string.gsub(/[[:lower:]]/, '')\n  string.count('a')\n\
    end", "  string.downcase!\n  string.gsub(/[^a-z]/i, '').length\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/i, '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]/,\
    \ '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '').length\n\
    end", "  string.downcase!\n  string.gsub(/[^a-z]/i, '').length\nend", "  string.downcase!\n\
    \  string.gsub(/[[:upper:]]/, '')\n  string.gsub(/[[:lower:]]/, '')\n  string.count('a')\n\
    end\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>", "  string.downcase!\n  string.gsub(/[^a-z]/,\
    \ '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '').length\n\
    end", "  string.downcase!\n  string.gsub(/[^a-z]/i, '').length\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/, '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]+/,\
    \ '').length\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/) { |c| c.length\
    \ }\nend", "  string.split(//).uniq.size\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i,\
    \ '').length\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/) { |c| c.length\
    \ }\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\nend", "  string.downcase!\n\
    \  string.gsub(/[^a-z]/i, '')\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i,\
    \ '').length\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '')\n  string.count('a')\n\
    end", "  string.split(//).uniq.size\nend", "  string.downcase!\n  string.gsub(/[[:alpha:]]/)\
    \ { |c| c.length }\nend", "  string.downcase!\n  string.gsub(/[^a-z]/i, '').length\n\
    end", "  string.downcase!\n  string.gsub(/[^a-z]/i, '').length\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

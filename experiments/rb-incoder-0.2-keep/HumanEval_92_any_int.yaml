name: HumanEval_92_any_int
language: ruby
prompt: "# Create a function that takes 3 numbers.\n# Returns true if one of the numbers\
  \ is equal to the sum of the other two, and all numbers are integers.\n# Returns\
  \ false in any other cases.\n# Examples\n# any_int(5, 2, 7) \u279E True\n# any_int(3,\
  \ 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E True\n# any_int(3.6, -2.2, 2) \u279E\
  \ False\ndef any_int(x, y, z)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_any_int\n\
  \    candidate = method(:any_int)\n    assert_equal(true, candidate.call(2, 3, 1))\n\
  \    assert_equal(false, candidate.call(2.5, 2, 3))\n    assert_equal(false, candidate.call(1.5,\
  \ 5, 3.5))\n    assert_equal(false, candidate.call(2, 6, 2))\n    assert_equal(true,\
  \ candidate.call(4, 2, 2))\n    assert_equal(false, candidate.call(2.2, 2.2, 2.2))\n\
  \    assert_equal(true, candidate.call(-4, 6, 2))\n    assert_equal(true, candidate.call(2,\
  \ 1, 1))\n    assert_equal(true, candidate.call(3, 4, 7))\n    assert_equal(false,\
  \ candidate.call(3.0, 4, 7))\n  end\nend\n"
completions: ["  if x.to_i == y.to_i && y.to_i == z.to_i\n    return true\n  else\n\
    \    return false\n  end\nend", "  x == y || x == z || y == z\nend", "  x == y\
    \ || x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  x == y ||\
    \ x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  if x.to_i ==\
    \ y.to_i && y.to_i == z.to_i\n    return true\n  else\n    return false\n  end\n\
    end", "  if x.is_a? Integer and y.is_a? Integer and z.is_a? Integer\n    return\
    \ x == y || x == z || y == z\n  else\n    return false\n  end\nend", "  if x.is_a?\
    \ Integer && y.is_a? Integer && z.is_a? Integer\n    return true if x + y == z\n\
    \  else\n    return false\n  end\nend", "  x == y || x == z || y == z\nend", " \
    \ if x.to_i == y.to_i && y.to_i == z.to_i\n    true\n  else\n    false\n  end\n\
    end", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    return true\n  else\n  \
    \  return false\n  end\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n   \
    \ true\n  else\n    false\n  end\nend", "  if x.is_a? Integer && y.is_a? Integer\
    \ && z.is_a? Integer\n    return true if x == y || x == z || y == z\n  end\n \
    \ return false\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    return true\n\
    \  else\n    return false\n  end\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n\
    \    return true\n  else\n    return false\n  end\nend", "  x == y || x == z ||\
    \ y == z\nend", "  x == y || x == z || y == z\nend", "  if x.to_i == y.to_i &&\
    \ y.to_i == z.to_i\n    true\n  else\n    false\n  end\nend", "  x == y || x ==\
    \ z || y == z\nend", "  x == y || x == z || y == z\nend", "  if x.to_i == y.to_i\
    \ && y.to_i == z.to_i\n    return true\n  else\n    return false\n  end\nend",
  "  x == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  x ==\
    \ y || x == z || y == z\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n  \
    \  return true\n  else\n    return false\n  end\nend", "  if x.to_i == y.to_i\
    \ && y.to_i == z.to_i\n    return true\n  else\n    return false\n  end\nend",
  "  x == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  if\
    \ x.to_i == y.to_i && y.to_i == z.to_i\n    true\n  else\n    false\n  end\nend",
  "  if x.to_i == y.to_i && y.to_i == z.to_i\n    return true\n  else\n    return\
    \ false\n  end\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    true\n \
    \ else\n    false\n  end\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n \
    \   true\n  else\n    false\n  end\nend", "  x == y || x == z || y == z\nend",
  "  x == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  if\
    \ x.to_i == y.to_i && y.to_i == z.to_i\n    true\n  else\n    false\n  end\nend",
  "  if x.to_i == y.to_i && y.to_i == z.to_i\n    return true\n  else\n    return\
    \ false\n  end\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    return true\n\
    \  else\n    return false\n  end\nend", "  x == y || x == z || y == z\nend", " \
    \ if x.is_a? Integer && y.is_a? Integer && z.is_a? Integer\n    return x.to_i\
    \ == y.to_i + z.to_i\n  else\n    return false\n  end\nend", "  if x.to_i == y.to_i\
    \ && y.to_i == z.to_i\n    return true\n  else\n    return false\n  end\nend",
  "  if x.to_i == y.to_i && y.to_i == z.to_i\n    return true\n  else\n    return\
    \ false\n  end\nend", "  x == y || x == z || y == z\nend", "  x == y || x == z\
    \ || y == z\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    return true\n\
    \  else\n    return false\n  end\nend", "  x == y || x == z || y == z\nend", " \
    \ if x.to_i == y.to_i && y.to_i == z.to_i\n    true\n  else\n    false\n  end\n\
    end", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    return true\n  else\n  \
    \  return false\n  end\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n   \
    \ true\n  else\n    false\n  end\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n\
    \    return true\n  else\n    return false\n  end\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't work. Try it with `any_int(3.6, -2.2, 2)`.\n<|/ c\
    \ |>\n<| c |>\nI fixed the issue. Thanks for pointing it out!\n<|/ c |>\n<| a\
    \ dscore=0 |>\n<code>", "  x == y || x == z || y == z\nend", "  x == y || x ==\
    \ z || y == z\nend", "  x == y || x == z || y == z\nend", "  x == y || x == z\
    \ || y == z\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    true\n  else\n\
    \    false\n  end\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    return\
    \ true\n  else\n    return false\n  end\nend", "  x == y || x == z || y == z\n\
    end", "  x == y || x == z || y == z\nend", "  if x.to_i == y.to_i && y.to_i ==\
    \ z.to_i\n    true\n  else\n    false\n  end\nend", "  x == y || x == z || y ==\
    \ z\nend", "  x == y || x == z || y == z\nend", "  if x.to_i == y.to_i && y.to_i\
    \ == z.to_i\n    return true\n  else\n    return false\n  end\nend", "  x == y\
    \ || x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  x == y ||\
    \ x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  x == y || x\
    \ == z || y == z\nend", "  x == y || x == z || y == z\nend", "  x == y || x ==\
    \ z || y == z\nend", "  x == y || x == z || y == z\nend", "  if x.is_a? Integer\
    \ && y.is_a? Integer && z.is_a? Integer\n    return x == y || x == z || y == z\n\
    \  else\n    return false\n  end\nend", "  x == y || x == z || y == z\nend", " \
    \ x == y || x == z || y == z\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n\
    \    true\n  else\n    false\n  end\nend", "  x == y || x == z || y == z\nend",
  "  x == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  if\
    \ x.to_i == y.to_i && y.to_i == z.to_i\n    true\n  else\n    false\n  end\nend",
  "  x == y || x == z || y == z\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n\
    \    true\n  else\n    false\n  end\nend", "  x == y || x == z || y == z\nend",
  "  if x.is_a? Integer && y.is_a? Integer && z.is_a? Integer\n    return x == y ||\
    \ x == z || y == z\n  else\n    return false\n  end\nend", "  if x.to_i == y.to_i\
    \ && y.to_i == z.to_i\n    true\n  else\n    false\n  end\nend", "  if x.to_i\
    \ == y.to_i && y.to_i == z.to_i\n    true\n  else\n    false\n  end\nend", " \
    \ if x.to_i == y.to_i && y.to_i == z.to_i\n    return true\n  else\n    return\
    \ false\n  end\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    return true\n\
    \  else\n    return false\n  end\nend", "  if x.is_a? Integer && y.is_a? Integer\
    \ && z.is_a? Integer\n    x + y == z\n  else\n    false\n  end\nend", "  x ==\
    \ y || x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  x == y\
    \ || x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  x == y ||\
    \ x == z || y == z\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    return\
    \ true\n  else\n    return false\n  end\nend", "  x == y || x == z || y == z\n\
    end", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    return true\n  else\n  \
    \  return false\n  end\nend", "  if x.is_a? Integer && y.is_a? Integer && z.is_a?\
    \ Integer\n    return true if x == y || x == z || y == z\n  end\n  return false\n\
    end", "  x == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend",
  "  if x.is_a? Integer and y.is_a? Integer and z.is_a? Integer\n    return true if\
    \ x + y == z\n  else\n    return false\n  end\nend", "  x == y || x == z || y\
    \ == z\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    true\n  else\n \
    \   false\n  end\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    true\n\
    \  else\n    false\n  end\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n\
    \    true\n  else\n    false\n  end\nend", "  if x.to_i == y.to_i && y.to_i ==\
    \ z.to_i\n    return true\n  else\n    return false\n  end\nend\n</cell>\n<cell>",
  "  if x.to_i == y.to_i && y.to_i == z.to_i\n    true\n  else\n    false\n  end\n\
    end", "  x == y || x == z || y == z\nend", "  if x.is_a? Integer && y.is_a? Integer\
    \ && z.is_a? Integer\n    return x == y || x == z || y == z\n  else\n    return\
    \ false\n  end\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    true\n \
    \ else\n    false\n  end\nend", "  x == y || x == z || y == z\nend", "  x == y\
    \ || x == z || y == z\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    return\
    \ true\n  else\n    return false\n  end\nend", "  x == y || x == z || y == z\n\
    end", "  x == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend",
  "  if x.is_a? Integer && y.is_a? Integer && z.is_a? Integer\n    return x == y ||\
    \ x == z || y == z\n  else\n    return false\n  end\nend", "  x == y || x == z\
    \ || y == z\nend", "  x == y || x == z || y == z\nend", "  if x.to_i == y.to_i\
    \ && y.to_i == z.to_i\n    true\n  else\n    false\n  end\nend", "  x == y ||\
    \ x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  x == y || x\
    \ == z || y == z\nend", "  x == y || x == z || y == z\nend", "  x == y || x ==\
    \ z || y == z\nend", "  x == y || x == z || y == z\nend", "  if x.to_i == y.to_i\
    \ && y.to_i == z.to_i\n    true\n  else\n    false\n  end\nend", "  x == y ||\
    \ x == z || y == z\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    return\
    \ true\n  else\n    return false\n  end\nend", "  x == y || x == z || y == z\n\
    end", "  x == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend",
  "  if x.to_i == y.to_i && y.to_i == z.to_i\n    true\n  else\n    false\n  end\n\
    end", "  x == y || x == z || y == z\nend", "  if x.to_i == y.to_i && y.to_i ==\
    \ z.to_i\n    return true\n  else\n    return false\n  end\nend", "  if x.to_i\
    \ == y.to_i && y.to_i == z.to_i\n    return true\n  else\n    return false\n \
    \ end\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    return true\n  else\n\
    \    return false\n  end\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n \
    \   true\n  else\n    false\n  end\nend", "  if x.to_i == y.to_i && y.to_i ==\
    \ z.to_i\n    return true\n  else\n    return false\n  end\nend", "  x == y ||\
    \ x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  x == y || x\
    \ == z || y == z\nend", "  x == y || x == z || y == z\nend", "  if x.is_a? Integer\
    \ && y.is_a? Integer && z.is_a? Integer\n    return x != y && x != z && y != z\
    \ && x.to_i == y.to_i && x.to_i == z.to_i\n  else\n    return false\n  end\nend",
  "  x == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  if\
    \ x.to_i == y.to_i && y.to_i == z.to_i\n    return true\n  else\n    return false\n\
    \  end\nend", "  if x.is_a? Integer && y.is_a? Integer && z.is_a? Integer\n  \
    \  return x == y || x == z || y == z\n  else\n    return false\n  end\nend", " \
    \ x == y || x == z || y == z\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n\
    \    return true\n  else\n    return false\n  end\nend\n</cell>\n<cell>", "  x\
    \ == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  x ==\
    \ y || x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  x == y\
    \ || x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  x == y ||\
    \ x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  if x.to_i ==\
    \ y.to_i && y.to_i == z.to_i\n    return true\n  else\n    return false\n  end\n\
    end", "  x == y || x == z || y == z\nend", "  if x.to_i == y.to_i && y.to_i ==\
    \ z.to_i\n    true\n  else\n    false\n  end\nend", "  x == y || x == z || y ==\
    \ z\nend", "  x == y || x == z || y == z\nend", "  if x.to_i == y.to_i && y.to_i\
    \ == z.to_i\n    true\n  else\n    false\n  end\nend", "  if x.to_i == y.to_i\
    \ && y.to_i == z.to_i\n    return true\n  else\n    return false\n  end\nend",
  "  x == y || x == z || y == z\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n\
    \    return true\n  else\n    return false\n  end\nend\n</code>\n<|/ a |>\n<|\
    \ c |>\nThis doesn't work. `any_int(3.6, -2.2, 2)` returns true.\n<|/ c |>\n<|\
    \ c |>\nThanks for catching that. I've updated the answer to fix it.\n<|/ c |>\n\
    <| a tags=ruby,ruby-on-rails,ruby-on-rails-4 |>\n<code>", "  x == y || x == z\
    \ || y == z\nend", "  x == y || x == z || y == z\nend", "  if x.to_i == y.to_i\
    \ && y.to_i == z.to_i\n    true\n  else\n    false\n  end\nend", "  if x.is_a?\
    \ Integer && y.is_a? Integer && z.is_a? Integer\n    return x == y || x == z ||\
    \ y == z\n  else\n    return false\n  end\nend", "  x == y || x == z || y == z\n\
    end", "  x == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend",
  "  if x.to_i == y.to_i && y.to_i == z.to_i\n    true\n  else\n    false\n  end\n\
    end", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    return true\n  else\n  \
    \  return false\n  end\nend", "  x == y || x == z || y == z\nend", "  x == y ||\
    \ x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  if x.to_i ==\
    \ y.to_i && y.to_i == z.to_i\n    return true\n  else\n    return false\n  end\n\
    end", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    true\n  else\n    false\n\
    \  end\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    return true\n  else\n\
    \    return false\n  end\nend", "  x == y || x == z || y == z\nend", "  x == y\
    \ || x == z || y == z\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n    true\n\
    \  else\n    false\n  end\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n\
    \    true\n  else\n    false\n  end\nend", "  x == y || x == z || y == z\nend",
  "  x == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  if\
    \ x.to_i == y.to_i && y.to_i == z.to_i\n    true\n  else\n    false\n  end\nend",
  "  x == y || x == z || y == z\nend", "  if x.to_i == y.to_i && y.to_i == z.to_i\n\
    \    return true\n  else\n    return false\n  end\nend", "  x == y || x == z ||\
    \ y == z\nend", "  x == y || x == z || y == z\nend", "  if x.to_i == y.to_i &&\
    \ y.to_i == z.to_i\n    return true\n  else\n    return false\n  end\nend", " \
    \ if x.to_i == y.to_i && y.to_i == z.to_i\n    return true\n  else\n    return\
    \ false\n  end\nend", "  x == y || x == z || y == z\nend", "  if x.to_i == y.to_i\
    \ && y.to_i == z.to_i\n    return true\n  else\n    return false\n  end\nend",
  "  x == y || x == z || y == z\nend", "  x == y || x == z || y == z\nend", "  if\
    \ x.is_a? Integer && y.is_a? Integer && z.is_a? Integer\n    return x == y ||\
    \ x == z || y == z\n  else\n    return false\n  end\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_153_Strongest_Extension
language: ruby
prompt: "# You will be given the name of a class (a string) and a list of extensions.\n\
  # The extensions are to be used to load additional classes to the class. The\n#\
  \ strength of the extension is as follows: Let CAP be the number of the uppercase\n\
  # letters in the extension's name, and let SM be the number of lowercase letters\
  \ \n# in the extension's name, the strength is given by the fraction CAP - SM. \n\
  # You should find the strongest extension and return a string in this \n# format:\
  \ ClassName.StrongestExtensionName.\n# If there are two or more extensions with\
  \ the same strength, you should\n# choose the one that comes first in the list.\n\
  # For example, if you are given \"Slices\" as the class and a list of the\n# extensions:\
  \ ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n# return 'Slices.SErviNGSliCes'\
  \ since 'SErviNGSliCes' is the strongest extension \n# (its strength is -1).\n#\
  \ Example:\n# for Strongest_Extension('my_class', ['AA', 'Be', 'CC']) == 'my_class.AA'\n\
  def Strongest_Extension(class_name, extensions)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_Strongest_Extension\n\
  \    candidate = method(:Strongest_Extension)\n    assert_equal(\"Watashi.eIGHt8OKe\"\
  , candidate.call(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]))\n    assert_equal(\"\
  Boku123.YEs.WeCaNe\", candidate.call(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\"\
  , \"32145tggg\"]))\n    assert_equal(\"__YESIMHERE.NuLl__\", candidate.call(\"__YESIMHERE\"\
  , [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"]))\n\
  \    assert_equal(\"K.TAR\", candidate.call(\"K\", [\"Ta\", \"TAR\", \"t234An\"\
  , \"cosSo\"]))\n    assert_equal(\"__HAHA.123\", candidate.call(\"__HAHA\", [\"\
  Tab\", \"123\", \"781345\", \"-_-\"]))\n    assert_equal(\"YameRore.okIWILL123\"\
  , candidate.call(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\"\
  , \"-_-\"]))\n    assert_equal(\"finNNalLLly.WoW\", candidate.call(\"finNNalLLly\"\
  , [\"Die\", \"NowW\", \"Wow\", \"WoW\"]))\n    assert_equal(\"_.Bb\", candidate.call(\"\
  _\", [\"Bb\", \"91245\"]))\n    assert_equal(\"Sp.671235\", candidate.call(\"Sp\"\
  , [\"671235\", \"Bb\"]))\n  end\nend\n"
completions: ["  extensions_count = extensions.length\n  extensions_count.times do\
    \ |i|\n    extension = extensions[i]\n    extension_count = extension.length\n\
    \    extension_count.times do |j|\n      letter = extension[j]\n      letter_count\
    \ = letter.length\n      letter_count.times do |k|\n        letter = letter[k]\n\
    \        letter_count = letter_count.to_i\n        letter_count.times do |l|\n\
    \          letter = letter[l]\n          letter_count = letter_count.to_i\n  \
    \        letter_count.times do |m|\n            letter = letter[m]\n         \
    \   letter_count = letter_count.to_i\n            letter_count.times do |n|\n\
    \              letter = letter[n]\n              letter_count = letter_count.to_i\n\
    \              letter_count.times do |o|\n                letter = letter[o]\n\
    \                letter_count = letter_count.to_i\n                letter_count.times\
    \ do |p|\n                  letter = letter[p]\n                  letter_count\
    \ = letter_count.to_i\n                  letter_count.times do |q|\n         \
    \           letter = letter[q]\n                    letter_count = letter_count.to_i\n\
    \                    letter_count.times do |r|\n                      letter =\
    \ letter[r]\n                      letter_count = letter_count.to_i\n        \
    \              letter_count.times do |s|\n                        letter = letter[s]\n\
    \                        letter_count = letter_count.to_i\n                  \
    \      letter_count.times do |t|\n                          letter = letter[t]\n\
    \                          letter_count = letter_count.to_i\n                \
    \          letter_count.times do |u|\n                            letter = letter[u]\n\
    \                            letter_count = letter_count.to_i\n              \
    \              letter_count.times do |v|\n                              letter\
    \ = letter[v]\n                              letter_count = letter_count.to_i\n\
    \                              letter_count.times do |w|\n                   \
    \             letter = letter[w]\n                                letter_count\
    \ = letter_count.to_i\n                                letter_count.times do |x|\n\
    \                                  letter = letter[x]\n                      \
    \            letter_count = letter_count.to_i\n                              \
    \    letter_count.times do |y|\n                                    letter = letter[y]\n\
    \                                    letter_count = letter_count.to_i\n      \
    \                              letter_count.times do |z|\n                   \
    \                   letter = letter[z]\n                                     \
    \ letter_count = letter_count.to_i\n                                      letter_count.times\
    \ do |aa|\n                                        letter = letter[aa]\n     \
    \                                   letter_count = letter_count.to_i\n       \
    \                                 letter_count.times do |ab|\n               \
    \                           letter = letter[ab]\n                            \
    \              letter_count = letter_count.to_i\n                            \
    \              letter_count.times do |ac|\n                                  \
    \          letter = letter[ac]\n                                            letter_count\
    \ = letter_count.to_i\n                                            letter_count.times\
    \ do |ad|\n                                              letter = letter[ad]\n\
    \                                              letter_count = letter_count.to_",
  "  extension_strengths = []\n  extension_strengths_sorted = []\n  extensions.each\
    \ do |extension|\n    extension_strength = extension.split(//).map { |e| e.upcase\
    \ - e.downcase }.max\n    extension_strengths << extension_strength\n    extension_strengths_sorted\
    \ << extension_strength\n  end\n  extension_strengths_sorted.sort!\n  extension_strengths_sorted.reverse!\n\
    \  extension_strengths_sorted.each do |strength|\n    if strength == -1\n    \
    \  return class_name\n    end\n  end\nend", "  extensions_count = extensions.length\n\
    \  extensions_count = extensions_count.to_i\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_class_name = extension.capitalize\n\
    \    extension_class_name = extension_class_name.gsub(/[^A-Z]/, '')\n    extension_class_name\
    \ = extension_class_name.gsub(/[A-Z]/, '').downcase\n    extension_class_name\
    \ = extension_class_name.gsub(/[[:space:]]/, '')\n    extension_class_name = extension_class_name.gsub(/[[:punct:]]/,\
    \ '')\n    extension_class_name = extension_class_name.gsub(/[[:cntrl:]]/, '')\n\
    \    extension_class_name = extension_class_name.gsub(/[[:upper:]]/, '')\n   \
    \ extension_class_name = extension_class_name.gsub(/[[:lower:]]/, '')\n    extension_class_name\
    \ = extension_class_name.gsub(/[[:digit:]]/, '')\n    extension_class_name = extension_class_name.gsub(/[[:xdigit:]]/,\
    \ '')\n    extension_class_name = extension_class_name.gsub(/[[:punct:]]/, '')\n\
    \    extension_class_name = extension_class_name.gsub(/[[:space:]]/, '')\n   \
    \ extension_class_name = extension_class_name.gsub(/[[:cntrl:]]/, '')\n    extension_class_name\
    \ = extension_class_name.gsub(/[[:upper:]]/, '')\n    extension_class_name = extension_class_name.gsub(/[[:lower:]]/,\
    \ '')\n    extension_class_name = extension_class_name.gsub(/[[:digit:]]/, '')\n\
    \    extension_class_name = extension_class_name.gsub(/[[:xdigit:]]/, '')\n  \
    \  extension_class_name = extension_class_name.gsub(/[[:punct:]]/, '')\n    extension_class_name\
    \ = extension_class_name.gsub(/[[:space:]]/, '')\n    extension_class_name = extension_class_name.gsub(/[[:cntrl:]]/,\
    \ '')\n    extension_class_name = extension_class_name.gsub(/[[:upper:]]/, '')\n\
    \    extension_class_name = extension_class_name.gsub(/[[:lower:]]/, '')\n   \
    \ extension_class_name = extension_class_name.gsub(/[[:digit:]]/, '')\n    extension_class_name\
    \ = extension_class_name.gsub(/[[:xdigit:]]/, '')\n    extension_class_name =\
    \ extension", "  extension_strengths = Hash.new(0)\n  extensions.each do |extension|\n\
    \    extension_strengths[extension.upcase] += 1\n    extension_strengths[extension.downcase]\
    \ += 1\n  end\n  extension_strengths.max_by { |k, v| v }\nend\n</code>\n<|/ a\
    \ tags=ruby |>\n<| c |>\nThanks for your answer. I am not able to understand how\
    \ this works. Can you please explain it a bit?\n<|/ c |>\n<| c |>\nI added some\
    \ comments to the code. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ I am not able to understand how this works. Can you please explain it a bit?\n\
    <|/ c |>\n<| c |>\nI added some comments to the code. Hope it helps.\n<|/ c |>\n\
    <| c |>\nThanks for your answer. I am not able to understand how this works. Can\
    \ you please explain it a bit?\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  extension_strengths\
    \ = []\n  extensions.each do |extension|\n    extension_strength = extension.count('A')\
    \ - extension.count('a')\n    extension_strength ||= 0\n    extension_strength\
    \ ||= extension.count('C') - extension.count('c')\n    extension_strength ||=\
    \ extension.count('E') - extension.count('e')\n    extension_strength ||= extension.count('I')\
    \ - extension.count('i')\n    extension_strength ||= extension.count('O') - extension.count('o')\n\
    \    extension_strength ||= extension.count('U') - extension.count('u')\n    extension_strength\
    \ ||= extension.count('a') - extension.count('b')\n    extension_strength ||=\
    \ extension.count('c') - extension.count('d')\n    extension_strength ||= extension.count('e')\
    \ - extension.count('f')\n    extension_strength ||= extension.count('i') - extension.count('g')\n\
    \    extension_strength ||= extension.count('o') - extension.count('h')\n    extension_strength\
    \ ||= extension.count('u') - extension.count('j')\n    extension_strength ||=\
    \ extension.count('a') - extension.count('b')\n    extension_strength ||= extension.count('c')\
    \ - extension.count('d')\n    extension_strength ||= extension.count('e') - extension.count('f')\n\
    \    extension_strength ||= extension.count('i') - extension.count('g')\n    extension_strength\
    \ ||= extension.count('o') - extension.count('h')\n    extension_strength ||=\
    \ extension.count('u') - extension.count('j')\n    extension_strength ||= extension.count('a')\
    \ - extension.count('b')\n    extension_strength ||= extension.count('c') - extension.count('d')\n\
    \    extension_strength ||= extension.count('e') - extension.count('f')\n    extension_strength\
    \ ||= extension.count('i') - extension.count('g')\n    extension_strength ||=\
    \ extension.count('o') - extension.count('h')\n    extension_strength ||= extension.count('u')\
    \ - extension.count('j')\n    extension_strength ||= extension.count('a') - extension",
  "  extensions_count = extensions.length\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count -= 1\n      end\n \
    \   end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count -= 1\n      end\n \
    \   end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count -= 1\n      end\n \
    \   end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count -= 1\n      end\n \
    \   end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count -= 1\n      end\n \
    \   end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count -= 1\n      end\n \
    \   end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count -= 1\n      end\n \
    \   end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count -= 1\n      end\n \
    \   end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count -= 1\n      end\n \
    \   end\n  end\n  ", "  extension_strength = extension_strength(extensions)\n\
    \  extension_strength.sort!\n  extension_strength.reverse!\n  extension_strength.first\n\
    end", "  extensions_count = extensions.length\n  extensions_count.times do |i|\n\
    \    extensions_count.times do |j|\n      if i == j\n        extensions_count.times\
    \ do |k|\n          if k == i\n            extensions_count.times do |l|\n   \
    \           if l == i\n                extensions_count.times do |m|\n       \
    \           if m == i\n                    extensions_count.times do |n|\n   \
    \                   if n == i\n                        extensions_count.times\
    \ do |o|\n                          return class_name + '.' + extensions[i] +\
    \ '.' + extensions[j] + '.' + extensions[k] + '.' + extensions[l] + '.' + extensions[m]\
    \ + '.' + extensions[n] + '.' + extensions[o]\n                        end\n \
    \                     end\n                    end\n                  end\n  \
    \              end\n              end\n            end\n          end\n      \
    \  end\n      end\n    end\n  end\nend", "  extensions_count = extensions.length\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_upper\
    \ = extension.upcase\n    extension_lower = extension.downcase\n    extension_strength\
    \ = extension_upper.length - extension_lower.length\n    if extension_strength\
    \ > 0\n      return class_name + '.' + extension\n    end\n  end\nend", "  extension_strength\
    \ = extension_strength_of(class_name, extensions)\n  extension_strength.sort!\n\
    \  extension_strength.first\nend", "  extensions_count = extensions.length\n \
    \ extensions_count = extensions_count.to_i\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_upper = extension.upcase\n    extension_lower\
    \ = extension.downcase\n    extension_strength = extension_upper.length - extension_lower.length\n\
    \    extension_strength = extension_strength.to_i\n    extension_strength = extension_strength\
    \ - 1\n    if extension_strength > 0\n      extension_strength = extension_strength.to_s\n\
    \      extension_strength = extension_strength.upcase\n      extension_strength\
    \ = extension_strength.downcase\n      extension_strength = extension_strength.to_i\n\
    \      extension_strength = extension_strength - 1\n      break\n    end\n  end\n\
    \  extensions_count = extensions_count.to_s\n  extensions_count = extensions_count.upcase\n\
    \  extensions_count = extensions_count.downcase\n  extensions_count = extensions_count.to_i\n\
    \  extensions_count = extensions_count - 1\n  extensions_count = extensions_count.to_s\n\
    \  extensions_count = extensions_count.upcase\n  extensions_count = extensions_count.downcase\n\
    \  extensions_count = extensions_count.to_i\n  extensions_count = extensions_count\
    \ - 1\n  extensions_count = extensions_count.to_s\n  extensions_count = extensions_count.upcase\n\
    \  extensions_count = extensions_count.downcase\n  extensions_count = extensions_count.to_i\n\
    \  extensions_count = extensions_count - 1\n  extensions_count = extensions_count.to_s\n\
    \  extensions_count = extensions_count.upcase\n  extensions_count = extensions_count.downcase\n\
    \  extensions_count = extensions_count.to_i\n  extensions_count = extensions_count\
    \ - 1\n  extensions_count = extensions_count.to_s\n  extensions_count = extensions_count.upcase\n\
    \  extensions_count = extensions_count.downcase\n  extensions_count = extensions_count.to_i\n\
    \  extensions_count = extensions_count - 1\n  extensions_count = extensions_count.to_s\n\
    \  extensions_count = extensions_count.upcase\n  extensions_count = extensions_count.downcase\n\
    \  extensions_count = extensions_count.to_i\n  extensions_count = extensions_count\
    \ - 1\n  extensions_count = extensions_count.to_s\n  extensions_count = extensions_count.upcase\n\
    \  extensions_count = extensions_count.downcase\n  extensions_count = extensions_count.to_i\n\
    \  extensions_count = extensions_count - 1\n  extensions_count = extensions_count.to_s\n\
    \  ", "  extensions_count = extensions.length\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_count = extension.length\n    extension_count.times\
    \ do |j|\n      char = extension[j]\n      char_upper = char.upcase\n      char_lower\
    \ = char.downcase\n      char_strength = char_upper - char_lower\n      char_strength\
    \ = char_strength.to_f\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n      if char_strength > 0\n        char_strength = char_strength.to_i\n\
    \      end\n", "  extension_strengths = Hash.new\n  extensions.each do |extension|\n\
    \    extension_strengths[extension.upcase] = extension_strengths[extension.upcase]\
    \ || 0\n    extension_strengths[extension.downcase] = extension_strengths[extension.downcase]\
    \ || 0\n  end\n  extension_strengths[class_name.upcase] = extension_strengths[class_name.upcase]\
    \ || 0\n  extension_strengths[class_name.downcase] = extension_strengths[class_name.downcase]\
    \ || 0\n  extension_strengths.max_by { |k, v| v }\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails,ruby-on-rails-3\
    \ |>\n<| c |>\nThanks for your answer. I've tried your solution and it works great.\
    \ However I still don't understand why my code doesn't work. Could you please\
    \ explain it to me?\n<|/ c |>\n<| c |>\nI added an explanation to the answer.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>", "  extension_strengths = {}\n  extensions.each\
    \ do |extension|\n    extension_strengths[extension.upcase] = extension_strengths[extension.upcase]\
    \ || 0\n    extension_strengths[extension.downcase] = extension_strengths[extension.downcase]\
    \ || 0\n    extension_strengths[extension.upcase] += 1 \n    extension_strengths[extension.downcase]\
    \ += 1 \n  end\n  extension_strengths.max_by { |k, v| v }\nend\n</code>\n<|/ a\
    \ dscore=1 |>\n<| a dscore=1 |>\n<code>", "  extensions_sorted = extensions.sort\n\
    \  extensions_sorted.reverse!\n  extensions_sorted.each do |extension|\n    extension_class\
    \ = class_name.to_s.split('.').last\n    extension_class = extension_class.split('A').first\n\
    \    extension_class = extension_class.split('B').first\n    extension_class =\
    \ extension_class.split('C').first\n    extension_class = extension_class.split('D').first\n\
    \    extension_class = extension_class.split('E').first\n    extension_class =\
    \ extension_class.split('F').first\n    extension_class = extension_class.split('G').first\n\
    \    extension_class = extension_class.split('H').first\n    extension_class =\
    \ extension_class.split('I').first\n    extension_class = extension_class.split('J').first\n\
    \    extension_class = extension_class.split('K').first\n    extension_class =\
    \ extension_class.split('L').first\n    extension_class = extension_class.split('M').first\n\
    \    extension_class = extension_class.split('N').first\n    extension_class =\
    \ extension_class.split('O').first\n    extension_class = extension_class.split('P').first\n\
    \    extension_class = extension_class.split('Q').first\n    extension_class =\
    \ extension_class.split('R').first\n    extension_class = extension_class.split('S').first\n\
    \    extension_class = extension_class.split('T').first\n    extension_class =\
    \ extension_class.split('U').first\n    extension_class = extension_class.split('V').first\n\
    \    extension_class = extension_class.split('W').first\n    extension_class =\
    \ extension_class.split('X').first\n    extension_class = extension_class.split('Y').first\n\
    \    extension_class = extension_class.split('Z').first\n    extension_class =\
    \ extension_class.split('0').first\n    extension_class = extension_class.split('1').first\n\
    \    extension_class = extension_class.split('2').first\n    extension_class =\
    \ extension_class.split('3').first\n    extension_class = extension_class.split('4').first\n\
    \    extension_class = extension_class.split('5').first\n    extension_class =\
    \ extension_class.split('6').first\n    extension_class = extension_class.split('7').first\n\
    \    extension_class = extension_class.split('8').first\n    extension_class =\
    \ extension_class.split('9').first\n    extension_class = extension_class.split('A').first\n\
    \    extension_class = extension_class.split('B').first\n    extension_class =\
    \ extension_class.split('C').first\n    extension_class = extension", "  extensions_count\
    \ = extensions.count\n  extensions_count.times do |i|\n    extensions_count.times\
    \ do |j|\n      extensions_count.times do |k|\n        extensions_count.times\
    \ do |l|\n          extensions_count.times do |m|\n            extensions_count.times\
    \ do |n|\n              extensions_count.times do |o|\n                extensions_count.times\
    \ do |p|\n                  extensions_count.times do |q|\n                  \
    \  extensions_count.times do |r|\n                      extensions_count.times\
    \ do |s|\n                        extensions_count.times do |t|\n            \
    \              extensions_count.times do |u|\n                            extensions_count.times\
    \ do |v|\n                              extensions_count.times do |w|\n      \
    \                          extensions_count.times do |x|\n                   \
    \               extensions_count.times do |y|\n                              \
    \      extensions_count.times do |z|\n                                      extensions_count.times\
    \ do |aa|\n                                        extensions_count.times do |bb|\n\
    \                                          extensions_count.times do |cc|\n  \
    \                                          extensions_count.times do |dd|\n  \
    \                                            extensions_count.times do |ee|\n\
    \                                                extensions_count.times do |ff|\n\
    \                                                  extensions_count.times do |gg|\n\
    \                                                    extensions_count.times do\
    \ |hh|\n                                                      extensions_count.times\
    \ do |ii|\n                                                        extensions_count.times\
    \ do |jj|\n                                                          extensions_count.times\
    \ do |kk|\n                                                            extensions_count.times\
    \ do |ll|\n                                                              extensions_count.times\
    \ do |mm|\n                                                                extensions_count.times\
    \ do |nn|\n                                                                  extensions_count.times\
    \ do |oo|\n                                                                  \
    \  extensions_count.times do |pp|\n                                          \
    \                            extensions_count.times do |qq|\n                \
    \                                                        extensions_count.times\
    \ do |rr|\n                                                                  \
    \        extensions_count.times do |ss|\n                                    \
    \                                        extensions_count.times do |tt|\n    \
    \                                                                          extensions_count.times\
    \ do |uu|\n                                                                  \
    \              extensions_count.times do |vv|\n                              \
    \                                                    extensions_count.times do\
    \ |ww|\n                                                                     \
    \               extensions_count.times do |xx|\n                             \
    \                                                         extensions_count.times\
    \ do |yy|\n                                                                  \
    \                      extensions_count.times do |zz|\n                      \
    \                                                                    extensions_count.times\
    \ do |aaa|\n                                                                 \
    \                           extensions_count.times do |bbb|\n                \
    \                                                                            \
    \  extensions_count.times do |ccc|\n                                         \
    \                                                       extensions_count.times\
    \ do |ddd|\n                                                                 \
    \                                 extensions_count.times do |eee|\n          \
    \                                                                            \
    \              extensions_count.times do |fff|\n                             \
    \                                                                         extensions_count.times\
    \ do |ggg|\n                                                                 \
    \                                       extensions_count.times do |hhh|\n    \
    \                                                                            \
    \                          extensions_count.times do |iii|\n                 \
    \                                                                            \
    \               extension", "  extensions_count = extensions.length\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      class_name = class_name + c\n\
    \    end\n    class_name = class_name + extension\n    class_name.split('.').each\
    \ do |class_name|\n      class_name = class_name.to_s.downcase\n      class_name.each_char\
    \ do |c|\n        if c.upcase == c.downcase\n          class_name = class_name\
    \ + c\n        end\n      end\n    end\n    class_name = class_name.split('.').last\n\
    \    class_name = class_name.to_s.downcase\n    class_name.each_char do |c|\n\
    \      if c.upcase == c.downcase\n        class_name = class_name + c\n      end\n\
    \    end\n    class_name = class_name.split('.').first\n    class_name = class_name.to_s.downcase\n\
    \    class_name.each_char do |c|\n      if c.upcase == c.downcase\n        class_name\
    \ = class_name + c\n      end\n    end\n    class_name = class_name.split('.').last\n\
    \    class_name = class_name.to_s.downcase\n    class_name.each_char do |c|\n\
    \      if c.upcase == c.downcase\n        class_name = class_name + c\n      end\n\
    \    end\n    class_name = class_name.split('.').first\n    class_name = class_name.to_s.downcase\n\
    \    class_name.each_char do |c|\n      if c.upcase == c.downcase\n        class_name\
    \ = class_name + c\n      end\n    end\n    class_name = class_name.split('.').last\n\
    \    class_name = class_name.to_s.downcase\n    class_name.each_char do |c|\n\
    \      if c.upcase == c.downcase\n        class_name = class_name + c\n      end\n\
    \    end\n    class_name = class_name.split('.').first\n    class_name = class_name.to_s.downcase\n\
    \    class_name.each_char do |c|\n      if c.upcase == c.downcase\n        class_name\
    \ = class_name + c\n      end\n    end\n    class_name = class_name.split('.').last\n\
    \    class_name = class_name.to_s.downcase\n    class_name.each_char do |c|\n\
    \      if c.upcase == c.downcase\n        class_name = class_name + c\n      end\n\
    \    end\n    class_name = class_name.split('.').first\n    class_name = class_name.to_s.downcase\n\
    \    class_name.each_char do |c|\n      if c.upcase == c.downcase\n        class_name\
    \ = class_name + c\n      end\n    end\n    class_name = class_name.split('.').last\n\
    \    class_name = class_name.to_s.downcase\n    class_name.each_char do |c|\n\
    \      if c.upcase == c.downcase", "  extensions_count = extensions.count\n  extensions_count.times\
    \ do |i|\n    extensions_count.times do |j|\n      extensions_count.times do |k|\n\
    \        extensions_count.times do |l|\n          extensions_count.times do |m|\n\
    \            extensions_count.times do |n|\n              extensions_count.times\
    \ do |o|\n                extensions_count.times do |p|\n                  extensions_count.times\
    \ do |q|\n                    extensions_count.times do |r|\n                \
    \      extensions_count.times do |s|\n                        extensions_count.times\
    \ do |t|\n                          extensions_count.times do |u|\n          \
    \                  extensions_count.times do |v|\n                           \
    \   extensions_count.times do |w|\n                                extensions_count.times\
    \ do |x|\n                                  extensions_count.times do |y|\n  \
    \                                  extensions_count.times do |z|\n           \
    \                           extensions_count.times do |aa|\n                 \
    \                       extensions_count.times do |ab|\n                     \
    \                     extensions_count.times do |ac|\n                       \
    \                     extensions_count.times do |ad|\n                       \
    \                       extensions_count.times do |ae|\n                     \
    \                           extensions_count.times do |af|\n                 \
    \                                 extensions_count.times do |ag|\n           \
    \                                         extensions_count.times do |ah|\n   \
    \                                                   extensions_count.times do\
    \ |ai|\n                                                        extensions_count.times\
    \ do |aj|\n                                                          extensions_count.times\
    \ do |ak|\n                                                            extensions_count.times\
    \ do |al|\n                                                              extensions_count.times\
    \ do |am|\n                                                                extensions_count.times\
    \ do |an|\n                                                                  extensions_count.times\
    \ do |ao|\n                                                                  \
    \  extensions_count.times do |ap|\n                                          \
    \                            extensions_count.times do |aq|\n                \
    \                                                        extensions_count.times\
    \ do |ar|\n                                                                  \
    \        extensions_count.times do |as|\n                                    \
    \                                        extensions_count.times do |at|\n    \
    \                                                                          extensions_count.times\
    \ do |au|\n                                                                  \
    \              extensions_count.times do |av|\n                              \
    \                                                    extensions_count.times do\
    \ |aw|\n                                                                     \
    \               extensions_count.times do |ax|\n                             \
    \                                                         extensions_count.times\
    \ do |ay|\n                                                                  \
    \                      extensions_count.times do |az|\n                      \
    \                                                                    extensions_count.times\
    \ do |ba|\n                                                                  \
    \                          extensions_count.times do |bb|\n                  \
    \                                                                            extensions_count.times\
    \ do |bc|\n                                                                  \
    \                              extensions_count.times do |bd|\n              \
    \                                                                            \
    \        extensions_count.times do |be|\n                                    \
    \                                                                extensions_count.times\
    \ do |bf|\n                                                                  \
    \                                    extensions_count.times do |bg|\n        \
    \                                                                            \
    \                    extensions_count.times do |bh|\n                        \
    \                                                                            \
    \      extensions_count.times do |bi|\n                                      \
    \                                                                      extensions_count.times\
    \ do |bj|", "  extension_strength = extension_strength(extensions)\n  extension_strength.sort!\n\
    \  extension_strength.first\nend", "  extension_strength = extension_strength(extensions)\n\
    \  extension_strength.each do |extension|\n    if extension_strength.include?(extension)\n\
    \      return class_name + extension\n    end\n  end\nend", "  extensions_count\
    \ = extensions.length\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.capitalize\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.",
  "  extension_strength = extension_strength(extensions)\n  extension_strength.sort!\n\
    \  extension_strength.first\nend", "  extensions_count = extensions.length\n \
    \ extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class\
    \ = class_name.to_s.downcase.gsub(/[^A-Z]/, \"\").split(//).map {|s| s.capitalize}.join\n\
    \    extension_class.downcase.gsub(/[^a-z]/, \"\").split(//).map {|s| s.capitalize}.join\n\
    \    extension_class.downcase.gsub(/[^A-Z]/, \"\").split(//).map {|s| s.capitalize}.join\n\
    \    extension_class.downcase.gsub(/[^a-z]/, \"\").split(//).map {|s| s.capitalize}.join\n\
    \    extension_class.downcase.gsub(/[^A-Z]/, \"\").split(//).map {|s| s.capitalize}.join\n\
    \    extension_class.downcase.gsub(/[^a-z]/, \"\").split(//).map {|s| s.capitalize}.join\n\
    \    extension_class.downcase.gsub(/[^A-Z]/, \"\").split(//).map {|s| s.capitalize}.join\n\
    \    extension_class.downcase.gsub(/[^a-z]/, \"\").split(//).map {|s| s.capitalize}.join\n\
    \    extension_class.downcase.gsub(/[^A-Z]/, \"\").split(//).map {|s| s.capitalize}.join\n\
    \    extension_class.downcase.gsub(/[^a-z]/, \"\").split(//).map {|s| s.capitalize}.join\n\
    \    extension_class.downcase.gsub(/[^A-Z]/, \"\").split(//).map {|s| s.capitalize}.join\n\
    \    extension_class.downcase.gsub(/[^a-z]/, \"\").split(//).map {|s| s.capitalize}.join\n\
    \    extension_class.downcase.gsub(/[^A-Z]/, \"\").split(//).map {|s| s.capitalize}.join\n\
    \    extension_class.downcase.gsub(/[^a-z]/, \"\").split(//).map {|s| s.capitalize}.join\n\
    \    extension_class.downcase.gsub(/[^A-Z]/, \"\").split(//).map {|s| s.capitalize}.join\n\
    \    extension_class.downcase.gsub(/[^a-z]/, \"\").split(//).map {|s| s.capitalize}.join\n\
    \    extension_class.downcase.gsub(/[^A-Z]/, \"\").split(//).map {|s| s.capitalize}.join\n\
    \    extension_class.downcase.gsub(/[^", "  extensions_count = extensions.count\n\
    \  extensions_count.times do |i|\n    extensions_count.times do |j|\n      if\
    \ i == j\n        extensions_count.times do |k|\n          if k == i\n       \
    \     extensions_count.times do |l|\n              if l == i\n               \
    \ extensions_count.times do |m|\n                  if m == i\n               \
    \     extensions_count.times do |n|\n                      if n == i\n       \
    \                 extensions_count.times do |o|\n                          return\
    \ class_name + \".\" + extensions[i] + \".\" + extensions[j] + \".\" + extensions[k]\
    \ + \".\" + extensions[l] + \".\" + extensions[m] + \".\" + extensions[n] + \"\
    .\" + extensions[o]\n                        end\n                      end\n\
    \                    end\n                  end\n                end\n       \
    \       end\n            end\n          end\n        end\n      end\n    end\n\
    \  end\nend", "  extension_strength = extension_strength_of(class_name, extensions)\n\
    \  extension_strength.each do |extension|\n    if extension_strength.include?(extension)\n\
    \      return class_name + '.' + extension\n    end\n  end\nend", "  extensions_count\
    \ = extensions.count\n  extensions_count.times do |i|\n    extensions_count -=\
    \ 1 if extensions[i].downcase == class_name[i].downcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].upcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].upcase\
    \ == class_name[i].downcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].upcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].upcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].downcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].upcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].upcase == class_name[i].upcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].downcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].upcase == class_name[i].upcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].upcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].upcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].upcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].upcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].downcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].upcase ", "  extensions_count = extensions.length\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.count(\"A\") + extension_class_name.count(\"E\") + extension_class_name.count(\"\
    I\") + extension_class_name.count(\"O\") + extension_class_name.count(\"U\")\n\
    \  end\n  \n  extensions_count.times do |i|\n    extension = extensions[i]\n \
    \   extension_class_name = extension.downcase\n    extension_class_name.count(\"\
    a\") + extension_class_name.count(\"e\") + extension_class_name.count(\"i\") +\
    \ extension_class_name.count(\"o\") + extension_class_name.count(\"u\")\n  end\n\
    \  \n  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.count(\"A\") + extension_class_name.count(\"\
    E\") + extension_class_name.count(\"I\") + extension_class_name.count(\"O\") +\
    \ extension_class_name.count(\"U\")\n  end\n  \n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.count(\"a\") + extension_class_name.count(\"e\") + extension_class_name.count(\"\
    i\") + extension_class_name.count(\"o\") + extension_class_name.count(\"u\")\n\
    \  end\n  \n  extensions_count.times do |i|\n    extension = extensions[i]\n \
    \   extension_class_name = extension.downcase\n    extension_class_name.count(\"\
    A\") + extension_class_name.count(\"E\") + extension_class_name.count(\"I\") +\
    \ extension_class_name.count(\"O\") + extension_class_name.count(\"U\")\n  end\n\
    \  \n  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.count(\"a\") + extension_class_name.count(\"\
    e\") + extension_class_name.count(\"i\") + extension_class_name.count(\"o\") +\
    \ extension_class_name.count(\"u\")\n  end\n  \n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.count(\"A\") + extension_class_name.count(\"E\") + extension_class_name.count(\"\
    I\") + extension_class_name.count", "  extensions_count = extensions.length\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char do |letter|\n     \
    \ letter = letter.to_i\n      letter = letter + 1 if letter > 9\n      letter\
    \ = letter - 1 if letter < 0\n      letter = letter * -1\n      letter = letter\
    \ + 1 if letter > 9\n      letter = letter - 1 if letter < 0\n      letter = letter\
    \ * -1\n      letter = letter + 1 if letter > 9\n      letter = letter - 1 if\
    \ letter < 0\n      letter = letter * -1\n      letter = letter + 1 if letter\
    \ > 9\n      letter = letter - 1 if letter < 0\n      letter = letter * -1\n \
    \     letter = letter + 1 if letter > 9\n      letter = letter - 1 if letter <\
    \ 0\n      letter = letter * -1\n      letter = letter + 1 if letter > 9\n   \
    \   letter = letter - 1 if letter < 0\n      letter = letter * -1\n      letter\
    \ = letter + 1 if letter > 9\n      letter = letter - 1 if letter < 0\n      letter\
    \ = letter * -1\n      letter = letter + 1 if letter > 9\n      letter = letter\
    \ - 1 if letter < 0\n      letter = letter * -1\n      letter = letter + 1 if\
    \ letter > 9\n      letter = letter - 1 if letter < 0\n      letter = letter *\
    \ -1\n      letter = letter + 1 if letter > 9\n      letter = letter - 1 if letter\
    \ < 0\n      letter = letter * -1\n      letter = letter + 1 if letter > 9\n \
    \     letter = letter - 1 if letter < 0\n      letter = letter * -1\n      letter\
    \ = letter + 1 if letter > 9\n      letter = letter - 1 if letter < 0\n      letter\
    \ = letter * -1\n      letter = letter + 1 if letter > 9\n      letter = letter\
    \ - 1 if letter < 0\n      letter = letter * -1\n      letter = letter + 1 if\
    \ letter > 9\n      letter = letter - 1 if letter < 0\n      letter = letter *\
    \ -1\n      letter = letter + 1 if letter > 9\n      letter = letter - 1 if letter\
    \ < 0\n      letter = letter * -1\n      letter = letter + 1 if letter > 9\n \
    \     letter = letter - 1 if letter < 0\n      letter = letter * -1\n      letter\
    \ = letter + 1 if letter > 9\n      letter = letter - 1 if letter < 0\n      letter\
    \ = letter * -1\n      letter", "  extension_strength = extension_strength(extensions)\n\
    \  extension_strength.sort!\n  extension_strength.reverse!\n  extension_strength.first\n\
    end", "  extension_strength = extension_strength(extensions)\n  extension_strength.each\
    \ do |extension|\n    extension_strength = extension_strength.delete(extension)\n\
    \  end\n  extension_strength.sort!\n  extension_strength.first\nend", "  extensions_count\
    \ = extensions.length\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |letter|\n      letter = letter.upcase\n      if class_name.include?(letter)\n\
    \        extensions_count -= 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |letter|\n      letter = letter.upcase\n\
    \      if class_name.include?(letter)\n        extensions_count -= 1\n       \
    \ break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |letter|\n      letter = letter.upcase\n      if class_name.include?(letter)\n\
    \        extensions_count -= 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |letter|\n      letter = letter.upcase\n\
    \      if class_name.include?(letter)\n        extensions_count -= 1\n       \
    \ break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |letter|\n      letter = letter.upcase\n      if class_name.include?(letter)\n\
    \        extensions_count -= 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |letter|\n      letter = letter.upcase\n\
    \      if class_name.include?(letter)\n        extensions_count -= 1\n       \
    \ break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |letter|\n      letter = letter.upcase\n      if class_name.include?(letter)\n\
    \        extensions_count -= 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_", "  extension_strengths = Hash.new(0)\n  extensions.each\
    \ do |extension|\n    extension_strengths[extension.upcase] += 1\n    extension_strengths[extension.downcase]\
    \ += 1\n  end\n  extension_strengths.max_by { |k, v| v}\nend", "  extensions_count\
    \ = extensions.length\n  extensions_count = extensions_count.to_i\n  extensions_count\
    \ = extensions_count.times { extensions_count.times { |i| extensions[i].upcase\
    \ } }\n  extensions_count = extensions_count.to_i\n  extensions_count = extensions_count.times\
    \ { extensions_count.times { |i| extensions[i].downcase } }\n  extensions_count\
    \ = extensions_count.to_i\n  extensions_count = extensions_count.times { |i| extensions[i].length\
    \ }\n  extensions_count = extensions_count.to_i\n  extensions_count = extensions_count.times\
    \ { |i| extensions[i].gsub(/[^A-Z]/, '').length }\n  extensions_count = extensions_count.to_i\n\
    \  extensions_count = extensions_count.times { |i| extensions[i].gsub(/[^a-z]/,\
    \ '').length }\n  extensions_count = extensions_count.to_i\n  extensions_count\
    \ = extensions_count.times { |i| extensions[i].gsub(/[^A-Za-z]/, '').length }\n\
    \  extensions_count = extensions_count.to_i\n  extensions_count = extensions_count.times\
    \ { |i| extensions[i].gsub(/[^A-Z]/, '').length }\n  extensions_count = extensions_count.to_i\n\
    \  extensions_count = extensions_count.times { |i| extensions[i].gsub(/[^a-z]/,\
    \ '').length }\n  extensions_count = extensions_count.to_i\n  extensions_count\
    \ = extensions_count.times { |i| extensions[i].gsub(/[^A-Za-z]/, '').length }\n\
    \  extensions_count = extensions_count.to_i\n  extensions_count = extensions_count.times\
    \ { |i| extensions[i].gsub(/[^A-Z]/, '').length }\n  extensions_count = extensions_count.to_i\n\
    \  extensions_count = extensions_count.times { |i| extensions[i].gsub(/[^a-z]/,\
    \ '').length }\n  extensions_count = extensions_count.to_i\n  extensions_count\
    \ = extensions_count.times { |i| extensions[i].gsub(/[^A-Za-z]/, '').length }\n\
    \  extensions_count = extensions_count.to_i\n  extensions_count = extensions_count.times\
    \ { |i| extensions[i].gsub(/[^A-Z]/, '').length }\n  extensions_count = extensions_count.to_i\n\
    \  extensions_count = extensions_count.times { |i| extensions[i].gsub(/[^a-z]/,\
    \ '').length }\n  extensions_count = extensions_count.to_i\n  extensions_count\
    \ = extensions_count.times { |i| extensions[i].", "  extension_strengths = Hash.new(0)\n\
    \  extensions.each do |extension|\n    extension_strengths[extension.upcase] +=\
    \ 1\n    extension_strengths[extension.downcase] += 1\n  end\n  extension_strengths.max_by\
    \ { |k, v| v}\nend", "  extensions_count = extensions.count\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name.downcase.slice(0,i)\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name.downcase.slice(i,class_name.downcase.size)\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name.downcase.slice(-i,class_name.downcase.size)\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name.downcase.slice(-i,class_name.downcase.size)\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name.downcase.slice(-i,class_name.downcase.size)\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name.downcase.slice(-i,class_name.downcase.size)\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name.downcase.slice(-i,class_name.downcase.size)\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name.downcase.slice(-i,class_name.downcase.size)\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name.downcase.slice(-i,class_name.downcase.size)\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name.downcase.slice(-i,class_name.downcase.size)\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name.downcase.slice(-i,class_name.downcase.size)\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name.downcase.slice(-i,class_name.downcase.size)\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name.downcase.slice(-i,class_name.downcase.size)\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name.downcase.slice(-i,class_name.downcase.size)\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_", "  extensions_sorted\
    \ = extensions.sort\n  extensions_sorted.reverse!\n  extensions_sorted.each do\
    \ |extension|\n    extension_class = class_name.to_s.split('.').last\n    extension_class.downcase!\n\
    \    extension_class.gsub!(/[^A-Z]/, '')\n    extension_class.gsub!(/[A-Z]/, '')\n\
    \    extension_class.split('').each do |letter|\n      if letter == extension_class.split('').last\n\
    \        extension_class.split('').delete(letter)\n        break\n      end\n\
    \    end\n    extension_class.split('').each do |letter|\n      if letter == extension_class.split('').first\n\
    \        extension_class.split('').delete(letter)\n        break\n      end\n\
    \    end\n    if extension_class.split('').size == 0\n      return class_name\n\
    \    end\n  end\nend", "  extensions_count = extensions.length\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |letter|\n      letter_count = letter.length\n\
    \      letter_count.times do |j|\n        letter_char = letter[j]\n        letter_char_count\
    \ = letter_char.length\n        letter_char_count.times do |k|\n          letter_char_char\
    \ = letter_char[k]\n          letter_char_char_count = letter_char_char.length\n\
    \          letter_char_char_count.times do |l|\n            letter_char_char_char\
    \ = letter_char_char[l]\n            letter_char_char_char_count = letter_char_char_char.length\n\
    \            letter_char_char_char_count.times do |m|\n              letter_char_char_char_char\
    \ = letter_char_char_char[m]\n              letter_char_char_char_char_count =\
    \ letter_char_char_char_char.length\n              letter_char_char_char_char_count.times\
    \ do |n|\n                letter_char_char_char_char_char = letter_char_char_char_char[n]\n\
    \                letter_char_char_char_char_char_count = letter_char_char_char_char_char.length\n\
    \                letter_char_char_char_char_char_count.times do |o|\n        \
    \          letter_char_char_char_char_char_char = letter_char_char_char_char_char[o]\n\
    \                  letter_char_char_char_char_char_char_count = letter_char_char_char_char_char_char.length\n\
    \                  letter_char_char_char_char_char_char_count.times do |p|\n \
    \                   letter_char_char_char_char_char_char_char = letter_char_char_char_char_char_char[p]\n\
    \                    letter_char_char_char_char_char_char_char_count = letter_char_char_char_char_char_char_char.length\n\
    \                    letter_char_char_char_char_char_char_char_char_count.times\
    \ do |q|\n                      letter_char_char_char_char_char_char_char_char_char\
    \ = letter_char_char_char_char_char_char_char_char_char[q]\n                 \
    \     letter_char_char_char_char_char_char_char_char_char_count = letter_char_char_char_char_char_char_char_char_char.length\n\
    \                      letter_char_char_char_char_char_char_char_char_char_count.times\
    \ do |r|\n                        letter_char_char_char_char_char_char_char_char_char_char_char\
    \ = letter_char_char_char_char_char_char_char_char_char_char_char[r]\n       \
    \                 letter_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_",
  "  extensions_count = extensions.length\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_count = extension.count\n    extension_count.times\
    \ do |j|\n      extension_letter = extension[j]\n      extension_letter_count\
    \ = extension_letter.count\n      extension_letter_count.times do |k|\n      \
    \  extension_letter_letter = extension_letter[k]\n        extension_letter_letter_count\
    \ = extension_letter_letter.count\n        extension_letter_letter_count.times\
    \ do |l|\n          extension_letter_letter_letter = extension_letter_letter[l]\n\
    \          extension_letter_letter_letter_count = extension_letter_letter_letter.count\n\
    \          extension_letter_letter_letter_count.times do |m|\n            extension_letter_letter_letter_letter\
    \ = extension_letter_letter_letter[m]\n            extension_letter_letter_letter_letter_count\
    \ = extension_letter_letter_letter_letter.count\n            extension_letter_letter_letter_letter_count.times\
    \ do |n|\n              extension_letter_letter_letter_letter_letter = extension_letter_letter_letter_letter[n]\n\
    \              extension_letter_letter_letter_letter_letter_count = extension_letter_letter_letter_letter_letter.count\n\
    \              extension_letter_letter_letter_letter_count.times do |o|\n    \
    \            extension_letter_letter_letter_letter_letter_letter = extension_letter_letter_letter_letter_letter[o]\n\
    \                extension_letter_letter_letter_letter_letter_count = extension_letter_letter_letter_letter_letter_letter.count\n\
    \                extension_letter_letter_letter_letter_letter_count.times do |p|\n\
    \                  extension_letter_letter_letter_letter_letter_letter_letter\
    \ = extension_letter_letter_letter_letter_letter_letter[p]\n                 \
    \ extension_letter_letter_letter_letter_letter_letter_count = extension_letter_letter_letter_letter_letter_letter_letter.count\n\
    \                  extension_letter_letter_letter_letter_letter_letter_count =\
    \ extension_letter_letter_letter_letter_letter_letter_letter_letter.count\n  \
    \                extension_letter_letter_letter_letter_letter_letter_letter_count\
    \ = extension_letter_letter_letter_letter_letter_letter_letter_letter_letter.count\n\
    \                  extension_letter_letter_letter_letter_letter_letter_letter_letter_count\
    \ = extension_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter.count\n\
    \                  extension_letter_letter_letter_letter_letter_letter_letter_letter_count\
    \ = extension_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter.count\n\
    \                  extension_letter_letter_letter_letter_letter_letter_letter_letter_count\
    \ = extension_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter.count\n\
    \                  extension_letter_letter_letter_letter_letter_letter_letter_letter_count\
    \ = extension_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter.count\n\
    \                  extension_letter_letter_letter_letter_letter_letter_letter_letter_letter_count\
    \ = ", "  extensions_count = extensions.length\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_class_name = extension.capitalize\n\
    \    extension_class_name.gsub!(/[^A-Z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/\\d/, '')\n    extension_class_name.gsub!(/[^A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/\\\
    d/, '')\n    extension_class_name.gsub!(/[^A-Z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/\\d/, '')\n    extension_class_name.gsub!(/[^A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/\\\
    d/, '')\n    extension_class_name.gsub!(/[^A-Z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/\\d/, '')\n    extension_class_name.gsub!(/[^A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/\\\
    d/, '')\n    extension_class_name.gsub!(/[^A-Z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/\\d/, '')\n    extension_class_name.gsub!(/[^A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/\\\
    d/, '')\n    extension_class_name.gsub!(/[^A-Z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/\\d/, '')\n    extension_class_name.gsub!(/[^A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/\\\
    d/, '')\n    extension_class_name.gsub!(/[^A-Z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/\\d/, '')\n    extension_class_name.gsub!(/[^A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/\\\
    d/, '')\n    ", "  extensions_count = extensions.count\n  extensions_count.times\
    \ do |i|\n    extensions_count.times do |j|\n      extensions_count.times do |k|\n\
    \        extensions_count.times do |l|\n          extensions_count.times do |m|\n\
    \            extensions_count.times do |n|\n              extensions_count.times\
    \ do |o|\n                extensions_count.times do |p|\n                  extensions_count.times\
    \ do |q|\n                    extensions_count.times do |r|\n                \
    \      extensions_count.times do |s|\n                        extensions_count.times\
    \ do |t|\n                          extensions_count.times do |u|\n          \
    \                  extensions_count.times do |v|\n                           \
    \   extensions_count.times do |w|\n                                extensions_count.times\
    \ do |x|\n                                  extensions_count.times do |y|\n  \
    \                                  extensions_count.times do |z|\n           \
    \                           extensions_count.times do |aa|\n                 \
    \                       extensions_count.times do |bb|\n                     \
    \                     extensions_count.times do |cc|\n                       \
    \                     extensions_count.times do |dd|\n                       \
    \                       extensions_count.times do |ee|\n                     \
    \                           extensions_count.times do |ff|\n                 \
    \                                 extensions_count.times do |gg|\n           \
    \                                         extensions_count.times do |hh|\n   \
    \                                                   extensions_count.times do\
    \ |ii|\n                                                        extensions_count.times\
    \ do |jj|\n                                                          extensions_count.times\
    \ do |kk|\n                                                            extensions_count.times\
    \ do |ll|\n                                                              extensions_count.times\
    \ do |mm|\n                                                                extensions_count.times\
    \ do |nn|\n                                                                  extensions_count.times\
    \ do |oo|\n                                                                  \
    \  extensions_count.times do |pp|\n                                          \
    \                            extensions_count.times do |qq|\n                \
    \                                                        extensions_count.times\
    \ do |rr|\n                                                                  \
    \        extensions_count.times do |ss|\n                                    \
    \                                        extensions_count.times do |tt|\n    \
    \                                                                          extensions_count.times\
    \ do |uu|\n                                                                  \
    \              extensions_count.times do |vv|\n                              \
    \                                                    extensions_count.times do\
    \ |ww|\n                                                                     \
    \               extensions_count.times do |xx|\n                             \
    \                                                         extensions_count.times\
    \ do |yy|\n                                                                  \
    \                      extensions_count.times do |zz|\n                      \
    \                                                                    extensions_count.times\
    \ do |aaa|\n                                                                 \
    \                           extensions_count.times do |bbb|\n                \
    \                                                                            \
    \  extensions_count.times do |ccc|\n                                         \
    \                                                       extensions_count.times\
    \ do |ddd|\n                                                                 \
    \                                 extensions_count.times do |eee|\n          \
    \                                                                            \
    \              extensions_count.times do |fff|\n                             \
    \                                                                         extensions_count.times\
    \ do |ggg|\n                                                                 \
    \                                       extensions_count.times do |hhh|\n    \
    \                                                                            \
    \                          extensions_count.times do |iii|\n                 \
    \                                                                            \
    \               extension", "  extensions_count = extensions.count\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count += 1 if class_name.downcase == extensions_count.downcase\n\
    \  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].downcase\n  end\n  extensions_count += 1 if class_name.downcase\
    \ == extensions_count.downcase\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].downcase\n  end\n  extensions_count\
    \ += 1 if class_name.downcase == extensions_count.downcase\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count += 1 if class_name.downcase == extensions_count.downcase\n\
    \  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].downcase\n  end\n  extensions_count += 1 if class_name.downcase\
    \ == extensions_count.downcase\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].downcase\n  end\n  extensions_count\
    \ += 1 if class_name.downcase == extensions_count.downcase\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count += 1 if class_name.downcase == extensions_count.downcase\n\
    \  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].downcase\n  end\n  extensions_count += 1 if class_name.downcase\
    \ == extensions_count.downcase\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].downcase\n  end\n  extensions_count\
    \ += 1 if class_name.downcase == extensions_count.downcase\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count += 1 if class_name.downcase == extensions_count.downcase\n\
    \  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].downcase\n  end\n  extensions_count += 1 if class_name.downcase\
    \ == extensions_count.downcase\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name", "  extensions_count = extensions.length\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.capitalize\n    extension_class_name.gsub!(/[^A-Z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[0-9]/, '')\n    extension_class_name.gsub!(/[^A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/[0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[0-9]/, '')\n    extension_class_name.gsub!(/[^A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/[0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[0-9]/, '')\n    extension_class_name.gsub!(/[^A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/[0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[0-9]/, '')\n    extension_class_name.gsub!(/[^A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/[0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[0-9]/, '')\n    extension_class_name.gsub!(/[^A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/[0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[0-9]/, '')\n    extension_class_name.gsub!(/[^A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/[0-9]/,\
    \ '')\n    ", "  extensions_count = extensions.length\n  extensions_count = extensions_count.to_i\n\
    \  extensions_count = extensions_count.times{ extensions_count }\n  extensions_count\
    \ = extensions_count.times{ extensions_count }\n  extensions_count = extensions_count.times{\
    \ extensions_count }\n  extensions_count = extensions_count.times{ extensions_count\
    \ }\n  extensions_count = extensions_count.times{ extensions_count }\n  extensions_count\
    \ = extensions_count.times{ extensions_count }\n  extensions_count = extensions_count.times{\
    \ extensions_count }\n  extensions_count = extensions_count.times{ extensions_count\
    \ }\n  extensions_count = extensions_count.times{ extensions_count }\n  extensions_count\
    \ = extensions_count.times{ extensions_count }\n  extensions_count = extensions_count.times{\
    \ extensions_count }\n  extensions_count = extensions_count.times{ extensions_count\
    \ }\n  extensions_count = extensions_count.times{ extensions_count }\n  extensions_count\
    \ = extensions_count.times{ extensions_count }\n  extensions_count = extensions_count.times{\
    \ extensions_count }\n  extensions_count = extensions_count.times{ extensions_count\
    \ }\n  extensions_count = extensions_count.times{ extensions_count }\n  extensions_count\
    \ = extensions_count.times{ extensions_count }\n  extensions_count = extensions_count.times{\
    \ extensions_count }\n  extensions_count = extensions_count.times{ extensions_count\
    \ }\n  extensions_count = extensions_count.times{ extensions_count }\n  extensions_count\
    \ = extensions_count.times{ extensions_count }\n  extensions_count = extensions_count.times{\
    \ extensions_count }\n  extensions_count = extensions_count.times{ extensions_count\
    \ }\n  extensions_count = extensions_count.times{ extensions_count }\n  extensions_count\
    \ = extensions_count.times{ extensions_count }\n  extensions_count = extensions_count.times{\
    \ extensions_count }\n  extensions_count = extensions_count.times{ extensions_count\
    \ }\n  extensions_count = extensions_count.times{ extensions_count }\n  extensions_count\
    \ = extensions_count.times{ extensions_count }\n  extensions_count = extensions_count.times{\
    \ extensions_count }\n  extensions_count = extensions_count.times{ extensions_count\
    \ }\n  extensions_count = extensions_count.times{ extensions_count }\n  extensions_count\
    \ = extensions_count.times{ extensions_count }\n  extensions_count = extensions_count.times{\
    \ extensions_count }\n  extensions_count = extension", "  extensions_count = extensions.length\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.capitalize\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n \
    \   extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.",
  "  extensions_count = extensions.length\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.capitalize\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[a-z]/, '')\n    extension_class_name.gsub!(/[0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z]/, '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, '')\n    extension_class_name.gsub",
  "  extension_strength = extension_strength_of(class_name, extensions)\n  extension_strength.sort!\n\
    \  extension_strength.first\nend", "  extensions_count = extensions.length\n \
    \ extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.capitalize\n    extension_class_name.gsub!(/[^A-Z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[0-9]/, '')\n    extension_class_name.gsub!(/[a-z]/,\
    \ '')\n    extension_class_name.gsub!(/[_]/, '')\n    extension_class_name.gsub!(/[-]/,\
    \ '')\n    extension_class_name.gsub!(/[_]/, '')\n    extension_class_name.gsub!(/[-]/,\
    \ '')\n    extension_class_name.gsub!(/[-]/, '')\n    extension_class_name.gsub!(/[-]/,\
    \ '')\n    extension_class_name.gsub!(/[-]/, '')\n    extension_class_name.gsub!(/[-]/,\
    \ '')\n    extension_class_name.gsub!(/[-]/, '')\n    extension_class_name.gsub!(/[-]/,\
    \ '')\n    extension_class_name.gsub!(/[-]/, '')\n    extension_class_name.gsub!(/[-]/,\
    \ '')\n    extension_class_name.gsub!(/[-]/, '')\n    extension_class_name.gsub!(/[-]/,\
    \ '')\n    extension_class_name.gsub!(/[-]/, '')\n    extension_class_name.gsub!(/[-]/,\
    \ '')\n    extension_class_name.gsub!(/[-]/, '')\n    extension_class_name.gsub!(/[-]/,\
    \ '')\n    extension_class_name.gsub!(/[-]/, '')\n    extension_class_name.gsub!(/[-]/,\
    \ '')\n    extension_class_name.gsub!(/[-]/, '')\n    extension_class_name.gsub!(/[-]/,\
    \ '')\n    extension_class_name.gsub!(/[-]/, '')\n    extension_class_name.gsub!(/[-]/,\
    \ '')\n    extension_class_name.gsub!(/[-]/, '')\n    extension_class_name.gsub!(/[-]/,\
    \ '')\n    extension_class_name.gsub!(/[-]/, '')\n    extension_class_name.gsub!(/[-]/,\
    \ '')\n    extension_class_name.gsub!(/[-]/, '')\n    extension_class_name.gsub!(/[-]/,\
    \ '')\n    extension_class_name.gsub!(/[-]/, '')\n    extension_class_name.gsub!(/[-]/,\
    \ '')\n    extension_class_name.gsub!(/[-]/, '')", "  extension_strength = extension_strength(extensions)\n\
    \  extension_strength.sort!\n  extension_strength.each do |e|\n    return class_name\
    \ + \".\" + e\n  end\nend", "  extensions_count = extensions.length\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_count = extension.count\n\
    \    extension_count.times do |j|\n      letter = extension[j]\n      letter_count\
    \ = letter.count\n      letter_count.times do |k|\n        letter_count = k\n\
    \      end\n    end\n  end\nend\n</code>\n<|/ a tags=ruby,string |>\n<| c |>\n\
    I appreciate your effort, but this does not seem to answer the question. How would\
    \ you go about solving this problem without using regular expressions?\n<|/ c\
    \ |>\n<| c |>\nI added a solution that doesn't use regular expressions.\n<|/ c\
    \ |>\n<| c |>\nI appreciate your effort, but this does not seem to answer the\
    \ question. How would you go about solving this problem without using regular\
    \ expressions?\n<|/ c |>\n<| c |>\nI added a solution that doesn't use regular\
    \ expressions.\n<|/ c |>\n<| c |>\nI appreciate your effort, but this does not\
    \ seem to answer the question. How would you go about solving this problem without\
    \ using regular expressions?\n<|/ c |>\n<| a tags=ruby,string |>\n<code>", " \
    \ extension_strengths = []\n  extension_strengths.each do |extension|\n    extension_strength\
    \ = extension.split(//).map(&:upcase).count - extension.split(//).map(&:downcase).count\n\
    \    extension_strengths << extension_strength\n  end\n  extension_strengths.max\n\
    end", "  extension_strengths = []\n  extensions.each do |extension|\n    extension_strength\
    \ = extension.count(\"A\") - extension.count(\"a\")\n    extension_strengths <<\
    \ extension_strength\n  end\n  extension_strengths.sort!\n  extension_strengths.reverse!\n\
    \  extension_strengths.each do |strength|\n    if strength == -1\n      return\
    \ class_name\n    end\n  end\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks\
    \ for your answer. I am not allowed to use any built-in functions. I should implement\
    \ my own functions. I edited my question to include my own functions. I hope you\
    \ can help me with my new functions. Thanks again!\n<|/ c |>\n<| c |>\nI edited\
    \ my answer to include your functions. I hope it helps.\n<|/ c |>\n<| c |>\nThanks\
    \ for your answer. I edited my question to include my own functions. I hope you\
    \ can help me with my new functions. Thanks again!\n<|/ c |>\n<| c |>\nI edited\
    \ my answer to include your functions. I hope it helps.\n<|/ c |>\n<| c |>\nThanks\
    \ for your answer. I edited my question to include my own functions. I hope you\
    \ can help me with my new functions. Thanks again!\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>", "  extension_strengths = []\n  extensions.each do |extension|\n    extension_strength\
    \ = extension.count(\"A\") - extension.count(\"a\")\n    extension_strengths <<\
    \ extension_strength\n  end\n  extension_strengths.sort!\n  extension_strengths.reverse!\n\
    \  extension_strengths.first\nend", "  extensions_count = extensions.length\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.capitalize\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n \
    \   extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.",
  "  extensions_count = extensions.count\n  extensions_count.times do |i|\n    extensions_count.times\
    \ do |j|\n      extensions_count.times do |k|\n        extensions_count.times\
    \ do |l|\n          extensions_count.times do |m|\n            extensions_count.times\
    \ do |n|\n              extensions_count.times do |o|\n                extensions_count.times\
    \ do |p|\n                  extensions_count.times do |q|\n                  \
    \  extensions_count.times do |r|\n                      extensions_count.times\
    \ do |s|\n                        extensions_count.times do |t|\n            \
    \              extensions_count.times do |u|\n                            extensions_count.times\
    \ do |v|\n                              extensions_count.times do |w|\n      \
    \                          extensions_count.times do |x|\n                   \
    \               extensions_count.times do |y|\n                              \
    \      extensions_count.times do |z|\n                                      extensions_count.times\
    \ do |aa|\n                                        extensions_count.times do |bb|\n\
    \                                          extensions_count.times do |cc|\n  \
    \                                          extensions_count.times do |dd|\n  \
    \                                            extensions_count.times do |ee|\n\
    \                                                extensions_count.times do |ff|\n\
    \                                                  extensions_count.times do |gg|\n\
    \                                                    extensions_count.times do\
    \ |hh|\n                                                      extensions_count.times\
    \ do |ii|\n                                                        extensions_count.times\
    \ do |jj|\n                                                          extensions_count.times\
    \ do |kk|\n                                                            extensions_count.times\
    \ do |ll|\n                                                              extensions_count.times\
    \ do |mm|\n                                                                extensions_count.times\
    \ do |nn|\n                                                                  extensions_count.times\
    \ do |oo|\n                                                                  \
    \  extensions_count.times do |pp|\n                                          \
    \                            extensions_count.times do |qq|\n                \
    \                                                        extensions_count.times\
    \ do |rr|\n                                                                  \
    \        extensions_count.times do |ss|\n                                    \
    \                                        extensions_count.times do |tt|\n    \
    \                                                                          extensions_count.times\
    \ do |uu|\n                                                                  \
    \              extensions_count.times do |vv|\n                              \
    \                                                    extensions_count.times do\
    \ |ww|\n                                                                     \
    \               extensions_count.times do |xx|\n                             \
    \                                                         extensions_count.times\
    \ do |yy|\n                                                                  \
    \                      extensions_count.times do |zz|\n                      \
    \                                                                    extensions_count.times\
    \ do |aaa|\n                                                                 \
    \                           extensions_count.times do |bbb|\n                \
    \                                                                            \
    \  extensions_count.times do |ccc|\n                                         \
    \                                                       extensions_count.times\
    \ do |ddd|\n                                                                 \
    \                                 extensions_count.times do |eee|\n          \
    \                                                                            \
    \              extensions_count.times do |fff|\n                             \
    \                                                                         extensions_count.times\
    \ do |ggg|\n                                                                 \
    \                                       extensions_count.times do |hhh|\n    \
    \                                                                            \
    \                          extensions_count.times do |iii|\n                 \
    \                                                                            \
    \               extension", "  extension_strength = extension_strength_of(class_name,\
    \ extensions)\n  extension_strength.sort!\n  extension_strength.first\nend", " \
    \ extension_strengths = Hash.new(0)\n  extensions.each do |extension|\n    extension_strengths[extension.upcase]\
    \ += 1\n    extension_strengths[extension.downcase] += 1\n  end\n  extension_strengths.max_by\
    \ {|k, v| v}\nend", "  extensions_count = extensions.length\n  extensions_count\
    \ = extensions_count.to_i\n  extensions_count = extensions_count.times { |i| extensions[i].downcase\
    \ }\n  extensions_count = extensions_count.to_i\n  extensions_count = extensions_count.times\
    \ { |i| extensions[i].upcase }\n  extensions_count = extensions_count.to_i\n \
    \ extensions_count = extensions_count.times { |i| extensions[i].length }\n  extensions_count\
    \ = extensions_count.to_i\n  extensions_count = extensions_count.times { |i| extensions[i].to_i\
    \ }\n  extensions_count = extensions_count.to_i\n  extensions_count = extensions_count.times\
    \ { |i| extensions[i].to_s }\n  extensions_count = extensions_count.to_i\n  extensions_count\
    \ = extensions_count.times { |i| extensions[i].to_sym }\n  extensions_count =\
    \ extensions_count.to_i\n  extensions_count = extensions_count.times { |i| extensions[i].to_sym\
    \ }\n  extensions_count = extensions_count.to_i\n  extensions_count = extensions_count.times\
    \ { |i| extensions[i].to_sym }\n  extensions_count = extensions_count.to_i\n \
    \ extensions_count = extensions_count.times { |i| extensions[i].to_sym }\n  extensions_count\
    \ = extensions_count.to_i\n  extensions_count = extensions_count.times { |i| extensions[i].to_sym\
    \ }\n  extensions_count = extensions_count.to_i\n  extensions_count = extensions_count.times\
    \ { |i| extensions[i].to_sym }\n  extensions_count = extensions_count.to_i\n \
    \ extensions_count = extensions_count.times { |i| extensions[i].to_sym }\n  extensions_count\
    \ = extensions_count.to_i\n  extensions_count = extensions_count.times { |i| extensions[i].to_sym\
    \ }\n  extensions_count = extensions_count.to_i\n  extensions_count = extensions_count.times\
    \ { |i| extensions[i].to_sym }\n  extensions_count = extensions_count.to_i\n \
    \ extensions_count = extensions_count.times { |i| extensions[i].to_sym }\n  extensions_count\
    \ = extensions_count.to_i\n  extensions_count = extensions_count.times { |i| extensions[i].to_sym\
    \ }\n  extensions_count = extensions_count.to_i\n  extensions_count = extensions_count.times\
    \ { |i| extensions[i].to_sym }\n  extensions_count = extensions_count.to_i\n \
    \ extensions_count = extensions_count.times ", "  extensions_count = extensions.count\n\
    \  extensions_count.times do |i|\n    extensions_count.times do |j|\n      extensions_count.times\
    \ do |k|\n        extensions_count.times do |l|\n          extensions_count.times\
    \ do |m|\n            extensions_count.times do |n|\n              extensions_count.times\
    \ do |o|\n                extensions_count.times do |p|\n                  extensions_count.times\
    \ do |q|\n                    extensions_count.times do |r|\n                \
    \      extensions_count.times do |s|\n                        extensions_count.times\
    \ do |t|\n                          extensions_count.times do |u|\n          \
    \                  extensions_count.times do |v|\n                           \
    \   extensions_count.times do |w|\n                                extensions_count.times\
    \ do |x|\n                                  extensions_count.times do |y|\n  \
    \                                  extensions_count.times do |z|\n           \
    \                           extensions_count.times do |aa|\n                 \
    \                       extensions_count.times do |ab|\n                     \
    \                     extensions_count.times do |ac|\n                       \
    \                     extensions_count.times do |ad|\n                       \
    \                       extensions_count.times do |ae|\n                     \
    \                           extensions_count.times do |af|\n                 \
    \                                 extensions_count.times do |ag|\n           \
    \                                         extensions_count.times do |ah|\n   \
    \                                                   extensions_count.times do\
    \ |ai|\n                                                        extensions_count.times\
    \ do |aj|\n                                                          extensions_count.times\
    \ do |ak|\n                                                            extensions_count.times\
    \ do |al|\n                                                              extensions_count.times\
    \ do |am|\n                                                                extensions_count.times\
    \ do |an|\n                                                                  extensions_count.times\
    \ do |ao|\n                                                                  \
    \  extensions_count.times do |ap|\n                                          \
    \                            extensions_count.times do |aq|\n                \
    \                                                        extensions_count.times\
    \ do |ar|\n                                                                  \
    \        extensions_count.times do |as|\n                                    \
    \                                        extensions_count.times do |at|\n    \
    \                                                                          extensions_count.times\
    \ do |au|\n                                                                  \
    \              extensions_count.times do |av|\n                              \
    \                                                    extensions_count.times do\
    \ |aw|\n                                                                     \
    \               extensions_count.times do |ax|\n                             \
    \                                                         extensions_count.times\
    \ do |ay|\n                                                                  \
    \                      extensions_count.times do |az|\n                      \
    \                                                                    extensions_count.times\
    \ do |ba|\n                                                                  \
    \                          extensions_count.times do |bb|\n                  \
    \                                                                            extensions_count.times\
    \ do |bc|\n                                                                  \
    \                              extensions_count.times do |bd|\n              \
    \                                                                            \
    \        extensions_count.times do |be|\n                                    \
    \                                                                extensions_count.times\
    \ do |bf|\n                                                                  \
    \                                    extensions_count.times do |bg|\n        \
    \                                                                            \
    \                    extensions_count.times do |bh|\n                        \
    \                                                                            \
    \      extensions_count.times do |bi|\n                                      \
    \                                                                      extensions_count.times\
    \ do |bj|\n", "  extensions_count = extensions.length\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class = class_name.to_s.downcase.gsub(/[^A-Z]/,\
    \ '')\n    extension_class.downcase.split(//).each do |letter|\n      letter =\
    \ letter.upcase\n      extension_class.gsub!(letter, letter[0].to_i + 1)\n   \
    \ end\n    extension_class.gsub!(/[^A-Z]/, '')\n    extension_class.downcase.split(//).each\
    \ do |letter|\n      letter = letter.upcase\n      extension_class.gsub!(letter,\
    \ letter[0].to_i + 1)\n    end\n    extension_class.gsub!(/[^A-Z]/, '')\n    extension_class.downcase.split(//).each\
    \ do |letter|\n      letter = letter.upcase\n      extension_class.gsub!(letter,\
    \ letter[0].to_i + 1)\n    end\n    extension_class.gsub!(/[^A-Z]/, '')\n    extension_class.downcase.split(//).each\
    \ do |letter|\n      letter = letter.upcase\n      extension_class.gsub!(letter,\
    \ letter[0].to_i + 1)\n    end\n    extension_class.gsub!(/[^A-Z]/, '')\n    extension_class.downcase.split(//).each\
    \ do |letter|\n      letter = letter.upcase\n      extension_class.gsub!(letter,\
    \ letter[0].to_i + 1)\n    end\n    extension_class.gsub!(/[^A-Z]/, '')\n    extension_class.downcase.split(//).each\
    \ do |letter|\n      letter = letter.upcase\n      extension_class.gsub!(letter,\
    \ letter[0].to_i + 1)\n    end\n    extension_class.gsub!(/[^A-Z]/, '')\n    extension_class.downcase.split(//).each\
    \ do |letter|\n      letter = letter.upcase\n      extension_class.gsub!(letter,\
    \ letter[0].to_i + 1)\n    end\n    extension_class.gsub!(/[^A-Z]/, '')\n    extension_class.downcase.split(//).each\
    \ do |letter|\n      letter = letter.upcase\n      extension_class.gsub!(letter,\
    \ letter[0].to_i + 1)\n    end\n    extension_class.gsub!(/[^A-Z]/, '')\n    extension_class.downcase.split(//).each\
    \ do |letter|\n      letter = letter.upcase\n      extension_class.gsub!(letter,\
    \ letter[0].to_i + 1)\n    end\n    extension_class.gsub!(/[^A-Z]/, '')\n    extension_class.",
  "  extension_strength = extension_strength_of(class_name, extensions)\n  extension_strength.sort!\n\
    \  extension_strength.first\nend", "  extensions_count = extensions.count\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].upcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].downcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].downcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].upcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].downcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].downcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].upcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].downcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].downcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase ", "  extensions_count\
    \ = extensions.length\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.capitalize\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.",
  "  extension_strengths = []\n  extensions.each do |extension|\n    extension_strength\
    \ = extension.split(//).map { |x| x.upcase - x.downcase }.max\n    extension_strengths\
    \ << extension_strength\n  end\n  extension_strengths.max\nend\n</code>\n<|/ a\
    \ dscore=1 |>\n<| c |>\nThanks so much for taking the time to write this out.\
    \ I'm going to try this out and see how it goes. I really appreciate it!\n<|/\
    \ c |>\n<| c |>\nI ran the code and it seems to work perfectly. Thanks so much\
    \ for taking the time to write this out. I'm going to try this out and see how\
    \ it goes. I really appreciate it!\n<|/ c |>\n<| c |>\nI ran the code and it seems\
    \ to work perfectly. Thanks so much for taking the time to write this out. I'm\
    \ going to try this out and see how it goes. I really appreciate it!\n<|/ c |>\n\
    <| c |>\nI ran the code and it seems to work perfectly. Thanks so much for taking\
    \ the time to write this out. I'm going to try this out and see how it goes. I\
    \ really appreciate it!\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  extensions_count\
    \ = extensions.length\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.capitalize\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.",
  "  extension_strength = extension_strength(extensions)\n  extension_strength.sort!\n\
    \  extension_strength.first\nend", "  extensions_count = extensions.length\n \
    \ extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.capitalize\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n \
    \   extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.",
  "  extension_strengths = Hash.new(0)\n  extensions.each do |extension|\n    extension_strengths[extension.downcase]\
    \ += 1\n  end\n  extension_strengths.max_by {|k,v| v}\nend", "  extensions_count\
    \ = extensions.length\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.capitalize\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.",
  "  extensions_count = extensions.length\n  extensions_count = extensions_count.to_i\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class\
    \ = extension.capitalize\n    extension_class_count = extension_class.count\n\
    \    extension_class_count.times do |j|\n      extension_class_char = extension_class[j]\n\
    \      extension_class_char_count = extension_class_char.count\n      extension_class_char_count.times\
    \ do |k|\n        extension_class_char_count = extension_class_char_count[k]\n\
    \        extension_class_char_count.times do |l|\n          extension_class_char_count\
    \ = extension_class_char_count[l]\n          extension_class_char_count.times\
    \ do |m|\n            extension_class_char_count = extension_class_char_count[m]\n\
    \            extension_class_char_count.times do |n|\n              extension_class_char_count\
    \ = extension_class_char_count[n]\n              extension_class_char_count.times\
    \ do |o|\n                extension_class_char_count = extension_class_char_count[o]\n\
    \                extension_class_char_count.times do |p|\n                  extension_class_char_count\
    \ = extension_class_char_count[p]\n                  extension_class_char_count.times\
    \ do |q|\n                    extension_class_char_count = extension_class_char_count[q]\n\
    \                    extension_class_char_count.times do |r|\n               \
    \       extension_class_char_count = extension_class_char_count[r]\n         \
    \             extension_class_char_count.times do |s|\n                      \
    \  extension_class_char_count = extension_class_char_count[s]\n              \
    \          extension_class_char_count.times do |t|\n                         \
    \ extension_class_char_count = extension_class_char_count[t]\n               \
    \           extension_class_char_count.times do |u|\n                        \
    \    extension_class_char_count = extension_class_char_count[u]\n            \
    \                extension_class_char_count.times do |v|\n                   \
    \           extension_class_char_count = extension_class_char_count[v]\n     \
    \                         extension_class_char_count.times do |w|\n          \
    \                      extension_class_char_count = extension_class_char_count[w]\n\
    \                                extension_class_char_count.times do |x|\n   \
    \                               extension_class_char_count = extension_class_char_count[x]\n\
    \                                  extension_class_char_count.times do |y|\n \
    \                                   extension_class_char_count = extension_class_char_count[y]\n\
    \                                    extension_class_char_count.times do |z|\n\
    \                                      extension_class_char_count = extension_class_char_count[z]\n\
    \                                      extension_class_char_count.times do |aa|\n\
    \                                        extension", "  extensions_count = extensions.count\n\
    \  extensions_count.times do |i|\n    extensions_count.times do |j|\n      if\
    \ i == j\n        extensions_count.times do |k|\n          if k == j\n       \
    \     extensions_count.times do |l|\n              if l == j\n               \
    \ extensions_count.times do |m|\n                  if m == j\n               \
    \     extensions_count.times do |n|\n                      if n == j\n       \
    \                 extensions_count.times do |o|\n                          return\
    \ class_name + \".\" + extensions[i] + \".\" + extensions[j] + \".\" + extensions[k]\
    \ + \".\" + extensions[l] + \".\" + extensions[m] + \".\" + extensions[n] + \"\
    .\" + extensions[o]\n                        end\n                      end\n\
    \                    end\n                  end\n                end\n       \
    \       end\n            end\n          end\n        end\n      end\n    end\n\
    \  end\nend", "  extension_strength = extension_strength(extensions)\n  extension_strength.sort!\n\
    \  extension_strength.first\nend", "  extension_strengths = Hash.new(0)\n  extensions.each\
    \ do |extension|\n    extension_strengths[extension.upcase] += 1\n    extension_strengths[extension.downcase]\
    \ += 1\n  end\n  extension_strengths.max_by { |k, v| v }\nend", "  extension_strengths\
    \ = []\n  extension_strength_map = {}\n  extensions.each do |extension|\n    extension_strength\
    \ = extension.count('a') - extension.count('A')\n    extension_strengths << extension_strength\n\
    \    extension_strength_map[extension] = extension_strength\n  end\n  extension_strengths.sort!\n\
    \  extension_strengths.reverse!\n  extension_strengths.each do |strength|\n  \
    \  extension_strength_map.each do |extension, strength_of_extension|\n      if\
    \ strength_of_extension == strength\n        return class_name + '.' + extension\n\
    \      end\n    end\n  end\nend", "  extensions_count = extensions.length\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      class_name = class_name + c\n\
    \    end\n    class_name = class_name.gsub(/[^A-Z]/, '')\n    class_name.split('').sort.join\n\
    \  end\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your help. I appreciate\
    \ it. I tried your solution and it didn't work. I'm still getting \"Slices\" as\
    \ the output. I'm thinking maybe it's because of the way I wrote the code in the\
    \ first place. I'll post my code in the original post so you can see.\n<|/ c |>\n\
    <| c |>\nI edited my answer to include a working solution. Hope it helps!\n<|/\
    \ c |>\n<| c |>\nThanks for your help. I appreciate it. I tried your solution\
    \ and it didn't work. I'm still getting \"Slices\" as the output. I'm thinking\
    \ maybe it's because of the way I wrote the code in the first place. I'll post\
    \ my code in the original post so you can see.\n<|/ c |>\n<| c |>\nI edited my\
    \ answer to include a working solution. Hope it helps!\n<|/ c |>\n<| c |>\nThanks\
    \ for your help. I appreciate it. I tried your solution and it didn't work. I'm\
    \ still getting \"Slices\" as the output. I'm thinking maybe it's because of the\
    \ way I wrote the code in the first place. I'll post my code in the original post\
    \ so you can see.\n<|/ c |>\n<| a tags=ruby |>\n<code>", "  extensions_count =\
    \ extensions.length\n  extensions_count.times do |i|\n    extensions_count.times\
    \ do |j|\n      extensions_count.times do |k|\n        extensions_count.times\
    \ do |l|\n          extensions_count.times do |m|\n            extensions_count.times\
    \ do |n|\n              extensions_count.times do |o|\n                extensions_count.times\
    \ do |p|\n                  extensions_count.times do |q|\n                  \
    \  extensions_count.times do |r|\n                      extensions_count.times\
    \ do |s|\n                        extensions_count.times do |t|\n            \
    \              extensions_count.times do |u|\n                            extensions_count.times\
    \ do |v|\n                              extensions_count.times do |w|\n      \
    \                          extensions_count.times do |x|\n                   \
    \               extensions_count.times do |y|\n                              \
    \      extensions_count.times do |z|\n                                      extensions_count.times\
    \ do |aa|\n                                        extensions_count.times do |bb|\n\
    \                                          extensions_count.times do |cc|\n  \
    \                                          extensions_count.times do |dd|\n  \
    \                                            extensions_count.times do |ee|\n\
    \                                                extensions_count.times do |ff|\n\
    \                                                  extensions_count.times do |gg|\n\
    \                                                    extensions_count.times do\
    \ |hh|\n                                                      extensions_count.times\
    \ do |ii|\n                                                        extensions_count.times\
    \ do |jj|\n                                                          extensions_count.times\
    \ do |kk|\n                                                            extensions_count.times\
    \ do |ll|\n                                                              extensions_count.times\
    \ do |mm|\n                                                                extensions_count.times\
    \ do |nn|\n                                                                  extensions_count.times\
    \ do |oo|\n                                                                  \
    \  extensions_count.times do |pp|\n                                          \
    \                            extensions_count.times do |qq|\n                \
    \                                                        extensions_count.times\
    \ do |rr|\n                                                                  \
    \        extensions_count.times do |ss|\n                                    \
    \                                        extensions_count.times do |tt|\n    \
    \                                                                          extensions_count.times\
    \ do |uu|\n                                                                  \
    \              extensions_count.times do |vv|\n                              \
    \                                                    extensions_count.times do\
    \ |ww|\n                                                                     \
    \               extensions_count.times do |xx|\n                             \
    \                                                         extensions_count.times\
    \ do |yy|\n                                                                  \
    \                      extensions_count.times do |zz|\n                      \
    \                                                                    extensions_count.times\
    \ do |aaa|\n                                                                 \
    \                           extensions_count.times do |bbb|\n                \
    \                                                                            \
    \  extensions_count.times do |ccc|\n                                         \
    \                                                       extensions_count.times\
    \ do |ddd|\n                                                                 \
    \                                 extensions_count.times do |eee|\n          \
    \                                                                            \
    \              extensions_count.times do |fff|\n                             \
    \                                                                         extensions_count.times\
    \ do |ggg|\n                                                                 \
    \                                       extensions_count.times do |hhh|\n    \
    \                                                                            \
    \                          extensions_count.times do |iii|\n                 \
    \                                                                            \
    \               ", "  extensions_count = extensions.count\n  extensions_count.times\
    \ do |i|\n    extensions_count.times do |j|\n      if extensions[i].to_s.upcase\
    \ == extensions[j].to_s.upcase\n        extensions_count = extensions_count -\
    \ 1\n        break\n      end\n    end\n  end\n  extensions_count.times do |i|\n\
    \    extensions_count.times do |j|\n      if extensions[i].to_s.downcase == extensions[j].to_s.downcase\n\
    \        extensions_count = extensions_count - 1\n        break\n      end\n \
    \   end\n  end\n  extensions_count.times do |i|\n    extensions_count.times do\
    \ |j|\n      if extensions[i].to_s.upcase == extensions[j].to_s.downcase\n   \
    \     extensions_count = extensions_count - 1\n        break\n      end\n    end\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count.times do |j|\n \
    \     if extensions[i].to_s.downcase == extensions[j].to_s.upcase\n        extensions_count\
    \ = extensions_count - 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count.times do |j|\n      if extensions[i].to_s.downcase\
    \ == extensions[j].to_s.downcase\n        extensions_count = extensions_count\
    \ - 1\n        break\n      end\n    end\n  end\n  extensions_count.times do |i|\n\
    \    extensions_count.times do |j|\n      if extensions[i].to_s.upcase == extensions[j].to_s.downcase\n\
    \        extensions_count = extensions_count - 1\n        break\n      end\n \
    \   end\n  end\n  extensions_count.times do |i|\n    extensions_count.times do\
    \ |j|\n      if extensions[i].to_s.downcase == extensions[j].to_s.upcase\n   \
    \     extensions_count = extensions_count - 1\n        break\n      end\n    end\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count.times do |j|\n \
    \     if extensions[i].to_s.upcase == extensions[j].to_s.upcase\n        extensions_count\
    \ = extensions_count - 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count.times do |j|\n      if extensions[i].to_s.downcase\
    \ == extensions[j].to_s.downcase\n        extensions_count = extensions_count\
    \ - 1\n        break\n      end\n    end\n  end\n  extensions_count.times do |i|\n\
    \    extensions_count.times do |j|\n      if extensions[i].to_s.upcase == extensions[j].to_s.downcase\n\
    \        extensions_", "  extension_strengths = extensions.map { |e| e.to_s.split('').map(&:upcase).count\
    \ }\n  extension_strengths.max\nend", "  extensions_sorted = extensions.sort\n\
    \  extensions_sorted.reverse!\n  extensions_sorted.each do |extension|\n    extension_class\
    \ = class_name.to_s.split('.').last\n    extension_class_name = extension_class.split('').map(&:capitalize).join\n\
    \    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '", "  extensions_count =\
    \ extensions.length\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |letter|\n      letter = letter.upcase\n      if letter == letter\n     \
    \   extensions_count = i\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |letter|\n      letter = letter.upcase\n\
    \      if letter == letter\n        extensions_count = i\n        break\n    \
    \  end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |letter|\n      letter = letter.upcase\n      if letter == letter\n     \
    \   extensions_count = i\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |letter|\n      letter = letter.upcase\n\
    \      if letter == letter\n        extensions_count = i\n        break\n    \
    \  end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |letter|\n      letter = letter.upcase\n      if letter == letter\n     \
    \   extensions_count = i\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |letter|\n      letter = letter.upcase\n\
    \      if letter == letter\n        extensions_count = i\n        break\n    \
    \  end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |letter|\n      letter = letter.upcase\n      if letter == letter\n     \
    \   extensions_count = i\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |letter|\n      letter = letter.upcase\n\
    \      if letter == letter\n        extensions_count = i\n        break\n", " \
    \ extensions_count = extensions.length\n  extensions_count = extensions_count.to_i\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name = extension_class_name.gsub(/[^A-Z]/,\
    \ '')\n    extension_class_name = extension_class_name.gsub(/[A-Z]/, '')\n   \
    \ extension_class_name = extension_class_name.gsub(/[_]/, '')\n    extension_class_name\
    \ = extension_class_name.gsub(/[-]/, '')\n    extension_class_name = extension_class_name.gsub(/[a-z]/,\
    \ '')\n    extension_class_name = extension_class_name.gsub(/[0-9]/, '')\n   \
    \ extension_class_name = extension_class_name.gsub(/\\s+/, '')\n    extension_class_name\
    \ = extension_class_name.gsub(/\\s+/, '')\n    extension_class_name = extension_class_name.gsub(/\\\
    s+/, '')\n    extension_class_name = extension_class_name.gsub(/\\s+/, '')\n \
    \   extension_class_name = extension_class_name.gsub(/\\s+/, '')\n    extension_class_name\
    \ = extension_class_name.gsub(/\\s+/, '')\n    extension_class_name = extension_class_name.gsub(/\\\
    s+/, '')\n    extension_class_name = extension_class_name.gsub(/\\s+/, '')\n \
    \   extension_class_name = extension_class_name.gsub(/\\s+/, '')\n    extension_class_name\
    \ = extension_class_name.gsub(/\\s+/, '')\n    extension_class_name = extension_class_name.gsub(/\\\
    s+/, '')\n    extension_class_name = extension_class_name.gsub(/\\s+/, '')\n \
    \   extension_class_name = extension_class_name.gsub(/\\s+/, '')\n    extension_class_name\
    \ = extension_class_name.gsub(/\\s+/, '')\n    extension_class_name = extension_class_name.gsub(/\\\
    s+/, '')\n    extension_class_name = extension_class_name.gsub(/\\s+/, '')\n \
    \   extension_class_name = extension_class_name.gsub(/\\s+/, '')\n    extension_class_name\
    \ = extension_class_name.gsub(/\\s+/, '')\n    extension_class_name = extension_class_name.gsub(/\\\
    s+/, '')\n    extension_class_name = extension_class_name.gsub(/\\s+/, '')\n \
    \   extension_class_name = extension_class_name.gsub(/\\s+/, '')\n    extension_class_name\
    \ = extension_class_name.gsub(/\\s+/, '')\n    extension_class_name = extension_class_name.gsub(/\\\
    s+/, '')\n    extension_class_name = ", "  extensions_count = extensions.length\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char do |c|\n      if c.upcase\
    \ == c\n        extensions_count = i\n        break\n      end\n    end\n  end\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char do |c|\n      if c.upcase\
    \ == c\n        extensions_count = i\n        break\n      end\n    end\n  end\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char do |c|\n      if c.upcase\
    \ == c\n        extensions_count = i\n        break\n      end\n    end\n  end\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char do |c|\n      if c.upcase\
    \ == c\n        extensions_count = i\n        break\n      end\n    end\n  end\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char do |c|\n      if c.upcase\
    \ == c\n        extensions_count = i\n        break\n      end\n    end\n  end\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char do |c|\n      if c.upcase\
    \ == c\n        extensions_count = i\n        break\n      end\n    end\n  end\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char do |c|\n      if c.upcase\
    \ == c\n        extensions_count = i\n        break\n      end\n    end\n  end\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char do |c|\n      if c.upcase\
    \ == c\n        extensions_count = i\n        break\n      end\n    end\n  end\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char do |c|\n      if c.upcase\
    \ == ", "  extension_strength = extension_strength_of(class_name, extensions)\n\
    \  extension_strength.sort!\n  extension_strength.first\nend", "  extensions_sorted\
    \ = extensions.sort\n  extensions_sorted.reverse!\n  extensions_sorted.each do\
    \ |extension|\n    extension.downcase!\n  end\n  extensions_sorted.each do |extension|\n\
    \    extension.split(//).each do |letter|\n      letter = letter.to_i\n      if\
    \ letter > 0 && letter < 26\n        letter = letter - 1\n      end\n      letter\
    \ = letter * -1\n      letter = letter + class_name.split('').count('a') + 1\n\
    \      letter = letter + class_name.split('').count('e') + 1\n      letter = letter\
    \ + class_name.split('').count('i') + 1\n      letter = letter + class_name.split('').count('o')\
    \ + 1\n      letter = letter + class_name.split('').count('u') + 1\n      letter\
    \ = letter + class_name.split('').count('E') + 1\n      letter = letter + class_name.split('').count('I')\
    \ + 1\n      letter = letter + class_name.split('').count('O') + 1\n      letter\
    \ = letter + class_name.split('').count('U') + 1\n      letter = letter + class_name.split('').count('a')\
    \ + 1\n      letter = letter + class_name.split('').count('e') + 1\n      letter\
    \ = letter + class_name.split('').count('i') + 1\n      letter = letter + class_name.split('').count('o')\
    \ + 1\n      letter = letter + class_name.split('').count('u') + 1\n      letter\
    \ = letter + class_name.split('').count('E') + 1\n      letter = letter + class_name.split('').count('I')\
    \ + 1\n      letter = letter + class_name.split('').count('O') + 1\n      letter\
    \ = letter + class_name.split('').count('U') + 1\n      letter = letter + class_name.split('').count('a')\
    \ + 1\n      letter = letter + class_name.split('').count('e') + 1\n      letter\
    \ = letter + class_name.split('').count('i') + 1\n      letter = letter + class_name.split('').count('o')\
    \ + 1\n      letter = letter + class_name.split('').count('u') + 1\n      letter\
    \ = letter + class_name.split('').count('E') + 1\n      letter = letter + class_name.split('').count('I')\
    \ + 1\n      letter = letter + class_name.split('').count('O') + 1\n      letter\
    \ = letter + class_name.split('').count('U') + 1\n      letter = letter + class_name.split('').count('a')\
    \ + 1\n      letter = letter + class_name.split('').count('e') + 1\n      letter",
  "  extensions_count = extensions.count\n  extensions_count.times do |i|\n    extensions_count.times\
    \ do |j|\n      extensions_count.times do |k|\n        extensions_count.times\
    \ do |l|\n          extensions_count.times do |m|\n            extensions_count.times\
    \ do |n|\n              extensions_count.times do |o|\n                extensions_count.times\
    \ do |p|\n                  extensions_count.times do |q|\n                  \
    \  extensions_count.times do |r|\n                      extensions_count.times\
    \ do |s|\n                        extensions_count.times do |t|\n            \
    \              extensions_count.times do |u|\n                            extensions_count.times\
    \ do |v|\n                              extensions_count.times do |w|\n      \
    \                          extensions_count.times do |x|\n                   \
    \               extensions_count.times do |y|\n                              \
    \      extensions_count.times do |z|\n                                      extensions_count.times\
    \ do |aa|\n                                        extensions_count.times do |ab|\n\
    \                                          extensions_count.times do |ac|\n  \
    \                                          extensions_count.times do |ad|\n  \
    \                                            extensions_count.times do |ae|\n\
    \                                                extensions_count.times do |af|\n\
    \                                                  extensions_count.times do |ag|\n\
    \                                                    extensions_count.times do\
    \ |ah|\n                                                      extensions_count.times\
    \ do |ai|\n                                                        extensions_count.times\
    \ do |aj|\n                                                          extensions_count.times\
    \ do |ak|\n                                                            extensions_count.times\
    \ do |al|\n                                                              extensions_count.times\
    \ do |am|\n                                                                extensions_count.times\
    \ do |an|\n                                                                  extensions_count.times\
    \ do |ao|\n                                                                  \
    \  extensions_count.times do |ap|\n                                          \
    \                            extensions_count.times do |aq|\n                \
    \                                                        extensions_count.times\
    \ do |ar|\n                                                                  \
    \        extensions_count.times do |as|\n                                    \
    \                                        extensions_count.times do |at|\n    \
    \                                                                          extensions_count.times\
    \ do |au|\n                                                                  \
    \              extensions_count.times do |av|\n                              \
    \                                                    extensions_count.times do\
    \ |aw|\n                                                                     \
    \               extensions_count.times do |ax|\n                             \
    \                                                         extensions_count.times\
    \ do |ay|\n                                                                  \
    \                      extensions_count.times do |az|\n                      \
    \                                                                    extensions_count.times\
    \ do |ba|\n                                                                  \
    \                          extensions_count.times do |bb|\n                  \
    \                                                                            extensions_count.times\
    \ do |bc|\n                                                                  \
    \                              extensions_count.times do |bd|\n              \
    \                                                                            \
    \        extensions_count.times do |be|\n                                    \
    \                                                                extensions_count.times\
    \ do |bf|\n                                                                  \
    \                                    extensions_count.times do |bg|\n        \
    \                                                                            \
    \                    extensions_count.times do |bh|\n                        \
    \                                                                            \
    \      extensions_count.times do |bi|\n                                      \
    \                                                                      extensions_count.times\
    \ do |bj|", "  extensions_count = extensions.length\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class = extension.capitalize\n\
    \    extension_class_count = extension_class.count\n    extension_class_count.times\
    \ do |j|\n      extension_class_char = extension_class[j]\n      extension_class_char_count\
    \ = extension_class_char.count\n      extension_class_char_count.times do |k|\n\
    \        extension_class_char_count = extension_class_char_count[k]\n        extension_class_char_count.times\
    \ do |l|\n          extension_class_char_count = extension_class_char_count[l]\n\
    \          extension_class_char_count.times do |m|\n            extension_class_char_count\
    \ = extension_class_char_count[m]\n            extension_class_char_count.times\
    \ do |n|\n              extension_class_char_count = extension_class_char_count[n]\n\
    \              extension_class_char_count.times do |o|\n                extension_class_char_count\
    \ = extension_class_char_count[o]\n                extension_class_char_count.times\
    \ do |p|\n                  extension_class_char_count = extension_class_char_count[p]\n\
    \                  extension_class_char_count.times do |q|\n                 \
    \   extension_class_char_count = extension_class_char_count[q]\n             \
    \       extension_class_char_count.times do |r|\n                      extension_class_char_count\
    \ = extension_class_char_count[r]\n                      extension_class_char_count.times\
    \ do |s|\n                        extension_class_char_count = extension_class_char_count[s]\n\
    \                        extension_class_char_count.times do |t|\n           \
    \               extension_class_char_count = extension_class_char_count[t]\n \
    \                         extension_class_char_count.times do |u|\n          \
    \                  extension_class_char_count = extension_class_char_count[u]\n\
    \                            extension_class_char_count.times do |v|\n       \
    \                       extension_class_char_count = extension_class_char_count[v]\n\
    \                              extension_class_char_count.times do |w|\n     \
    \                           extension_class_char_count = extension_class_char_count[w]\n\
    \                                extension_class_char_count.times do |x|\n   \
    \                               extension_class_char_count = extension_class_char_count[x]\n\
    \                                  extension_class_char_count.times do |y|\n \
    \                                   extension_class_char_count = extension_class_char_count[y]\n\
    \                                    extension_class_char_count.times do |z|\n\
    \                                      extension_class_char_count = extension_class_char_count[z]\n\
    \                                      extension_class_char_count.times do |aa|\n\
    \                                        extension_class_char_count = extension_class_char_count",
  "  extension_strength = extension_strength(extensions)\n  extension_strength.sort!\n\
    \  extension_strength.last\nend", "  extensions_count = extensions.count\n  extensions_count.times\
    \ do |i|\n    extensions_count.times do |j|\n      extensions_count.times do |k|\n\
    \        extensions_count.times do |l|\n          extensions_count.times do |m|\n\
    \            extensions_count.times do |n|\n              extensions_count.times\
    \ do |o|\n                extensions_count.times do |p|\n                  extensions_count.times\
    \ do |q|\n                    extensions_count.times do |r|\n                \
    \      extensions_count.times do |s|\n                        extensions_count.times\
    \ do |t|\n                          extensions_count.times do |u|\n          \
    \                  extensions_count.times do |v|\n                           \
    \   extensions_count.times do |w|\n                                extensions_count.times\
    \ do |x|\n                                  extensions_count.times do |y|\n  \
    \                                  extensions_count.times do |z|\n           \
    \                           extensions_count.times do |aa|\n                 \
    \                       extensions_count.times do |bb|\n                     \
    \                     extensions_count.times do |cc|\n                       \
    \                     extensions_count.times do |dd|\n                       \
    \                       extensions_count.times do |ee|\n                     \
    \                           extensions_count.times do |ff|\n                 \
    \                                 extensions_count.times do |gg|\n           \
    \                                         extensions_count.times do |hh|\n   \
    \                                                   extensions_count.times do\
    \ |ii|\n                                                        extensions_count.times\
    \ do |jj|\n                                                          extensions_count.times\
    \ do |kk|\n                                                            extensions_count.times\
    \ do |ll|\n                                                              extensions_count.times\
    \ do |mm|\n                                                                extensions_count.times\
    \ do |nn|\n                                                                  extensions_count.times\
    \ do |oo|\n                                                                  \
    \  extensions_count.times do |pp|\n                                          \
    \                            extensions_count.times do |qq|\n                \
    \                                                        extensions_count.times\
    \ do |rr|\n                                                                  \
    \        extensions_count.times do |ss|\n                                    \
    \                                        extensions_count.times do |tt|\n    \
    \                                                                          extensions_count.times\
    \ do |uu|\n                                                                  \
    \              extensions_count.times do |vv|\n                              \
    \                                                    extensions_count.times do\
    \ |ww|\n                                                                     \
    \               extensions_count.times do |xx|\n                             \
    \                                                         extensions_count.times\
    \ do |yy|\n                                                                  \
    \                      extensions_count.times do |zz|\n                      \
    \                                                                    extensions_count.times\
    \ do |aaa|\n                                                                 \
    \                           extensions_count.times do |bbb|\n                \
    \                                                                            \
    \  extensions_count.times do |ccc|\n                                         \
    \                                                       extensions_count.times\
    \ do |ddd|\n                                                                 \
    \                                 extensions_count.times do |eee|\n          \
    \                                                                            \
    \              extensions_count.times do |fff|\n                             \
    \                                                                         extensions_count.times\
    \ do |ggg|\n                                                                 \
    \                                       extensions_count.times do |hhh|\n    \
    \                                                                            \
    \                          extensions_count.times do |iii|\n                 \
    \                                                                            \
    \               extension", "  extensions_count = extensions.count\n  extensions_count.times\
    \ do |i|\n    extensions_count.times do |j|\n      if i == j\n        extensions_count.times\
    \ do |k|\n          if k == i\n            extensions_count.times do |l|\n   \
    \           if l == i\n                extensions_count.times do |m|\n       \
    \           if m == i\n                    extensions_count.times do |n|\n   \
    \                   if n == i\n                        extensions_count.times\
    \ do |o|\n                          if o == i\n                            extensions_count.times\
    \ do |p|\n                              if (p == i) && (extensions_count > 1)\n\
    \                                return class_name.concat(extensions[0..(extensions_count\
    \ - 1)].join).concat(extensions[extensions_count - 1]).join\n                \
    \              end\n                            end\n                        \
    \  end\n                        end\n                      end\n             \
    \       end\n                  end\n                end\n              end\n \
    \           end\n          end\n        end\n      end\n    end\n  end\nend",
  "  extensions_count = extensions.length\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count = i\n        break\n\
    \      end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count = i\n        break\n\
    \      end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count = i\n        break\n\
    \      end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count = i\n        break\n\
    \      end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count = i\n        break\n\
    \      end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count = i\n        break\n\
    \      end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count = i\n        break\n\
    \      end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count = i\n        break\n\
    \      end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == ", "  extensions_count = extensions.length\n  extensions_count\
    \ = extensions_count.to_i\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_upper = extension.to_s.upcase\n    extension_lower = extension.to_s.downcase\n\
    \    extension_upper.each_char do |letter|\n      if letter == letter\n      \
    \  extensions_count -= 1\n      end\n    end\n    extensions_count -= 1\n    extensions_count\
    \ -= 1\n  end\n  extensions_count = extensions_count.to_i\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_upper = extension.to_s.upcase\n\
    \    extension_lower = extension.to_s.downcase\n    extension_upper.each_char\
    \ do |letter|\n      if letter == letter\n        extensions_count -= 1\n    \
    \  end\n    end\n    extensions_count -= 1\n    extensions_count -= 1\n  end\n\
    \  extensions_count = extensions_count.to_i\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_upper = extension.to_s.upcase\n\
    \    extension_lower = extension.to_s.downcase\n    extension_upper.each_char\
    \ do |letter|\n      if letter == letter\n        extensions_count -= 1\n    \
    \  end\n    end\n    extensions_count -= 1\n    extensions_count -= 1\n  end\n\
    \  extensions_count = extensions_count.to_i\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_upper = extension.to_s.upcase\n\
    \    extension_lower = extension.to_s.downcase\n    extension_upper.each_char\
    \ do |letter|\n      if letter == letter\n        extensions_count -= 1\n    \
    \  end\n    end\n    extensions_count -= 1\n    extensions_count -= 1\n  end\n\
    \  extensions_count = extensions_count.to_i\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_upper = extension.to_s.upcase\n\
    \    extension_lower = extension.to_s.downcase\n    extension_upper.each_char\
    \ do |letter|\n      if letter == letter\n        extensions_count -= 1\n    \
    \  end\n    end\n    extensions_count -= 1\n    extensions_count -= 1\n  end\n\
    \  extensions_count = extensions_count.to_i\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_upper = extension.to_s.upcase\n\
    \    extension_lower = extension.to_s.downcase\n    extension_upper.each_char\
    \ do |letter|\n      if letter == letter\n        extension", "  extension_strengths\
    \ = []\n  extensions.each do |extension|\n    extension_strength = extension.count('a')\
    \ - extension.count('A')\n    extension_strength ||= extension.count('b') - extension.count('B')\n\
    \    extension_strength ||= extension.count('c') - extension.count('C')\n    extension_strength\
    \ ||= extension.count('d') - extension.count('D')\n    extension_strength ||=\
    \ extension.count('e') - extension.count('E')\n    extension_strength ||= extension.count('f')\
    \ - extension.count('F')\n    extension_strength ||= extension.count('g') - extension.count('G')\n\
    \    extension_strength ||= extension.count('h') - extension.count('H')\n    extension_strength\
    \ ||= extension.count('i') - extension.count('I')\n    extension_strength ||=\
    \ extension.count('j') - extension.count('J')\n    extension_strength ||= extension.count('k')\
    \ - extension.count('K')\n    extension_strength ||= extension.count('l') - extension.count('L')\n\
    \    extension_strength ||= extension.count('m') - extension.count('M')\n    extension_strength\
    \ ||= extension.count('n') - extension.count('N')\n    extension_strength ||=\
    \ extension.count('o') - extension.count('O')\n    extension_strength ||= extension.count('p')\
    \ - extension.count('P')\n    extension_strength ||= extension.count('q') - extension.count('Q')\n\
    \    extension_strength ||= extension.count('r') - extension.count('R')\n    extension_strength\
    \ ||= extension.count('s') - extension.count('S')\n    extension_strength ||=\
    \ extension.count('t') - extension.count('T')\n    extension_strength ||= extension.count('u')\
    \ - extension.count('U')\n    extension_strength ||= extension.count('v') - extension.count('V')\n\
    \    extension_strength ||= extension.count('w') - extension.count('W')\n    extension_strength\
    \ ||= extension.count('x') - extension.count('X')\n    extension_strength ||=\
    \ extension.count", "  extension_strengths = []\n  extension_strength_map = {}\n\
    \  extensions.each do |extension|\n    extension_strength = extension.count(\"\
    A\") - extension.count(\"a\")\n    extension_strengths << extension_strength\n\
    \    extension_strength_map[extension] = extension_strength\n  end\n  extension_strengths.sort!\n\
    \  extension_strengths.reverse!\n  extension_strengths.each do |strength|\n  \
    \  extension_strength_map.each do |extension, strength_of_extension|\n      if\
    \ strength_of_extension == strength\n        return class_name + \".\" + extension\n\
    \      end\n    end\n  end\nend", "  extensions_count = extensions.count\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].upcase == class_name[i].downcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].upcase == class_name[i].upcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].upcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].upcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].downcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].upcase == class_name[i].upcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].upcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].upcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].downcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].upcase == class_name[i].upcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].downcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].upcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase ", "  extensions_count\
    \ = extensions.count\n  extensions_count.times do |i|\n    extensions_count.times\
    \ do |j|\n      if i == j\n        extensions_count.times do |k|\n          if\
    \ k == j\n            extensions_count.times do |l|\n              if l == j\n\
    \                extensions_count.times do |m|\n                  if m == j\n\
    \                    extensions_count.times do |n|\n                      if n\
    \ == j\n                        extensions_count.times do |o|\n              \
    \            return class_name + \".\" + extensions[i] + \".\" + extensions[j]\
    \ + \".\" + extensions[k] + \".\" + extensions[l] + \".\" + extensions[m] + \"\
    .\" + extensions[n] + \".\" + extensions[o]\n                        end\n   \
    \                   end\n                    end\n                  end\n    \
    \            end\n              end\n            end\n          end\n        end\n\
    \      end\n    end\n  end\nend", "  extensions_count = extensions.length\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      class_name = class_name.gsub(c,\
    \ c.upcase)\n    end\n    class_name = class_name.gsub(/[^A-Z]/, '')\n    class_name.gsub!(/[^a-z]/,\
    \ '')\n    class_name.gsub!(/[^0-9]/, '')\n    class_name.gsub!(/[^A-Za-z]/, '')\n\
    \    class_name.gsub!(/[^A-Za-z0-9]/, '')\n    class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    class_name.gsub!(/[^A-Za-z0-9]/, '')\n    class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    class_name.gsub!(/[^A-Za-z0-9]/, '')\n    class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    class_name.gsub!(/[^A-Za-z0-9]/, '')\n    class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    class_name.gsub!(/[^A-Za-z0-9]/, '')\n    class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    class_name.gsub!(/[^A-Za-z0-9]/, '')\n    class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    class_name.gsub!(/[^A-Za-z0-9]/, '')\n    class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    class_name.gsub!(/[^A-Za-z0-9]/, '')\n    class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    class_name.gsub!(/[^A-Za-z0-9]/, '')\n    class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    class_name.gsub!(/[^A-Za-z0-9]/, '')\n    class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    class_name.gsub!(/[^A-Za-z0-9]/, '')\n    class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    class_name.gsub!(/[^A-Za-z0-9]/, '')\n    class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    class_name.gsub!(/[^A-Za-z0-9]/, '')\n    class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    class_name.gsub!(/[^A-Za-z0-9]/, '')\n    class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    class_name.gsub!(/[^A-Za-z0-9]/, '')\n    class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    class_name.gsub!(/[^A-Za-z0-9]/, '')\n    class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n    class_name.gsub!(/[^A-Za-z0-9]/, '')\n    class_name.gsub!(/[^A-Za-z0-9]/,\
    \ '')\n", "  extensions_count = extensions.count\n  extensions_count.times do\
    \ |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].downcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].upcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].downcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].downcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].upcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].downcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].downcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].upcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].downcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase ", "  extensions_count\
    \ = extensions.count\n  extensions_count.times do |i|\n    extensions_count.times\
    \ do |j|\n      extensions_count.times do |k|\n        extensions_count.times\
    \ do |l|\n          extensions_count.times do |m|\n            extensions_count.times\
    \ do |n|\n              extensions_count.times do |o|\n                extensions_count.times\
    \ do |p|\n                  extensions_count.times do |q|\n                  \
    \  extensions_count.times do |r|\n                      extensions_count.times\
    \ do |s|\n                        extensions_count.times do |t|\n            \
    \              extensions_count.times do |u|\n                            extensions_count.times\
    \ do |v|\n                              extensions_count.times do |w|\n      \
    \                          extensions_count.times do |x|\n                   \
    \               extensions_count.times do |y|\n                              \
    \      extensions_count.times do |z|\n                                      extensions_count.times\
    \ do |aa|\n                                        extensions_count.times do |ab|\n\
    \                                          extensions_count.times do |ac|\n  \
    \                                          extensions_count.times do |ad|\n  \
    \                                            extensions_count.times do |ae|\n\
    \                                                extensions_count.times do |af|\n\
    \                                                  extensions_count.times do |ag|\n\
    \                                                    extensions_count.times do\
    \ |ah|\n                                                      extensions_count.times\
    \ do |ai|\n                                                        extensions_count.times\
    \ do |aj|\n                                                          extensions_count.times\
    \ do |ak|\n                                                            extensions_count.times\
    \ do |al|\n                                                              extensions_count.times\
    \ do |am|\n                                                                extensions_count.times\
    \ do |an|\n                                                                  extensions_count.times\
    \ do |ao|\n                                                                  \
    \  extensions_count.times do |ap|\n                                          \
    \                            extensions_count.times do |aq|\n                \
    \                                                        extensions_count.times\
    \ do |ar|\n                                                                  \
    \        extensions_count.times do |as|\n                                    \
    \                                        extensions_count.times do |at|\n    \
    \                                                                          extensions_count.times\
    \ do |au|\n                                                                  \
    \              extensions_count.times do |av|\n                              \
    \                                                    extensions_count.times do\
    \ |aw|\n                                                                     \
    \               extensions_count.times do |ax|\n                             \
    \                                                         extensions_count.times\
    \ do |ay|\n                                                                  \
    \                      extensions_count.times do |az|\n                      \
    \                                                                    extensions_count.times\
    \ do |ba|\n                                                                  \
    \                          extensions_count.times do |bb|\n                  \
    \                                                                            extensions_count.times\
    \ do |bc|\n                                                                  \
    \                              extensions_count.times do |bd|\n              \
    \                                                                            \
    \        extensions_count.times do |be|\n                                    \
    \                                                                extensions_count.times\
    \ do |bf|\n                                                                  \
    \                                    extensions_count.times do |bg|\n        \
    \                                                                            \
    \                    extensions_count.times do |bh|\n                        \
    \                                                                            \
    \      extensions_count.times do |bi|\n                                      \
    \                                                                      extensions_count.times\
    \ do |bj|", "  extensions_count = extensions.length\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      if c.upcase == c\n        extensions_count\
    \ = i\n        break\n      end\n    end\n  end\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      if c.upcase == c\n        extensions_count\
    \ = i\n        break\n      end\n    end\n  end\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      if c.upcase == c\n        extensions_count\
    \ = i\n        break\n      end\n    end\n  end\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      if c.upcase == c\n        extensions_count\
    \ = i\n        break\n      end\n    end\n  end\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      if c.upcase == c\n        extensions_count\
    \ = i\n        break\n      end\n    end\n  end\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      if c.upcase == c\n        extensions_count\
    \ = i\n        break\n      end\n    end\n  end\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      if c.upcase == c\n        extensions_count\
    \ = i\n        break\n      end\n    end\n  end\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      if c.upcase == c\n        extensions_count\
    \ = i\n        break\n      end\n    end\n  end\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      if c.upcase == ", "  extensions_count\
    \ = extensions.length\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.capitalize\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([0-9])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([0-9])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([0-9])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([0-9])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([0-9])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([0-9])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([0-9])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([0-9])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([0-9])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '", "  extensions_sorted = extensions.sort\n  extensions_sorted.reverse!\n \
    \ extensions_sorted.each do |extension|\n    extension_class = class_name.to_s.downcase.gsub(/[^A-Z]/,\
    \ '')\n    extension_class = extension_class.gsub(/[A-Z]/, '').to_sym\n    extension_class\
    \ = extension_class.to_s.downcase.gsub(/[^a-z]/, '')\n    extension_class = extension_class.gsub(/[a-z]/,\
    \ '').to_sym\n    extension_class = extension_class.to_s.downcase.gsub(/[^0-9]/,\
    \ '')\n    extension_class = extension_class.gsub(/[0-9]/, '').to_sym\n    extension_class\
    \ = extension_class.to_s.downcase.gsub(/[^A-Za-z]/, '')\n    extension_class =\
    \ extension_class.gsub(/[A-Za-z]/, '').to_sym\n    extension_class = extension_class.to_s.downcase.gsub(/[^0-9A-Za-z]/,\
    \ '')\n    extension_class = extension_class.gsub(/[0-9A-Za-z]/, '').to_sym\n\
    \    extension_class = extension_class.to_s.downcase.gsub(/[^A-Za-z0-9]/, '')\n\
    \    extension_class = extension_class.gsub(/[A-Za-z0-9]/, '').to_sym\n    extension_class\
    \ = extension_class.to_s.downcase.gsub(/[^0-9A-Za-z0-9]/, '')\n    extension_class\
    \ = extension_class.gsub(/[0-9A-Za-z0-9]/, '').to_sym\n    extension_class = extension_class.to_s.downcase.gsub(/[^A-Za-z0-9A-Z]/,\
    \ '')\n    extension_class = extension_class.gsub(/[A-Za-z0-9A-Z]/, '').to_sym\n\
    \    extension_class = extension_class.to_s.downcase.gsub(/[^0-9A-Za-z0-9A-Z]/,\
    \ '')\n    extension_class = extension_class.gsub(/[0-9A-Za-z0-9A-Z]/, '').to_sym\n\
    \    extension_class = extension_class.to_s.downcase.gsub(/[^A-Za-z0-9A-Z0-9]/,\
    \ '')\n    extension_class = extension_class.gsub(/[A-Za-z0-9A-Z0-9]/, '').to_sym\n\
    \    extension_class = extension_class.to_s.downcase.gsub(/[^0-9A-Za-z0-9A-Z0-9]/,\
    \ '')\n    extension_class = extension_class.gsub(/[0-9A-Za-z0-9A-Z0-9]/, '').to_sym\n\
    \    extension_class = extension_class.to_s.downcase.gsub(/[^A-Za-z0-9A-Z0-9A-Z]/,\
    \ '')\n    extension_class = extension_class.gsub(/[A-Za-z0-9A-Z0-9A-Z]/, '').to_sym\n\
    \    extension_class = extension_class.to_s.downcase.", "  extension_strength\
    \ = extension_strength(extensions)\n  extension_strength.sort!\n  extension_strength.each\
    \ do |extension|\n    extension.downcase!\n  end\n  extension_strength.each do\
    \ |extension|\n    extension.upcase!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength.each do |extension|\n\
    \    extension.capitalize!\n  end\n  extension_strength", "  extension_strength\
    \ = extension_strength(extensions)\n  extension_strength.sort!\n  extension_strength.first\n\
    end", "  extension_strength = extension_strength(extensions)\n  extension_strength.sort!\n\
    \  extension_strength.each do |extension|\n    if extension_strength.index(extension)\
    \ == 0 \n      return class_name + '.' + extension\n    end\n  end\nend", "  extensions_count\
    \ = extensions.count\n  extensions_count.times do |i|\n    extensions_count.times\
    \ do |j|\n      extensions_count.times do |k|\n        extensions_count.times\
    \ do |l|\n          extensions_count.times do |m|\n            extensions_count.times\
    \ do |n|\n              extensions_count.times do |o|\n                extensions_count.times\
    \ do |p|\n                  extensions_count.times do |q|\n                  \
    \  extensions_count.times do |r|\n                      extensions_count.times\
    \ do |s|\n                        extensions_count.times do |t|\n            \
    \              extensions_count.times do |u|\n                            extensions_count.times\
    \ do |v|\n                              extensions_count.times do |w|\n      \
    \                          extensions_count.times do |x|\n                   \
    \               extensions_count.times do |y|\n                              \
    \      extensions_count.times do |z|\n                                      extensions_count.times\
    \ do |aa|\n                                        extensions_count.times do |bb|\n\
    \                                          extensions_count.times do |cc|\n  \
    \                                          extensions_count.times do |dd|\n  \
    \                                            extensions_count.times do |ee|\n\
    \                                                extensions_count.times do |ff|\n\
    \                                                  extensions_count.times do |gg|\n\
    \                                                    extensions_count.times do\
    \ |hh|\n                                                      extensions_count.times\
    \ do |ii|\n                                                        extensions_count.times\
    \ do |jj|\n                                                          extensions_count.times\
    \ do |kk|\n                                                            extensions_count.times\
    \ do |ll|\n                                                              extensions_count.times\
    \ do |mm|\n                                                                extensions_count.times\
    \ do |nn|\n                                                                  extensions_count.times\
    \ do |oo|\n                                                                  \
    \  extensions_count.times do |pp|\n                                          \
    \                            extensions_count.times do |qq|\n                \
    \                                                        extensions_count.times\
    \ do |rr|\n                                                                  \
    \        extensions_count.times do |ss|\n                                    \
    \                                        extensions_count.times do |tt|\n    \
    \                                                                          extensions_count.times\
    \ do |uu|\n                                                                  \
    \              extensions_count.times do |vv|\n                              \
    \                                                    extensions_count.times do\
    \ |ww|\n                                                                     \
    \               extensions_count.times do |xx|\n                             \
    \                                                         extensions_count.times\
    \ do |yy|\n                                                                  \
    \                      extensions_count.times do |zz|\n                      \
    \                                                                    extensions_count.times\
    \ do |aaa|\n                                                                 \
    \                           extensions_count.times do |bbb|\n                \
    \                                                                            \
    \  extensions_count.times do |ccc|\n                                         \
    \                                                       extensions_count.times\
    \ do |ddd|\n                                                                 \
    \                                 extensions_count.times do |eee|\n          \
    \                                                                            \
    \              extensions_count.times do |fff|\n                             \
    \                                                                         extensions_count.times\
    \ do |ggg|\n                                                                 \
    \                                       extensions_count.times do |hhh|\n    \
    \                                                                            \
    \                          extensions_count.times do |iii|\n                 \
    \                                                                            \
    \               extension", "  extensions_count = extensions.length\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class = extension.capitalize\n\
    \    extension_class_count = class_name.count(\"#{extension_class}\")\n    extension_class_count.times\
    \ do |j|\n      extension_class_count = class_name.count(\"#{extension_class}#{j}\"\
    )\n      extension_class_count.times do |k|\n        extension_class_count = class_name.count(\"\
    #{extension_class}#{j}#{k}\")\n        extension_class_count.times do |l|\n  \
    \        extension_class_count = class_name.count(\"#{extension_class}#{j}#{k}#{l}\"\
    )\n          extension_class_count.times do |m|\n            extension_class_count\
    \ = class_name.count(\"#{extension_class}#{j}#{k}#{l}#{m}\")\n            extension_class_count.times\
    \ do |n|\n              extension_class_count = class_name.count(\"#{extension_class}#{j}#{k}#{l}#{m}#{n}\"\
    )\n              extension_class_count.times do |o|\n                extension_class_count\
    \ = class_name.count(\"#{extension_class}#{j}#{k}#{l}#{m}#{n}#{o}\")\n       \
    \         extension_class_count.times do |p|\n                  extension_class_count\
    \ = class_name.count(\"#{extension_class}#{j}#{k}#{l}#{m}#{n}#{o}#{p}\")\n   \
    \               extension_class_count.times do |q|\n                    extension_class_count\
    \ = class_name.count(\"#{extension_class}#{j}#{k}#{l}#{m}#{n}#{o}#{p}#{q}\")\n\
    \                    extension_class_count.times do |r|\n                    \
    \  extension_class_count = class_name.count(\"#{extension_class}#{j}#{k}#{l}#{m}#{n}#{o}#{p}#{q}#{r}\"\
    )\n                      extension_class_count.times do |s|\n                \
    \        extension_class_count = class_name.count(\"#{extension_class}#{j}#{k}#{l}#{m}#{n}#{o}#{p}#{q}#{r}#{s}\"\
    )\n                        extension_class_count.times do |t|\n              \
    \            extension_class_count = class_name.count(\"#{extension_class}#{j}#{k}#{l}#{m}#{n}#{o}#{p}#{q}#{r}#{s}",
  "  extension_strengths = Hash.new(0)\n  extensions.each do |extension|\n    extension_strengths[extension.downcase]\
    \ += 1\n  end\n  \n  extension_strengths.max_by do |key, value|\n    value.to_f\n\
    \  end\nend\n</code>\n<|/ a tags=ruby,ruby-on-rails,ruby-on-rails-4 |>\n<| c |>\n\
    Thanks for your answer. I'm getting this error when I try to use your code: undefined\
    \ method `max_by' for #<Hash:0x007fa9c18b3238>\n<|/ c |>\n<| c |>\nI updated my\
    \ answer with a more complete solution. Hope it helps.\n<|/ c |>\n<| c |>\nThanks\
    \ for your answer. I'm getting this error when I try to use your code: undefined\
    \ method `max_by' for #<Hash:0x007fa9c18b3238>\n<|/ c |>\n<| c |>\nI updated my\
    \ answer with a more complete solution. Hope it helps.\n<|/ c |>\n<| c |>\nThanks\
    \ for your answer. I'm getting this error when I try to use your code: undefined\
    \ method `max_by' for #<Hash:0x007fa9c18b3238>\n<|/ c |>\n<| a dscore=0 |>\n<code>",
  "  extension_strengths = []\n  extension_strength_map = {}\n  extensions.each do\
    \ |extension|\n    extension_strength = extension.count(\"A\") - extension.count(\"\
    a\")\n    extension_strengths << extension_strength\n    extension_strength_map[extension]\
    \ = extension_strength\n  end\n  extension_strengths.sort!\n  extension_strengths.reverse!\n\
    \  extension_strengths.each do |strength|\n    extension_strength_map.each do\
    \ |extension, strength_of_extension|\n      if strength_of_extension == strength\n\
    \        return class_name + \".\" + extension\n      end\n    end\n  end\nend",
  "  extensions_count = extensions.length\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.capitalize\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([0-9])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([0-9])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([0-9])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([0-9])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([0-9])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([0-9])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([0-9])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([0-9])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([0-9])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '", "  extensions_count = extensions.length\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_class_name = extension.capitalize\n\
    \    extension_class_name.gsub!(/[^A-Z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[0-9]/, '')\n    extension_class_name.gsub!(/[^A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/[0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[0-9]/, '')\n    extension_class_name.gsub!(/[^A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/[0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[0-9]/, '')\n    extension_class_name.gsub!(/[^A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/[0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[0-9]/, '')\n    extension_class_name.gsub!(/[^A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/[0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[0-9]/, '')\n    extension_class_name.gsub!(/[^A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/[0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[0-9]/, '')\n    extension_class_name.gsub!(/[^A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/[0-9]/,\
    \ '')\n    ", "  extensions_count = extensions.length\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_upper = extension.upcase\n\
    \    extension_lower = extension.downcase\n    extension_strength = extension_upper.length\
    \ - extension_lower.length\n    extension_strength.times do |j|\n      if extension_strength\
    \ > j\n        extension_strength = j\n      end\n    end\n    if extension_strength\
    \ > extensions_count\n      extensions_count = extension_strength\n    end\n \
    \ end\n  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_upper\
    \ = extension.upcase\n    extension_lower = extension.downcase\n    extension_strength\
    \ = extension_upper.length - extension_lower.length\n    extension_strength.times\
    \ do |j|\n      if extension_strength > j\n        extension_strength = j\n  \
    \    end\n    end\n    if extension_strength > extensions_count\n      extensions_count\
    \ = extension_strength\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_upper = extension.upcase\n    extension_lower\
    \ = extension.downcase\n    extension_strength = extension_upper.length - extension_lower.length\n\
    \    extension_strength.times do |j|\n      if extension_strength > j\n      \
    \  extension_strength = j\n      end\n    end\n    if extension_strength > extensions_count\n\
    \      extensions_count = extension_strength\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_upper = extension.upcase\n\
    \    extension_lower = extension.downcase\n    extension_strength = extension_upper.length\
    \ - extension_lower.length\n    extension_strength.times do |j|\n      if extension_strength\
    \ > j\n        extension_strength = j\n      end\n    end\n    if extension_strength\
    \ > extensions_count\n      extensions_count = extension_strength\n    end\n \
    \ end\n  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_upper\
    \ = extension.upcase\n    extension_lower = extension.downcase\n    extension_strength\
    \ = extension_upper.length - extension_lower.length\n    extension_strength.times\
    \ do |j|\n      if extension_strength > j\n        extension_strength = j\n  \
    \    end\n    end\n    if extension_strength > extensions_count\n      extensions_count\
    \ = extension_strength\n    end\n  end\n  extensions_count.times do |i|\n    ",
  "  extensions_count = extensions.length\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class = extension.capitalize\n    extension_class_count\
    \ = extension_class.count\n    extension_class_count.times do |j|\n      extension_class_char\
    \ = extension_class[j]\n      extension_class_char_count = extension_class_char.count\n\
    \      extension_class_char_count.times do |k|\n        extension_class_char_char\
    \ = extension_class_char[k]\n        extension_class_char_char_count = extension_class_char_char.count\n\
    \        extension_class_char_char_count.times do |l|\n          extension_class_char_char_char_count\
    \ = extension_class_char_char_char.count\n          extension_class_char_char_char_count.times\
    \ do |m|\n            extension_class_char_char_char_char_count = extension_class_char_char_char_char.count\n\
    \            extension_class_char_char_char_char_count.times do |n|\n        \
    \      extension_class_char_char_char_char_char_count = extension_class_char_char_char_char_char.count\n\
    \              extension_class_char_char_char_char_char_count.times do |o|\n \
    \               extension_class_char_char_char_char_char_char_count = extension_class_char_char_char_char_char_char.count\n\
    \                extension_class_char_char_char_char_char_char_count.times do\
    \ |p|\n                  extension_class_char_char_char_char_char_char_char_count\
    \ = extension_class_char_char_char_char_char_char_char.count\n               \
    \   extension_class_char_char_char_char_char_char_char_count.times do |q|\n  \
    \                  extension_class_char_char_char_char_char_char_char_char_count\
    \ = extension_class_char_char_char_char_char_char_char_char.count\n          \
    \          extension_class_char_char_char_char_char_char_char_char_count.times\
    \ do |r|\n                      extension_class_char_char_char_char_char_char_char_char_char_count\
    \ = extension_class_char_char_char_char_char_char_char_char_char.count\n     \
    \                 extension_class_char_char_char_char_char_char_char_char_char_count.times\
    \ do |s|\n                        extension_class_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_",
  "  extension_strength = extension_strength(extensions)\n  extension_strength.sort!\n\
    \  extension_strength.first\nend", "  extensions_count = extensions.length\n \
    \ extensions_count.times do |i|\n    extension = extensions[i]\n    extension_upper\
    \ = extension.upcase\n    extension_lower = extension.downcase\n    extension_strength\
    \ = extension_upper.length - extension_lower.length\n    extension_strength.times\
    \ do |j|\n      if extension_strength == j\n        extension_strength = j\n \
    \     end\n    end\n    if extension_strength > 0\n      return class_name + '.'\
    \ + extension\n    end\n  end\nend\n</code>\n<|/ a tags=ruby,string |>\n<| c |>\n\
    I like your answer, but I think it would be better to use a `case` statement rather\
    \ than a bunch of `if` statements.\n<|/ c |>\n<| c |>\nI agree, case statements\
    \ are much cleaner. I'll update my answer.\n<|/ c |>\n<| c |>\nI like your answer,\
    \ but I think it would be better to use a case statement rather than a bunch of\
    \ if statements.\n<|/ c |>\n<| c |>\nI like your answer, but I think it would\
    \ be better to use a case statement rather than a bunch of if statements.\n<|/\
    \ c |>\n<| c |>\nI like your answer, but I think it would be better to use a case\
    \ statement rather than a bunch of if statements.\n<|/ c |>\n<| a tags=ruby,string\
    \ |>\n<code>", "  extension_strength = extension_strength(extensions)\n  \n  extension_strength.each\
    \ do |extension|\n    if extension_strength[extension] == extension_strength.keys.max\n\
    \      return class_name + '.' + extension\n    end\n  end\nend", "  extensions_count\
    \ = extensions.length\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count -= 1\n        break\n\
    \      end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count -= 1\n        break\n\
    \      end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count -= 1\n        break\n\
    \      end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count -= 1\n        break\n\
    \      end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count -= 1\n        break\n\
    \      end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count -= 1\n        break\n\
    \      end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count -= 1\n        break\n\
    \      end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == c\n        extensions_count -= 1\n        break\n\
    \      end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |c|\n      if c.upcase == ", "  extension_strengths = Hash.new(0)\n  extensions.each\
    \ do |extension|\n    extension_strengths[extension.downcase] += 1\n  end\n  extension_strengths.max_by\
    \ { |k, v| v }\nend", "  extensions_count = extensions.length\n  extensions_count\
    \ = extensions_count.to_i\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension = extension.to_s\n    extension = extension.upcase\n    extension\
    \ = extension.downcase\n    extensions_count -= 1 if extensions_count > 1\n  \
    \  break if extensions_count == 0\n  end\n  extensions_count.times do |i|\n  \
    \  extension = extensions[i]\n    extension = extension.to_s\n    extension =\
    \ extension.upcase\n    extension = extension.downcase\n    break if extension\
    \ == class_name\n  end\n  return class_name\nend", "  extensions_count = extensions.count\n\
    \  extensions_count.times do |i|\n    extensions_count.times do |j|\n      extensions_count.times\
    \ do |k|\n        extensions_count.times do |l|\n          extensions_count.times\
    \ do |m|\n            extensions_count.times do |n|\n              extensions_count.times\
    \ do |o|\n                extensions_count.times do |p|\n                  extensions_count.times\
    \ do |q|\n                    extensions_count.times do |r|\n                \
    \      extensions_count.times do |s|\n                        extensions_count.times\
    \ do |t|\n                          extensions_count.times do |u|\n          \
    \                  extensions_count.times do |v|\n                           \
    \   extensions_count.times do |w|\n                                extensions_count.times\
    \ do |x|\n                                  extensions_count.times do |y|\n  \
    \                                  extensions_count.times do |z|\n           \
    \                           extensions_count.times do |aa|\n                 \
    \                       extensions_count.times do |bb|\n                     \
    \                     extensions_count.times do |cc|\n                       \
    \                     extensions_count.times do |dd|\n                       \
    \                       extensions_count.times do |ee|\n                     \
    \                           extensions_count.times do |ff|\n                 \
    \                                 extensions_count.times do |gg|\n           \
    \                                         extensions_count.times do |hh|\n   \
    \                                                   extensions_count.times do\
    \ |ii|\n                                                        extensions_count.times\
    \ do |jj|\n                                                          extensions_count.times\
    \ do |kk|\n                                                            extensions_count.times\
    \ do |ll|\n                                                              extensions_count.times\
    \ do |mm|\n                                                                extensions_count.times\
    \ do |nn|\n                                                                  extensions_count.times\
    \ do |oo|\n                                                                  \
    \  extensions_count.times do |pp|\n                                          \
    \                            extensions_count.times do |qq|\n                \
    \                                                        extensions_count.times\
    \ do |rr|\n                                                                  \
    \        extensions_count.times do |ss|\n                                    \
    \                                        extensions_count.times do |tt|\n    \
    \                                                                          extensions_count.times\
    \ do |uu|\n                                                                  \
    \              extensions_count.times do |vv|\n                              \
    \                                                    extensions_count.times do\
    \ |ww|\n                                                                     \
    \               extensions_count.times do |xx|\n                             \
    \                                                         extensions_count.times\
    \ do |yy|\n                                                                  \
    \                      extensions_count.times do |zz|\n                      \
    \                                                                    extensions_count.times\
    \ do |aaa|\n                                                                 \
    \                           extensions_count.times do |bbb|\n                \
    \                                                                            \
    \  extensions_count.times do |ccc|\n                                         \
    \                                                       extensions_count.times\
    \ do |ddd|\n                                                                 \
    \                                 extensions_count.times do |eee|\n          \
    \                                                                            \
    \              extensions_count.times do |fff|\n                             \
    \                                                                         extensions_count.times\
    \ do |ggg|\n                                                                 \
    \                                       extensions_count.times do |hhh|\n    \
    \                                                                            \
    \                          extensions_count.times do |iii|\n                 \
    \                                                                            \
    \               extension", "  extensions_count = extensions.length\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |letter|\n      letter = letter.upcase\n\
    \      class_name.each_char do |letter|\n        letter = letter.upcase\n    \
    \    if letter == letter\n          class_name = class_name.gsub(letter, letter\
    \ + extension_class_name)\n          break\n        end\n      end\n    end\n\
    \  end\n  return class_name\nend", "  extensions_count = extensions.length\n \
    \ extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.capitalize\n    extension_class_name.each_char do |letter|\n   \
    \   if letter.upcase == letter\n        extensions_count -= 1\n        break\n\
    \      end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.capitalize\n    extension_class_name.each_char\
    \ do |letter|\n      if letter.downcase == letter\n        extensions_count -=\
    \ 1\n        break\n      end\n    end\n  end\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_class_name = extension.capitalize\n\
    \    extension_class_name.each_char do |letter|\n      if letter.upcase == letter\n\
    \        extensions_count -= 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.capitalize\n\
    \    extension_class_name.each_char do |letter|\n      if letter.downcase == letter\n\
    \        extensions_count -= 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.capitalize\n\
    \    extension_class_name.each_char do |letter|\n      if letter.upcase == letter\n\
    \        extensions_count -= 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.capitalize\n\
    \    extension_class_name.each_char do |letter|\n      if letter.downcase == letter\n\
    \        extensions_count -= 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.capitalize\n\
    \    extension_class_name.each_char do |letter|\n      if letter.upcase == letter\n\
    \        extensions_count -= 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.capitalize\n\
    \    extension_class_name.each_char do |letter|\n      if letter.downcase == letter\n\
    \        extensions_count -= 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.capitalize\n\
    \    extension_class_name.each_char do |letter|\n      if letter.upcase == ",
  "  extension_strength = extension_strength(extensions)\n  extension_strength.each\
    \ do |extension|\n    if extension_strength[extension] == extension_strength.keys.max\n\
    \      return class_name + '.' + extension\n    end\n  end\nend", "  extension_strength\
    \ = extension_strength(extensions)\n  extension_strength.sort!\n  extension_strength.each\
    \ do |extension|\n    if extension_strength.index(extension) == 0 \n      return\
    \ class_name + extension\n    end\n  end\nend", "  extensions_count = extensions.length\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class\
    \ = class_name.to_s.split('.').last\n    extension_class_name = extension_class.split('').map(&:capitalize).join\n\
    \    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    ", "  extensions_count\
    \ = extensions.length\n  extensions_count.times do |i|\n    extensions_count.times\
    \ do |j|\n      if extensions[i].include?(extensions[j])\n        extensions_count\
    \ = j\n        break\n      end\n    end\n  end\n  extensions_count.times do |i|\n\
    \    extensions_count.times do |j|\n      if extensions[i].include?(extensions[j])\n\
    \        extensions_count = j\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count.times do |j|\n      if extensions[i].include?(extensions[j])\n\
    \        extensions_count = j\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count.times do |j|\n      if extensions[i].include?(extensions[j])\n\
    \        extensions_count = j\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count.times do |j|\n      if extensions[i].include?(extensions[j])\n\
    \        extensions_count = j\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count.times do |j|\n      if extensions[i].include?(extensions[j])\n\
    \        extensions_count = j\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count.times do |j|\n      if extensions[i].include?(extensions[j])\n\
    \        extensions_count = j\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count.times do |j|\n      if extensions[i].include?(extensions[j])\n\
    \        extensions_count = j\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count.times do |j|\n      if extensions[i].include?(extensions[j])\n\
    \        extensions_count = j\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count.times do |j|\n      if extensions[i].include?(extensions[j])\n\
    \        extensions_count = j\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count.times do |j|\n      if extensions[i].include?(extensions[j])\n\
    \        extensions_count = j\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count.times do |j|\n      if extensions[i].include?(extensions[j])\n\
    \        extensions_count = ", "  extension_strength = extension_strength(extensions)\n\
    \  extension_strength.sort!\n  extension_strength.each do |e|\n    break if extension_strength.index(e)\
    \ == extension_strength.size - 1\n  end\n  class_name.constantize.const_get(extension_strength.first).to_s\n\
    end", "  extension_strength = extension_strength(extensions)\n  extension_strength.sort!\n\
    \  extension_strength.each do |extension|\n    if extension_strength.index(extension)\
    \ == 0 \n      return class_name + extension\n    end\n  end\nend", "  extensions_count\
    \ = extensions.length\n  extensions_count = extensions_count.to_i\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name = extension_class_name.gsub(/[^A-Z]/, '')\n    extension_class_name\
    \ = extension_class_name.gsub(/[A-Z]/, '')\n    extension_class_name = extension_class_name.gsub(/[_]/,\
    \ '')\n    extension_class_name = extension_class_name.gsub(/\\d/, '')\n    extension_class_name\
    \ = extension_class_name.gsub(/\\W/, '')\n    extension_class_name = extension_class_name.gsub(/\\\
    s+/, '_')\n    extension_class_name = extension_class_name.gsub(/[^\\w]/, '')\n\
    \    extension_class_name = extension_class_name.gsub(/\\s+/, '_')\n    extension_class_name\
    \ = extension_class_name.gsub(/\\s+/, '_')\n    extension_class_name = extension_class_name.gsub(/\\\
    s+/, '_')\n    extension_class_name = extension_class_name.gsub(/\\s+/, '_')\n\
    \    extension_class_name = extension_class_name.gsub(/\\s+/, '_')\n    extension_class_name\
    \ = extension_class_name.gsub(/\\s+/, '_')\n    extension_class_name = extension_class_name.gsub(/\\\
    s+/, '_')\n    extension_class_name = extension_class_name.gsub(/\\s+/, '_')\n\
    \    extension_class_name = extension_class_name.gsub(/\\s+/, '_')\n    extension_class_name\
    \ = extension_class_name.gsub(/\\s+/, '_')\n    extension_class_name = extension_class_name.gsub(/\\\
    s+/, '_')\n    extension_class_name = extension_class_name.gsub(/\\s+/, '_')\n\
    \    extension_class_name = extension_class_name.gsub(/\\s+/, '_')\n    extension_class_name\
    \ = extension_class_name.gsub(/\\s+/, '_')\n    extension_class_name = extension_class_name.gsub(/\\\
    s+/, '_')\n    extension_class_name = extension_class_name.gsub(/\\s+/, '_')\n\
    \    extension_class_name = extension_class_name.gsub(/\\s+/, '_')\n    extension_class_name\
    \ = extension_class_name.gsub(/\\s+/, '_')\n    extension_class_name = extension_class_name.gsub(/\\\
    s+/, '_')\n    extension_class_name = extension_class_name.gsub(/\\s+/, '_')\n\
    \    extension_class_name = extension_class_name.gsub(/\\s+/, '_')", "  extensions_count\
    \ = extensions.length\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class = class_name.gsub(/[A-Z]/, extension).gsub(/[a-z]/, extension).downcase\n\
    \    extension_class.split('.').each do |e|\n      extension_class.split('.').each\
    \ do |f|\n        extension_class.split('.').each do |g|\n          extension_class.split('.').each\
    \ do |h|\n            extension_class.split('.').each do |i|\n              if\
    \ i == extension_class\n                extensions_count = i\n               \
    \ break\n              end\n            end\n          end\n        end\n    \
    \  end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class = class_name.gsub(/[A-Z]/, extension).gsub(/[a-z]/, extension).downcase\n\
    \    extension_class.split('.').each do |e|\n      extension_class.split('.').each\
    \ do |f|\n        extension_class.split('.').each do |g|\n          extension_class.split('.').each\
    \ do |h|\n            extension_class.split('.').each do |i|\n              if\
    \ i == extension_class\n                extensions_count = i\n               \
    \ break\n              end\n            end\n          end\n        end\n    \
    \  end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class = class_name.gsub(/[A-Z]/, extension).gsub(/[a-z]/, extension).downcase\n\
    \    extension_class.split('.').each do |e|\n      extension_class.split('.').each\
    \ do |f|\n        extension_class.split('.').each do |g|\n          extension_class.split('.').each\
    \ do |h|\n            extension_class.split('.').each do |i|\n              if\
    \ i == extension_class\n                extensions_count = i\n               \
    \ break\n              end\n            end\n          end\n        end\n    \
    \  end\n    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class = class_name.gsub(/[A-Z]/, extension).gsub(/[a-z]/, extension).downcase\n\
    \    extension_class.split('.').each do |e|\n      extension_class.split('.').each\
    \ do |f|\n        extension_class.split('.').each do |g|\n          extension_class.split('.').each\
    \ do |h|\n            extension_class.split('.').each do |i|\n              if\
    \ i == extension_class", "  extensions_count = extensions.length\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |letter|\n      letter = letter.upcase\n\
    \      if class_name.include?(letter)\n        extensions_count -= 1\n       \
    \ break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |letter|\n      letter = letter.upcase\n      if class_name.include?(letter)\n\
    \        extensions_count -= 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |letter|\n      letter = letter.upcase\n\
    \      if class_name.include?(letter)\n        extensions_count -= 1\n       \
    \ break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |letter|\n      letter = letter.upcase\n      if class_name.include?(letter)\n\
    \        extensions_count -= 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |letter|\n      letter = letter.upcase\n\
    \      if class_name.include?(letter)\n        extensions_count -= 1\n       \
    \ break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |letter|\n      letter = letter.upcase\n      if class_name.include?(letter)\n\
    \        extensions_count -= 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |letter|\n      letter = letter.upcase\n\
    \      if class_name.include?(letter)\n        extensions_count -= 1\n       \
    \ break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_",
  "  extension_strengths = Hash.new(0)\n  extensions.each do |extension|\n    extension_strengths[extension.upcase]\
    \ += 1\n    extension_strengths[extension.downcase] += 1\n  end\n  extension_strengths.max_by\
    \ { |k, v| v}\nend", "  extension_strength = extension_strength(class_name, extensions)\n\
    \  extension_strength.sort!\n  extension_strength.first\nend", "  extension_strengths\
    \ = extensions.map { |e| e.to_s.split('').map(&:upcase).count }\n  extension_strengths.max\n\
    end", "  extension_strengths = Hash.new(0)\n  extensions.each do |extension|\n\
    \    extension_strengths[extension.upcase] += 1\n    extension_strengths[extension.downcase]\
    \ += 1\n  end\n  extension_strengths.max_by { |k, v| v}\nend", "  extensions_count\
    \ = extensions.length\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class = class_name.to_s.split(//).last\n    extension_class_name\
    \ = extension_class.to_s.split(//).first\n    extension_class_name.upcase.split(//).count\
    \ - extension_class_name.downcase.split(//).count \n  end\nend\n</code>\n<|/ a\
    \ |>\n<| c |>\nThanks for your answer! I really appreciate it! I added the code\
    \ you suggested and I got this error when I ran it: undefined method `split' for\
    \ nil:NilClass. I added the code I used to test your solution to my original post.\
    \ Thanks again!\n<|/ c |>\n<| c |>\nI added the code I used to test your solution\
    \ to my original post. Thanks again!\n<|/ c |>\n<| c |>\nI added the code I used\
    \ to test your solution to my original post. Thanks again!\n<|/ c |>\n<| c |>\n\
    I added the code I used to test your solution to my original post. Thanks again!\n\
    <|/ c |>\n<| c |>\nI added the code I used to test your solution to my original\
    \ post. Thanks again!\n<|/ c |>\n<| a tags=ruby,ruby-on-rails |>\n<code>", " \
    \ extensions_count = extensions.count\n  extensions_count.times do |i|\n    extensions_count.times\
    \ do |j|\n      extensions_count.times do |k|\n        extensions_count.times\
    \ do |l|\n          extensions_count.times do |m|\n            extensions_count.times\
    \ do |n|\n              extensions_count.times do |o|\n                extensions_count.times\
    \ do |p|\n                  extensions_count.times do |q|\n                  \
    \  extensions_count.times do |r|\n                      extensions_count.times\
    \ do |s|\n                        extensions_count.times do |t|\n            \
    \              extensions_count.times do |u|\n                            extensions_count.times\
    \ do |v|\n                              extensions_count.times do |w|\n      \
    \                          extensions_count.times do |x|\n                   \
    \               extensions_count.times do |y|\n                              \
    \      extensions_count.times do |z|\n                                      extensions_count.times\
    \ do |aa|\n                                        extensions_count.times do |bb|\n\
    \                                          extensions_count.times do |cc|\n  \
    \                                          extensions_count.times do |dd|\n  \
    \                                            extensions_count.times do |ee|\n\
    \                                                extensions_count.times do |ff|\n\
    \                                                  extensions_count.times do |gg|\n\
    \                                                    extensions_count.times do\
    \ |hh|\n                                                      extensions_count.times\
    \ do |ii|\n                                                        extensions_count.times\
    \ do |jj|\n                                                          extensions_count.times\
    \ do |kk|\n                                                            extensions_count.times\
    \ do |ll|\n                                                              extensions_count.times\
    \ do |mm|\n                                                                extensions_count.times\
    \ do |nn|\n                                                                  extensions_count.times\
    \ do |oo|\n                                                                  \
    \  extensions_count.times do |pp|\n                                          \
    \                            extensions_count.times do |qq|\n                \
    \                                                        extensions_count.times\
    \ do |rr|\n                                                                  \
    \        extensions_count.times do |ss|\n                                    \
    \                                        extensions_count.times do |tt|\n    \
    \                                                                          extensions_count.times\
    \ do |uu|\n                                                                  \
    \              extensions_count.times do |vv|\n                              \
    \                                                    extensions_count.times do\
    \ |ww|\n                                                                     \
    \               extensions_count.times do |xx|\n                             \
    \                                                         extensions_count.times\
    \ do |yy|\n                                                                  \
    \                      extensions_count.times do |zz|\n                      \
    \                                                                    extensions_count.times\
    \ do |aaa|\n                                                                 \
    \                           extensions_count.times do |bbb|\n                \
    \                                                                            \
    \  extensions_count.times do |ccc|\n                                         \
    \                                                       extensions_count.times\
    \ do |ddd|\n                                                                 \
    \                                 extensions_count.times do |eee|\n          \
    \                                                                            \
    \              extensions_count.times do |fff|\n                             \
    \                                                                         extensions_count.times\
    \ do |ggg|\n                                                                 \
    \                                       extensions_count.times do |hhh|\n    \
    \                                                                            \
    \                          extensions_count.times do |iii|\n                 \
    \                                                                            \
    \               extension", "  extension_strength = extension_strength(extensions)\n\
    \  extension_strength.sort!\n  extension_strength.each do |extension|\n    if\
    \ extension_strength.index(extension) == 0 \n      return class_name + extension\n\
    \    end\n  end\nend", "  extension_strengths = Hash.new(0)\n  extensions.each\
    \ do |extension|\n    extension_strengths[extension.upcase] += 1\n    extension_strengths[extension.downcase]\
    \ += 1\n  end\n  \n  extension_strengths.max_by { |k, v| v }\nend", "  extensions_count\
    \ = extensions.length\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.capitalize\n    extension_class_name.gsub!(/[^A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/[0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[_]/, '')\n    extension_class_name.gsub!(/[-]/,\
    \ '')\n    extension_class_name.gsub!(/[a-z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[0-9]/, '')\n    extension_class_name.gsub!(/[_]/,\
    \ '')\n    extension_class_name.gsub!(/[-]/, '')\n    extension_class_name.gsub!(/[a-z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/[0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[_]/, '')\n    extension_class_name.gsub!(/[-]/,\
    \ '')\n    extension_class_name.gsub!(/[a-z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[0-9]/, '')\n    extension_class_name.gsub!(/[_]/,\
    \ '')\n    extension_class_name.gsub!(/[-]/, '')\n    extension_class_name.gsub!(/[a-z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/[0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[_]/, '')\n    extension_class_name.gsub!(/[-]/,\
    \ '')\n    extension_class_name.gsub!(/[a-z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[0-9]/, '')\n    extension_class_name.gsub!(/[_]/,\
    \ '')\n    extension_class_name.gsub!(/[-]/, '')\n    extension_class_name.gsub!(/[a-z]/,\
    \ '')\n    extension_class_name.gsub!(/[A-Z]/, '')\n    extension_class_name.gsub!(/[0-9]/,\
    \ '')\n    extension_class_name.gsub!(/[_]/, '')\n    extension_class_name.gsub!(/[-]/,\
    \ '')\n    extension_class_name.gsub!(/[a-z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')", "  extensions_count = extensions.length\n  extensions_count.times do |i|\n\
    \    extensions_count.times do |j|\n      extensions_count.times do |k|\n    \
    \    extensions_count.times do |l|\n          extensions_count.times do |m|\n\
    \            extensions_count.times do |n|\n              extensions_count.times\
    \ do |o|\n                extensions_count.times do |p|\n                  extensions_count.times\
    \ do |q|\n                    extensions_count.times do |r|\n                \
    \      extensions_count.times do |s|\n                        extensions_count.times\
    \ do |t|\n                          extensions_count.times do |u|\n          \
    \                  extensions_count.times do |v|\n                           \
    \   extensions_count.times do |w|\n                                extensions_count.times\
    \ do |x|\n                                  extensions_count.times do |y|\n  \
    \                                  extensions_count.times do |z|\n           \
    \                           extensions_count.times do |aa|\n                 \
    \                       extensions_count.times do |bb|\n                     \
    \                     extensions_count.times do |cc|\n                       \
    \                     extensions_count.times do |dd|\n                       \
    \                       extensions_count.times do |ee|\n                     \
    \                           extensions_count.times do |ff|\n                 \
    \                                 extensions_count.times do |gg|\n           \
    \                                         extensions_count.times do |hh|\n   \
    \                                                   extensions_count.times do\
    \ |ii|\n                                                        extensions_count.times\
    \ do |jj|\n                                                          extensions_count.times\
    \ do |kk|\n                                                            extensions_count.times\
    \ do |ll|\n                                                              extensions_count.times\
    \ do |mm|\n                                                                extensions_count.times\
    \ do |nn|\n                                                                  extensions_count.times\
    \ do |oo|\n                                                                  \
    \  extensions_count.times do |pp|\n                                          \
    \                            extensions_count.times do |qq|\n                \
    \                                                        extensions_count.times\
    \ do |rr|\n                                                                  \
    \        extensions_count.times do |ss|\n                                    \
    \                                        extensions_count.times do |tt|\n    \
    \                                                                          extensions_count.times\
    \ do |uu|\n                                                                  \
    \              extensions_count.times do |vv|\n                              \
    \                                                    extensions_count.times do\
    \ |ww|\n                                                                     \
    \               extensions_count.times do |xx|\n                             \
    \                                                         extensions_count.times\
    \ do |yy|\n                                                                  \
    \                      extensions_count.times do |zz|\n                      \
    \                                                                    extensions_count.times\
    \ do |aaa|\n                                                                 \
    \                           extensions_count.times do |bbb|\n                \
    \                                                                            \
    \  extensions_count.times do |ccc|\n                                         \
    \                                                       extensions_count.times\
    \ do |ddd|\n                                                                 \
    \                                 extensions_count.times do |eee|\n          \
    \                                                                            \
    \              extensions_count.times do |fff|\n                             \
    \                                                                         extensions_count.times\
    \ do |ggg|\n                                                                 \
    \                                       extensions_count.times do |hhh|\n    \
    \                                                                            \
    \                          extensions_count.times do |iii|\n                 \
    \                                                                            \
    \               extension", "  extensions_count = extensions.length\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.capitalize\n\
    \    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([A-Z])/, '\\1')\n    extension_class_name.gsub!(/([a-z])/,\
    \ '\\1')\n    extension_class_name.", "  extensions_count = extensions.length\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.capitalize\n    extension_class_name.gsub!(/[^A-Z]/, '')\n    extension_class_name.gsub!(/[A-Z]/,\
    \ '')\n    extension_class_name.gsub!(/[0-9]/, '')\n    extension_class_name.gsub!(/[a-z]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z]/, '')\n    extension_class_name.gsub!(/[^A-Za-z]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z]/, '')\n    extension_class_name.gsub!(/[^A-Za-z]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z]/, '')\n    extension_class_name.gsub!(/[^A-Za-z]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z]/, '')\n    extension_class_name.gsub!(/[^A-Za-z]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z]/, '')\n    extension_class_name.gsub!(/[^A-Za-z]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z]/, '')\n    extension_class_name.gsub!(/[^A-Za-z]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z]/, '')\n    extension_class_name.gsub!(/[^A-Za-z]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z]/, '')\n    extension_class_name.gsub!(/[^A-Za-z]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z]/, '')\n    extension_class_name.gsub!(/[^A-Za-z]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z]/, '')\n    extension_class_name.gsub!(/[^A-Za-z]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z]/, '')\n    extension_class_name.gsub!(/[^A-Za-z]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z]/, '')\n    extension_class_name.gsub!(/[^A-Za-z]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z]/, '')\n    extension_class_name.gsub!(/[^A-Za-z]/,\
    \ '')\n    extension_class_name.gsub!(/[^A-Za-z]/, '')\n    extension_class_name.gsub!(/[^A-Za-z]/,\
    \ '')\n    extension_class_name.gsub!(", "  extension_strengths = Hash.new(0)\n\
    \  extensions.each do |extension|\n    extension_strengths[extension.downcase]\
    \ += 1\n  end\n  extension_strengths.max_by {|k,v| v}\nend", "  extension_strength\
    \ = extension_strength_of(class_name, extensions)\n  extension_strength.sort!\n\
    \  extension_strength.first\nend", "  extension_strength = extension_strength_of(class_name,\
    \ extensions)\n  extension_strength.sort!\n  extension_strength.first\nend", " \
    \ extension_strength = extension_strength_of(class_name, extensions)\n  extension_strength.sort!\n\
    \  extension_strength.first\nend", "  extension_strengths = Hash.new(0)\n  extensions.each\
    \ do |extension|\n    extension_strengths[extension.upcase] += 1\n    extension_strengths[extension.downcase]\
    \ += 1\n  end\n  extension_strengths.max_by { |k, v| v}\nend", "  extension_strengths\
    \ = []\n  extension_strengths.concat(extensions.map { |e| e.to_s.split('').map(&:upcase).count\
    \ })\n  extension_strengths.concat(extensions.map { |e| e.to_s.split('').map(&:downcase).count\
    \ })\n  extension_strengths.sort!\n  extension_strengths.reverse!\n  extension_strengths.uniq!\n\
    \  extension_strengths.each do |strength|\n    if strength > 0\n      return class_name.to_s\
    \ + \".\" + extensions.find { |e| e.to_s.split('').map(&:upcase).count == strength\
    \ }\n    end\n  end\nend\n</code>\n<|/ a tags=ruby,string |>\n<| c |>\nThis doesn't\
    \ work. `'my_class'.to_s.split('').map(&:upcase).count` returns `[\"M\", \"Y\"\
    , \"C\", \"L\", \"E\"]` which is not the desired result.\n<|/ c |>\n<| c |>\n\
    : You are right. I've corrected the code. Thanks.\n<|/ c |>\n<| a tags=ruby,string\
    \ |>\n<code>", "  extension_strength = extension_strength(extensions)\n  extension_strength.sort!\n\
    \  extension_strength.first\nend", "  extensions_count = extensions.count\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].upcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].upcase\
    \ == class_name[i].downcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].upcase == class_name[i].upcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].downcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].upcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].upcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].downcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].upcase == class_name[i].upcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].downcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].upcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].upcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].downcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].upcase ", "  extension_strengths\
    \ = []\n  extension_strength_map = {}\n  extensions.each do |extension|\n    extension_strength\
    \ = extension.downcase.count(extension.upcase)\n    extension_strengths << extension_strength\n\
    \    extension_strength_map[extension_strength] = extension\n  end\n  extension_strengths.sort!\n\
    \  extension_strengths.reverse!\n  extension_strengths.each do |strength|\n  \
    \  extension_strength = extension_strength_map[strength]\n    return class_name\
    \ + extension_strength\n  end\nend", "  extensions_count = extensions.length\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char do |letter|\n     \
    \ if letter == letter[0].upcase\n        letter_index = letter_index + 1\n   \
    \   end\n    end\n    extension_class_name.each_char do |letter|\n      if letter\
    \ == letter[0].downcase\n        letter_index = letter_index - 1\n      end\n\
    \    end\n    extension_class_name.each_char do |letter|\n      if letter == letter[0].upcase\
    \ && letter_index > 0\n        letter_index = letter_index - 1\n      end\n  \
    \  end\n    extension_class_name.each_char do |letter|\n      if letter == letter[0].downcase\
    \ && letter_index < 0\n        letter_index = letter_index + 1\n      end\n  \
    \  end\n    extension_class_name.each_char do |letter|\n      if letter == letter[0].upcase\
    \ && letter_index == 0 && extension_class_name != \"Slices\"\n        extensions_count\
    \ = extensions_count - 1\n      end\n    end\n    extensions_count = extensions_count\
    \ - 1\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |letter|\n      if letter == letter[0].upcase\n        letter_index = letter_index\
    \ + 1\n      end\n    end\n    extension_class_name.each_char do |letter|\n  \
    \    if letter == letter[0].downcase\n        letter_index = letter_index - 1\n\
    \      end\n    end\n    extension_class_name.each_char do |letter|\n      if\
    \ letter == letter[0].upcase && letter_index > 0\n        letter_index = letter_index\
    \ - 1\n      end\n    end\n    extension_class_name.each_char do |letter|\n  \
    \    if letter == letter[0].downcase && letter_index < 0\n        letter_index\
    \ = letter_index + 1\n      end\n    end\n    extension_class_name.each_char do\
    \ |letter|\n      if letter == letter[0].upcase && letter_index == 0 && extension_class_name\
    \ != \"Slices\"\n        extensions_count = extensions_count - 1\n      end\n\
    \    end\n    extensions_count = extensions_count - 1\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |letter|\n      if letter == letter[0].upcase\n\
    \        letter_index = letter_index + 1\n      end\n    end\n    extension_class_name.each_char\
    \ do |letter|\n      if letter == letter[0].down", "  extension_strengths = []\n\
    \  extensions.each do |extension|\n    extension_strength = extension.count(\"\
    A\") - extension.count(\"a\")\n    extension_strength ||= extension.count(\"B\"\
    ) - extension.count(\"b\")\n    extension_strength ||= extension.count(\"C\")\
    \ - extension.count(\"c\")\n    extension_strength ||= extension.count(\"D\")\
    \ - extension.count(\"d\")\n    extension_strength ||= extension.count(\"E\")\
    \ - extension.count(\"e\")\n    extension_strength ||= extension.count(\"F\")\
    \ - extension.count(\"f\")\n    extension_strength ||= extension.count(\"G\")\
    \ - extension.count(\"g\")\n    extension_strength ||= extension.count(\"H\")\
    \ - extension.count(\"h\")\n    extension_strength ||= extension.count(\"I\")\
    \ - extension.count(\"i\")\n    extension_strength ||= extension.count(\"J\")\
    \ - extension.count(\"j\")\n    extension_strength ||= extension.count(\"K\")\
    \ - extension.count(\"k\")\n    extension_strength ||= extension.count(\"L\")\
    \ - extension.count(\"l\")\n    extension_strength ||= extension.count(\"M\")\
    \ - extension.count(\"m\")\n    extension_strength ||= extension.count(\"N\")\
    \ - extension.count(\"n\")\n    extension_strength ||= extension.count(\"O\")\
    \ - extension.count(\"o\")\n    extension_strength ||= extension.count(\"P\")\
    \ - extension.count(\"p\")\n    extension_strength ||= extension.count(\"Q\")\
    \ - extension.count(\"q\")\n    extension_strength ||= extension.count(\"R\")\
    \ - extension.count(\"r\")\n    extension_strength ||= extension.count(\"S\")\
    \ - extension.count(\"s\")\n    extension_strength ||= extension.count(\"T\")\
    \ - extension.count(\"t\")\n    extension_strength ||= extension.count(\"U\")\
    \ - extension.count(\"u\")\n    extension_strength ||= extension.count(\"V\")\
    \ - extension.count(\"v\")\n    extension_strength ||= extension.count(\"W\")\
    \ - extension.count(\"w\")\n    extension_strength ||= extension.count(\"X\")\
    \ - extension.count(\"x\")\n    extension", "  extension_strength = extension_strength_of(class_name,\
    \ extensions)\n  extension_strength.sort!\n  extension_strength.first\nend", " \
    \ extension_strength = extension_strength(extensions)\n  \n  extension_strength.each\
    \ do |extension|\n    if extension_strength.include?(extension)\n      return\
    \ class_name + extension\n    end\n  end\nend", "  extensions_count = extensions.length\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char do |letter|\n     \
    \ if letter == letter\n        letter_index = letter_index + 1\n      end\n  \
    \  end\n    letter_index = 0\n    extension_class_name.each_char do |letter|\n\
    \      if letter == letter\n        letter_index = letter_index + 1\n      end\n\
    \    end\n    letter_index = 0\n    extension_class_name.each_char do |letter|\n\
    \      if letter == letter\n        letter_index = letter_index + 1\n      end\n\
    \    end\n    letter_index = 0\n    extension_class_name.each_char do |letter|\n\
    \      if letter == letter\n        letter_index = letter_index + 1\n      end\n\
    \    end\n    letter_index = 0\n    extension_class_name.each_char do |letter|\n\
    \      if letter == letter\n        letter_index = letter_index + 1\n      end\n\
    \    end\n    letter_index = 0\n    extension_class_name.each_char do |letter|\n\
    \      if letter == letter\n        letter_index = letter_index + 1\n      end\n\
    \    end\n    letter_index = 0\n    extension_class_name.each_char do |letter|\n\
    \      if letter == letter\n        letter_index = letter_index + 1\n      end\n\
    \    end\n    letter_index = 0\n    extension_class_name.each_char do |letter|\n\
    \      if letter == letter\n        letter_index = letter_index + 1\n      end\n\
    \    end\n    letter_index = 0\n    extension_class_name.each_char do |letter|\n\
    \      if letter == letter\n        letter_index = letter_index + 1\n      end\n\
    \    end\n    letter_index = 0\n    extension_class_name.each_char do |letter|\n\
    \      if letter == letter\n        letter_index = letter_index + 1\n      end\n\
    \    end\n    letter_index = 0\n    extension_class_name.each_char do |letter|\n\
    \      if letter == letter\n        letter_index = letter_index + 1\n      end\n\
    \    end\n    letter_index = 0\n    extension_class_name.each_char do |letter|\n\
    \      if letter == letter\n        letter_index = letter_index + 1\n      end\n\
    \    end\n    letter_index = 0\n    extension_class_name.each_char do |letter|\n\
    \      if letter == letter\n        letter_index = letter_index + 1\n      end\n\
    \    end\n    letter_index = 0\n    extension_class_name.each_char do |letter|\n\
    \      if letter == letter\n        letter_index = letter_index + 1\n      end\n\
    \    end\n    letter_index = 0\n    extension_class_name.each_char do |letter|\n\
    \      if letter == letter\n        letter", "  extension_strengths = Hash.new(0)\n\
    \  extensions.each do |extension|\n    extension_strengths[extension.upcase] +=\
    \ 1\n    extension_strengths[extension.downcase] += 1\n  end\n  extension_strengths.max_by\
    \ {|k, v| v}\nend", "  extensions_count = extensions.count\n  extensions_count.times\
    \ do |i|\n    extensions_count.times do |j|\n      extensions_count.times do |k|\n\
    \        extensions_count.times do |l|\n          extensions_count.times do |m|\n\
    \            extensions_count.times do |n|\n              extensions_count.times\
    \ do |o|\n                extensions_count.times do |p|\n                  extensions_count.times\
    \ do |q|\n                    extensions_count.times do |r|\n                \
    \      extensions_count.times do |s|\n                        extensions_count.times\
    \ do |t|\n                          extensions_count.times do |u|\n          \
    \                  extensions_count.times do |v|\n                           \
    \   extensions_count.times do |w|\n                                extensions_count.times\
    \ do |x|\n                                  extensions_count.times do |y|\n  \
    \                                  extensions_count.times do |z|\n           \
    \                           extensions_count.times do |aa|\n                 \
    \                       extensions_count.times do |ab|\n                     \
    \                     extensions_count.times do |ac|\n                       \
    \                     extensions_count.times do |ad|\n                       \
    \                       extensions_count.times do |ae|\n                     \
    \                           extensions_count.times do |af|\n                 \
    \                                 extensions_count.times do |ag|\n           \
    \                                         extensions_count.times do |ah|\n   \
    \                                                   extensions_count.times do\
    \ |ai|\n                                                        extensions_count.times\
    \ do |aj|\n                                                          extensions_count.times\
    \ do |ak|\n                                                            extensions_count.times\
    \ do |al|\n                                                              extensions_count.times\
    \ do |am|\n                                                                extensions_count.times\
    \ do |an|\n                                                                  extensions_count.times\
    \ do |ao|\n                                                                  \
    \  extensions_count.times do |ap|\n                                          \
    \                            extensions_count.times do |aq|\n                \
    \                                                        extensions_count.times\
    \ do |ar|\n                                                                  \
    \        extensions_count.times do |as|\n                                    \
    \                                        extensions_count.times do |at|\n    \
    \                                                                          extensions_count.times\
    \ do |au|\n                                                                  \
    \              extensions_count.times do |av|\n                              \
    \                                                    extensions_count.times do\
    \ |aw|\n                                                                     \
    \               extensions_count.times do |ax|\n                             \
    \                                                         extensions_count.times\
    \ do |ay|\n                                                                  \
    \                      extensions_count.times do |az|\n                      \
    \                                                                    extensions_count.times\
    \ do |ba|\n                                                                  \
    \                          extensions_count.times do |bb|\n                  \
    \                                                                            extensions_count.times\
    \ do |bc|\n                                                                  \
    \                              extensions_count.times do |bd|\n              \
    \                                                                            \
    \        extensions_count.times do |be|\n                                    \
    \                                                                extensions_count.times\
    \ do |bf|\n                                                                  \
    \                                    extensions_count.times do |bg|\n        \
    \                                                                            \
    \                    extensions_count.times do |bh|\n                        \
    \                                                                            \
    \      extensions_count.times do |bi|\n                                      \
    \                                                                      extensions_count.times\
    \ do |bj|\n", "  extensions_count = extensions.length\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |letter|\n      letter = letter.upcase\n\
    \      if letter == letter\n        extensions_count -= 1\n      end\n    end\n\
    \  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char do |letter|\n     \
    \ letter = letter.upcase\n      if letter == letter\n        extensions_count\
    \ -= 1\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |letter|\n      letter = letter.upcase\n      if letter == letter\n     \
    \   extensions_count -= 1\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |letter|\n      letter = letter.upcase\n\
    \      if letter == letter\n        extensions_count -= 1\n      end\n    end\n\
    \  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char do |letter|\n     \
    \ letter = letter.upcase\n      if letter == letter\n        extensions_count\
    \ -= 1\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |letter|\n      letter = letter.upcase\n      if letter == letter\n     \
    \   extensions_count -= 1\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |letter|\n      letter = letter.upcase\n\
    \      if letter == letter\n        extensions_count -= 1\n      end\n    end\n\
    \  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char do |letter|\n     \
    \ letter = letter.upcase\n      if letter == letter\n        extensions_count\
    \ -= 1\n      end\n    end\n  end\n  extensions_count.times do |i|\n", "  extensions_count\
    \ = extensions.length\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_upper = extension.upcase\n    extension_lower = extension.downcase\n\
    \    extension_strength = extension_upper.length - extension_lower.length\n  \
    \  extension_strength = extension_strength.to_f\n    if extension_strength > 0\n\
    \      extensions_strength = extensions_strength.to_f\n      extensions_strength\
    \ += extension_strength\n    end\n  end\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f / extensions_count\n  extensions_strength\
    \ = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\
    \ - 1\n  extensions_strength = extensions_strength.to_f\n  extensions_strength\
    \ = extensions_strength.to_f - extensions_count\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f / extensions_count\n  extensions_strength\
    \ = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\
    \ - 1\n  extensions_strength = extensions_strength.to_f\n  extensions_strength\
    \ = extensions_strength.to_f - extensions_count\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f / extensions_count\n  extensions_strength\
    \ = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\
    \ - 1\n  extensions_strength = extensions_strength.to_f\n  extensions_strength\
    \ = extensions_strength.to_f - extensions_count\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f / extensions_count\n  extensions_strength\
    \ = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\
    \ - 1\n  extensions_strength = extensions_strength.to_f\n  extensions_strength\
    \ = extensions_strength.to_f - extensions_count\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f / extensions_count\n  extensions_strength\
    \ = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\
    \ - 1\n  extensions_strength = extensions_strength.to_f\n  extensions_strength\
    \ = extensions_strength.to_f - extensions_count\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f / extensions_count\n  extensions_strength\
    \ = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\
    \ - 1\n", "  extensions_count = extensions.length\n  extensions_count.times do\
    \ |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.count(\"A\") + extension_class_name.count(\"B\") + extension_class_name.count(\"\
    C\")\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.count(\"\
    A\") + extension_class_name.count(\"B\") + extension_class_name.count(\"C\")\n\
    \  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.count(\"A\") + extension_class_name.count(\"\
    B\") + extension_class_name.count(\"C\")\n  end\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.count(\"A\") + extension_class_name.count(\"B\") + extension_class_name.count(\"\
    C\")\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.count(\"\
    A\") + extension_class_name.count(\"B\") + extension_class_name.count(\"C\")\n\
    \  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.count(\"A\") + extension_class_name.count(\"\
    B\") + extension_class_name.count(\"C\")\n  end\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.count(\"A\") + extension_class_name.count(\"B\") + extension_class_name.count(\"\
    C\")\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.count(\"\
    A\") + extension_class_name.count(\"B\") + extension_class_name.count(\"C\")\n\
    \  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.count(\"A\") + extension_class_name.count(\"\
    B\") + extension_class_name.count(\"C\")\n  end\n  extensions_count.times do |i|\n\
    \    ", "  extension_strength = extension_strength(class_name, extensions)\n \
    \ extension_strength.sort!\n  extension_strength.first\nend", "  extension_strengths\
    \ = Hash.new\n  extensions.each do |extension|\n    extension_strengths[extension.downcase]\
    \ += 1\n  end\n  extension_strengths.max_by { |k, v| v }\nend", "  extensions_count\
    \ = extensions.count\n  extensions_count.times do |i|\n    extensions_count.times\
    \ do |j|\n      extensions_count.times do |k|\n        extensions_count.times\
    \ do |l|\n          extensions_count.times do |m|\n            extensions_count.times\
    \ do |n|\n              extensions_count.times do |o|\n                extensions_count.times\
    \ do |p|\n                  extensions_count.times do |q|\n                  \
    \  extensions_count.times do |r|\n                      extensions_count.times\
    \ do |s|\n                        extensions_count.times do |t|\n            \
    \              extensions_count.times do |u|\n                            extensions_count.times\
    \ do |v|\n                              extensions_count.times do |w|\n      \
    \                          extensions_count.times do |x|\n                   \
    \               extensions_count.times do |y|\n                              \
    \      extensions_count.times do |z|\n                                      extensions_count.times\
    \ do |aa|\n                                        extensions_count.times do |ab|\n\
    \                                          extensions_count.times do |ac|\n  \
    \                                          extensions_count.times do |ad|\n  \
    \                                            extensions_count.times do |ae|\n\
    \                                                extensions_count.times do |af|\n\
    \                                                  extensions_count.times do |ag|\n\
    \                                                    extensions_count.times do\
    \ |ah|\n                                                      extensions_count.times\
    \ do |ai|\n                                                        extensions_count.times\
    \ do |aj|\n                                                          extensions_count.times\
    \ do |ak|\n                                                            extensions_count.times\
    \ do |al|\n                                                              extensions_count.times\
    \ do |am|\n                                                                extensions_count.times\
    \ do |an|\n                                                                  extensions_count.times\
    \ do |ao|\n                                                                  \
    \  extensions_count.times do |ap|\n                                          \
    \                            extensions_count.times do |aq|\n                \
    \                                                        extensions_count.times\
    \ do |ar|\n                                                                  \
    \        extensions_count.times do |as|\n                                    \
    \                                        extensions_count.times do |at|\n    \
    \                                                                          extensions_count.times\
    \ do |au|\n                                                                  \
    \              extensions_count.times do |av|\n                              \
    \                                                    extensions_count.times do\
    \ |aw|\n                                                                     \
    \               extensions_count.times do |ax|\n                             \
    \                                                         extensions_count.times\
    \ do |ay|\n                                                                  \
    \                      extensions_count.times do |az|\n                      \
    \                                                                    extensions_count.times\
    \ do |ba|\n                                                                  \
    \                          extensions_count.times do |bb|\n                  \
    \                                                                            extensions_count.times\
    \ do |bc|\n                                                                  \
    \                              extensions_count.times do |bd|\n              \
    \                                                                            \
    \        extensions_count.times do |be|\n                                    \
    \                                                                extensions_count.times\
    \ do |bf|\n                                                                  \
    \                                    extensions_count.times do |bg|\n        \
    \                                                                            \
    \                    extensions_count.times do |bh|\n                        \
    \                                                                            \
    \      extensions_count.times do |bi|\n                                      \
    \                                                                      extensions_count.times\
    \ do |bj|", "  extensions_count = extensions.length\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.capitalize\n\
    \    extension_class_name.each_char do |letter|\n      if letter == letter\n \
    \       extensions_count -= 1\n        break\n      end\n    end\n  end\n  \n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.capitalize\n    extension_class_name.each_char do |letter|\n   \
    \   if letter == letter\n        extensions_count -= 1\n        break\n      end\n\
    \    end\n  end\n  \n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.capitalize\n    extension_class_name.each_char\
    \ do |letter|\n      if letter == letter\n        extensions_count -= 1\n    \
    \    break\n      end\n    end\n  end\n  \n  extensions_count.times do |i|\n \
    \   extension = extensions[i]\n    extension_class_name = extension.capitalize\n\
    \    extension_class_name.each_char do |letter|\n      if letter == letter\n \
    \       extensions_count -= 1\n        break\n      end\n    end\n  end\n  \n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.capitalize\n    extension_class_name.each_char do |letter|\n   \
    \   if letter == letter\n        extensions_count -= 1\n        break\n      end\n\
    \    end\n  end\n  \n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.capitalize\n    extension_class_name.each_char\
    \ do |letter|\n      if letter == letter\n        extensions_count -= 1\n    \
    \    break\n      end\n    end\n  end\n  \n  extensions_count.times do |i|\n \
    \   extension = extensions[i]\n    extension_class_name = extension.capitalize\n\
    \    extension_class_name.each_char do |letter|\n      if letter == letter\n \
    \       extensions_count -= 1\n        break\n      end\n    end\n  end\n  \n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.capitalize\n    extension_class_name.each_char do |letter|\n   \
    \   if letter == letter\n        extensions_count -= 1\n        break\n      end\n\
    \    end\n  end\n  \n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.capitalize\n    extension_class_name.each_char\
    \ do |letter|\n      if letter == letter\n        extensions_count -= 1\n    \
    \    break\n      ", "  extension_strength = extension_strength(extensions)\n\
    \  extension_strength.sort!\n  extension_strength.first\nend", "  extensions_count\
    \ = extensions.length\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.capitalize\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.gsub!(/([A-Z])/,\
    \ '\\1')\n    extension_class_name.gsub!(/([a-z])/, '\\1')\n    extension_class_name.",
  "  extensions_count = extensions.inject(0) do |sum, extension|\n    sum += extension.count(\"\
    A\") + extension.count(\"B\") + extension.count(\"C\")\n  end\n  extensions_count\
    \ = extensions_count.to_f\n  extensions_count.zero? ? nil : class_name.gsub(/([A-Z])/,\
    \ '.\\1').\n    downcase.gsub(/([a-z])/, '.\\1').\n    sub(/\\.([a-z])/, '.\\\
    1').\n    sub(/\\.([A-Z])/, '.\\1').\n    sub(/\\.([A-Z])/, '.\\1').\n    sub(/\\\
    .([A-Z])/, '.\\1').\n    sub(/\\.([A-Z])/, '.\\1').\n    sub(/\\.([A-Z])/, '.\\\
    1').\n    sub(/\\.([A-Z])/, '.\\1').\n    sub(/\\.([A-Z])/, '.\\1').\n    sub(/\\\
    .([A-Z])/, '.\\1').\n    sub(/\\.([A-Z])/, '.\\1').\n    sub(/\\.([A-Z])/, '.\\\
    1').\n    sub(/\\.([A-Z])/, '.\\1').\n    sub(/\\.([A-Z])/, '.\\1').\n    sub(/\\\
    .([A-Z])/, '.\\1').\n    sub(/\\.([A-Z])/, '.\\1').\n    sub(/\\.([A-Z])/, '.\\\
    1').\n    sub(/\\.([A-Z])/, '.\\1').\n    sub(/\\.([A-Z])/, '.\\1').\n    sub(/\\\
    .([A-Z])/, '.\\1').\n    sub(/\\.([A-Z])/, '.\\1').\n    sub(/\\.([A-Z])/, '.\\\
    1').\n    sub(/\\.([A-Z])/, '.\\1').\n    sub(/\\.([A-Z])/, '.\\1').\n    sub(/\\\
    .([A-Z])/, '.\\1').\n    sub(/\\.([A-Z])/, '.\\1').\n    sub(/\\.([A-Z])/, '.\\\
    1').\n    sub(/\\.([A-Z])/, '.\\1').\n    sub(/\\.([A-Z])/, '.\\1').\n    sub(/\\\
    .([A-Z])/, '.\\1').\n    sub(/\\.([A-Z])/, '.\\1').\n    sub(/", "  extensions_count\
    \ = extensions.length\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.capitalize\n    extension_class_name.gsub!(/[A-Z]/,\
    \ \"\").gsub!(/[a-z]/, \"\")\n    extension_class_name.gsub!(/[0-9]/, \"\")\n\
    \    extension_class_name.gsub!(/[^A-Za-z]/, \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/,\
    \ \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9]/, \"\")\n    extension_class_name.gsub!(/[^A-Za-z0-9",
  "  extension_strength = extension_strength(extensions)\n  extension_strength.sort!\n\
    \  extension_strength.reverse!\n  extension_strength.first\nend", "  extensions_count\
    \ = extensions.count\n  extensions_count.times do |i|\n    extensions_count -=\
    \ 1 if extensions[i].downcase == class_name[i].downcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].upcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].upcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].downcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].upcase == class_name[i].upcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].downcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].upcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].upcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].downcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].upcase == class_name[i].upcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].downcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].upcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].upcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name[i].downcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].upcase == class_name[i].upcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].downcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].upcase ", "  extensions_count = extensions.length\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.capitalize\n\
    \    extension_class_name.each_char do |letter|\n      if letter.upcase == letter\n\
    \        extensions_count -= 1\n        break\n      end\n    end\n  end\n  \n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.capitalize\n    extension_class_name.each_char do |letter|\n   \
    \   if letter.downcase == letter\n        extensions_count -= 1\n        break\n\
    \      end\n    end\n  end\n  \n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.capitalize\n    extension_class_name.each_char\
    \ do |letter|\n      if letter.upcase == letter\n        extensions_count -= 1\n\
    \        break\n      end\n    end\n  end\n  \n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_class_name = extension.capitalize\n\
    \    extension_class_name.each_char do |letter|\n      if letter.downcase == letter\n\
    \        extensions_count -= 1\n        break\n      end\n    end\n  end\n  \n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.capitalize\n    extension_class_name.each_char do |letter|\n   \
    \   if letter.upcase == letter\n        extensions_count -= 1\n        break\n\
    \      end\n    end\n  end\n  \n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.capitalize\n    extension_class_name.each_char\
    \ do |letter|\n      if letter.downcase == letter\n        extensions_count -=\
    \ 1\n        break\n      end\n    end\n  end\n  \n  extensions_count.times do\
    \ |i|\n    extension = extensions[i]\n    extension_class_name = extension.capitalize\n\
    \    extension_class_name.each_char do |letter|\n      if letter.upcase == letter\n\
    \        extensions_count -= 1\n        break\n      end\n    end\n  end\n  \n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.capitalize\n    extension_class_name.each_char do |letter|\n   \
    \   if letter.downcase == letter\n        extensions_count -= 1\n        break\n\
    \      end\n    end\n  end\n  \n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.capitalize\n    ", " \
    \ extensions_count = extensions.count\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].downcase == class_name.downcase.gsub(/[^A-Z]/, '')\n \
    \ end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name.downcase.gsub(/[^a-z]/, '')\n  end\n  extensions_count.times do\
    \ |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name.downcase.gsub(/[^A-Za-z]/,\
    \ '')\n  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name.downcase.gsub(/[^A-Z]/, '')\n  end\n  extensions_count.times do\
    \ |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name.downcase.gsub(/[^a-z]/,\
    \ '')\n  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name.downcase.gsub(/[^A-Za-z]/, '')\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name.downcase.gsub(/[^A-Z]/,\
    \ '')\n  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name.downcase.gsub(/[^a-z]/, '')\n  end\n  extensions_count.times do\
    \ |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name.downcase.gsub(/[^A-Za-z]/,\
    \ '')\n  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name.downcase.gsub(/[^A-Z]/, '')\n  end\n  extensions_count.times do\
    \ |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name.downcase.gsub(/[^a-z]/,\
    \ '')\n  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name.downcase.gsub(/[^A-Za-z]/, '')\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name.downcase.gsub(/[^A-Z]/,\
    \ '')\n  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name.downcase.gsub(/[^a-z]/, '')\n  end\n  extensions_count.times do\
    \ |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name.downcase.g",
  "  extensions_sorted = extensions.sort\n  extensions_sorted.reverse!\n  extensions_sorted.each\
    \ do |extension|\n    extension_class_name = extension.downcase\n    extension_class_name.each_char.with_index\
    \ do |char, index|\n      if index == extension_class_name.index(char)\n     \
    \   strength = char.upcase - char.downcase\n        break if strength == 0\n \
    \     end\n    end\n  end\n  extensions_sorted.each do |extension|\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char.with_index do |char,\
    \ index|\n      if index == extension_class_name.index(char)\n        strength\
    \ = char.upcase - char.downcase\n        break if strength == 0\n      end\n \
    \   end\n  end\n  extensions_sorted.each do |extension|\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char.with_index do |char,\
    \ index|\n      if index == extension_class_name.index(char)\n        strength\
    \ = char.upcase - char.downcase\n        break if strength == 0\n      end\n \
    \   end\n  end\n  extensions_sorted.each do |extension|\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char.with_index do |char,\
    \ index|\n      if index == extension_class_name.index(char)\n        strength\
    \ = char.upcase - char.downcase\n        break if strength == 0\n      end\n \
    \   end\n  end\n  extensions_sorted.each do |extension|\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char.with_index do |char,\
    \ index|\n      if index == extension_class_name.index(char)\n        strength\
    \ = char.upcase - char.downcase\n        break if strength == 0\n      end\n \
    \   end\n  end\n  extensions_sorted.each do |extension|\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char.with_index do |char,\
    \ index|\n      if index == extension_class_name.index(char)\n        strength\
    \ = char.upcase - char.downcase\n        break if strength == 0\n      end\n \
    \   end\n  end\n  extensions_sorted.each do |extension|\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char.with_index do |char,\
    \ index|\n      if index == extension_class_name.index(char)\n        strength\
    \ = char.upcase - char.downcase\n        break if strength == 0\n      end\n \
    \   end\n  end", "  extension_strengths = []\n  extension_strengths_sorted = []\n\
    \  extension_strengths_sorted.push(extensions[0])\n  extension_strengths_sorted.push(extensions[1])\n\
    \  extension_strengths_sorted.push(extensions[2])\n  extension_strengths_sorted.push(extensions[3])\n\
    \  extension_strengths_sorted.push(extensions[4])\n  extension_strengths_sorted.push(extensions[5])\n\
    \  extension_strengths_sorted.push(extensions[6])\n  extension_strengths_sorted.push(extensions[7])\n\
    \  extension_strengths_sorted.push(extensions[8])\n  extension_strengths_sorted.push(extensions[9])\n\
    \  extension_strengths_sorted.push(extensions[10])\n  extension_strengths_sorted.push(extensions[11])\n\
    \  extension_strengths_sorted.push(extensions[12])\n  extension_strengths_sorted.push(extensions[13])\n\
    \  extension_strengths_sorted.push(extensions[14])\n  extension_strengths_sorted.push(extensions[15])\n\
    \  extension_strengths_sorted.push(extensions[16])\n  extension_strengths_sorted.push(extensions[17])\n\
    \  extension_strengths_sorted.push(extensions[18])\n  extension_strengths_sorted.push(extensions[19])\n\
    \  extension_strengths_sorted.push(extensions[20])\n  extension_strengths_sorted.push(extensions[21])\n\
    \  extension_strengths_sorted.push(extensions[22])\n  extension_strengths_sorted.push(extensions[23])\n\
    \  extension_strengths_sorted.push(extensions[24])\n  extension_strengths_sorted.push(extensions[25])\n\
    \  extension_strengths_sorted.push(extensions[26])\n  extension_strengths_sorted.push(extensions[27])\n\
    \  extension_strengths_sorted.push(extensions[28])\n  extension_strengths_sorted.push(extensions[29])\n\
    \  extension_strengths_sorted.push(extensions[30])\n  extension_strengths_sorted.push(extensions[31])\n\
    \  extension_strengths_sorted.push(extensions[32])\n  extension_strengths_sorted.push(extensions[33])\n\
    \  extension_strengths_sorted.push(extensions[34])\n  extension_strengths_sorted.push(extensions[35])\n\
    \  extension_strengths_sorted.push(extensions[36])\n  extension_strengths_sorted.push(extensions[37])\n\
    \  extension_strengths_sorted.push(extensions[38])\n  ", "  extension_strengths\
    \ = Hash.new(0)\n  extensions.each do |extension|\n    extension_strengths[extension.upcase]\
    \ += 1\n    extension_strengths[extension.downcase] += 1\n  end\n  max_strength\
    \ = extension_strengths.values.max\n  max_strength.times do |i|\n    extension_strengths.delete(extension_strengths.keys.sample)\n\
    \  end\n  extension_strengths.keys.each do |extension|\n    extension_strengths[extension.upcase]\
    \ -= i\n    extension_strengths[extension.downcase] -= i\n  end\n  extension_strengths.values.each\
    \ do |strength|\n    return class_name + '.' + extension_strengths.keys.sample\n\
    \  end\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks so much for this. I really\
    \ appreciate it. I will try it out and let you know how it goes.\n<|/ c |>\n<|\
    \ c |>\nI ran the code and it worked perfectly. Thanks so much for this. I really\
    \ appreciate it. I will try it out and let you know how it goes.\n<|/ c |>\n<|\
    \ c |>\nI ran the code and it worked perfectly. Thanks so much for this. I really\
    \ appreciate it. I will try it out and let you know how it goes.\n<|/ c |>\n<|\
    \ c |>\nI ran the code and it worked perfectly. Thanks so much for this. I really\
    \ appreciate it. I will try it out and let you know how it goes.\n<|/ c |>\n<|\
    \ a dscore=0 |>\n<code>", "  extension_strength = extension_strength(extensions)\n\
    \  \n  extension_strength.each do |extension|\n    if extension_strength[extension]\
    \ == extension_strength[extension].downcase\n      return class_name + '.' + extension\n\
    \    end\n  end\nend", "  extensions_count = extensions.length\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.count(\"A\") + extension_class_name.count(\"B\") + extension_class_name.count(\"\
    C\") + extension_class_name.count(\"D\") + extension_class_name.count(\"E\") +\
    \ extension_class_name.count(\"F\") + extension_class_name.count(\"G\") + extension_class_name.count(\"\
    H\") + extension_class_name.count(\"I\") + extension_class_name.count(\"J\") +\
    \ extension_class_name.count(\"K\") + extension_class_name.count(\"L\") + extension_class_name.count(\"\
    M\") + extension_class_name.count(\"N\") + extension_class_name.count(\"O\") +\
    \ extension_class_name.count(\"P\") + extension_class_name.count(\"Q\") + extension_class_name.count(\"\
    R\") + extension_class_name.count(\"S\") + extension_class_name.count(\"T\") +\
    \ extension_class_name.count(\"U\") + extension_class_name.count(\"V\") + extension_class_name.count(\"\
    W\") + extension_class_name.count(\"X\") + extension_class_name.count(\"Y\") +\
    \ extension_class_name.count(\"Z\")\n  end\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.count(\"A\") + extension_class_name.count(\"B\") + extension_class_name.count(\"\
    C\") + extension_class_name.count(\"D\") + extension_class_name.count(\"E\") +\
    \ extension_class_name.count(\"F\") + extension_class_name.count(\"G\") + extension_class_name.count(\"\
    H\") + extension_class_name.count(\"I\") + extension_class_name.count(\"J\") +\
    \ extension_class_name.count(\"K\") + extension_class_name.count(\"L\") + extension_class_name.count(\"\
    M\") + extension_class_name.count(\"N\") + extension_class_name.count(\"O\") +\
    \ extension_class_name.count(\"P\") + extension_class_name.count(\"Q\") + extension_class_name.count(\"\
    R\") + extension_class_name.count(\"S\") + extension_class_name.count(\"T\") +\
    \ extension_class_name.count(\"U\") + extension_class_name.count(\"V\") + extension_class_name.count(\"\
    W\") + extension_class_name.count(\"X\") + extension", "  extensions_count = extensions.length\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char do |char|\n      if\
    \ char.upcase == char\n        extensions_count -= 1\n        break\n      end\n\
    \    end\n  end\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |char|\n      if char.upcase == char\n        extensions_count -= 1\n   \
    \     break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |char|\n      if char.upcase == char\n        extensions_count -= 1\n   \
    \     break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |char|\n      if char.upcase == char\n        extensions_count -= 1\n   \
    \     break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |char|\n      if char.upcase == char\n        extensions_count -= 1\n   \
    \     break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |char|\n      if char.upcase == char\n        extensions_count -= 1\n   \
    \     break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |char|\n      if char.upcase == char\n        extensions_count -= 1\n   \
    \     break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |char|\n      if char.upcase == char\n        extensions_count -= 1\n   \
    \     break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |", "  extensions_count = extensions.length\n  extensions_count.times do\
    \ |i|\n    extension = extensions[i]\n    extension_upper = extension.upcase\n\
    \    extension_lower = extension.downcase\n    extension_strength = extension_upper.length\
    \ - extension_lower.length\n    extension_strength = extension_strength.to_f\n\
    \    if extension_strength > 0\n      extensions_strength = extensions_strength.to_f\n\
    \      extensions_strength += extension_strength\n      extensions_strength =\
    \ extensions_strength.to_f\n      break\n    end\n  end\n  extensions_strength\
    \ = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_strength = extensions_strength.to_f\n  extensions_strength = extensions_strength.to_f\n\
    \  extensions_", "  extension_strengths = []\n  extensions.each do |extension|\n\
    \    extension_strength = extension.count('a') - extension.count('A')\n    extension_strength\
    \ ||= 0\n    extension_strength ||= extension.count('b') - extension.count('B')\n\
    \    extension_strength ||= 0\n    extension_strength ||= extension.count('c')\
    \ - extension.count('C')\n    extension_strength ||= 0\n    extension_strength\
    \ ||= extension.count('d') - extension.count('D')\n    extension_strength ||=\
    \ 0\n    extension_strength ||= extension.count('e') - extension.count('E')\n\
    \    extension_strength ||= 0\n    extension_strength ||= extension.count('f')\
    \ - extension.count('F')\n    extension_strength ||= 0\n    extension_strength\
    \ ||= extension.count('g') - extension.count('G')\n    extension_strength ||=\
    \ 0\n    extension_strength ||= extension.count('h') - extension.count('H')\n\
    \    extension_strength ||= 0\n    extension_strength ||= extension.count('i')\
    \ - extension.count('I')\n    extension_strength ||= 0\n    extension_strength\
    \ ||= extension.count('j') - extension.count('J')\n    extension_strength ||=\
    \ 0\n    extension_strength ||= extension.count('k') - extension.count('K')\n\
    \    extension_strength ||= 0\n    extension_strength ||= extension.count('l')\
    \ - extension.count('L')\n    extension_strength ||= 0\n    extension_strength\
    \ ||= extension.count('m') - extension.count('M')\n    extension_strength ||=\
    \ 0\n    extension_strength ||= extension.count('n') - extension.count('N')\n\
    \    extension_strength ||= 0\n    extension_strength ||= extension.count('o')\
    \ - extension.count('O')\n    extension_strength ||= 0\n    extension_strength\
    \ ||= extension.count('p') - extension.count('P')\n    extension_strength ||=\
    \ 0\n    extension_strength ||= extension.count('q') - extension.count('Q')\n\
    \    extension_strength ||= 0\n    ", "  extensions_count = extensions.length\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension_class_name\
    \ = extension.downcase\n    extension_class_name.each_char do |letter|\n     \
    \ letter = letter.upcase\n      if letter == letter\n        letter = letter +\
    \ letter\n      end\n    end\n    extension_class_name = extension_class_name.to_sym\n\
    \    extension_class_name.each_char do |letter|\n      letter = letter.upcase\n\
    \      if letter == letter\n        letter = letter + letter\n      end\n    end\n\
    \    extension_class_name = extension_class_name.to_sym\n    extension_class_name.each_char\
    \ do |letter|\n      letter = letter.upcase\n      if letter == letter\n     \
    \   letter = letter + letter\n      end\n    end\n    extension_class_name = extension_class_name.to_sym\n\
    \    extension_class_name.each_char do |letter|\n      letter = letter.upcase\n\
    \      if letter == letter\n        letter = letter + letter\n      end\n    end\n\
    \    extension_class_name = extension_class_name.to_sym\n    extension_class_name.each_char\
    \ do |letter|\n      letter = letter.upcase\n      if letter == letter\n     \
    \   letter = letter + letter\n      end\n    end\n    extension_class_name = extension_class_name.to_sym\n\
    \    extension_class_name.each_char do |letter|\n      letter = letter.upcase\n\
    \      if letter == letter\n        letter = letter + letter\n      end\n    end\n\
    \    extension_class_name = extension_class_name.to_sym\n    extension_class_name.each_char\
    \ do |letter|\n      letter = letter.upcase\n      if letter == letter\n     \
    \   letter = letter + letter\n      end\n    end\n    extension_class_name = extension_class_name.to_sym\n\
    \    extension_class_name.each_char do |letter|\n      letter = letter.upcase\n\
    \      if letter == letter\n        letter = letter + letter\n      end\n    end\n\
    \    extension_class_name = extension_class_name.to_sym\n    extension_class_name.each_char\
    \ do |letter|\n      letter = letter.upcase\n      if letter == letter\n     \
    \   letter = letter + letter\n      end\n    end\n    extension_class_name = extension_class_name.to_sym\n\
    \    extension_class_name.each_char do |letter|\n      letter = letter.upcase\n\
    \      if letter == letter\n        letter = letter + letter\n      end\n    end\n\
    \    extension_class_name = extension_class_name.to_sym\n", "  extension_strength\
    \ = extension_strength(extensions)\n  extension_strength.each do |extension|\n\
    \    if extension_strength[extension] == extension_strength[extension].upcase\n\
    \      return class_name + '.' + extension\n    end\n  end\nend", "  extensions_count\
    \ = extensions.length\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_upper = extension.upcase\n    extension_lower = extension.downcase\n\
    \    extension_strength = extension_upper.length - extension_lower.length\n  \
    \  extension_strength.times do |j|\n      extension_upper = extension_upper.chop\n\
    \      extension_lower = extension_lower.chop\n      break if extension_strength\
    \ == j\n    end\n    extension_strength = extension_strength.to_i\n    extension_strength.times\
    \ do |j|\n      extension_upper = extension_upper.upcase\n      extension_lower\
    \ = extension_lower.downcase\n      break if extension_strength == j\n    end\n\
    \    extension_strength = extension_strength.to_i\n    extension_strength.times\
    \ do |j|\n      extension_upper = extension_upper.upcase\n      extension_lower\
    \ = extension_lower.downcase\n      break if extension_strength == j\n    end\n\
    \    extension_strength = extension_strength.to_i\n    extension_strength.times\
    \ do |j|\n      extension_upper = extension_upper.upcase\n      extension_lower\
    \ = extension_lower.downcase\n      break if extension_strength == j\n    end\n\
    \    extension_strength = extension_strength.to_i\n    extension_strength.times\
    \ do |j|\n      extension_upper = extension_upper.upcase\n      extension_lower\
    \ = extension_lower.downcase\n      break if extension_strength == j\n    end\n\
    \    extension_strength = extension_strength.to_i\n    extension_strength.times\
    \ do |j|\n      extension_upper = extension_upper.upcase\n      extension_lower\
    \ = extension_lower.downcase\n      break if extension_strength == j\n    end\n\
    \    extension_strength = extension_strength.to_i\n    extension_strength.times\
    \ do |j|\n      extension_upper = extension_upper.upcase\n      extension_lower\
    \ = extension_lower.downcase\n      break if extension_strength == j\n    end\n\
    \    extension_strength = extension_strength.to_i\n    extension_strength.times\
    \ do |j|\n      extension_upper = extension_upper.upcase\n      extension_lower\
    \ = extension_lower.downcase\n      break if extension_strength == j\n    end\n\
    \    extension_strength = extension_strength.to_i\n    extension_strength.times\
    \ do |", "  extensions_count = extensions.length\n  extensions_count.times do\
    \ |i|\n    extension = extensions[i]\n    extension_count = extensions_count -\
    \ i\n    extension_count.times do |j|\n      extension_count = j + 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension_count - 1\n      extension_count\
    \ = extension_count - 1\n      extension_count = extension", "  extensions_count\
    \ = extensions.length\n  extensions_count.times do |i|\n    extension = extensions[i]\n\
    \    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |char|\n      if char.upcase == char\n        extensions_count -= 1\n   \
    \     break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |char|\n      if char.upcase == char\n        extensions_count -= 1\n   \
    \     break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |char|\n      if char.upcase == char\n        extensions_count -= 1\n   \
    \     break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |char|\n      if char.upcase == char\n        extensions_count -= 1\n   \
    \     break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |char|\n      if char.upcase == char\n        extensions_count -= 1\n   \
    \     break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |char|\n      if char.upcase == char\n        extensions_count -= 1\n   \
    \     break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |char|\n      if char.upcase == char\n        extensions_count -= 1\n   \
    \     break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |char|\n      if char.upcase == char\n        extensions_count -= 1\n   \
    \     break\n      end\n    end\n  end\n  extensions_count.times do |i|\n    extension\
    \ = extensions[i]\n    extension_class_name = extension.downcase\n    extension_class_name.each_char\
    \ do |", "  extensions_sorted = extensions.sort\n  extensions_sorted.reverse!\n\
    \  extensions_sorted.each do |extension|\n    extension_class = class_name.constantize\n\
    \    extension_class.send(:include, extension)\n  end\n  extensions_sorted.each\
    \ do |extension|\n    extension_class = class_name.constantize\n    extension_class.send(:extend,\
    \ extension)\n  end\n  extensions_sorted.each do |extension|\n    extension_class\
    \ = class_name.constantize\n    extension_class.send(:extend, extension)\n  end\n\
    \  extensions_sorted.each do |extension|\n    extension_class = class_name.constantize\n\
    \    extension_class.send(:extend, extension)\n  end\n  extensions_sorted.each\
    \ do |extension|\n    extension_class = class_name.constantize\n    extension_class.send(:extend,\
    \ extension)\n  end\n  extensions_sorted.each do |extension|\n    extension_class\
    \ = class_name.constantize\n    extension_class.send(:extend, extension)\n  end\n\
    \  extensions_sorted.each do |extension|\n    extension_class = class_name.constantize\n\
    \    extension_class.send(:extend, extension)\n  end\n  extensions_sorted.each\
    \ do |extension|\n    extension_class = class_name.constantize\n    extension_class.send(:extend,\
    \ extension)\n  end\n  extensions_sorted.each do |extension|\n    extension_class\
    \ = class_name.constantize\n    extension_class.send(:extend, extension)\n  end\n\
    \  extensions_sorted.each do |extension|\n    extension_class = class_name.constantize\n\
    \    extension_class.send(:extend, extension)\n  end\n  extensions_sorted.each\
    \ do |extension|\n    extension_class = class_name.constantize\n    extension_class.send(:extend,\
    \ extension)\n  end\n  extensions_sorted.each do |extension|\n    extension_class\
    \ = class_name.constantize\n    extension_class.send(:extend, extension)\n  end\n\
    \  extensions_sorted.each do |extension|\n    extension_class = class_name.constantize\n\
    \    extension_class.send(:extend, extension)\n  end\n  extensions_sorted.each\
    \ do |extension|\n    extension_class = class_name.constantize\n    extension_class.send(:extend,\
    \ extension)\n  end\n  extensions_sorted.each do |extension|\n    extension_class\
    \ = class_name.constantize\n    extension_class.send(:extend, extension)\n  end\n\
    \  extensions_sorted.each do |extension|\n    extension_class = class_name.",
  "  extension_strengths = []\n  extension_strengths.concat(extensions.map { |e| e.to_s.downcase.split(//).count\
    \ { |c| c.upcase == c } })\n  extension_strengths.sort!\n  extension_strengths.reverse!\n\
    \  extension_strengths.first\nend\n</code>\n<|/ a tags=ruby,string |>\n<| c |>\n\
    I like your solution, but I wonder if it would be possible to do it without using\
    \ any gems.\n<|/ c |>\n<| c |>\nI added a solution without using any gems.\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>", "  extensions_count = extensions.count\n  extensions_count.times\
    \ do |i|\n    extensions_count.times do |j|\n      extensions_count.times do |k|\n\
    \        extensions_count.times do |l|\n          extensions_count.times do |m|\n\
    \            extensions_count.times do |n|\n              extensions_count.times\
    \ do |o|\n                extensions_count.times do |p|\n                  extensions_count.times\
    \ do |q|\n                    extensions_count.times do |r|\n                \
    \      extensions_count.times do |s|\n                        extensions_count.times\
    \ do |t|\n                          extensions_count.times do |u|\n          \
    \                  extensions_count.times do |v|\n                           \
    \   extensions_count.times do |w|\n                                extensions_count.times\
    \ do |x|\n                                  extensions_count.times do |y|\n  \
    \                                  extensions_count.times do |z|\n           \
    \                           extensions_count.times do |aa|\n                 \
    \                       extensions_count.times do |ab|\n                     \
    \                     extensions_count.times do |ac|\n                       \
    \                     extensions_count.times do |ad|\n                       \
    \                       extensions_count.times do |ae|\n                     \
    \                           extensions_count.times do |af|\n                 \
    \                                 extensions_count.times do |ag|\n           \
    \                                         extensions_count.times do |ah|\n   \
    \                                                   extensions_count.times do\
    \ |ai|\n                                                        extensions_count.times\
    \ do |aj|\n                                                          extensions_count.times\
    \ do |ak|\n                                                            extensions_count.times\
    \ do |al|\n                                                              extensions_count.times\
    \ do |am|\n                                                                extensions_count.times\
    \ do |an|\n                                                                  extensions_count.times\
    \ do |ao|\n                                                                  \
    \  extensions_count.times do |ap|\n                                          \
    \                            extensions_count.times do |aq|\n                \
    \                                                        extensions_count.times\
    \ do |ar|\n                                                                  \
    \        extensions_count.times do |as|\n                                    \
    \                                        extensions_count.times do |at|\n    \
    \                                                                          extensions_count.times\
    \ do |au|\n                                                                  \
    \              extensions_count.times do |av|\n                              \
    \                                                    extensions_count.times do\
    \ |aw|\n                                                                     \
    \               extensions_count.times do |ax|\n                             \
    \                                                         extensions_count.times\
    \ do |ay|\n                                                                  \
    \                      extensions_count.times do |az|\n                      \
    \                                                                    extensions_count.times\
    \ do |ba|\n                                                                  \
    \                          extensions_count.times do |bb|\n                  \
    \                                                                            extensions_count.times\
    \ do |bc|\n                                                                  \
    \                              extensions_count.times do |bd|\n              \
    \                                                                            \
    \        extensions_count.times do |be|\n                                    \
    \                                                                extensions_count.times\
    \ do |bf|\n                                                                  \
    \                                    extensions_count.times do |bg|\n        \
    \                                                                            \
    \                    extensions_count.times do |bh|\n                        \
    \                                                                            \
    \      extensions_count.times do |bi|\n                                      \
    \                                                                      extensions_count.times\
    \ do |bj|\n", "  extensions_count = extensions.length\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      if c.upcase == c\n        extensions_count\
    \ = i - 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      if c.upcase == c\n        extensions_count\
    \ = i\n        break\n      end\n    end\n  end\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      if c.upcase == c\n        extensions_count\
    \ = i + 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      if c.upcase == c\n        extensions_count\
    \ = i + 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      if c.upcase == c\n        extensions_count\
    \ = i + 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      if c.upcase == c\n        extensions_count\
    \ = i + 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      if c.upcase == c\n        extensions_count\
    \ = i + 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      if c.upcase == c\n        extensions_count\
    \ = i + 1\n        break\n      end\n    end\n  end\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      if c.upcase ", "  extension_strength\
    \ = extension_strength_of(class_name, extensions)\n  extension_strength.sort!\n\
    \  extension_strength.first\nend", "  extensions_count = extensions.count\n  extensions_count.times\
    \ do |i|\n    extensions_count.times do |j|\n      extensions_count.times do |k|\n\
    \        extensions_count.times do |l|\n          extensions_count.times do |m|\n\
    \            extensions_count.times do |n|\n              extensions_count.times\
    \ do |o|\n                extensions_count.times do |p|\n                  extensions_count.times\
    \ do |q|\n                    extensions_count.times do |r|\n                \
    \      extensions_count.times do |s|\n                        extensions_count.times\
    \ do |t|\n                          extensions_count.times do |u|\n          \
    \                  extensions_count.times do |v|\n                           \
    \   extensions_count.times do |w|\n                                extensions_count.times\
    \ do |x|\n                                  extensions_count.times do |y|\n  \
    \                                  extensions_count.times do |z|\n           \
    \                           extensions_count.times do |aa|\n                 \
    \                       extensions_count.times do |bb|\n                     \
    \                     extensions_count.times do |cc|\n                       \
    \                     extensions_count.times do |dd|\n                       \
    \                       extensions_count.times do |ee|\n                     \
    \                           extensions_count.times do |ff|\n                 \
    \                                 extensions_count.times do |gg|\n           \
    \                                         extensions_count.times do |hh|\n   \
    \                                                   extensions_count.times do\
    \ |ii|\n                                                        extensions_count.times\
    \ do |jj|\n                                                          extensions_count.times\
    \ do |kk|\n                                                            extensions_count.times\
    \ do |ll|\n                                                              extensions_count.times\
    \ do |mm|\n                                                                extensions_count.times\
    \ do |nn|\n                                                                  extensions_count.times\
    \ do |oo|\n                                                                  \
    \  extensions_count.times do |pp|\n                                          \
    \                            extensions_count.times do |qq|\n                \
    \                                                        extensions_count.times\
    \ do |rr|\n                                                                  \
    \        extensions_count.times do |ss|\n                                    \
    \                                        extensions_count.times do |tt|\n    \
    \                                                                          extensions_count.times\
    \ do |uu|\n                                                                  \
    \              extensions_count.times do |vv|\n                              \
    \                                                    extensions_count.times do\
    \ |ww|\n                                                                     \
    \               extensions_count.times do |xx|\n                             \
    \                                                         extensions_count.times\
    \ do |yy|\n                                                                  \
    \                      extensions_count.times do |zz|\n                      \
    \                                                                    extensions_count.times\
    \ do |aaa|\n                                                                 \
    \                           extensions_count.times do |bbb|\n                \
    \                                                                            \
    \  extensions_count.times do |ccc|\n                                         \
    \                                                       extensions_count.times\
    \ do |ddd|\n                                                                 \
    \                                 extensions_count.times do |eee|\n          \
    \                                                                            \
    \              extensions_count.times do |fff|\n                             \
    \                                                                         extensions_count.times\
    \ do |ggg|\n                                                                 \
    \                                       extensions_count.times do |hhh|\n    \
    \                                                                            \
    \                          extensions_count.times do |iii|\n                 \
    \                                                                            \
    \               extension", "  extensions_count = extensions.count\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].upcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].upcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].upcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].upcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].upcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase == class_name[i].downcase\n\
    \  end\n  extensions_count.times do |i|\n    extensions_count -= 1 if extensions[i].downcase\
    \ == class_name[i].upcase\n  end\n  extensions_count.times do |i|\n    extensions_count\
    \ -= 1 if extensions[i].upcase == class_name[i].upcase\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 if extensions[i].downcase ", "  extensions_count\
    \ = extensions.length\n  extensions_count = extensions_count.to_i\n  extensions_count\
    \ = extensions_count.times { |i| extensions[i].length }\n  extensions_count =\
    \ extensions_count.to_i\n  extensions_count = extensions_count.times { |i| extensions[i].downcase\
    \ }\n  extensions_count = extensions_count.to_i\n  extensions_count = extensions_count.times\
    \ { |i| extensions[i].upcase }\n  extensions_count = extensions_count.to_i\n \
    \ extensions_count = extensions_count.times { |i| extensions[i].gsub(/[^A-Z]/,\
    \ '') }\n  extensions_count = extensions_count.to_i\n  extensions_count = extensions_count.times\
    \ { |i| extensions[i].gsub(/[^a-z]/, '') }\n  extensions_count = extensions_count.to_i\n\
    \  extensions_count = extensions_count.times { |i| extensions[i].gsub(/[^0-9]/,\
    \ '') }\n  extensions_count = extensions_count.to_i\n  extensions_count = extensions_count.times\
    \ { |i| extensions[i].gsub(/[^A-Za-z0-9]/, '') }\n  extensions_count = extensions_count.to_i\n\
    \  extensions_count = extensions_count.times { |i| extensions[i].gsub(/[^A-Za-z0-9]/,\
    \ '') }\n  extensions_count = extensions_count.to_i\n  extensions_count = extensions_count.times\
    \ { |i| extensions[i].gsub(/[^A-Za-z0-9]/, '') }\n  extensions_count = extensions_count.to_i\n\
    \  extensions_count = extensions_count.times { |i| extensions[i].gsub(/[^A-Za-z0-9]/,\
    \ '') }\n  extensions_count = extensions_count.to_i\n  extensions_count = extensions_count.times\
    \ { |i| extensions[i].gsub(/[^A-Za-z0-9]/, '') }\n  extensions_count = extensions_count.to_i\n\
    \  extensions_count = extensions_count.times { |i| extensions[i].gsub(/[^A-Za-z0-9]/,\
    \ '') }\n  extensions_count = extensions_count.to_i\n  extensions_count = extensions_count.times\
    \ { |i| extensions[i].gsub(/[^A-Za-z0-9]/, '') }\n  extensions_count = extensions_count.to_i\n\
    \  extensions_count = extensions_count.times { |i| extensions[i].gsub(/[^A-Za-z0-9]/,\
    \ '') }\n  extensions_count = extensions_count.to_i\n  extensions_count = extensions_count.times\
    \ { |i| extensions[i].gsub(/[^A-Za-z0-9]/, '') }\n  extensions_count = extension",
  "  extension_strengths = Hash.new(0)\n  extensions.each do |extension|\n    extension_strengths[extension.upcase]\
    \ += 1\n    extension_strengths[extension.downcase] += 1\n  end\n  extension_strengths.max_by\
    \ {|k, v| v}\nend", "  extensions_count = extensions.length\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_count = extension.count\n\
    \    extension_count.times do |j|\n      extension_letter = extension[j]\n   \
    \   extension_letter_count = extension_letter.count\n      extension_letter_count.times\
    \ do |k|\n        extension_letter_letter = extension_letter[k]\n        extension_letter_letter_count\
    \ = extension_letter_letter.count\n        extension_letter_letter_count.times\
    \ do |l|\n          extension_letter_letter_letter = extension_letter_letter[l]\n\
    \          extension_letter_letter_letter_count = extension_letter_letter_letter.count\n\
    \          extension_letter_letter_letter_count.times do |m|\n            extension_letter_letter_letter_letter\
    \ = extension_letter_letter_letter[m]\n            extension_letter_letter_letter_letter_count\
    \ = extension_letter_letter_letter_letter.count\n            extension_letter_letter_letter_count.times\
    \ do |n|\n              extension_letter_letter_letter_letter_letter = extension_letter_letter_letter_letter[n]\n\
    \              extension_letter_letter_letter_letter_letter_count = extension_letter_letter_letter_letter_letter.count\n\
    \              extension_letter_letter_letter_letter_count.times do |o|\n    \
    \            extension_letter_letter_letter_letter_letter_letter = extension_letter_letter_letter_letter_letter[o]\n\
    \                extension_letter_letter_letter_letter_letter_count = extension_letter_letter_letter_letter_letter_letter.count\n\
    \                extension_letter_letter_letter_letter_letter_count.times do |p|\n\
    \                  extension_letter_letter_letter_letter_letter_letter_letter\
    \ = extension_letter_letter_letter_letter_letter_letter[p]\n                 \
    \ extension_letter_letter_letter_letter_letter_letter_count = extension_letter_letter_letter_letter_letter_letter_letter.count\n\
    \                  extension_letter_letter_letter_letter_letter_letter_count =\
    \ extension_letter_letter_letter_letter_letter_letter_letter_count\n         \
    \         extension_letter_letter_letter_letter_letter_letter_letter_count = extension_letter_letter_letter_letter_letter_letter_letter_letter_count\n\
    \                  extension_letter_letter_letter_letter_letter_letter_letter_count\
    \ = extension_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_count\n\
    \                  extension_letter_letter_letter_letter_letter_letter_letter_letter_count\
    \ = extension_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_count\n\
    \                  extension_letter_letter_letter_letter_letter_letter_letter_letter_count\
    \ = extension_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_count\n\
    \                  extension_letter_letter_letter_letter_letter_letter_letter_letter_count\
    \ = extension_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_count\n\
    \                  extension_letter_letter_letter_letter_letter_letter_letter_letter_count\
    \ = extension_letter_letter_letter_letter_letter_letter_letter_letter_letter_letter_count\n\
    \                  extension", "  extensions_count = extensions.count\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 \n    break if extensions_count == 0\n  end\n\
    \  extensions_count.times do |i|\n    extensions_count -= 1 \n    break if extensions_count\
    \ == 0\n  end\n  extensions_count.times do |i|\n    extensions_count -= 1 \n \
    \   break if extensions_count == 0\n  end\n  extensions_count.times do |i|\n \
    \   extensions_count -= 1 \n    break if extensions_count == 0\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 \n    break if extensions_count == 0\n  end\n\
    \  extensions_count.times do |i|\n    extensions_count -= 1 \n    break if extensions_count\
    \ == 0\n  end\n  extensions_count.times do |i|\n    extensions_count -= 1 \n \
    \   break if extensions_count == 0\n  end\n  extensions_count.times do |i|\n \
    \   extensions_count -= 1 \n    break if extensions_count == 0\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 \n    break if extensions_count == 0\n  end\n\
    \  extensions_count.times do |i|\n    extensions_count -= 1 \n    break if extensions_count\
    \ == 0\n  end\n  extensions_count.times do |i|\n    extensions_count -= 1 \n \
    \   break if extensions_count == 0\n  end\n  extensions_count.times do |i|\n \
    \   extensions_count -= 1 \n    break if extensions_count == 0\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 \n    break if extensions_count == 0\n  end\n\
    \  extensions_count.times do |i|\n    extensions_count -= 1 \n    break if extensions_count\
    \ == 0\n  end\n  extensions_count.times do |i|\n    extensions_count -= 1 \n \
    \   break if extensions_count == 0\n  end\n  extensions_count.times do |i|\n \
    \   extensions_count -= 1 \n    break if extensions_count == 0\n  end\n  extensions_count.times\
    \ do |i|\n    extensions_count -= 1 \n    break if extensions_count == 0\n  end\n\
    \  extensions_count.times do |i|\n    extensions_count -= 1 \n    break if extensions_count\
    \ == 0\n  end\n  extensions_count.times do |i|\n    extensions_count -= 1 \n \
    \   break if extensions_count == 0\n  end\n  extensions_count.times do |i|\n \
    \   extension", "  extensions_count = extensions.length\n  extensions_count.times\
    \ do |i|\n    extension = extensions[i]\n    extension_class = class_name + extension\n\
    \    extension_class_name = extension_class.split('.').last\n    extension_class_name.upcase.count.times\
    \ do |j|\n      if extension_class_name.upcase.count(j) > extension_class_name.downcase.count(j)\n\
    \        extension_class_name = extension_class_name.upcase.delete_at(j)\n   \
    \   end\n    end\n    if extension_class_name.upcase.count > extension_class_name.downcase.count\n\
    \      extension_class_name = extension_class_name.downcase.delete_at(extension_class_name.upcase.count)\n\
    \    end\n    return class_name + '.' + extension_class_name\n  end\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThanks for your answer. Your code works perfectly\
    \ for the example I gave, but when I try it on my own code it gives me the wrong\
    \ answer. I've updated my question to include my own code.\n<|/ c |>\n<| c |>\n\
    I updated my answer to include a solution for your updated question. Let me know\
    \ if that works.\n<|/ c |>\n<| c |>\nThanks for your help. Unfortunately it still\
    \ doesn't work. I've updated my question to include my own code and the output\
    \ it gives.\n<|/ c |>\n<| c |>\nI updated my answer to include a solution for\
    \ your updated question. Let me know if that works.\n<|/ c |>\n<| c |>\nThanks\
    \ for your help. Unfortunately it still doesn't work. I've updated my question\
    \ to include my own code and the output it gives.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>", "  extensions_count = extensions.length\n  extensions_count = extensions_count.to_i\n\
    \  extensions_count.times do |i|\n    extension = extensions[i]\n    extension\
    \ = extension.to_s.downcase\n    extensions_count = extensions_count.to_i\n  \
    \  extensions_count.times do |j|\n      extensions_count = extensions_count.to_i\n\
    \      extensions_count.times do |k|\n        extensions_count = extensions_count.to_i\n\
    \        extensions_count.times do |l|\n          extensions_count = extensions_count.to_i\n\
    \          extensions_count.times do |m|\n            extensions_count = extensions_count.to_i\n\
    \            extensions_count.times do |n|\n              extensions_count = extensions_count.to_i\n\
    \              extensions_count.times do |o|\n                extensions_count\
    \ = extensions_count.to_i\n                extensions_count.times do |p|\n   \
    \               extensions_count = extensions_count.to_i\n                  extensions_count.times\
    \ do |q|\n                    extensions_count = extensions_count.to_i\n     \
    \               extensions_count.times do |r|\n                      extensions_count\
    \ = extensions_count.to_i\n                      extensions_count.times do |s|\n\
    \                        extensions_count = extensions_count.to_i\n          \
    \              extensions_count.times do |t|\n                          extensions_count\
    \ = extensions_count.to_i\n                          extensions_count.times do\
    \ |u|\n                            extensions_count = extensions_count.to_i\n\
    \                            extensions_count.times do |v|\n                 \
    \             extensions_count = extensions_count.to_i\n                     \
    \         extensions_count.times do |w|\n                                extensions_count\
    \ = extensions_count.to_i\n                                extensions_count.times\
    \ do |x|\n                                  extensions_count = extensions_count.to_i\n\
    \                                  extensions_count.times do |y|\n           \
    \                         extensions_count = extensions_count.to_i\n         \
    \                           extensions_count.times do |z|\n                  \
    \                    extensions_count = extensions_count.to_i\n              \
    \                        extensions_count.times do |aa|\n                    \
    \                    extensions_count = extensions_count.to_i\n              \
    \                          extensions_count.times do |ab|\n                  \
    \                        extensions_count = extensions_count.to_i\n          \
    \                                extensions_count.times do |ac|\n            \
    \                                extensions_count = extensions_count.to_i\n  \
    \                                          extensions_count.times do |ad|\n  \
    \                                            extensions_count = extensions_count.to_i\n\
    \                                              extensions_count.times do |ae|\n\
    \                                                extensions_count = extensions_count.to_i\n\
    \                                                extensions_count.times do |af|\n\
    \                                                  extensions_count = extensions_count.to_i\n\
    \                                                  extensions_count.times do |ag|\n\
    \                                                    extensions_count = extensions_count.to_i\n\
    \                                                    extensions_count.times do\
    \ |ah", "  extensions_count = extensions.length\n  extensions_count.times do |i|\n\
    \    extension = extensions[i]\n    extension_class_name = extension.downcase\n\
    \    extension_class_name.each_char do |c|\n      next if c.upcase == c\n    \
    \  break if extension_class_name.count(c.downcase) == extensions_count\n    end\n\
    \    return class_name + '.' + extension\n  end\nend", "  extension_strength =\
    \ extension_strength(extensions)\n  extension_strength.sort!\n  extension_strength.each\
    \ do |extension|\n    if extension_strength.index(extension) == 0 \n      return\
    \ class_name + extension\n    end\n  end\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_116_sort_array
language: ruby
prompt: "# In this Kata, you have to sort an array of non-negative integers according\
  \ to\n# number of ones in their binary representation in ascending order.\n# For\
  \ similar number of ones, sort based on decimal value.\n# It must be implemented\
  \ like this:\n# >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n# >>> sort_array([-2,\
  \ -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n# >>> sort_array([1, 0, 2, 3, 4]) [0,\
  \ 1, 2, 3, 4]\ndef sort_array(arr)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_array\n\
  \    candidate = method(:sort_array)\n    assert_equal([1, 2, 4, 3, 5], candidate.call([1,\
  \ 5, 2, 3, 4]))\n    assert_equal([-4, -2, -6, -5, -3], candidate.call([-2, -3,\
  \ -4, -5, -6]))\n    assert_equal([0, 1, 2, 4, 3], candidate.call([1, 0, 2, 3, 4]))\n\
  \    assert_equal([], candidate.call([]))\n    assert_equal([2, 2, 4, 4, 3, 3, 5,\
  \ 5, 5, 7, 77], candidate.call([2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]))\n    assert_equal([32,\
  \ 3, 5, 6, 12, 44], candidate.call([3, 6, 44, 12, 32, 5]))\n    assert_equal([2,\
  \ 4, 8, 16, 32], candidate.call([2, 4, 8, 16, 32]))\n    assert_equal([2, 4, 8,\
  \ 16, 32], candidate.call([2, 4, 8, 16, 32]))\n  end\nend\n"
completions: ["  arr.sort!\n  arr.each_with_index do |e, i|\n    if e == 0\n     \
    \ arr[i] = e\n    end\n  end\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n\
    \  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr.map { |x| x == 1\
    \ ? x.to_s : x.to_i }\nend", "  arr.sort!\n  arr.map { |e| e > 0 ? e : -e }\n\
    end", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\n\
    end", "  arr.sort!\n  arr.map { |x| x.zero? ? x : x.to_s(2) }\nend", "  arr.sort!\n\
    \  arr\nend", "  arr.sort!\n  arr.each_with_index do |val, i|\n    arr[i] = arr[i].to_i\n\
    \  end\n  arr\nend", "  arr.sort!\n  arr.map { |x| x == 1 ? x.to_s : x.to_i }\n\
    end", "  arr.sort!\n  arr.each_with_index do |x, i|\n    arr[i] = arr[i].to_i\n\
    \  end\n  arr\nend", "  arr.sort!\n  arr.each_with_index do |val, i|\n    arr[i]\
    \ = 0 if val == 0\n    arr[i] = 1 if val == 1\n    arr[i] = val if val > 0\n \
    \ end\n  arr\nend", "  arr.sort!\n  arr.map { |x| x == 1 ? x.to_s : x.to_i }\n\
    end", "  arr.sort!\n  arr.each_with_index do |x, i|\n    arr[i] = x if x.zero?\n\
    \  end\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr.each_with_index\
    \ do |e, i|\n    if e == 0\n      arr[i] = e\n    end\n  end\n  arr\nend", " \
    \ arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend",
  "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend",
  "  arr.sort!\n  arr\nend", "  arr.sort!\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n\
    \  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr.map { |e| e > 0 ?\
    \ e : -e }\nend", "  arr.sort!\n  arr.each_with_index do |x, i|\n    arr[i] =\
    \ [x, i] if arr[i].nonzero?\n  end\n  arr\nend", "  arr.sort!\n  arr\nend", " \
    \ arr.sort!\n  arr\nend", "  arr.sort!\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n\
    \  arr.sort!\n  arr\nend", "  arr.sort!\n  arr.map { |x| x.zero? ? x : x.to_i\
    \ }\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr.map { |x| x == 1 ? x.to_s\
    \ : x.to_i }\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n\
    \  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n\
    \  arr.map { |x| x == 1 ? x.to_s : x.to_i }\nend", "  arr.sort!\n  arr.map { |i|\
    \ i.to_s(2) }\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr.map { |x|\
    \ x == 1 ? 0 : x }\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend",
  "  arr.sort!\n  arr.each_with_index do |x, i|\n    arr[i] = arr[i].to_i\n  end\n\
    \  arr\nend", "  arr.sort!\n  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend",
  "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr.each_with_index do |x, i|\n    if\
    \ x > 0\n      arr[i] = x\n    end\n  end\n  arr\nend", "  arr.sort!\n  arr.map\
    \ { |e| [e, arr.count(e)] }.sort_by { |e| e[1] }.map { |e| e[0] }\nend", "  arr.sort!\n\
    \  arr.each_with_index do |x, i|\n    arr[i] = [x, i] if x > 0\n  end\n  arr\n\
    end", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr.each_with_index do |x, i|\n\
    \    arr[i] = arr[i].to_i\n  end\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n\
    \  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr.each_with_index do\
    \ |e, i|\n    if e > 0 && (arr.length - i) > 1\n      arr[i], arr[i+1] = arr[i+1],\
    \ arr[i]\n    end\n  end\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n\
    \  arr.each_with_index do |x, i|\n    arr[i] = arr[i].to_i\n  end\n  arr\nend",
  "  arr.sort!\n  arr.map { |x| x.zero? ? x : x.to_i }\nend", "  arr.sort!\n  arr\n\
    end", "  arr.sort!\n  arr.each_with_index do |e, i|\n    if e > 0 && (arr.length\
    \ - i) > 1\n      arr[i], arr[i+1] = arr[i+1], arr[i]\n    end\n  end\n  arr\n\
    end", "  arr.sort!\n  arr.map { |x| x.to_s(2) }\nend", "  arr.sort!\n  arr\nend",
  "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr.each_with_index do |e, i|\n    if\
    \ e == 0\n      arr[i] = e\n    end\n  end\n  arr\nend", "  arr.sort!\n  arr\n\
    end", "  arr.sort!\n  arr.map { |i| i.to_s(2) }\nend", "  arr.sort!\n  arr\nend",
  "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\nend", "  arr.sort!\n\
    \  arr\nend", "  arr.sort!\n  arr.map { |x| x.to_s(2) }\nend", "  arr.sort!\n\
    \  arr.each_with_index do |x, i|\n    arr[i] = x if x.zero?\n  end\n  arr\nend",
  "  arr.sort!\n  arr.map { |x| x.zero? ? x : x.to_i }\nend", "  arr.sort!\n  arr\n\
    end", "  arr.sort!\n  arr\nend", "  arr.sort!\nend", "  arr.sort!\nend", "  arr.sort!\n\
    \  arr.map { |x| x.to_s(2) }\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n\
    \  arr.each_with_index do |x, i|\n    arr[i] = arr[i].to_i\n  end\n  arr\nend",
  "  arr.sort!\n  arr.each_with_index do |x, i|\n    arr[i] = arr[i].to_i\n  end\n\
    \  arr\nend", "  arr.sort!\n  arr.each_with_index do |val, i|\n    arr[i] = val\
    \ if val > 0\n  end\n  arr\nend", "  arr.sort!\n  arr.each_with_index do |x, i|\n\
    \    arr[i] = arr[i].to_i\n  end\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n\
    \  arr.each_with_index do |e, i|\n    if e.zero?\n      arr[i] = e\n    end\n\
    \  end\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend", " \
    \ arr.sort!\nend", "  arr.sort!\n  arr.each_with_index do |e, i|\n    if e ==\
    \ 0\n      arr[i] = e\n    end\n  end\n  arr\nend", "  arr.sort!\n  arr.each_with_index\
    \ do |x, i|\n    arr[i] = x if x.to_s.length <= 1\n  end\n  arr\nend", "  arr.sort!\n\
    \  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n\
    \  arr.each_with_index do |x, i|\n    arr[i] = x if x.to_s(2).count('1').zero?\n\
    \  end\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend", " \
    \ arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend",
  "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr.map {\
    \ |i| i if i.zero? }.sort!\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n\
    \  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr.each_with_index do\
    \ |val, i|\n    arr[i] = 0 if val == 0\n    arr[i] = 1 if val == 1\n  end\n  arr\n\
    end", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr.each_with_index\
    \ do |x, i|\n    arr[i] = 0 if arr[i] == 0\n  end\n  arr\nend", "  arr.sort!\n\
    \  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n\
    end", "  arr.sort!\n  arr.each_with_index do |x, i|\n    if x > 0\n      arr[i]\
    \ = x\n    end\n  end\n  arr\nend", "  arr.sort!\n  arr.each_with_index do |x,\
    \ i|\n    arr[i] = arr[i].to_i\n  end\n  arr\nend", "  arr.sort!\n  arr.map {\
    \ |x| x.zero? ? x : x.nonzero? ? x.to_i : x.to_i }\nend", "  arr.sort!\n  arr\n\
    end", "  arr.sort!\n  arr.each_with_index do |e, i|\n    if e > 0 then\n     \
    \ arr[i] = e - 1\n    end\n  end\n  arr\nend", "  arr.sort!\n  arr.map { |x| x.zero?\
    \ ? x : x.to_i }\nend", "  arr.sort!\n  arr.map { |x| x.zero? ? x : x.nonzero?\
    \ ? x.abs : x.to_i }\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr.map\
    \ { |x| x == 1 ? x.to_s : x.to_i }\nend", "  arr.sort!\nend", "  arr.sort!\n \
    \ arr\nend", "  arr.sort!\n  arr.map { |x| x == 1 ? x.to_s : x.to_i }\nend", " \
    \ arr.sort!\n  arr.each_with_index do |val, i|\n    arr[i] = 0 if val == 0\n \
    \   arr[i] = val if arr[i] == 1\n  end\n  arr\nend", "  arr.sort!\n  arr\nend",
  "  arr.sort!\n  arr.each_with_index do |x, i|\n    if x > 0\n      arr[i] = x\n\
    \    end\n  end\n  arr\nend", "  arr.sort!\n  arr.each_with_index do |x, i|\n\
    \    if x==0\n      arr[i] = -1\n    else\n      arr[i] = x\n    end\n  end\n\
    \  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr.map { |i| i if i.to_s.length\
    \ <= 2 }\nend", "  arr.sort!\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n\
    \  arr.each_with_index do |x, i|\n    arr[i] = x if x.zero?\n  end\n  arr\nend",
  "  arr.sort!\n  arr.map { |i| i.to_s(2) }\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n\
    \  arr.each_with_index do |val, index|\n    arr[index] = val if val > 0\n  end\n\
    \  arr\nend", "  arr.sort!\nend", "  arr.sort!\n  arr.sort!\n  arr\nend", "  arr.sort!\n\
    end", "  arr.sort!\n  arr.each_with_index do |e, i|\n    arr[i] = 0 if arr[i]\
    \ == 0\n  end\n  arr\nend", "  arr.sort!\n  arr.map { |x| x.zero? ? x : x.nonzero?\
    \ ? x.to_i : x.to_s }\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\n\
    end", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr.each_with_index do |x, i|\n\
    \    arr[i] = x if x.zero?\n  end\n  arr\nend", "  arr.sort!\n  arr.each_with_index\
    \ do |x, i|\n    arr[i] = arr[i].to_i\n  end\n  arr\nend", "  arr.sort!\n  arr.map\
    \ { |x| x.zero? ? x : x.to_s(2) }\nend", "  arr.sort!\n  arr.map { |x| x == 1\
    \ ? x.to_s : x.to_i }\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr.each_with_index\
    \ do |e, i|\n    arr[i] = 0 if arr[i] == 0\n  end\n  arr\nend", "  arr.sort!\n\
    \  arr\nend", "  arr.sort!\n  arr.each_with_index do |x, i|\n    arr[i] = arr[i].to_i\n\
    \  end\n  arr\nend", "  arr.sort!\n  arr.map { |x| x.zero? ? x : x.to_i }\nend",
  "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr.map { |x| x == 1 ? x.to_s : x.to_i\
    \ }\nend", "  arr.sort!\n  arr.each_with_index do |x, i|\n    arr[i] = x if x.zero?\n\
    \  end\n  arr\nend", "  arr.sort!\n  arr.each_with_index do |e, i|\n    if e ==\
    \ 0\n      arr[i] = e\n    end\n  end\n  arr\nend", "  arr.sort!\n  arr.each_with_index\
    \ do |e, i|\n    if e == 0\n      arr[i] = e\n    end\n  end\n  arr\nend", " \
    \ arr.sort!\n  arr.each_with_index do |x, i|\n    arr[i] = arr[i].to_i\n  end\n\
    \  arr\nend", "  arr.sort!\n  arr.map { |x| x.zero? ? x : x.to_s(2) }\nend", " \
    \ arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend",
  "  arr.sort!\n  arr.map { |x| x.zero? ? x : x.to_s(2) }\nend", "  arr.sort!\n  arr\n\
    end", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr.map { |x| x.zero? ? x : x.to_i\
    \ }\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n\
    \  arr.map { |x| x == 1 ? x.to_s : x.to_i }\nend", "  arr.sort!\n  arr.each_with_index\
    \ do |x, i|\n    arr[i] = arr[i].to_i\n  end\n  arr\nend", "  arr.sort!\n  arr\n\
    end", "  arr.sort!\n  arr\nend", "  arr.sort!\nend", "  arr.sort!\n  arr\nend",
  "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr\nend",
  "  arr.sort!\n  arr.each_with_index do |e, i|\n    arr[i] = 0 if e == 0\n  end\n\
    \  arr\nend", "  arr.sort!\n  arr.each_with_index do |x, i|\n    arr[i] = 0 if\
    \ arr[i] == 0\n  end\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n \
    \ arr.map { |x| x == 1 ? x.to_s : x.to_i }\nend", "  arr.sort!\n  arr.each_with_index\
    \ do |e, i|\n    if e == 0\n      arr[i] = e\n    end\n  end\n  arr\nend", " \
    \ arr.sort!\n  arr.map { |x| x.zero? ? x : x.to_s(2) }\nend", "  arr.sort!\n \
    \ arr.map { |x| x.zero? ? x : x.to_i }\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n\
    \  arr.each_with_index do |e, i|\n    if e == 0\n      arr[i] = e\n    end\n \
    \ end\n  arr\nend", "  arr.sort!\n  arr\nend", "  arr.sort!\n  arr.each_with_index\
    \ do |e, i|\n    if e == 0\n      arr[i] = e\n    end\n  end\n  arr\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

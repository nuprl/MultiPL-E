name: HumanEval_49_modp
language: ruby
prompt: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n# >>>\
  \ modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n# >>> modp(100,\
  \ 101)\n# 1\ndef modp(n, p)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_modp\n\
  \    candidate = method(:modp)\n    assert_equal(3, candidate.call(3, 5))\n    assert_equal(2,\
  \ candidate.call(1101, 101))\n    assert_equal(1, candidate.call(0, 101))\n    assert_equal(8,\
  \ candidate.call(3, 11))\n    assert_equal(1, candidate.call(100, 101))\n    assert_equal(4,\
  \ candidate.call(30, 5))\n    assert_equal(3, candidate.call(31, 5))\n  end\nend\n"
completions: ["  n = (n % p + p) % p\n  return n\nend", "  n = (n.to_i if n.kind_of?(Fixnum))\
    \ ? n : n.to_i\n  p = p.to_i\n  r = p % n\n  (r == 0) ? r : r + n\nend", "  r\
    \ = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  r\nend", '  return ((n
    % p) + p) % p', "  return ((n % p) + p) % p\nend", '  return ((n % p) + p) % p',
  "  r = 1\n  while n > p\n    r <<= 1\n    n >>= 1\n  r %= p\n  r &= (p - 1); r\n\
    end", "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  r\nend", '  return
    ((n % p) + p) % p', "  return ((n % p) + p) % p\nend", "  r = 1\n  while n > p\n\
    \    r = r * 2 % p\n    n /= p\n  return r\nend", "  n = (n.to_i if n.kind_of?(Fixnum))\
    \ ? n : n.to_s\n  p = p.to_i\n  while p > 0\n    q, r = n.divmod(p)\n    if r\
    \ != 0\n      return r\n    n, p = q, p-1\n  end\n  return n\nend", '  return
    ((n % p) + p) % p', '  return ((n % p) + p) % p', '  return ((n % p) + p) % p',
  "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  return r\nend", '  return
    ((n % p) + p) % p', "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n \
    \ r\nend", '  return ((n % p) + p) % p', "  r = 1\n  while n > p\n    r = r *\
    \ 2 % p\n    n /= p\n  return r\nend", '  return ((n % p) + p) % p', '  return
    ((n % p) + p) % p', '  return ((n % p) + p) % p', '  return ((n % p) + p) % p',
  "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  r\nend", "  r = 1\n  while\
    \ n > p\n    r = r * 2 % p\n    n /= p\n  return r\nend", "  return ((n % p) +\
    \ p) % p\nend", "  r = 1\n  while n > p\n    r <<= 1\n    n >>= 1\n  r %= p\n\
    \  r ^= n\n  r\nend", '  return ((n % p) + p) % p', '  return ((n % p) + p) %
    p', '  return ((n % p) + p) % p', "  n = n.to_i\n  p = p.to_i\n  while n > p\n\
    \    n -= p\n  end\n  n\nend", "  n = (n.to_i if n.kind_of?(Fixnum) || n.kind_of?(Bignum))\
    \ ? n : n.to_s\n  p = p.to_i\n  while p > 0\n    q = p / 2\n    if q * 2 > p\n\
    \      p -= 1\n    else\n      p %= q\n    end\n  end\n  p\nend", "  return ((n\
    \ % p) + p) % p\nend", '  return ((n % p) + p) % p', '  return ((n % p) + p) %
    p', "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  return r\nend",
  "  n = (n % p + p) % p\n  if n == 0: return 1\n  else return n\nend", "  n = (n.to_i\
    \ if n.is_a?(Fixnum) || n.is_a?(Bignum)) ? n : n.to_s\n  p = p.to_i if p.is_a?(Fixnum)\
    \ || p.is_a?(Bignum) ? p : p.to_s\n  if n.zero?\n    return 0\n  elsif p.zero?\n\
    \    return 1\n  elsif n.is_a?(Fixnum) && p.is_a?(Fixnum)\n    return n.modulo(p)\n\
    \  elsif n.is_a?(Bignum) && p.is_a?(Bignum)\n    return n.modulo(p)\n  else\n\
    \    raise(ArgumentError, \"invalid arguments: #{n.inspect} and #{p.inspect}\"\
    )\n  end\nend", "  n = (n % p + p) % p\n  return n\nend", '  return ((n % p) +
    p) % p', "  n = (n % p + p) % p\n  if n == 0: return 1\n  while n != 1 and n %\
    \ 2 == 0: n = n / 2\n  return n\nend", "  return ((n % p) + p) % p\nend", '  return
    ((n % p) + p) % p', "  n = (n % p + p) % p\n  return n\nend", '  return ((n %
    p) + p) % p', "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  return\
    \ r\nend", "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  return r\n\
    end", '  return ((n % p) + p) % p', '  return ((n % p) + p) % p', '  return ((n
    % p) + p) % p', "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  return\
    \ r\nend", "  r = 1\n  while n > p\n    r <<= 1\n    n >>= 1\n  r %= p\n  r ^=\
    \ n\n  r\nend", '  return ((n % p) + p) % p', '  return ((n % p) + p) % p', " \
    \ r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  r\nend", '  return ((n
    % p) + p) % p', "  n = n.to_i\n  p = p.to_i\n  while n > p\n    n -= p\n  end\n\
    \  n\nend", "  n1 = n % p\n  n2 = n % p\n  n3 = n % p\n  n4 = n % p\n  n5 = n\
    \ % p\n  n6 = n % p\n  n7 = n % p\n  n8 = n % p\n  n9 = n % p\n  n10 = n % p\n\
    \  n11 = n % p\n  n12 = n % p\n  n13 = n % p\n  n14 = n % p\n  n15 = n % p\n \
    \ n16 = n % p\n  n17 = n % p\n  n18 = n % p\n  n19 = n % p\n  n20 = n % p\n  n21\
    \ = n % p\n  n22 = n % p\n  n23 = n % p\n  n24 = n % p\n  n25 = n % p\n  n26 =\
    \ n % p\n  n27 = n % p\n  n28 = n % p\n  n29 = n % p\n  n30 = n % p\n  n31 = n\
    \ % p\n  n32 = n % p\n  n33 = n % p\n  n34 = n % p\n  n35 = n % p\n  n36 = n %\
    \ p\n  n37 = n % p\n  n38 = n % p\n  n39 = n % p\n  n40 = n % p\n  n41 = n % p\n\
    \  n42 = n % p\n  n43 = n % p\n  n44 = n % p\n  n45 = n % p\n  n46 = n % p\n \
    \ n47 = n % p\n  n48 = n % p\n  n49 = n % p\n  n50 = n % p\n  n51 = n % p\n  n52\
    \ = n % p\n  n53 = n % p\n  n54 = n % p\n  n55 = n % p\n  n56 = n % p\n  n57 =\
    \ n % p\n  n58 = n % p\n  n59 = n % p\n  n60 = n % p\n  n61 = n % p\n  n62 = n\
    \ % p\n  n63 = n % p\n  n64 = n % p\n  n65 = n % p\n  n66 = n % p\n  n67 = n %\
    \ p\n  n68 = n % p\n  n69 = n % p\n  n70 = n % p\n  n71 = n % p\n  n72 = n % p\n\
    \  n73 = n % p\n  n74 = n % p\n  n75 = n % p\n", '  return ((n % p) + p) % p',
  "  r = 1\n  while n > p\n    r <<= 1\n    n >>= 1\n  r %= p\n  r |= 1 if (r > p)\
    \ else 0\n  return r\nend", '  return ((n % p) + p) % p', "  n = n.to_i\n  p =\
    \ p.to_i\n  while n > p\n    n -= p\n  end\n  n\nend", "  n = n.to_i\n  p = p.to_i\n\
    \  if n == 0\n    return 0\n  while n != 0\n    n >>= 1\n    p >>= 1\n    if n\
    \ & 1 == 1\n      n -= 1\n      p -= 1\n    end\n  end\n  p -= 1\n  while p >=\
    \ 0\n    p -= 1\n    if p & 1 == 1\n      p -= 1\n    end\n  end\n  return p\n\
    end", "  n = (n.to_i if n.is_a?(Integer) else n).abs\n  p = p.to_i\n  while p\
    \ > 0\n    q, r = divmod(n, p)\n    n = q\n    p = r\n  end\n  n\nend", "  n =\
    \ (n % p + p) % p\n  return n\nend", "  r = 1\n  while n > p\n    r = r * 2 %\
    \ p\n    n /= p\n  return r\nend", "  return ((n % p) + p) % p\nend", "  r = 1\n\
    \  while n > p\n    r = r * 2 % p\n    n /= p\n  r\nend", "  return ((n % p) +\
    \ p) % p\nend", "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  r\n\
    end", "  r = 0\n  while n > p\n    r += 1\n    n -= p\n  r\nend", "  return ((n\
    \ % p) + p) % p\nend", '  return ((n % p) + p) % p', '  return ((n % p) + p) %
    p', "  n = n.to_i\n  p = p.to_i\n  while n > p\n    n -= p\n  end\n  n\nend",
  "  r = 0\n  while n > p\n    r = r * 2 % p\n    n /= p\n  r\nend", "  r = 0\n  while\
    \ n > p\n    r += 1\n    n -= p\n  r\nend", "  r = 1\n  while n > p\n    r = r\
    \ * 2 % p\n    n /= p\n  r\nend", "  n = (n % p + p) % p\n  if n == 0: return\
    \ 1\n  else return n\nend", "  n = (n.to_i if n.kind_of?(Fixnum)) ? n : n.to_f\n\
    \  p = p.to_i\n  while p > 0\n    q, r = divmod(n, p)\n    n = q\n    p = r\n\
    \  end\n  n\nend", "  n = (n.to_i if n.kind_of?(Fixnum)) ? n : n.to_s\n  p = p.to_i\
    \ if p.kind_of?(Fixnum) else p.to_s\n  p += 1 if p < 2 else 0\n  r = p % n\n \
    \ r == 0 ? 1 : r\nend", "  n = (n % p + p) % p\n  return n\nend", "  r = 1\n \
    \ while n > p\n    r = r * 2 % p\n    n /= p\n  r\nend", "  r = 1\n  while n >\
    \ p\n    r <<= 1\n    n >>= 1\n  r %= p\n  r ^= (n & -p) != 0\n  r\nend", "  r\
    \ = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  return r\nend", "  n0 =\
    \ n & -p\n  n1 = n & -p\n  n2 = n & -p\n  n3 = n & -p\n  n4 = n & -p\n  n5 = n\
    \ & -p\n  n6 = n & -p\n  n7 = n & -p\n  n8 = n & -p\n  n9 = n & -p\n  n10 = n\
    \ & -p\n  n11 = n & -p\n  n12 = n & -p\n  n13 = n & -p\n  n14 = n & -p\n  n15\
    \ = n & -p\n  n16 = n & -p\n  n17 = n & -p\n  n18 = n & -p\n  n19 = n & -p\n \
    \ n20 = n & -p\n  n21 = n & -p\n  n22 = n & -p\n  n23 = n & -p\n  n24 = n & -p\n\
    \  n25 = n & -p\n  n26 = n & -p\n  n27 = n & -p\n  n28 = n & -p\n  n29 = n & -p\n\
    \  n30 = n & -p\n  n31 = n & -p\n  n32 = n & -p\n  n33 = n & -p\n  n34 = n & -p\n\
    \  n35 = n & -p\n  n36 = n & -p\n  n37 = n & -p\n  n38 = n & -p\n  n39 = n & -p\n\
    \  n40 = n & -p\n  n41 = n & -p\n  n42 = n & -p\n  n43 = n & -p\n  n44 = n & -p\n\
    \  n45 = n & -p\n  n46 = n & -p\n  n47 = n & -p\n  n48 = n & -p\n  n49 = n & -p\n\
    \  n50 = n & -p\n  n51 = n & -p\n  n52 = n & -p\n  n53 = n & -p\n  n54 = n & -p\n\
    \  n55 = n & -p\n  n56 = n & -p\n  n57 = n & -p\n  n58 = n & -p\n  n59 = n & -p\n\
    \  n60 = n & -p\n  n61 = n & -p\n  n62 = n & -p\n  n63 = n & -p\n  n64 = n & -p\n\
    \  n65 = n & ", '  return ((n % p) + p) % p', "  r = 1\n  while n > p\n    r =\
    \ r * 2 % p\n    n /= p\n  return r\nend", "  return ((n % p) + p) % p\nend",
  "  n = (n.to_i if n.kind_of?(Fixnum)) ? n : n.to_s\n  p = p.to_i\n  while p > 1\n\
    \    p >>= 1\n    n |= 1 << (p-1)\n  end\n  n\nend", "  n = (n % p).to_i\n  p\
    \ %= n\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n\
    \  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -=\
    \ p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n\
    \ -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n\
    \  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %=\
    \ p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n\
    \ %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n\
    \  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -=\
    \ p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n\
    \ -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n\
    \  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %=\
    \ p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n\
    \ %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n  n %= p\n  n -= p\n\
    \  n %= ", "  r = 0\n  while n > p\n    r = r * 2 + n % p\n    n /= p\n  r\nend",
  "  return ((n % p) + p) % p\nend", "  r = 1\n  while n > p\n    r = r * 2 % p\n\
    \    n /= p\n  r\nend", "  n1 = n % p\n  if n1 == 0\n    n1 = p\n  n2 = n % n1\n\
    \  if n2 == 0\n    n2 = n1\n  n3 = n % n2\n  if n3 == 0\n    n3 = n2\n  n4 = n\
    \ % n3\n  if n4 == 0\n    n4 = n3\n  return n\nend", '  return ((n % p) + p) %
    p', "  n = n.to_i\n  p = p.to_i\n  while n > p\n    n -= p\n  end\n  n\nend",
  "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  return r\nend", '  return
    ((n % p) + p) % p', "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n \
    \ r\nend", "  r = 0\n  while n > p\n    r = r * 2 % p\n    n /= p\n  r\nend",
  '  return ((n % p) + p) % p', "  r = 1\n  while n > p\n    r = r * 2 % p\n    n\
    \ /= p\n  r\nend", "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  r\n\
    end", "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  return r\nend",
  '  return ((n % p) + p) % p', "  return ((n % p) + p) % p\nend", '  return ((n %
    p) + p) % p', "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  return\
    \ r\nend", '  return ((n % p) + p) % p', '  return ((n % p) + p) % p', '  return
    ((n % p) + p) % p', "  r = 1\n  while n > p\n    r <<= 1\n    n >>= 1\n  r %=\
    \ p\n  r &= (p - 1); r\nend", "  return ((n % p) + p) % p\nend", '  return ((n
    % p) + p) % p', '  return ((n % p) + p) % p', "  n = (n.to_i if n.kind_of?(Fixnum))\
    \ ? n : n.to_f\n  p = p.to_i\n  if p < 0\n    p += p\n    n += p\n  end\n  while\
    \ p > 0\n    p -= 1\n    n %= p\n  end\n  n\nend", "  n = (n % p + p) % p\n  if\
    \ n < 0\n    n += p\n  end\n  return n\nend", '  return ((n % p) + p) % p', " \
    \ return ((n % p) + p) % p\nend", "  n = (n % p + p) % p\n  if n < 0\n    n +=\
    \ p\n  end\n  return n\nend", "  r = 1\n  while n > p\n    r = r * 2 % p\n   \
    \ n /= p\n  r\nend", "  return ((n % p) + p) % p\nend", "  r = 1\n  while n >\
    \ p\n    r = r * 2 % p\n    n /= p\n  r\nend", "  n = (n % p).to_i\n  p /= n\n\
    \  p += 1 if n % p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n  p += 1 if n %\
    \ p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n  p += 1 if n % p == 0 else 0\n\
    \  p -= 1 if n % p == 0 else 0\n  p += 1 if n % p == 0 else 0\n  p -= 1 if n %\
    \ p == 0 else 0\n  p += 1 if n % p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n\
    \  p += 1 if n % p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n  p += 1 if n %\
    \ p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n  p += 1 if n % p == 0 else 0\n\
    \  p -= 1 if n % p == 0 else 0\n  p += 1 if n % p == 0 else 0\n  p -= 1 if n %\
    \ p == 0 else 0\n  p += 1 if n % p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n\
    \  p += 1 if n % p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n  p += 1 if n %\
    \ p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n  p += 1 if n % p == 0 else 0\n\
    \  p -= 1 if n % p == 0 else 0\n  p += 1 if n % p == 0 else 0\n  p -= 1 if n %\
    \ p == 0 else 0\n  p += 1 if n % p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n\
    \  p += 1 if n % p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n  p += 1 if n %\
    \ p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n  p += 1 if n % p == 0 else 0\n\
    \  p -= 1 if n % p == 0 else 0\n  p += 1 if n % p == 0 else 0\n  p -= 1 if n %\
    \ p == 0 else 0\n  p += 1 if n % p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n\
    \  p += 1 if n % p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n  p += 1 if n %\
    \ p == 0 else 0\n  p -= 1 if n % p == 0 else 0\n  p += 1 if n % p == 0 else 0\n\
    \  p -= 1 if n % p == 0 else 0\n  p += 1 if n % p == 0 else 0\n  p -= 1 if n %\
    \ p == 0 else 0\n  p += 1 if n % p == 0 else 0\n  p -= 1 if n % p == 0 else ",
  "  n = (n % p).to_i\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n\
    \  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -=\
    \ n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n %\
    \ p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n\
    \  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /=\
    \ n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n\
    \  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -=\
    \ n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n %\
    \ p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n\
    \  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /=\
    \ n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n\
    \  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -=\
    \ n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n %\
    \ p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n  p /= n\n  p -= n % p\n\
    \  p /= n\n  p -= n % p\n  p /= n\n  p -= ", '  return ((n % p) + p) % p', " \
    \ r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  return r\nend", "  r\
    \ = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  return r\nend", "  n =\
    \ n.to_i\n  p = p.to_i\n  while n > p\n    n -= p\n  end\n  n\nend", "  n = (n\
    \ % p).to_i\n  return n if n < p else p\nend", "  n = (n % p).to_i\n  return n\
    \ if n < p else p\nend", "  n = n.to_i\n  p = p.to_i\n  while n > 0\n    n -=\
    \ p\n    p = p % n\n  end\n  n\nend", '  return ((n % p) + p) % p', "  r = 1\n\
    \  while n > p\n    r = r * 2 % p\n    n /= p\n  r\nend", "  r = 1\n  while n\
    \ > p\n    r = r * 2 % p\n    n /= p\n  r\nend", "  n = (n % p + p) % p\n  return\
    \ n\nend", "  r = 0\n  while n > p\n    r += 1\n    n -= p\n  r\nend", "  r =\
    \ 0\n  while n > p\n    r = r * 2 % p\n    n /= p\n  r\nend", "  r = 1\n  while\
    \ n > p\n    r = r * 2 % p\n    n /= p\n  return r\nend", "  n = (n % p + p) %\
    \ p\n  if n < 0\n    n += p\n  end\n  n\nend", "  n = (n % p).to_i\n  return n\
    \ if n < p else p\nend", "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /=\
    \ p\n  return r\nend", "  return ((n % p) + p) % p\nend", "  r = 1\n  while n\
    \ > p\n    r <<= 1\n    n >>= 1\n  r %= p\n  r &= (p - 1); r\nend", "  n = (n\
    \ % p + p) % p\n  if n == 0: return 1\n  else return n\nend", "  n = n.to_i\n\
    \  p = p.to_i\n  while n > 0\n    n -= p if n >= p else n\n  end\n  n\nend", " \
    \ r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  return r\nend", "  return\
    \ ((n % p) + p) % p\nend", "  return ((n % p) + p) % p\nend", "  r = 1\n  while\
    \ n > p\n    r = r * 2 % p\n    n /= p\n  return r\nend", "  n = (n.to_i if n.kind_of?(Fixnum)\
    \ || n.kind_of?(Bignum)) ? n : n.to_s\n  p = p.to_i if p.kind_of?(Fixnum) || p.kind_of?(Bignum)\
    \ ? p : p.to_s\n  p -= 1\n  r = p % n\n  if r == 0\n    r\n  else\n    modp(n,\
    \ p)\n  end\nend", "  return ((n % p) + p) % p\nend", "  r = 0\n  while n > p\n\
    \    r = r * 2 % p\n    n /= p\n  r\nend", "  r = 1\n  while n > p\n    r = r\
    \ * 2 % p\n    n /= p\n  return r\nend", "  n = (n.to_i if n.kind_of?(Fixnum))\
    \ ? n : n.to_f\n  p = p.to_i\n  while p > 1\n    p >>= 1\n    n += p\n  end\n\
    \  n\nend", '  return ((n % p) + p) % p', '  return ((n % p) + p) % p', "  n =\
    \ n.to_i\n  p = p.to_i\n  while n > 0\n    n -= p if n >= p else n\n  end\n  n\n\
    end", "  n = (n.to_i if n.kind_of?(Fixnum)) ? n : n.to_f\n  p = p.to_i if p.kind_of?(Fixnum)\
    \ else p.to_f\n  r = n % p\n  r == 0 ? r : r + p\nend", '  return ((n % p) + p)
    % p', "  n = n.to_i\n  p = p.to_i\n  while n > p\n    n -= p\n  end\n  n\nend",
  '  return ((n % p) + p) % p', "  r = 1\n  while n > p\n    r = r * 2 % p\n    n\
    \ /= p\n  return r\nend", "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /=\
    \ p\n  return r\nend", "  return ((n % p) + p) % p\nend", '  return ((n % p) +
    p) % p', "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  return r\n\
    end", '  return ((n % p) + p) % p', '  return ((n % p) + p) % p', "  r = 1\n \
    \ while n > p\n    r = r * 2 % p\n    n /= p\n  r\nend", '  return ((n % p) +
    p) % p', "  n0 = n & (p-1)\n  n1 = n >> p\n  n01 = n0 ^ n1\n  n01 = n01 & (p-1)\n\
    \  n01 = n01 >> p\n  n01 = n01 ^ n1\n  n01 = n01 & (p-1)\n  n01 = n01 >> p\n \
    \ n01 = n01 ^ n1\n  n01 = n01 & (p-1)\n  n01 = n01 >> p\n  n01 = n01 ^ n1\n  n01\
    \ = n01 & (p-1)\n  n01 = n01 >> p\n  n01 = n01 ^ n1\n  n01 = n01 & (p-1)\n  n01\
    \ = n01 >> p\n  n01 = n01 ^ n1\n  n01 = n01 & (p-1)\n  n01 = n01 >> p\n  n01 =\
    \ n01 ^ n1\n  n01 = n01 & (p-1)\n  n01 = n01 >> p\n  n01 = n01 ^ n1\n  n01 = n01\
    \ & (p-1)\n  n01 = n01 >> p\n  n01 = n01 ^ n1\n  n01 = n01 & (p-1)\n  n01 = n01\
    \ >> p\n  n01 = n01 ^ n1\n  n01 = n01 & (p-1)\n  n01 = n01 >> p\n  n01 = n01 ^\
    \ n1\n  n01 = n01 & (p-1)\n  n01 = n01 >> p\n  n01 = n01 ^ n1\n  n01 = n01 & (p-1)\n\
    \  n01 = n01 >> p\n  n01 = n01 ^ n1\n  n01 = n01 & (p-1)\n  n01 = n01 >> p\n \
    \ n01 = n01 ^ n1\n  n01 = n01 & (p-1)\n  n01 = n01 >> p\n  n01 = n01 ^ n1\n  n01\
    \ = n01 & (p-1)\n  n01 = n01 >> p\n  n01 = n01 ^ n1\n  n01 = n01 & (p-1)\n  n01\
    \ = n01 >> p\n  n01 = n01 ^ n1\n  n01 = n01 & (p-1)\n  n01 = n01 >> p\n  n01 =\
    \ n01 ^ n1\n  n01 = n01 & (p-1)\n  n", "  r = 1\n  while n > p\n    r = r * 2\
    \ % p\n    n /= p\n  r\nend", "  n = (n.to_i if n.kind_of?(Fixnum) || n.kind_of?(Bignum))\
    \ ? n : n.to_s\n  p = (p.to_i if p.kind_of?(Fixnum) || p.kind_of?(Bignum)) ? p\
    \ : p.to_s\n  if n.zero? || p.zero?\n    p % n == 0 ? 1 : 0\n  else\n    p % n\
    \ == 0 ? modp(n / p, p) : modp(n / p, p)\n  end\nend", '  return ((n % p) + p)
    % p', "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  r\nend", '  return
    ((n % p) + p) % p', "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n \
    \ return r\nend", "  n = (n % p).to_i\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n\
    \  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %=\
    \ p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n\
    \ %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n\
    \  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -=\
    \ n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p\
    \ -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n\
    \  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %=\
    \ p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n\
    \ %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n\
    \  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -=\
    \ n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p\
    \ -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= n\n  n %= p\n\
    \  p -= n\n  n %= p\n  p -= n\n  n %= p\n  p -= ", '  return ((n % p) + p) % p',
  "  r = 0\n  while n > p\n    r = r * 2 + n % p\n    n /= p\n  return r\nend", " \
    \ r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  r\nend", "  n = n.to_i\n\
    \  p = p.to_i\n  if n == 0\n    return 1\n  while n > p\n    n -= p\n  end\n \
    \ while n < p\n    n += p\n  end\n  return n\nend", '  return ((n % p) + p) %
    p', "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  return r\nend",
  "  r = 1\n  while n > p\n    r <<= 1\n    n -= p\n  r %= p\n  r\nend", "  return\
    \ ((n % p) + p) % p\nend", "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /=\
    \ p\n  r\nend", "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  return\
    \ r\nend", "  r = 1\n  while n > p\n    r = r * 2 % p\n    n /= p\n  r\nend",
  "  n = (n % p + p) % p\n  return n\nend", '  return ((n % p) + p) % p', '  return
    ((n % p) + p) % p', '  return ((n % p) + p) % p', "  n1 = n % p\n  if n1 == 0\n\
    \    n1 = p\n  n2 = n % n1\n  if n2 == 0\n    n2 = n1\n  n3 = n % n2\n  if n3\
    \ == 0\n    n3 = n2\n  n4 = n % n3\n  if n4 == 0\n    n4 = n3\n  n5 = n % n4\n\
    \  if n5 == 0\n    n5 = n4\n  n6 = n % n5\n  if n6 == 0\n    n6 = n5\n  n7 = n\
    \ % n6\n  if n7 == 0\n    n7 = n6\n  n8 = n % n7\n  if n8 == 0\n    n8 = n7\n\
    \  n9 = n % n8\n  if n9 == 0\n    n9 = n8\n  n10 = n % n9\n  if n10 == 0\n   \
    \ n10 = n9\n  n11 = n % n10\n  if n11 == 0\n    n11 = n10\n  n12 = n % n11\n \
    \ if n12 == 0\n    n12 = n11\n  n13 = n % n12\n  if n13 == 0\n    n13 = n12\n\
    \  n14 = n % n13\n  if n14 == 0\n    n14 = n13\n  n15 = n % n14\n  if n15 == 0\n\
    \    n15 = n14\n  n16 = n % n15\n  if n16 == 0\n    n16 = n15\n  n17 = n % n16\n\
    \  if n17 == 0\n    n17 = n16\n  n18 = n % n17\n  if n18 == 0\n    n18 = n17\n\
    \  n19 = n % n18\n  if n19 == 0\n    n19 = n18\n  n20 = n % n19\n  if n20 == 0\n\
    \    n20 = n19\n  n21 = n % n20\n  if n21 == 0\n    n21 = n20\n  n22 = n % n21\n\
    \  if n22 == 0\n    n22 = n21\n  n23 = n % n22\n  if n23 == 0\n    n23 = n22\n\
    \  n24 = n % n23\n  if n24 == 0\n    n24 = n23\n  n25 = n % n24\n  if n25 == 0\n\
    \    n25 = n24\n  n26 = n % n25\n  if n26 == 0\n    n26 = n25\n  n27 = n % n26\n\
    \  if n27 == 0\n    n27 = n26\n  n28 = n % n27\n  if n28 == 0\n    n28 = n27\n\
    \  n29 = n % n28\n  if n29 == 0\n    n29 = n28\n  n30 = n % n29\n", "  r = 1\n\
    \  while n > p\n    r = r * 2 % p\n    n /= p\n  return r\nend", '  return ((n
    % p) + p) % p', '  return ((n % p) + p) % p']
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

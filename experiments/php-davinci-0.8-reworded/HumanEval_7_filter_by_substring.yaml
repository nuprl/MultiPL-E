name: HumanEval_7_filter_by_substring
language: php
prompt: "<?php\n// Filter an input array of strings only for ones that contain given\
  \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
  abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
  )\nfunction filter_by_substring($strings, $substring) {\n"
tests: "function candidate(...$args) {\n    return filter_by_substring(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"\
  asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\",\
  \ \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
  xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"),\
  \ \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n", " \
    \   $ret = array();\n    foreach ($strings as $key => $value) {\n        if (strpos($value,\
    \ $substring) !== false) {\n            $ret[] = $value;\n        }\n    }\n \
    \   return $ret;\n}\n", "    $matches = array();\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $matches[]\
    \ = $string;\n        }\n    }\n    return $matches;\n}\n", "    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (stripos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n", "    $output = array();\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $output[]\
    \ = $string;\n        }\n    }\n    return $output;\n}", "\treturn array_filter($strings,\
    \ function($string) use ($substring) {\n\t\treturn strpos($string, $substring)\
    \ !== false;\n\t});\n}", "    $filtered = array();\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n", "    $filtered =\
    \ array();\n    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n", "\t$result = array();\n\tforeach ($strings as $string) {\n\
    \t\tif (strpos($string, $substring) !== false) {\n\t\t\t$result[] = $string;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n", "\t$substring = strtolower($substring);\n\
    \treturn array_filter($strings, function($a) use ($substring) {\n\t\t$a = strtolower($a);\n\
    \t\treturn strpos($a, $substring) !== false;\n\t});\n}", "\t$filtered = array();\n\
    \tforeach ($strings as $string) {\n\t\tif (preg_match(\"/$substring/\", $string))\
    \ {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "  \
    \  $result = array();\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $result[] = $string;\n        }\n    }\n\
    \    return $result;\n}\n", "    $strings_filtered = array();\n    foreach ($strings\
    \ as $s) {\n        if (strpos($s, $substring) !== false) {\n            $strings_filtered[]\
    \ = $s;\n        }\n    }\n    return $strings_filtered;\n}\n\n$strs = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$filtered = filter_by_substring($strs,\
    \ \"a\");\n\necho \"Original strings: <br/>\";\nforeach ($strs as $s) {\n    echo\
    \ \"$s <br/>\";\n}\n\necho \"<br/>\";\n\necho \"Filtered strings: <br/>\";\nforeach\
    \ ($filtered as $s) {\n    echo \"$s <br/>\";\n}", "    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n", "\t$filtered = array();\n\tforeach ($strings as $string) {\n\
    \t\tif (strpos($string, $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\
    \t\t}\n\t}\n\treturn $filtered;\n}\n", "    return array_filter($strings, function($string)\
    \ use ($substring) {\n        return strpos($string, $substring) !== false;\n\
    \    });\n}\n", "    $filtered = array();\n    foreach ($strings as $str) {\n\
    \        if (strpos($str, $substring) !== false) {\n            $filtered[] =\
    \ $str;\n        }\n    }\n    return $filtered;\n}\n", "    $out = array();\n\
    \    foreach ($strings as $string) {\n        if (stristr($string, $substring))\
    \ {\n            $out[] = $string;\n        }\n    }\n    return $out;\n}\n",
  "\t$filtered = array();\n\tforeach ($strings as $str) {\n\t\tif (strpos($str, $substring)\
    \ !== false) {\n\t\t\t$filtered[] = $str;\n\t\t}\n\t}\n\treturn $filtered;\n}",
  "\t$filtered = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn\
    \ $filtered;\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

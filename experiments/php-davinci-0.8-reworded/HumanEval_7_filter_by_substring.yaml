name: HumanEval_7_filter_by_substring
language: php
prompt: "<?php\n// Filter an input array of strings only for ones that contain given\
  \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
  abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
  )\nfunction filter_by_substring($strings, $substring) {\n"
tests: "function candidate(...$args) {\n    return filter_by_substring(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"\
  asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\",\
  \ \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
  xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"),\
  \ \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n", " \
    \   $ret = array();\n    foreach ($strings as $key => $value) {\n        if (strpos($value,\
    \ $substring) !== false) {\n            $ret[] = $value;\n        }\n    }\n \
    \   return $ret;\n}\n", "    $matches = array();\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $matches[]\
    \ = $string;\n        }\n    }\n    return $matches;\n}\n", "    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (stripos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n", "    $output = array();\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $output[]\
    \ = $string;\n        }\n    }\n    return $output;\n}", "\treturn array_filter($strings,\
    \ function($string) use ($substring) {\n\t\treturn strpos($string, $substring)\
    \ !== false;\n\t});\n}", "    $filtered = array();\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n", "    $filtered =\
    \ array();\n    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n", "\t$result = array();\n\tforeach ($strings as $string) {\n\
    \t\tif (strpos($string, $substring) !== false) {\n\t\t\t$result[] = $string;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n", "\t$substring = strtolower($substring);\n\
    \treturn array_filter($strings, function($a) use ($substring) {\n\t\t$a = strtolower($a);\n\
    \t\treturn strpos($a, $substring) !== false;\n\t});\n}", "\t$filtered = array();\n\
    \tforeach ($strings as $string) {\n\t\tif (preg_match(\"/$substring/\", $string))\
    \ {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "  \
    \  $result = array();\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $result[] = $string;\n        }\n    }\n\
    \    return $result;\n}\n", "    $strings_filtered = array();\n    foreach ($strings\
    \ as $s) {\n        if (strpos($s, $substring) !== false) {\n            $strings_filtered[]\
    \ = $s;\n        }\n    }\n    return $strings_filtered;\n}\n\n$strs = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$filtered = filter_by_substring($strs,\
    \ \"a\");\n\necho \"Original strings: <br/>\";\nforeach ($strs as $s) {\n    echo\
    \ \"$s <br/>\";\n}\n\necho \"<br/>\";\n\necho \"Filtered strings: <br/>\";\nforeach\
    \ ($filtered as $s) {\n    echo \"$s <br/>\";\n}", "    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n", "\t$filtered = array();\n\tforeach ($strings as $string) {\n\
    \t\tif (strpos($string, $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\
    \t\t}\n\t}\n\treturn $filtered;\n}\n", "    return array_filter($strings, function($string)\
    \ use ($substring) {\n        return strpos($string, $substring) !== false;\n\
    \    });\n}\n", "    $filtered = array();\n    foreach ($strings as $str) {\n\
    \        if (strpos($str, $substring) !== false) {\n            $filtered[] =\
    \ $str;\n        }\n    }\n    return $filtered;\n}\n", "    $out = array();\n\
    \    foreach ($strings as $string) {\n        if (stristr($string, $substring))\
    \ {\n            $out[] = $string;\n        }\n    }\n    return $out;\n}\n",
  "\t$filtered = array();\n\tforeach ($strings as $str) {\n\t\tif (strpos($str, $substring)\
    \ !== false) {\n\t\t\t$filtered[] = $str;\n\t\t}\n\t}\n\treturn $filtered;\n}",
  "\t$filtered = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn\
    \ $filtered;\n}", "\t$filtered = array();\n\tforeach ($strings as $string) {\n\
    \t\tif (strpos($string, $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\
    \t\t}\n\t}\n\treturn $filtered;\n}\n", "\t$filtered = array();\n\tforeach ($strings\
    \ as $str) {\n\t\tif (strpos($str, $substring) !== false) {\n\t\t\t$filtered[]\
    \ = $str;\n\t\t}\n\t}\n\treturn $filtered;\n}", "    $result = array();\n    foreach\
    \ ($strings as $value) {\n        if (strpos($value, $substring) !== false) {\n\
    \            $result[] = $value;\n        }\n    }\n    return $result;\n}\n",
  "    $filtered = array();\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $filtered[] = $string;\n        }\n  \
    \  }\n    return $filtered;\n}\n", "    $filtered = array();\n    foreach ($strings\
    \ as $string) {\n        if (strpos($string, $substring) !== false) {\n      \
    \      $filtered[] = $string;\n        }\n    }\n    return $filtered;\n}\n",
  "\t$filtered = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn\
    \ $filtered;\n}\n", "\t$new_array = array();\n\tforeach ($strings as $string)\
    \ {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\tarray_push($new_array,\
    \ $string);\n\t\t}\n\t}\n\treturn $new_array;\n}\n", "    if (empty($strings))\
    \ {\n        return $strings;\n    }\n\n    $filtered = array();\n    foreach\
    \ ($strings as $str) {\n        if (strpos($str, $substring) !== false) {\n  \
    \          $filtered[] = $str;\n        }\n    }\n\n    return $filtered;\n}\n",
  "\t$filtered = array();\n\tforeach ($strings as $str) {\n\t\tif (strpos($str, $substring)\
    \ !== false) {\n\t\t\t$filtered[] = $str;\n\t\t}\n\t}\n\treturn $filtered;\n}",
  "    return array_filter($strings, function($s) use ($substring) {\n        return\
    \ strpos($s, $substring) !== false;\n    });\n}\n", "    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}", "\t$out = array();\n\tforeach ($strings as $s) {\n\t\tif (strpos($s,\
    \ $substring) !== false)\n\t\t\t$out[] = $s;\n\t}\n\treturn $out;\n}\n", "\t$filtered\
    \ = array();\n\tforeach ($strings as $s) {\n\t\tif (strpos($s, $substring) !==\
    \ false) {\n\t\t\t$filtered[] = $s;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "\t\
    $result = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n\
    }", "    $result = array();\n    foreach ($strings as $string) {\n        if (stripos($string,\
    \ $substring) !== false) {\n            $result[] = $string;\n        }\n    }\n\
    \    return $result;\n}\n", "    $result = array();\n    foreach ($strings as\
    \ $string) {\n        if (strpos($string, $substring) !== false) {\n         \
    \   $result[] = $string;\n        }\n    }\n    return $result;\n}\n", "    $ans\
    \ = array();\n    for ($i = 0; $i < count($strings); $i++) {\n        if (strpos($strings[$i],\
    \ $substring) !== false) {\n            array_push($ans, $strings[$i]);\n    \
    \    }\n    }\n    return $ans;\n}\n", "    $res = array();\n    foreach ($strings\
    \ as $s) {\n        if (strpos($s, $substring) !== false) {\n            $res[]\
    \ = $s;\n        }\n    }\n    return $res;\n}\n", "\t$result = array();\n\tforeach\
    \ ($strings as $s) {\n\t\tif (strpos($s, $substring) !== false) {\n\t\t\t$result[]\
    \ = $s;\n\t\t}\n\t}\n\treturn $result;\n}\n", "\t$filter_result = array();\n\t\
    foreach ($strings as $string) {\n\t\tif (strpos($string, $substring) !== false)\
    \ {\n\t\t\t$filter_result[] = $string;\n\t\t}\n\t}\n\treturn $filter_result;\n\
    }\n\n$dir = dirname(__FILE__);\n$contents = scandir($dir);", "    return array_filter($strings,\
    \ function($string) use ($substring) {\n        return strpos($string, $substring)\
    \ !== false;\n    });\n}", "\t$results = array();\n\tforeach ($strings as $string)\
    \ {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$results[] = $string;\n\
    \t\t}\n\t}\n\treturn $results;\n}\n", "    $filtered = array();\n    foreach ($strings\
    \ as $string) {\n        if (strpos($string, $substring) !== false) {\n      \
    \      $filtered[] = $string;\n        }\n    }\n    return $filtered;\n}\n",
  "    return array_filter($strings, function($string) use ($substring) {\n      \
    \  return strpos($string, $substring) !== false;\n    });\n}\n", "\treturn array_filter($strings,\
    \ function($string) use ($substring) {\n\t\treturn preg_match(\"/$substring/\"\
    , $string);\n\t});\n}\n\n$strings = array(\n\t'aaa',\n\t'bbbbb',\n\t'cccccccc',\n\
    \t'dddddddddd',\n\t'eeeeeeeeeeeeee',\n\t'ffffffffffffffffff',\n\t'ggggggggggggggggggggggg',\n\
    \t'hhhhhhhhhhhhhhhhhhhhhhhhhhhh',\n\t'iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii',\n\t\
    'jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj',\n\t'kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk',\n\
    \t'llllllllllllllllllllllllllllllllllllllllllllllll',\n\t'mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm',\n\
    \t'nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn',\n\t'ooooooooooooooooooooooo',\n\
    \t'ppppppppppppppppppppppppppppppp',\n\t'qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq',\n\
    \t'rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr",
  "\t$filtered = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn\
    \ $filtered;\n}\n", "\t$filtered = array();\n\tforeach ($strings as $string) {\n\
    \t\tif (strpos($string, $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\
    \t\t}\n\t}\n\treturn $filtered;\n}\n", "    return array_filter($strings, function($s)\
    \ use ($substring) {\n        return strpos($s, $substring) !== false;\n    });\n\
    }", "\t$new_array = array();\n\tforeach ($strings as $value) {\n\t\tif (strpos($value,\
    \ $substring) !== false) {\n\t\t\tarray_push($new_array, $value);\n\t\t}\n\t}\n\
    \treturn $new_array;\n}\n", "    $filtered = array();\n    foreach ($strings as\
    \ $string) {\n        if (strpos($string, $substring) !== false) {\n         \
    \   $filtered[] = $string;\n        }\n    }\n    return $filtered;\n}\n", "\t\
    $res = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string, $substring)\
    \ !== false) {\n\t\t\t$res[] = $string;\n\t\t}\n\t}\n\treturn $res;\n}\n", "\t\
    $filtered = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn\
    \ $filtered;\n}\n", "\treturn array_filter($strings, function($item) use ($substring)\
    \ {\n\t\treturn strpos($item, $substring) !== false;\n\t});\n}\n", "\t$filtered\
    \ = array();\n\tforeach ($strings as $str) {\n\t\tif (strpos($str, $substring)\
    \ !== false) {\n\t\t\t$filtered[] = $str;\n\t\t}\n\t}\n\treturn $filtered;\n}",
  "    $filtered = array();\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $filtered[] = $string;\n        }\n  \
    \  }\n    return $filtered;\n}\n", "    return array_filter($strings, function($str)\
    \ use ($substring) {\n        return strstr($str, $substring) != false;\n    });\n\
    }", "    $filtered = array();\n    foreach ($strings as $string) {\n        if\
    \ (strpos($string, $substring) !== false) {\n            $filtered[] = $string;\n\
    \        }\n    }\n    return $filtered;\n}", "    $filtered = array();\n    foreach\
    \ ($strings as $string) {\n        if (strpos($string, $substring) !== false)\
    \ {\n            $filtered[] = $string;\n        }\n    }\n    return $filtered;\n\
    }", "\t$result = array();\n\tforeach ($strings as $str) {\n\t\tif (strpos($str,\
    \ $substring) !== false) {\n\t\t\t$result[] = $str;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n", "    $result = array();\n    foreach ($strings as $string) {\n        if\
    \ (strpos($string, $substring) !== false) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\n", "    return array_filter($strings,\
    \ function($string) use ($substring) {\n        return strpos($string, $substring)\
    \ !== false;\n    });\n}\n", "\treturn array_filter($strings, function($item)\
    \ use ($substring) { return strpos($item, $substring) !== false; });\n}\n", " \
    \   $filtered = array();\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $filtered[] = $string;\n        }\n  \
    \  }\n    return $filtered;\n}", "\t$filtered = array();\n\tforeach ($strings\
    \ as $string) {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$filtered[]\
    \ = $string;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "    $strings = array_filter($strings,\
    \ function($s) use ($substring) {\n        return strpos($s, $substring) !== false;\n\
    \    });\n    return $strings;\n}", "\t$filtered = array();\n\tforeach ($strings\
    \ as $string) {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$filtered[]\
    \ = $string;\n\t\t}\n\t}\n\treturn $filtered;\n}", "    $output = array();\n \
    \   foreach ($strings as $string) {\n        if (strpos($string, $substring) !==\
    \ false) {\n            $output[] = $string;\n        }\n    }\n    return $output;\n\
    }\n", "\t$result = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n\
    }", "    $filtered = array();\n    foreach ($strings as $value) {\n        if\
    \ (stristr($value, $substring)) {\n            $filtered[] = $value;\n       \
    \ }\n    }\n    return $filtered;\n}", "\t$filtered = array();\n\tforeach ($strings\
    \ as $str) {\n\t\tif (strpos($str, $substring) !== false) {\n\t\t\t$filtered[]\
    \ = $str;\n\t\t}\n\t}\n\treturn $filtered;\n}", "\t$matching_strings = array();\n\
    \tforeach ($strings as $string) {\n\t\tif (strpos($string, $substring) !== false)\
    \ {\n\t\t\t$matching_strings[] = $string;\n\t\t}\n\t}\n\treturn $matching_strings;\n\
    }\n\n", "    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n", "\t\
    if (! is_array($strings)) {\n\t\treturn array();\n\t}\n\treturn array_filter($strings,\
    \ function($value) use ($substring) {\n\t\treturn (strpos($value, $substring)\
    \ !== false);\n\t});\n}\n", "    $result = array();\n    foreach ($strings as\
    \ $string) {\n        if (strpos($string, $substring) !== false) {\n         \
    \   $result[] = $string;\n        }\n    }\n    return $result;\n}", "    $result\
    \ = array();\n    foreach ($strings as $current) {\n        if (strpos($current,\
    \ $substring) !== false) {\n            $result[] = $current;\n        }\n   \
    \ }\n    return $result;\n}\n", "\t$filtered = array();\n\tforeach ($strings as\
    \ $string) {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$filtered[]\
    \ = $string;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "    $filtered = array();\n\
    \    foreach ($strings as $str) {\n        if (strpos($str, $substring) !== false)\
    \ {\n            $filtered[] = $str;\n        }\n    }\n    return $filtered;\n\
    }", "    $new_strings = array();\n    foreach ($strings as $string) {\n      \
    \  if (strpos($string, $substring) !== false) {\n            $new_strings[] =\
    \ $string;\n        }\n    }\n    return $new_strings;\n}\n", "\t$filtered = array();\n\
    \tforeach ($strings as $string) {\n\t\tif (strpos($string, $substring) !== false)\
    \ {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn $filtered;\n}", "\t$result\
    \ = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string, $substring)\
    \ !== false) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n}\n",
  "    if (empty($strings)) {\n        return array();\n    }\n    $filtered = array();\n\
    \    foreach ($strings as $s) {\n        if (strpos($s, $substring) !== false)\
    \ {\n            $filtered[] = $s;\n        }\n    }\n    return $filtered;\n\
    }\n", "\t$result = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n", "    return array_filter($strings, function($string) use ($substring) {\n\
    \        return strpos($string, $substring) !== false;\n    });\n}", "    $filtered\
    \ = array();\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $filtered[] = $string;\n        }\n  \
    \  }\n    return $filtered;\n}\n", "\t$filtered = array();\n\tforeach ($strings\
    \ as $s) {\n\t\tif (stripos($s, $substring) !== false) {\n\t\t\t$filtered[] =\
    \ $s;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "    return array_filter($strings,\
    \ function($string) use ($substring) {\n        return strpos($string, $substring)\
    \ !== false;\n    });\n}\n\nif (isset($_GET['q'])) {\n    $q = $_GET['q'];\n \
    \   $substring = strtolower($q);\n    $substring_length = strlen($substring);\n\
    \    $substring_length_plus = $substring_length + 1;\n    $substring_length_minus\
    \ = $substring_length - 1;\n    $substring_first_two = substr($substring, 0, 2);\n\
    \    $substring_last_two = substr($substring, -2);\n    $substring_first_three\
    \ = substr($substring, 0, 3);\n    $substring_last_three = substr($substring,\
    \ -3);\n    $substring_first_four = substr($substring, 0, 4);\n    $substring_last_four\
    \ = substr($substring, -4);\n    $substring_first_five = substr($substring, 0,\
    \ 5);\n    $substring_last_five = substr($substring, -5);\n    $substring_first_six\
    \ = substr($substring, 0, 6);\n    $substring_last_six = substr($substring, -6);\n\
    \    $substring_first_seven = substr($substring, 0, 7);\n    $substring_last_seven\
    \ = substr($substring, -7);\n    $substring_first_eight = substr($substring, 0,\
    \ 8);\n    $substring_last_eight = substr($substring, -8);\n    $substring_first_nine\
    \ = substr($substring, 0, 9);\n    $substring_last_nine = substr($substring, -9);\n\
    \    $substring_first_ten = substr($substring, 0, 10);\n    $substring_last_ten\
    \ = substr($substring, -10);\n    $substring_first_eleven = substr($substring,\
    \ 0, 11);\n    $substring_last_eleven = substr($substring, -11);\n    $substring_first_twelve\
    \ = substr", "    $sub_strings = array();\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $substring) !== false) {\n            $sub_strings[]\
    \ = $string;\n        }\n    }\n    return $sub_strings;\n}\n", "    $array =\
    \ array();\n    foreach ($strings as $key => $value) {\n        if (strpos($value,\
    \ $substring) !== false) {\n            $array[] = $value;\n        }\n    }\n\
    \    return $array;\n}\n", "    $new_strings = array();\n    foreach ($strings\
    \ as $string) {\n        if (strpos($string, $substring) !== false) {\n      \
    \      $new_strings[] = $string;\n        }\n    }\n    return $new_strings;\n\
    }", "    $filtered = array();\n    foreach ($strings as $str) {\n        if (strpos($str,\
    \ $substring) !== false) {\n            $filtered[] = $str;\n        }\n    }\n\
    \    return $filtered;\n}\n", "    $return_array = array();\n    foreach ($strings\
    \ as $string) {\n        if (strpos($string, $substring) !== false) {\n      \
    \      $return_array[] = $string;\n        }\n    }\n    return $return_array;\n\
    }\n", "\t$validStrings = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$validStrings[] = $string;\n\t\t}\n\t}\n\treturn\
    \ $validStrings;\n}", "    $filtered = array();\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n", "    if(!is_array($strings))\
    \ {\n        return array();\n    }\n    $results = array();\n    foreach($strings\
    \ as $string) {\n        if(strpos($string, $substring) !== false) {\n       \
    \     $results[] = $string;\n        }\n    }\n    return $results;\n}\n", "\t\
    $new_array = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\tarray_push($new_array, $string);\n\t\t}\n\t\
    }\n\treturn $new_array;\n}\n", "    $filtered = array();\n    foreach ($strings\
    \ as $string) {\n        if (strpos($string, $substring) !== false) {\n      \
    \      $filtered[] = $string;\n        }\n    }\n    return $filtered;\n}\n",
  "    $r = array();\n    foreach ($strings as $s) {\n        if (stripos($s, $substring)\
    \ !== false) {\n            $r[] = $s;\n        }\n    }\n    return $r;\n}\n",
  "    $res = array();\n    foreach ($strings as $s) {\n        if (strpos($s, $substring)\
    \ !== false) {\n            $res[] = $s;\n        }\n    }\n    return $res;\n\
    }", "    $filtered = array();\n    foreach ($strings as $string) {\n        if\
    \ (strpos($string, $substring) !== false) {\n            $filtered[] = $string;\n\
    \        }\n    }\n    return $filtered;\n}", "    $filtered = array();\n    foreach\
    \ ($strings as $string) {\n        if (strpos($string, $substring) !== false)\
    \ {\n            $filtered[] = $string;\n        }\n    }\n    return $filtered;\n\
    }\n", "    $filtered = array();\n    foreach ($strings as $string) {\n       \
    \ if (strpos($string, $substring) !== false) {\n            $filtered[] = $string;\n\
    \        }\n    }\n    return $filtered;\n}\n", "\t$result = array();\n\tforeach\
    \ ($strings as $string) {\n\t\tif (strpos($string, $substring) !== false) {\n\t\
    \t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n}", "    $filtered =\
    \ array();\n    foreach ($strings as $s) {\n        if (strpos($s, $substring)\
    \ !== false) {\n            $filtered[] = $s;\n        }\n    }\n    return $filtered;\n\
    }\n", "    $result = array();\n    foreach ($strings as $string) {\n        if\
    \ (strpos($string, $substring) !== false) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\n", "\treturn array_filter($strings,\
    \ function($string) use ($substring) {\n\t\treturn strpos($string, $substring)\
    \ !== false;\n\t});\n}\n", "    $result = array();\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $result[]\
    \ = $string;\n        }\n    }\n    return $result;\n}", "\t$strings_filtered\
    \ = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string, $substring)\
    \ !== false) {\n\t\t\t$strings_filtered[] = $string;\n\t\t}\n\t}\n\treturn $strings_filtered;\n\
    }\n", "    $ret_arr = array();\n    foreach ($strings as $str) {\n        if (strpos($str,\
    \ $substring) !== false) {\n            $ret_arr[] = $str;\n        }\n    }\n\
    \    return $ret_arr;\n}", "    $result = array();\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $result[]\
    \ = $string;\n        }\n    }\n    return $result;\n}\n", "    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n", "    $new_array = array();\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $new_array[]\
    \ = $string;\n        }\n    }\n    return $new_array;\n}\n", "    return array_filter($strings,\
    \ function($s) use ($substring) {\n        return strpos($s, $substring) !== false;\n\
    \    });\n}\n", "    $filtered = array();\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $substring) !== false) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}", "    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n", "\t$filter_function = function($string) use ($substring) {\n\
    \t\treturn strpos($string, $substring) !== false;\n\t};\n\treturn array_filter($strings,\
    \ $filter_function);\n}\n\n$functions = get_defined_functions();\n$functionNames\
    \ = $functions['user'];\n$filtered_functionNames = filter_by_substring($functionNames,\
    \ \"filter\");\nsort($filtered_functionNames);\nforeach ($filtered_functionNames\
    \ as $functionName) {\n\techo $functionName . \"\\n\";\n}", "\t$filtered = array();\n\
    \tforeach ($strings as $key => $string) {\n\t\tif (stripos($string, $substring)\
    \ !== false) {\n\t\t\t$filtered[$key] = $string;\n\t\t}\n\t}\n\treturn $filtered;\n\
    }", "\t$new_strings = array();\n\tfor ($i = 0; $i < count($strings); $i++) {\n\
    \t\tif (strpos($strings[$i], $substring) !== false) {\n\t\t\tarray_push($new_strings,\
    \ $strings[$i]);\n\t\t}\n\t}\n\treturn $new_strings;\n}", "\treturn array_filter($strings,\
    \ function($s) use ($substring) {\n\t\treturn (strpos($s, $substring) !== false);\n\
    \t});\n}\n", "\t$string_count = count($strings);\n\t$filtered_strings = array();\n\
    \t$filtered_string_count = 0;\n\tfor ($i = 0; $i < $string_count; $i++) {\n\t\t\
    if (strpos($strings[$i], $substring) !== false) {\n\t\t\t$filtered_strings[$filtered_string_count]\
    \ = $strings[$i];\n\t\t\t$filtered_string_count++;\n\t\t}\n\t}\n\treturn $filtered_strings;\n\
    }\n", "\t$filtered = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn\
    \ $filtered;\n}\n", "    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}", "\t$ret\
    \ = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string, $substring)\
    \ !== false) {\n\t\t\t$ret[] = $string;\n\t\t}\n\t}\n\treturn $ret;\n}\n", "\t\
    $results = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$results[] = $string;\n\t\t}\n\t}\n\treturn\
    \ $results;\n}", "\t$matches = array();\n\tforeach ($strings as $item) {\n\t\t\
    if (strpos($item, $substring) !== false) {\n\t\t\t$matches[] = $item;\n\t\t}\n\
    \t}\n\treturn $matches;\n}\n", "\t$filtered = array();\n\tforeach ($strings as\
    \ $string) {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$filtered[]\
    \ = $string;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}", "    $filtered = array();\n    foreach ($strings as $str) {\n\
    \        if (strpos($str, $substring) !== false) {\n            $filtered[] =\
    \ $str;\n        }\n    }\n    return $filtered;\n}", "\t$output = array();\n\t\
    foreach ($strings as $string) {\n\t\tif (strpos($string, $substring) !== false)\
    \ {\n\t\t\t$output[] = $string;\n\t\t}\n\t}\n\treturn $output;\n}\n", "    return\
    \ array_filter($strings, function($string) use ($substring) {\n        return\
    \ strpos($string, $substring) !== false;\n    });\n}", "\treturn array_filter($strings,\
    \ function($string) use ($substring) {\n\t\treturn strpos($string, $substring)\
    \ !== false;\n\t});\n}\n", "    $ret = array();\n    foreach ($strings as $str)\
    \ {\n        if (strpos($str, $substring) !== false) {\n            $ret[] = $str;\n\
    \        }\n    }\n    return $ret;\n}", "\treturn array_filter($strings, function($string)\
    \ use ($substring) {\n\t\treturn strpos($string, $substring) !== false;\n\t});\n\
    }\n", "    $result = array();\n    foreach ($strings as $s) {\n        if (strpos($s,\
    \ $substring) !== false) {\n            $result[] = $s;\n        }\n    }\n  \
    \  return $result;\n}\n", "    $result = array();\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $result[]\
    \ = $string;\n        }\n    }\n    return $result;\n}\n", "    $matches = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $matches[] = $string;\n        }\n    }\n    return\
    \ $matches;\n}", "    $filtered = array();\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n", "    return array_filter($strings,\
    \ function($s) use ($substring) {\n        return strpos($s, $substring) !== false;\n\
    \    });\n}\n", "\t$filtered = array();\n\tforeach ($strings as $key => $value)\
    \ {\n\t\tif (strpos($value, $substring) !== false) {\n\t\t\t$filtered[] = $value;\n\
    \t\t}\n\t}\n\treturn $filtered;\n}", "    // YOUR CODE GOES HERE\n}", "\t$result\
    \ = array();\n\tforeach ($strings as $str) {\n\t\tif (strpos($str, $substring)\
    \ !== false) {\n\t\t\t$result[] = $str;\n\t\t}\n\t}\n\treturn $result;\n}", " \
    \   $result = array();\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $result[] = $string;\n        }\n    }\n\
    \    return $result;\n}\n", "\t$sub_strings = array();\n\tforeach ($strings as\
    \ $string) {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$sub_strings[]\
    \ = $string;\n\t\t}\n\t}\n\treturn $sub_strings;\n}", "\t$filtered = array();\n\
    \tforeach ($strings as $string) {\n\t\tif (strpos($string, $substring) !== false)\
    \ {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "  \
    \  $filtered = array();\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $filtered[] = $string;\n        }\n  \
    \  }\n    return $filtered;\n}\n", "\t$filtered = array();\n\tforeach ($strings\
    \ as $s) {\n\t\tif (strpos($s, $substring) !== false) {\n\t\t\t$filtered[] = $s;\n\
    \t\t}\n\t}\n\treturn $filtered;\n}", "\t$result = array();\n\tforeach ($strings\
    \ as $string) {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$result[]\
    \ = $string;\n\t\t}\n\t}\n\treturn $result;\n}\n", "\treturn array_filter($strings,\
    \ function($string) use ($substring) {\n\t\treturn strpos($string, $substring)\
    \ !== false;\n\t});\n}\n", "\t$filtered = array();\n\tforeach ($strings as $string)\
    \ {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\
    \t\t}\n\t}\n\treturn $filtered;\n}", "    $matches = array();\n    foreach ($strings\
    \ as $string) {\n        if (strpos($string, $substring) !== false) {\n      \
    \      $matches[] = $string;\n        }\n    }\n    return $matches;\n}\n", "\t\
    $substring_len = strlen($substring);\n\t$result = array();\n\tforeach ($strings\
    \ as $string) {\n\t\tif (substr($string, 0, $substring_len) == $substring) {\n\
    \t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n}\n", "    $result\
    \ = array();\n    foreach ($strings as $string) {\n        if (stripos($string,\
    \ $substring) !== false) {\n            $result[] = $string;\n        }\n    }\n\
    \    return $result;\n}\n", "    return array_filter($strings, function($string)\
    \ use ($substring) {\n        return strpos($string, $substring) !== false;\n\
    \    });\n}\n", "    return array_filter($strings, function($s) use ($substring)\
    \ {\n        return strpos($s, $substring) !== false;\n    });\n}\n", "    return\
    \ array_filter($strings, function($string) use ($substring) {\n        return\
    \ strpos($string, $substring) !== false;\n    });\n}\n", "\t$filtered = array();\n\
    \tfor ($i = 0; $i < count($strings); $i++) {\n\t\tif (strpos($strings[$i], $substring)\
    \ !== false) {\n\t\t\tarray_push($filtered, $strings[$i]);\n\t\t}\n\t}\n\treturn\
    \ $filtered;\n}\n", "\treturn array_filter($strings, function($string) use ($substring)\
    \ {\n\t\treturn strpos($string, $substring) !== false;\n\t});\n}\n", "    $filtered\
    \ = array();\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $filtered[] = $string;\n        }\n  \
    \  }\n    return $filtered;\n}", "\t$filtered = array();\n\tforeach ($strings\
    \ as $item) {\n\t\tif (strpos($item, $substring) !== false) {\n\t\t\t$filtered[]\
    \ = $item;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "    $result = array();\n \
    \   foreach ($strings as $string) {\n        if (strpos($string, $substring) !==\
    \ false) {\n            $result[] = $string;\n        }\n    }\n    return $result;\n\
    }\n", "\t$filtered = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn\
    \ $filtered;\n}\n", "\t$new_array = array();\n\tforeach ($strings as $string)\
    \ {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\tarray_push($new_array,\
    \ $string);\n\t\t}\n\t}\n\treturn $new_array;\n}", "\t$filtered = array();\n\t\
    foreach ($strings as $string) {\n\t\tif (strpos($string, $substring) !== false)\
    \ {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "  \
    \  $filtered = array();\n    foreach ($strings as $str) {\n        if (strpos($str,\
    \ $substring) !== false) {\n            $filtered[] = $str;\n        }\n    }\n\
    \    return $filtered;\n}\n", "    $filtered = array();\n    for ($i = 0; $i <\
    \ count($strings); $i++) {\n        if (strpos($strings[$i], $substring) !== false)\
    \ {\n            $filtered[] = $strings[$i];\n        }\n    }\n    return $filtered;\n\
    }\n", "    $matching_strings = array();\n    for ($i = 0; $i < count($strings);\
    \ $i++) {\n        if (strpos($strings[$i], $substring) !== false) {\n       \
    \     array_push($matching_strings, $strings[$i]);\n        }\n    }\n    return\
    \ $matching_strings;\n}", "\t$filtered = array();\n\tforeach ($strings as $string)\
    \ {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\
    \t\t}\n\t}\n\treturn $filtered;\n}", "\t$strings = array_filter($strings, function($string)\
    \ use ($substring) {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t\
    return true;\n\t\t}\n\t\treturn false;\n\t});\n\treturn $strings;\n}\n", "\t$output\
    \ = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string, $substring)\
    \ !== false) {\n\t\t\t$output[] = $string;\n\t\t}\n\t}\n\treturn $output;\n}",
  "\t$result = array();\n\tforeach ($strings as $str) {\n\t\tif (strpos($str, $substring)\
    \ !== false) {\n\t\t\t$result[] = $str;\n\t\t}\n\t}\n\treturn $result;\n}", " \
    \   $result = array();\n    foreach ($strings as $str) {\n        if (strpos($str,\
    \ $substring) !== false) {\n            $result[] = $str;\n        }\n    }\n\
    \    return $result;\n}\n", "\t$matches = array();\n\tforeach ($strings as $string)\
    \ {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$matches[] = $string;\n\
    \t\t}\n\t}\n\treturn $matches;\n}\n", "    return array_filter($strings, function($string)\
    \ use ($substring) {\n        return strpos($string, $substring) !== false;\n\
    \    });\n}\n", "    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\n$strings\
    \ = array(\"abcd\", \"bacd\", \"cde\", \"array\");\nprint_r(filter_by_substring($strings,\
    \ \"a\"));", "\t$result = array();\n\tforeach ($strings as $string) {\n\t\tif\
    \ (strpos($string, $substring) !== false) {\n\t\t\t$result[] = $string;\n\t\t\
    }\n\t}\n\treturn $result;\n}\n", "\t$filtered = array();\n\tforeach ($strings\
    \ as $string) {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$filtered[]\
    \ = $string;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "    $out = array();\n  \
    \  foreach ($strings as $string) {\n        if (strpos($string, $substring) !==\
    \ false) {\n            $out[] = $string;\n        }\n    }\n    return $out;\n\
    }", "\tif (!is_array($strings)) {\n\t\treturn array();\n\t}\n\t$filtered = array();\n\
    \tforeach ($strings as $key => $value) {\n\t\tif (is_string($value) && strpos($value,\
    \ $substring) !== false) {\n\t\t\t$filtered[$key] = $value;\n\t\t}\n\t}\n\treturn\
    \ $filtered;\n}\n", "    $result = array();\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $result[]\
    \ = $string;\n        }\n    }\n    return $result;\n}\n", "    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}", "\t$matches = array();\n\tforeach ($strings as $string) {\n\t\
    \tif (strpos($string, $substring) !== false) {\n\t\t\t$matches[] = $string;\n\t\
    \t}\n\t}\n\treturn $matches;\n}\n", "\t$result = array();\n\tforeach ($strings\
    \ as $string) {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$result[]\
    \ = $string;\n\t\t}\n\t}\n\treturn $result;\n}\n", "\t$result = array();\n\tforeach\
    \ ($strings as $string) {\n\t\tif (strpos($string, $substring) !== false) {\n\t\
    \t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n}\n", "    $filtered\
    \ = array();\n    foreach ($strings as $s) {\n        if (strpos($s, $substring)\
    \ !== false) {\n            $filtered[] = $s;\n        }\n    }\n    return $filtered;\n\
    }\n", "\t$strings = array_filter($strings,\n\t\tfunction($string) use ($substring)\
    \ {\n\t\t\treturn strpos($string, $substring) !== false;\n\t\t}\n\t);\n\treturn\
    \ $strings;\n}\n", "    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n", "\t\
    $strings = array_filter($strings, function($string) use ($substring) {\n\t\treturn\
    \ (strpos($string, $substring) !== false);\n\t});\n\treturn $strings;\n}", "\t\
    return array_filter($strings, function($string) use ($substring) {\n\t\treturn\
    \ stripos($string, $substring) !== false;\n\t});\n}\n", "    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$array_filtered\
    \ = filter_by_substring($array, \"a\");\necho $array_filtered;\necho \"\\n\";\n",
  "\t$filtered = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn\
    \ $filtered;\n}\n", "\t$filtered = array();\n\tforeach ($strings as $string) {\n\
    \t\tif (strpos($string, $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\
    \t\t}\n\t}\n\treturn $filtered;\n}\n", "    $count = count($strings);\n    $result\
    \ = array();\n    for ($i = 0; $i < $count; $i++) {\n        if (strpos($strings[$i],\
    \ $substring) !== false) {\n            $result[] = $strings[$i];\n        }\n\
    \    }\n    return $result;\n}\n", "\t$filtered = array();\n\tforeach ($strings\
    \ as $string) {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$filtered[]\
    \ = $string;\n\t\t}\n\t}\n\treturn $filtered;\n}", "    return array_filter($strings,\
    \ function($string) use ($substring) {\n        return strpos($string, $substring)\
    \ !== false;\n    });\n}\n", "\t$result = array();\n\tforeach ($strings as $string)\
    \ {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$result[] = $string;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n", "\treturn array_filter($strings, function($string)\
    \ use ($substring) {\n\t\treturn strpos($string, $substring) !== false;\n\t});\n\
    }\n", "    $res = array();\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $res[] = $string;\n        }\n    }\n\
    \    return $res;\n}", "    $matched_strings = array();\n    foreach ($strings\
    \ as $string) {\n        if (strpos($string, $substring) !== false) {\n      \
    \      $matched_strings[] = $string;\n        }\n    }\n    return $matched_strings;\n\
    }", "    // TODO\n    $count = count($strings);\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        if (strpos($strings[$i], $substring) === false) {\n       \
    \     unset($strings[$i]);\n        }\n    }\n    return $strings;\n}", "    $filtered\
    \ = array();\n    foreach ($strings as $str) {\n        if (strpos($str, $substring)\
    \ !== false) {\n            $filtered[] = $str;\n        }\n    }\n    return\
    \ $filtered;\n}", "    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

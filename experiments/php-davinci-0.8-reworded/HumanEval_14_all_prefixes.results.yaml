language: php
name: HumanEval_14_all_prefixes
results:
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$len = strlen($string);\n\t$output = array();\n\
    \tfor ($i = 1; $i <= $len; $i++) {\n\t\t$output[] = substr($string, 0, $i);\n\t\
    }\n\treturn $output;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t\
    }\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $p = array();\n    $string_length = strlen($string);\n\
    \    for ($i = 0; $i < $string_length; $i++) {\n        $p[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $p;\n}\n\nfunction candidate(...$args) {\n  \
    \  return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $length = strlen($string);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $prefixes[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $slen = strlen($string);\n\
    \    for ($i = 0; $i < $slen; $i++) {\n        $prefixes[] = substr($string, 0,\
    \ $i + 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n\
    \    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    return array_reduce(str_split($string),\
    \ function($prefixes, $char) {\n        $prefixes[] = end($prefixes) . $char;\n\
    \        return $prefixes;\n    }, array(\"\"));\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9xyotkwv.php:17\n\
    Stack trace:\n#0 /tmp/tmp9xyotkwv.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp9xyotkwv.php\
    \ on line 17\n"
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$result = array();\n\tfor ($i = 0; $i <\
    \ strlen($string); $i++) {\n\t\t$result[] = substr($string, 0, $i + 1);\n\t}\n\
    \treturn $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $length = strlen($string);\n    $prefixes\
    \ = array();\n    for ($i = 0; $i < $length; $i++) {\n        $prefixes[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t\
    }\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t\
    }\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $tokens = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $tokens[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $tokens;\n}\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $ret = array();\n    for ($i = 0; $i\
    \ < strlen($string); $i++) {\n        $ret[] = substr($string, 0, $i + 1);\n \
    \   }\n    return $ret;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009409
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$count = strlen($string);\n\t$index = 0;\n\
    \t$prefixes = array();\n\twhile ($index < $count) {\n\t\t$prefixes[] = substr($string,\
    \ 0, $index + 1);\n\t\t$index++;\n\t}\n\treturn $prefixes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009409
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $toret = array();\n    for ($i = 0; $i\
    \ < strlen($string); $i++) {\n        $toret[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $toret;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009409
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefix_array = array();\n    for ($i\
    \ = 0; $i < strlen($string); $i++) {\n        $prefix_array[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $prefix_array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009409
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t\
    }\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    $length = strlen($string);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $result[] = substr($string, 0,\
    \ $i + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009409
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t\
    }\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\t$prefixes[] = substr($string,\
    \ 0, 1);\n\tfor ($i = 1; $i < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string,\
    \ 0, $i + 1);\n\t}\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n\
    \    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2x2hr8i.php:19\n\
    Stack trace:\n#0 /tmp/tmpy2x2hr8i.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpy2x2hr8i.php\
    \ on line 19\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$all_prefixes = array();\n\t$j = 0;\n\t\
    for ($i = 0; $i < strlen($string); $i++) {\n\t\t$all_prefixes[$j] = substr($string,\
    \ 0, $i + 1);\n\t\t$j++;\n\t}\n\treturn $all_prefixes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$result = array();\n\t$length = strlen($string);\n\
    \tfor ($i = 1; $i <= $length; $i++) {\n\t\t$result[] = substr($string, 0, $i);\n\
    \t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029069
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $num_chars = strlen($string);\n    $all_prefixes\
    \ = array();\n    for ($i = 0; $i < $num_chars; $i++) {\n        $all_prefixes[]\
    \ = substr($string, 0, $i + 1);\n    }\n    return $all_prefixes;\n}\n\nfunction\
    \ candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $len = strlen($string);\n    $out = array();\n\
    \    for ($i = 1; $i <= $len; $i++) {\n        $out[] = substr($string, 0, $i);\n\
    \    }\n    return $out;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$length = strlen($string);\n\t$prefixes\
    \ = array();\n\tfor ($i = 1; $i <= $length; $i++) {\n\t\t$prefixes[] = substr($string,\
    \ 0, $i);\n\t}\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $length = strlen($string);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $prefixes[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $length = strlen($string);\n    $res\
    \ = array();\n    for ($i = 0; $i < $length; $i++) {\n        $res[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $output = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $output[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $output;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    for ($i = 1; $i <= strlen($string); $i++)\
    \ {\n        $prefixes[] = substr($string, 0, $i);\n    }\n    return $prefixes;\n\
    }\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $prefixes in /tmp/tmp_9etefea.php on line\
    \ 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_9etefea.php:17\n\
    Stack trace:\n#0 /tmp/tmp_9etefea.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp_9etefea.php\
    \ on line 17\n"
  timestamp: 1660029069
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $ret = array();\n    for ($i = 0; $i\
    \ < strlen($string); $i++) {\n        $ret[] = substr($string, 0, $i + 1);\n \
    \   }\n    return $ret;\n}\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029069
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $return = array();\n    $i = 1;\n   \
    \ while ($i <= strlen($string)) {\n        $return[] = substr($string, 0, $i);\n\
    \        $i++;\n    }\n    return $return;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029069
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t\
    }\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$result = array();\n\tfor ($i = 0; $i <\
    \ strlen($string); $i++) {\n\t\t$result[] = substr($string, 0, $i + 1);\n\t}\n\
    \treturn $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $array = array();\n    for ($i = 0; $i\
    \ < strlen($string); $i++) {\n        $array[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $array;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    $len = strlen($string);\n\
    \    for ($i = 1; $i <= $len; $i++) {\n        $result[] = substr($string, 0,\
    \ $i);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    $length = strlen($string);\n\
    \    for ($i = 1; $i <= $length; $i++) {\n        $result[] = substr($string,\
    \ 0, $i);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $length = strlen($string);\n    $result\
    \ = array();\n    for ($i = 0; $i < $length; $i++) {\n        $result[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $result;\n}\n\n$commands = file('11.txt', FILE_IGNORE_NEW_LINES);\n\
    $commands = array_map('trim', $commands);\n$commands = explode(',', $commands[0]);\n\
    $commands = array_map('trim', $commands);\n$x = 0;\n$y = 0;\n$z = 0;\n$furthest\
    \ = 0;\nforeach ($commands as $command) {\n    $matches = array();\n    if (preg_match('/^([nsew])([\\\
    d]+)$/', $command, $matches)) {\n        if ($matches[1] == 'n') {\n         \
    \   $y -= $matches[2];\n        } else if ($matches[1] == 's') {\n           \
    \ $y += $matches[2];\n        } else if ($matches[1] == 'e') {\n            $x\
    \ += $matches[2];\n        } else if ($matches[1] == 'w') {\n            $x -=\
    \ $matches[2];\n        }\n    } else if (preg_match('/^ne([\\d]+)$/', $command,\
    \ $matches)) {\n        $x += $matches[1];\n        $z -= $matches[1];\n    }\
    \ else if (preg_match('/^se([\\d]+)$/', $command, $matches)) {\n        $x +=\
    \ $matches[1];\n        $y += $matches[1];\n    } else if (preg_match('/^sw([\\\
    d]+)$/', $command, $matches)) {\n        $x -= $matches[1];\n        $y += $matches[1];\n\
    \    } else if (preg_match('/^nw([\\d]+)$/', $command, $matches)) {\n        $x\
    \ -= $mat\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpa748xy4b.php
    on line 45

    '
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $length = strlen($string);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $prefixes[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $temp = array();\n    for ($i = 0; $i\
    \ < strlen($string); $i++) {\n        $temp[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $temp;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    for ($i = 0; $i < strlen($string); $i++)\
    \ {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $result in /tmp/tmp3egnch6a.php on line 9\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3egnch6a.php:17\nStack\
    \ trace:\n#0 /tmp/tmp3egnch6a.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp3egnch6a.php\
    \ on line 17\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t\
    }\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$len = strlen($string);\n\t$result = array();\n\
    \tfor ($i = 1; $i <= $len; $i++) {\n\t\t$result[] = substr($string, 0, $i);\n\t\
    }\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $length = strlen($string);\n    $i =\
    \ 0;\n    $prefixes = array();\n    while ($i < $length) {\n        $prefixes[]\
    \ = substr($string, 0, $i+1);\n        $i++;\n    }\n    return $prefixes;\n}\n\
    \nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$length = strlen($string);\n\t$prefixes\
    \ = array();\n\tfor ($i = 1; $i <= $length; $i++) {\n\t\t$prefixes[] = substr($string,\
    \ 0, $i);\n\t}\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$length = strlen($string);\n\t$prefixes\
    \ = array();\n\tfor ($x = 0; $x < $length; $x++) {\n\t\t$prefixes[] = substr($string,\
    \ 0, $x + 1);\n\t}\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n\
    \    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $string_length\
    \ = strlen($string);\n    for ($i = 0; $i < $string_length; $i++) {\n        $prefixes[]\
    \ = substr($string, 0, $i + 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $length = strlen($string);\n    $output\
    \ = array();\n    for ($i = 0; $i < $length; $i++) {\n        $output[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $output;\n}\n\nfunction candidate(...$args) {\n\
    \    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$chars = str_split($string);\n\t$chars_count\
    \ = count($chars);\n\t$count = 0;\n\t$output = array();\n\tforeach ($chars as\
    \ $char) {\n\t\t$count++;\n\t\t$output[] = implode(array_slice($chars, 0, $count));\n\
    \t}\n\treturn $output;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9q3w25a4.php:22\n\
    Stack trace:\n#0 /tmp/tmp9q3w25a4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp9q3w25a4.php\
    \ on line 22\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$out = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$out[] = substr($string, 0, $i + 1);\n\t}\n\treturn $out;\n}\n\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $out = array();\n    for ($i = 0; $i\
    \ < strlen($string); $i++) {\n        $out[] = substr($string, 0, $i + 1);\n \
    \   }\n    return $out;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\t$length = strlen($string);\n\
    \tfor ($i = 1; $i <= $length; $i++) {\n\t\t$prefixes[] = substr($string, 0, $i);\n\
    \t}\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t\
    }\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $length = strlen($string);\n    $prefixes\
    \ = array();\n    for ($start = 0; $start < $length; $start++) {\n        for\
    \ ($end = $start + 1; $end <= $length; $end++) {\n            $prefixes[] = substr($string,\
    \ $start, $end - $start);\n        }\n    }\n    return $prefixes;\n}\n\nfunction\
    \ candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphl85bqn0.php:22\n\
    Stack trace:\n#0 /tmp/tmphl85bqn0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmphl85bqn0.php\
    \ on line 22\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefix_array = array();\n    for ($i\
    \ = 0; $i < strlen($string); $i++) {\n        $prefix_array[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $prefix_array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009409
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $s=str_split($string);\n    $tmp='';\n\
    \    $r=array();\n    foreach($s as $k=>$v) {\n        $tmp.=$v;\n        $r[]=$tmp;\n\
    \    }\n    return $r;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvn2vv4kh.php:21\n\
    Stack trace:\n#0 /tmp/tmpvn2vv4kh.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvn2vv4kh.php\
    \ on line 21\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    $len = strlen($string);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $result[] = substr($string, 0, $i\
    \ + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\nfunction candidate(...$args) {\n    return\
    \ all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$array = array();\n\tfor ($i = 0; $i <\
    \ strlen($string); $i++) {\n\t\t$array[] = substr($string, 0, $i + 1);\n\t}\n\t\
    return $array;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $all_prefixes = array();\n    for ($i\
    \ = 0; $i < strlen($string); $i++) {\n        $all_prefixes[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $all_prefixes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\t$length = strlen($string);\n\
    \tfor ($i = 1; $i <= $length; $i++) {\n\t\t$prefixes[] = substr($string, 0, $i);\n\
    \t}\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $length = strlen($string);\n    $results\
    \ = array();\n    for ($i = 1; $i <= $length; $i++) {\n        $results[] = substr($string,\
    \ 0, $i);\n    }\n    return $results;\n}\n\nfunction candidate(...$args) {\n\
    \    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$array = array();\n\tfor ($i = 0; $i <\
    \ strlen($string); $i++) {\n\t\t$array[] = substr($string, 0, $i + 1);\n\t}\n\t\
    return $array;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $ret = array();\n    $len = strlen($string);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $ret[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $ret;\n}\n\nfunction candidate(...$args) {\n    return\
    \ all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$ret = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$ret[] = substr($string, 0, $i + 1);\n\t}\n\treturn $ret;\n}\n\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $length = strlen($string);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $prefixes[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $length = strlen($string);\n    $results\
    \ = array();\n    for ($i = 1; $i <= $length; $i++) {\n        $results[] = substr($string,\
    \ 0, $i);\n    }\n    return $results;\n}\n\nfunction candidate(...$args) {\n\
    \    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$pre = '';\n\t$prefixes = array();\n\t\
    for ($i = 0; $i < strlen($string); $i++) {\n\t\t$pre .= $string[$i];\n\t\t$prefixes[]\
    \ = $pre;\n\t}\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    $length = strlen($string);\n\
    \    for ($i = 1; $i <= $length; $i++) {\n        $result[] = substr($string,\
    \ 0, $i);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t\
    }\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $ret = array();\n    $length = strlen($string);\n\
    \    for ($i = 1; $i <= $length; $i++) {\n        $ret[] = substr($string, 0,\
    \ $i);\n    }\n    return $ret;\n}\n\nfunction candidate(...$args) {\n    return\
    \ all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $string_len = strlen($string);\n    $prefixes\
    \ = array();\n    for ($i = 0; $i < $string_len; $i++) {\n        $prefixes[]\
    \ = substr($string, 0, $i + 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t\
    }\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $length = strlen($string);\n    $output\
    \ = array();\n    for ($i = 0; $i < $length; $i++) {\n        $output[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $output;\n}\n\nfunction candidate(...$args) {\n\
    \    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $array = [];\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $array[] = substr($string, 0, $i + 1);\n    }\n    return $array;\n\
    }\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t\
    }\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    $length = strlen($string);\n\
    \    for ($i = 1; $i <= $length; $i++) {\n        $result[] = substr($string,\
    \ 0, $i);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$result = array();\n\tfor ($i = 0; $i <\
    \ strlen($string); $i++) {\n\t\t$result[] = substr($string, 0, $i + 1);\n\t}\n\
    \treturn $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t\
    }\n\treturn $prefixes;\n}\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $answer = array();\n    $len = strlen($string);\n\
    \    for ($i = 1; $i <= $len; $i++) {\n        $answer[] = substr($string, 0,\
    \ $i);\n    }\n    return $answer;\n}\n\nfunction candidate(...$args) {\n    return\
    \ all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $new_array = array();\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        $new_array[] = substr($string, 0,\
    \ $i + 1);\n    }\n    return $new_array;\n}\n\nfunction candidate(...$args) {\n\
    \    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    // YOUR CODE HERE\n    $output = array();\n\
    \    for ($i = 0; $i < strlen($string); $i++){\n    \t$output[] = substr($string,\
    \ 0, $i+1);\n    }\n    return $output;\n}\n\nfunction candidate(...$args) {\n\
    \    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $strlen = strlen($string);\n    $result\
    \ = array();\n    for ($i = 1; $i <= $strlen; $i++) {\n        $result[] = substr($string,\
    \ 0, $i);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $n = strlen($string);\n    for ($i =\
    \ 0; $i < $n; $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n   \
    \ }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $prefixes in /tmp/tmpkz163wq4.php on line\
    \ 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkz163wq4.php:18\n\
    Stack trace:\n#0 /tmp/tmpkz163wq4.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkz163wq4.php\
    \ on line 18\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $output = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $output[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $output;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t\
    }\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $length = strlen($string);\n    for ($i\
    \ = 1; $i <= $length; $i++) {\n        $prefixes[] = substr($string, 0, $i);\n\
    \    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return\
    \ all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $prefixes in /tmp/tmpumetw25v.php on line\
    \ 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpumetw25v.php:18\n\
    Stack trace:\n#0 /tmp/tmpumetw25v.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpumetw25v.php\
    \ on line 18\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $len = strlen($string);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $prefixes[] = substr($string, 0,\
    \ $i + 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n\
    \    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $return = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $return[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $return;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\t$chars = str_split($string);\n\
    \tfor ($i = 0; $i < count($chars); $i++) {\n\t\t$prefixes[] = substr($string,\
    \ 0, $i + 1);\n\t}\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n\
    \    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe0arsi6f.php:19\n\
    Stack trace:\n#0 /tmp/tmpe0arsi6f.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpe0arsi6f.php\
    \ on line 19\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    $pre = '';\n\
    \    for ($i = 0; $i < strlen($string); $i++) {\n        $pre .= $string[$i];\n\
    \        $result[] = $pre;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    for ($i = 0; $i < strlen($string); $i++)\
    \ {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return $prefixes;\n\
    }\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $prefixes in /tmp/tmppzsdbk9i.php on line\
    \ 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppzsdbk9i.php:17\n\
    Stack trace:\n#0 /tmp/tmppzsdbk9i.php(22): test()\n#1 {main}\n  thrown in /tmp/tmppzsdbk9i.php\
    \ on line 17\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefix_arr = array();\n\tfor ($i = 0;\
    \ $i < strlen($string); $i++) {\n\t\t$prefix_arr[] = substr($string, 0, $i + 1);\n\
    \t}\n\treturn $prefix_arr;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $ret = array();\n    for ($i = 0; $i\
    \ < strlen($string); $i++) {\n        $ret[] = substr($string, 0, $i + 1);\n \
    \   }\n    return $ret;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009409
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\t$char_array = str_split($string);\n\
    \t$string_length = strlen($string);\n\tfor ($i = 0; $i < $string_length; $i++)\
    \ {\n\t\t$str = \"\";\n\t\tfor ($j = 0; $j <= $i; $j++) {\n\t\t\t$str .= $char_array[$j];\n\
    \t\t}\n\t\t$prefixes[] = $str;\n\t}\n\treturn $prefixes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    for ($i = 0; $i < strlen($string); $i++)\
    \ {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return $prefixes;\n\
    }\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $prefixes in /tmp/tmppzsdbk9i.php on line\
    \ 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppzsdbk9i.php:17\n\
    Stack trace:\n#0 /tmp/tmppzsdbk9i.php(22): test()\n#1 {main}\n  thrown in /tmp/tmppzsdbk9i.php\
    \ on line 17\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    return array_map(function($index) use\
    \ ($string) {\n        return substr($string, 0, $index);\n    }, range(1, strlen($string)));\n\
    }\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjnq6c8fn.php:16\n\
    Stack trace:\n#0 /tmp/tmpjnq6c8fn.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpjnq6c8fn.php\
    \ on line 16\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $length = strlen($string);\n    $ret\
    \ = array();\n    for ($i = 1; $i <= $length; $i++) {\n        $ret[] = substr($string,\
    \ 0, $i);\n    }\n    return $ret;\n}\n\nfunction candidate(...$args) {\n    return\
    \ all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $length = strlen($string);\n    $prefixes\
    \ = array();\n    for ($i = 0; $i < $length; $i++) {\n        $prefixes[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $ans = array();\n    for ($i = 0; $i\
    \ < strlen($string); $i++) {\n        $ans[] = substr($string, 0, $i + 1);\n \
    \   }\n    return $ans;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\treturn array_map(function($index) use ($string)\
    \ {\n\t\treturn substr($string, 0, $index);\n\t}, range(1, strlen($string)));\n\
    }\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpov2wgl27.php:16\n\
    Stack trace:\n#0 /tmp/tmpov2wgl27.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpov2wgl27.php\
    \ on line 16\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    //FIXME\n    $len = strlen($string);\n\
    \    $result = array();\n    for ($i = 0; $i < $len; $i++) {\n        array_push($result,\
    \ substr($string, 0, $i + 1));\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $strlen = strlen($string);\n    $prefixes\
    \ = array();\n    for ($i = 0; $i < $strlen; $i++) {\n        $prefixes[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$array = array();\n\t$len = strlen($string);\n\
    \tfor ($i = 1; $i <= $len; $i++) {\n\t\t$array[] = substr($string, 0, $i);\n\t\
    }\n\treturn $array;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t\
    }\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    // Convert $string to array\n    $string\
    \ = str_split($string);\n    // Create output array\n    $prefixes = array();\n\
    \    // For each character\n    foreach ($string as $char) {\n        // Add character\
    \ to output array\n        $prefixes[] = $char;\n        // If character is last\
    \ character of the string\n        if ($char == end($string)) {\n            //\
    \ Break\n            break;\n        }\n        // Add previous output string\
    \ to output array\n        $prefixes[] = implode(\"\", $prefixes);\n    }\n  \
    \  // Return array of all prefixes\n    return $prefixes;\n}\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_px7jil.php:30\n\
    Stack trace:\n#0 /tmp/tmp1_px7jil.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1_px7jil.php\
    \ on line 30\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\tfor ($prefix_length = 1; $prefix_length\
    \ <= strlen($string); $prefix_length++) {\n\t\t$prefixes[] = substr($string, 0,\
    \ $prefix_length);\n\t}\n\treturn $prefixes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $prefixes in /tmp/tmp1swtrzdw.php on line\
    \ 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1swtrzdw.php:17\n\
    Stack trace:\n#0 /tmp/tmp1swtrzdw.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1swtrzdw.php\
    \ on line 17\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$len = strlen($string);\n\tfor ($i = 0;\
    \ $i < $len; $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn\
    \ $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $prefixes in /tmp/tmpl5kniie9.php on line\
    \ 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl5kniie9.php:18\n\
    Stack trace:\n#0 /tmp/tmpl5kniie9.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpl5kniie9.php\
    \ on line 18\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$result = array();\n\tfor ($i = 0; $i <\
    \ strlen($string); $i++) {\n\t\t$result[] = substr($string, 0, $i + 1);\n\t}\n\
    \treturn $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $len = strlen($string);\n    $prefixes\
    \ = array();\n    for ($i = 0; $i < $len; $i++) {\n        $prefixes[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $r = [];\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $r[] = substr($string, 0, $i + 1);\n    }\n    return $r;\n\
    }\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$l = strlen($string);\n\tfor ($i = 0; $i\
    \ < $l; $i++) {\n\t\t$prefixes[] = substr($string, 0, $i+1);\n\t}\n\treturn $prefixes;\n\
    }\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $prefixes in /tmp/tmp0es1v4r1.php on line\
    \ 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0es1v4r1.php:18\n\
    Stack trace:\n#0 /tmp/tmp0es1v4r1.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp0es1v4r1.php\
    \ on line 18\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t// YOUR CODE GOES HERE\n\t$prefixes = array();\n\
    \t$length = strlen($string);\n\tfor ($i = 0; $i < $length; $i++) {\n\t\t$prefixes[]\
    \ = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    $n = strlen($string);\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $result[] = substr($string, 0, $i\
    \ + 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$arr = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$arr[] = substr($string, 0, $i + 1);\n\t}\n\treturn $arr;\n}\n\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\t$prefix = \"\"\
    ;\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\t$prefix .= $string[$i];\n\
    \t\t$prefixes[] = $prefix;\n\t}\n\treturn $prefixes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $a = [];\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $a[] = substr($string, 0, $i + 1);\n    }\n    return $a;\n\
    }\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$result = array();\n\tfor ($i = 0; $i <\
    \ strlen($string); $i++) {\n\t\t$result[] = substr($string, 0, $i + 1);\n\t}\n\
    \treturn $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t// Our return value\n\t$results = array();\n\
    \t\n\t// For all possible substrings of the input string, add them to results\n\
    \tfor ($i = 0; $i < strlen($string); $i++) {\n\t\t$results[] = substr($string,\
    \ 0, $i + 1);\n\t}\n\t\n\t// Return result\n\treturn $results;\n}\n\nfunction\
    \ candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$result = array();\n\tfor ($i = 0; $i <\
    \ strlen($string); $i++) {\n\t\t$result[] = substr($string, 0, $i + 1);\n\t}\n\
    \treturn $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$result = array();\n\t$length = strlen($string);\n\
    \tfor ($i = 1; $i <= $length; $i++) {\n\t\t$result[] = substr($string, 0, $i);\n\
    \t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029069
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\t$len = strlen($string);\n\
    \tfor ($i = 0; $i < $len; $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\
    \t}\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$chars = str_split($string);\n\t$result\
    \ = array();\n\t$i = 1;\n\tforeach ($chars as $char) {\n\t\t$result[] = substr($string,\
    \ 0, $i);\n\t\t$i++;\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpczfa8f1o.php:21\n\
    Stack trace:\n#0 /tmp/tmpczfa8f1o.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpczfa8f1o.php\
    \ on line 21\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $length = strlen($string);\n    $prefixes\
    \ = array();\n    for ($i = 0; $i < $length; $i++) {\n        $prefixes[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$matches = array();\n\t$c = strlen($string);\n\
    \tfor ($i = 1; $i <= $c; $i++) {\n\t\t$matches[] = substr($string, 0, $i);\n\t\
    }\n\treturn $matches;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $i = 1;\n \
    \   $length = strlen($string);\n    while ($i <= $length) {\n        $prefixes[]\
    \ = substr($string, 0, $i);\n        $i++;\n    }\n    return $prefixes;\n}\n\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $length = strlen($string);\n    for ($i\
    \ = 0; $i < $length; $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $prefixes;\n}\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $prefixes in /tmp/tmpm_a32pey.php on line\
    \ 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_a32pey.php:17\n\
    Stack trace:\n#0 /tmp/tmpm_a32pey.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpm_a32pey.php\
    \ on line 17\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $word_len =\
    \ strlen($string);\n    for ($start = 0; $start < $word_len; $start++) {\n   \
    \     for ($prefix_len = $start + 1; $prefix_len <= $word_len; $prefix_len++)\
    \ {\n            $prefixes[] = substr($string, $start, $prefix_len);\n       \
    \ }\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n    return\
    \ all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm983wmlj.php:22\n\
    Stack trace:\n#0 /tmp/tmpm983wmlj.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpm983wmlj.php\
    \ on line 22\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $out = array();\n    for ($i = 0; $i\
    \ < strlen($string); $i++) {\n        $out[] = substr($string, 0, $i + 1);\n \
    \   }\n    return $out;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $output = array();\n    $len = strlen($string);\n\
    \    for ($i = 1; $i <= $len; $i++) {\n        $output[] = substr($string, 0,\
    \ $i);\n    }\n    return $output;\n}\n\nfunction candidate(...$args) {\n    return\
    \ all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    for ($prefix_size = 1; $prefix_size <=\
    \ strlen($string); $prefix_size++) {\n        $prefixes[] = substr($string, 0,\
    \ $prefix_size);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $prefixes in /tmp/tmplwlpj7qz.php on line\
    \ 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplwlpj7qz.php:17\n\
    Stack trace:\n#0 /tmp/tmplwlpj7qz.php(22): test()\n#1 {main}\n  thrown in /tmp/tmplwlpj7qz.php\
    \ on line 17\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\treturn array_filter(str_split($string),\
    \ function($str) {\n\t\treturn ($str == $string) ? $str : substr($string, 0, strlen($str));\n\
    \t});\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $string in /tmp/tmpdvb8dl81.php on line 7\n\
    \nWarning: Undefined variable $string in /tmp/tmpdvb8dl81.php on line 7\n\nWarning:\
    \ Undefined variable $string in /tmp/tmpdvb8dl81.php on line 7\n\nDeprecated:\
    \ substr(): Passing null to parameter #1 ($string) of type string is deprecated\
    \ in /tmp/tmpdvb8dl81.php on line 7\n\nWarning: Undefined variable $string in\
    \ /tmp/tmpdvb8dl81.php on line 7\n\nWarning: Undefined variable $string in /tmp/tmpdvb8dl81.php\
    \ on line 7\n\nDeprecated: substr(): Passing null to parameter #1 ($string) of\
    \ type string is deprecated in /tmp/tmpdvb8dl81.php on line 7\n\nWarning: Undefined\
    \ variable $string in /tmp/tmpdvb8dl81.php on line 7\n\nWarning: Undefined variable\
    \ $string in /tmp/tmpdvb8dl81.php on line 7\n\nDeprecated: substr(): Passing null\
    \ to parameter #1 ($string) of type string is deprecated in /tmp/tmpdvb8dl81.php\
    \ on line 7\n\nWarning: Undefined variable $string in /tmp/tmpdvb8dl81.php on\
    \ line 7\n\nWarning: Undefined variable $string in /tmp/tmpdvb8dl81.php on line\
    \ 7\n\nDeprecated: substr(): Passing null to parameter #1 ($string) of type string\
    \ is deprecated in /tmp/tmpdvb8dl81.php on line 7\n\nWarning: Undefined variable\
    \ $string in /tmp/tmpdvb8dl81.php on line 7\n\nWarning: Undefined variable $string\
    \ in /tmp/tmpdvb8dl81.php on line 7\n\nDeprecated: substr(): Passing null to parameter\
    \ #1 ($string) of type string is deprecated in /tmp/tmpdvb8dl81.php on line 7\n\
    \nWarning: Undefined variable $string in /tmp/tmpdvb8dl81.php on line 7\n\nWarning:\
    \ Undefined variable $string in /tmp/tmpdvb8dl81.php on line 7\n\nDeprecated:\
    \ substr(): Passing null to parameter #1 ($string) of type string is deprecated\
    \ in /tmp/tmpdvb8dl81.php on line 7\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpdvb8dl81.php:17\nStack trace:\n#0 /tmp/tmpdvb8dl81.php(21): test()\n\
    #1 {main}\n  thrown in /tmp/tmpdvb8dl81.php on line 17\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    // Iterate through all prefixes, starting\
    \ with a\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++)\
    \ {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return $prefixes;\n\
    }\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$result = array();\n\tfor ($i = 0; $i <\
    \ strlen($string); $i++) {\n\t\t$result[] = substr($string, 0, $i + 1);\n\t}\n\
    \treturn $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$result = array();\n\t$length = strlen($string);\n\
    \tfor ($i = 1; $i <= $length; $i++) {\n\t\t$result[] = substr($string, 0, $i);\n\
    \t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029069
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $r = array();\n    for ($i = 1; $i <=\
    \ strlen($string); $i++) {\n        $r[] = substr($string, 0, $i);\n    }\n  \
    \  return $r;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t\
    }\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t\
    }\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$length = strlen($string);\n\t$prefixes\
    \ = array();\n\tfor ($i = 1; $i <= $length; $i++) {\n\t\t$prefixes[] = substr($string,\
    \ 0, $i);\n\t}\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$res = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$res[] = substr($string, 0, $i + 1);\n\t}\n\treturn $res;\n}\n\n\
    function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $output = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $output[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $output;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t\
    }\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $string_length = strlen($string);\n \
    \   $prefixes = array();\n    for ($i = 0; $i < $string_length; $i++) {\n    \
    \    $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return $prefixes;\n\
    }\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    for ($i = 1; $i <= strlen($string); $i++)\
    \ {\n        $prefixes[] = substr($string, 0, $i);\n    }\n    return $prefixes;\n\
    }\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $prefixes in /tmp/tmp_9etefea.php on line\
    \ 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_9etefea.php:17\n\
    Stack trace:\n#0 /tmp/tmp_9etefea.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp_9etefea.php\
    \ on line 17\n"
  timestamp: 1660029069
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $retval = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $retval[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $retval;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$result = array();\n\tfor ($i = 0; $i <\
    \ strlen($string); $i++) {\n\t\t$result[] = substr($string, 0, $i + 1);\n\t}\n\
    \treturn $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$n = strlen($string);\n\t$prefixes = array();\n\
    \tfor ($i = 0; $i < $n; $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\
    \t}\n\treturn $prefixes;\n}\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t\
    }\n\treturn $prefixes;\n}\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $all_prefixes = array();\n    for ($i\
    \ = 0; $i < strlen($string); $i++) {\n        $all_prefixes[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $all_prefixes;\n}\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    return array_map(function($i) use ($string)\
    \ { return substr($string, 0, $i); }, range(1, strlen($string)));\n}\n\nfunction\
    \ candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4i7ihpb0.php:14\n\
    Stack trace:\n#0 /tmp/tmp4i7ihpb0.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp4i7ihpb0.php\
    \ on line 14\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\t$prefix = \"\"\
    ;\n\t$prefixes[] = $prefix;\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\t\
    $prefix .= $string[$i];\n\t\t$prefixes[] = $prefix;\n\t}\n\treturn $prefixes;\n\
    }\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"\
    asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpndfe15t9.php:21\n\
    Stack trace:\n#0 /tmp/tmpndfe15t9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpndfe15t9.php\
    \ on line 21\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $length = strlen($string);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $prefixes[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $prefixes;\n}\nfunction candidate(...$args) {\n\
    \    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070

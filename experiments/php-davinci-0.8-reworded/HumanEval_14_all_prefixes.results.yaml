language: php
name: HumanEval_14_all_prefixes
results:
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$len = strlen($string);\n\t$output = array();\n\
    \tfor ($i = 1; $i <= $len; $i++) {\n\t\t$output[] = substr($string, 0, $i);\n\t\
    }\n\treturn $output;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t\
    }\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $p = array();\n    $string_length = strlen($string);\n\
    \    for ($i = 0; $i < $string_length; $i++) {\n        $p[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $p;\n}\n\nfunction candidate(...$args) {\n  \
    \  return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $length = strlen($string);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $prefixes[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    $slen = strlen($string);\n\
    \    for ($i = 0; $i < $slen; $i++) {\n        $prefixes[] = substr($string, 0,\
    \ $i + 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n\
    \    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    return array_reduce(str_split($string),\
    \ function($prefixes, $char) {\n        $prefixes[] = end($prefixes) . $char;\n\
    \        return $prefixes;\n    }, array(\"\"));\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9xyotkwv.php:17\n\
    Stack trace:\n#0 /tmp/tmp9xyotkwv.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp9xyotkwv.php\
    \ on line 17\n"
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$result = array();\n\tfor ($i = 0; $i <\
    \ strlen($string); $i++) {\n\t\t$result[] = substr($string, 0, $i + 1);\n\t}\n\
    \treturn $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $length = strlen($string);\n    $prefixes\
    \ = array();\n    for ($i = 0; $i < $length; $i++) {\n        $prefixes[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\"\
    , \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t\
    }\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n\t$prefixes = array();\n\tfor ($i = 0; $i\
    \ < strlen($string); $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t\
    }\n\treturn $prefixes;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $tokens = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $tokens[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $tokens;\n}\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $result = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i + 1);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return all_prefixes(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\"\
    , \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\"\
    )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629
- exit_code: 0
  program: "<?php\n// Return array of all prefixes from shortest to longest of the\
    \ input string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\"\
    )\nfunction all_prefixes($string) {\n    $prefixes = array();\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i +\
    \ 1);\n    }\n    return $prefixes;\n}\n\nfunction candidate(...$args) {\n   \
    \ return all_prefixes(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    asdfgh\") !== array(\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"WWW\") !== array(\"\
    W\", \"WW\", \"WWW\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824629

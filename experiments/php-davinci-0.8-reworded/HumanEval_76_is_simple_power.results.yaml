language: php
name: HumanEval_76_is_simple_power
results:
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   $isPow = is_int(log($x, $n));\n    return $isPow;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprialqjp1.php:27\n\
    Stack trace:\n#0 /tmp/tmprialqjp1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprialqjp1.php\
    \ on line 27\n"
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if($x === 1) {\n    return true;\n  }\n  $divisor = $n;\n  while($divisor <\
    \ $x) {\n    $divisor *= $n;\n  }\n  return $divisor === $x;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = false;\n  // If the given base is 1, then the given number must be\
    \ 1 too.\n  if ($n === 1) {\n    $result = $x === 1;\n  } else {\n    $root =\
    \ pow($x, 1 / $n);\n    $result = $root === round($root);\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwqhvktfa.php:38\n\
    Stack trace:\n#0 /tmp/tmpwqhvktfa.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpwqhvktfa.php\
    \ on line 38\n"
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if (pow($n, intval(log($x, $n))) == $x) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ return pow($n, intval(log($x, $n))) == $x;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if($x==$n) return true;\n  if($x%$n!=0) return false;\n  return is_simple_power($x/$n,\
    \ $n);\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk5v014ut.php:37\n\
    Stack trace:\n#0 /tmp/tmpk5v014ut.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpk5v014ut.php\
    \ on line 37\n"
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if (pow($n, (int)log($x, $n)) == $x) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = pow($n, intval(log($x)/log($n)));\n  if ($result == $x) {\n    return\
    \ true;\n  } else {\n    return false;\n  }\n}\n\necho is_simple_power(3, 2);\n\
    function candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught DivisionByZeroError: Division by zero in /tmp/tmpjwtnq9p3.php:19\n\
    Stack trace:\n#0 /tmp/tmpjwtnq9p3.php(29): is_simple_power(1, 1)\n#1 /tmp/tmpjwtnq9p3.php(41):\
    \ candidate(1, 1)\n#2 /tmp/tmpjwtnq9p3.php(45): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpjwtnq9p3.php on line 19\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   // your code here\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppp1wzri4.php:26\n\
    Stack trace:\n#0 /tmp/tmppp1wzri4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppp1wzri4.php\
    \ on line 26\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   $power = log($x, $n);\n    return $power == floor($power);\n}\necho is_simple_power(1,\
    \ 4).\"\\n\";\necho is_simple_power(2, 2).\"\\n\";\necho is_simple_power(8, 2).\"\
    \\n\";\necho is_simple_power(3, 2).\"\\n\";\necho is_simple_power(3, 1).\"\\n\"\
    ;\necho is_simple_power(5, 3).\"\\n\";\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n1\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx05jsxj4.php:41\n\
    Stack trace:\n#0 /tmp/tmpx05jsxj4.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpx05jsxj4.php\
    \ on line 41\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $result = pow($n, round(log($x)/log($n)));\n  return ($result == $x);\n}\n\n\
    echo is_simple_power(1, 4) . \"<br>\";\necho is_simple_power(2, 2) . \"<br>\"\
    ;\necho is_simple_power(8, 2) . \"<br>\";\necho is_simple_power(3, 2) . \"<br>\"\
    ;\necho is_simple_power(3, 1) . \"<br>\";\necho is_simple_power(5, 3) . \"<br>\"\
    ;\n\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br>1<br>1<br><br>\nFatal error: Uncaught DivisionByZeroError: Division\
    \ by zero in /tmp/tmp8gam81h0.php:19\nStack trace:\n#0 /tmp/tmp8gam81h0.php(27):\
    \ is_simple_power(3, 1)\n#1 {main}\n  thrown in /tmp/tmp8gam81h0.php on line 19\n"
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ return pow($n,floor(log($x)/log($n))) == $x;\n}\n ?>\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "function candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1 && $n != 1) {\n    return false;\n  } elseif ($x == 1 && $n == 1)\
    \ {\n    return true;\n  } elseif ($x == 0) {\n    return false;\n  }\n  for ($i\
    \ = 2; $i <= $x; $i++) {\n    if ($x == pow($n, $i)) {\n      return true;\n \
    \   }\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprnktq4r6.php:47\n\
    Stack trace:\n#0 /tmp/tmprnktq4r6.php(50): test()\n#1 {main}\n  thrown in /tmp/tmprnktq4r6.php\
    \ on line 47\n"
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ // Your code here\n  $test = pow($n, (int)log($x, $n));\n  if ($test == $x)\
    \ {\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: -1
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if ($x == 1 && $n == 1) {\n    return true;\n  } elseif ($x <= 0 || $n <= 0)\
    \ {\n    return false;\n  }\n  $n_power = $n;\n  while ($n_power < $x) {\n   \
    \ $n_power *= $n;\n  }\n  return $n_power == $x;\n}\n\necho \"1, 4\\n\";\necho\
    \ is_simple_power(1, 4) ? \"true\\n\" : \"false\\n\";\necho \"2, 2\\n\";\necho\
    \ is_simple_power(2, 2) ? \"true\\n\" : \"false\\n\";\necho \"8, 2\\n\";\necho\
    \ is_simple_power(8, 2) ? \"true\\n\" : \"false\\n\";\necho \"3, 2\\n\";\necho\
    \ is_simple_power(3, 2) ? \"true\\n\" : \"false\\n\";\necho \"3, 1\\n\";\necho\
    \ is_simple_power(3, 1) ? \"true\\n\" : \"false\\n\";\necho \"5, 3\\n\";\necho\
    \ is_simple_power(5, 3) ? \"true\\n\" : \"false\\n\";\necho \"0, 0\\n\";\necho\
    \ is_simple_power(0, 0) ? \"true\\n\" : \"false\\n\";\necho \"10, 2\\n\";\necho\
    \ is_simple_power(10, 2) ? \"true\\n\" : \"false\\n\";\necho \"100, 2\\n\";\n\
    echo is_simple_power(100, 2) ? \"true\\n\" : \"false\\n\";\necho \"1, 1\\n\";\n\
    echo is_simple_power(1, 1) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: b'1, 4\nfalse\n2, 2\ntrue\n8, 2\ntrue\n3, 2\nfalse\n3, 1\n'
  timestamp: 1659823424
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ return log($x, $n) % 1 == 0;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 4.281953251437325 to int loses\
    \ precision in /tmp/tmpmj1y4ijg.php on line 19\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpmj1y4ijg.php:28\nStack trace:\n#0 /tmp/tmpmj1y4ijg.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpmj1y4ijg.php on line 28\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   $xx = log($x) / log($n);\n    return ($xx == floor($xx));\n}\n\n$answer =\
    \ is_simple_power(3, 2);\nvar_dump($answer);\nfunction candidate(...$args) {\n\
    \    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n    if (candidate(16,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(143214,\
    \ 16) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(24,\
    \ 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(128,\
    \ 4) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 12) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(false)\n\nFatal error: Uncaught DivisionByZeroError: Division by zero\
    \ in /tmp/tmpf6efbody.php:19\nStack trace:\n#0 /tmp/tmpf6efbody.php(26): is_simple_power(1,\
    \ 1)\n#1 /tmp/tmpf6efbody.php(38): candidate(1, 1)\n#2 /tmp/tmpf6efbody.php(42):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpf6efbody.php on line 19\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   return pow($n, intval(log($x) / log($n))) == $x;\n}\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught DivisionByZeroError: Division by zero in /tmp/tmpt7hc91kn.php:19\n\
    Stack trace:\n#0 /tmp/tmpt7hc91kn.php(22): is_simple_power(1, 1)\n#1 /tmp/tmpt7hc91kn.php(34):\
    \ candidate(1, 1)\n#2 /tmp/tmpt7hc91kn.php(38): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpt7hc91kn.php on line 19\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ $pow = pow($n, round(log($x, $n)));\n  return ($pow === $x) ? true : false;\n\
    }\necho is_simple_power(1, 4) . \"<br>\";\necho is_simple_power(2, 2) . \"<br>\"\
    ;\necho is_simple_power(8, 2) . \"<br>\";\necho is_simple_power(3, 2) . \"<br>\"\
    ;\necho is_simple_power(3, 1) . \"<br>\";\necho is_simple_power(5, 3) . \"<br>\"\
    ;\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<br><br><br><br><br><br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpntvzt4gv.php:33\nStack trace:\n#0 /tmp/tmpntvzt4gv.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmpntvzt4gv.php on line 33\n"
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \ if($x == 1){\n    return true;\n  }\n  $power = 1;\n  while($power <= $x){\n\
    \    if($power == $x){\n      return true;\n    }\n    $power *= $n;\n  }\n  return\
    \ false;\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419

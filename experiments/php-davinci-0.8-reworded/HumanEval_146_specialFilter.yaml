name: HumanEval_146_specialFilter
language: php
prompt: "<?php\n// Write a function that takes an array of numbers as input and returns\
  \ \n// the number of elements in the array that are greater than 10 and both \n\
  // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
  // >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
  \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n"
tests: "function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !==\
  \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2,\
  \ -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
  \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n \
  \   if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
  \ failed!\"); }\n}\n\ntest();"
completions: ["\t$goodNums = array();\n\tforeach ($nums as $num) {\n\t\t$gN = false;\n\
    \t\tif ($num > 10) {\n\t\t\t$gN = true;\n\t\t\tif ((($num % 10) % 2 == 0) || (($num\
    \ / 10) % 2 == 0)) {\n\t\t\t\t$gN = false;\n\t\t\t}\n\t\t}\n\t\tif ($gN) {\n\t\
    \t\t$goodNums[] = $num;\n\t\t}\n\t}\n\treturn count($goodNums);\n}\n", "\t// Your\
    \ code here!\n}\n", "    $count = 0;\n    foreach ($nums as $num) {\n        if\
    \ ($num > 10) {\n            $first_digit = substr($num, 0, 1);\n            $last_digit\
    \ = substr($num, -1);\n            if ($first_digit%2 != 0 && $last_digit%2 !=\
    \ 0) {\n                $count += 1;\n            }\n        }\n    }\n    return\
    \ $count;\n}\nprint specialFilter(array(15, -73, 14, -15)) . \"\\n\";\nprint specialFilter(array(33,\
    \ -2, -3, 45, 21, 109)) . \"\\n\";", "    return count(array_filter($nums, function($num)\
    \ {\n        $num = abs($num);\n        return $num > 10 && (int)$num % 2 && (int)substr($num,\
    \ -1) % 2;\n    }));\n}\n\nprint_r(specialFilter(array(15, -73, 14, -15)));\n\
    print_r(specialFilter(array(33, -2, -3, 45, 21, 109)));", "    $n = count($nums);\n\
    \    $a = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($nums[$i] > 10) {\n\
    \            $first = intval($nums[$i] / pow(10, floor(log10($nums[$i]))));\n\
    \            $last = $nums[$i] % 10;\n            if (($first % 2 != 0) && ($last\
    \ % 2 != 0)) {\n                $a++;\n            }\n        }\n    }\n    return\
    \ $a;\n}\n\n$myArray = array(15, -73, 14, -15);\necho specialFilter($myArray);\n\
    echo \"<br>\";\n$myArray = array(33, -2, -3, 45, 21, 109);\necho specialFilter($myArray);",
  "  $count = 0;\n  foreach ($nums as $num) {\n    $count += $num > 10 && ($num %\
    \ 10) % 2 == 1 && ($num / 10) % 2 == 1 ? 1 : 0;\n  }\n  return $count;\n}\n\n\
    echo specialFilter(array(15, -73, 14, -15));", "  $count = 0;\n  foreach ($nums\
    \ as $num) {\n    if (strlen($num) == 1 && $num >= 10 && ($num % 2 == 1)) {\n\
    \      $count++;\n    } elseif (strlen($num) > 1 && substr($num, 0, 1) % 2 ==\
    \ 1 && substr($num, -1) % 2 == 1) {\n      $count++;\n    }\n  }\n  return $count;\n\
    }\n\n$nums = array(15, -73, 14, -15);\necho specialFilter($nums) . PHP_EOL;\n\n\
    $nums = array(33, -2, -3, 45, 21, 109);\necho specialFilter($nums) . PHP_EOL;\n",
  "    $count = 0;\n    foreach ($nums as $num) {\n        $num = abs($num);\n   \
    \     if ($num > 10) {\n            $first = $num % 10;\n            $last = floor($num\
    \ / 10);\n            if ($first % 2 == 1 && $last % 2 == 1) {\n             \
    \   $count++;\n            }\n        }\n    }\n    return $count;\n}\n$nums =\
    \ array(15, -73, 14, -15);\necho specialFilter($nums);\necho \"\\n\";\n$nums =\
    \ array(33, -2, -3, 45, 21, 109);\necho specialFilter($nums);\necho \"\\n\";\n",
  '}', "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$firstDigit\
    \ = $num % 10;\n\t\t\t$lastDigit = (int) ($num / 10);\n\t\t\twhile ($lastDigit\
    \ >= 10) {\n\t\t\t\t$lastDigit = (int) ($lastDigit / 10);\n\t\t\t}\n\t\t\tif ($firstDigit\
    \ % 2 != 0 && $lastDigit % 2 != 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn $count;\n}\necho specialFilter(array(15, -73, 14, -15));\necho '<br/>';\n\
    echo specialFilter(array(33, -2, -3, 45, 21, 109));", "\t$counter = 0;\n\tforeach\
    \ ($nums as $num) {\n\t\t$str = strval($num);\n\t\tif ($num > 10 && (ord($str[0])\
    \ - ord('0')) % 2 != 0 && (ord($str[strlen($str) - 1]) - ord('0')) % 2 != 0) {\n\
    \t\t\t$counter++;\n\t\t}\n\t}\n\treturn $counter;\n}\necho specialFilter(array(15,\
    \ -73, 14, -15));", "    $count = 0;\n    foreach ($nums as $n) {\n        if\
    \ ($n > 10 && $n % 2 == 1 && $n / 100 % 2 == 1) {\n            $count++;\n   \
    \     }\n    }\n    return $count;\n}\n", "\n}", "  // Your code here\n  return\
    \ $nums;\n}\necho specialFilter(array(15, -73, 14, -15)) . PHP_EOL;\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109)) . PHP_EOL;", "    $count = 0;\n    foreach ($nums as $value)\
    \ {\n        if ($value > 10) {\n            $first_digit = floor($value / 10);\n\
    \            $last_digit = $value % 10;\n            if (($first_digit % 2 !=\
    \ 0) && ($last_digit % 2 != 0)) {\n                $count++;\n            }\n\
    \        }\n    }\n    return $count;\n}", "    $result = 0;\n    foreach ($nums\
    \ as $num) {\n        if ($num < 10 || $num > 100) {\n            continue;\n\
    \        }\n        $firstDigit = substr($num, 0, 1);\n        $lastDigit = substr($num,\
    \ -1);\n        if ($firstDigit % 2 == 1 && $lastDigit % 2 == 1) {\n         \
    \   $result += 1;\n        }\n    }\n    return $result;\n}\n", "\t$greater =\
    \ array_filter($nums, function($num) {\n\t\treturn $num > 10;\n\t});\n\t$greater\
    \ = array_filter($greater, function($num) {\n\t\t$last = substr($num, -1);\n\t\
    \t$first = substr($num, 0, 1);\n\t\treturn $last % 2 != 0 && $first % 2 != 0;\n\
    \t});\n\treturn count($greater);\n}", "\t$count = 0;\n\tforeach ($nums as $num)\
    \ {\n\t\tif (abs($num) > 10) {\n\t\t\t$firstDigit = $num;\n\t\t\twhile ($firstDigit\
    \ > 10) {\n\t\t\t\t$firstDigit = $firstDigit / 10;\n\t\t\t}\n\t\t\t$lastDigit\
    \ = $num % 10;\n\t\t\tif ($firstDigit % 2 == 1 && $lastDigit % 2 == 1) {\n\t\t\
    \t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n\necho \"Test 1: \\n\"\
    ;\necho specialFilter(array(15, -73, 14, -15)) . \"\\n\";\necho \"Test 2: \\n\"\
    ;\necho specialFilter(array(33, -2, -3, 45, 21, 109)) . \"\\n\";", "\t$filterNums\
    \ = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 10 && $num % 2 == 1 && substr($num,\
    \ 0, 1) % 2 == 1 && substr($num, -1) % 2 == 1) {\n\t\t\t$filterNums++;\n\t\t}\n\
    \t}\n\treturn $filterNums;\n}\n\necho specialFilter(array(15, -73, 14, -15));\n\
    echo \"\\n\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\necho \"\\\
    n\";", "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 10 && $num\
    \ % 2 === 1 && $num % 10 === 1) {\n      $count++;\n    }\n  }\n  return $count;\n\
    }", "\t$result = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 10 && $num %\
    \ 2 != 0 && $num % 10 != 0) {\n\t\t\t$result++;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n\necho \"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0447\u0438\u0441\u043B\
    \u0430 \u0447\u0435\u0440\u0435\u0437 \u043F\u0440\u043E\u0431\u0435\u043B\\n\"\
    ;\n$nums = explode(\" \", readline());\necho specialFilter($nums);", "\t$result\
    \ = 0;\n\tforeach ($nums as $key => $num) {\n\t\t$firstDigit = substr($num, 0,\
    \ 1);\n\t\t$lastDigit = substr($num, -1);\n\t\tif ($num > 10 && $firstDigit %\
    \ 2 != 0 && $lastDigit % 2 != 0) {\n\t\t\t$result++;\n\t\t}\n\t}\n\treturn $result;\n\
    }", "}\n", "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\t$first = str_split($num)[0];\n\
    \t\t$last = str_split($num)[strlen($num) - 1];\n\t\tif ($num > 10 && $first %\
    \ 2 != 0 && $last % 2 != 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n\
    }", "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 10 &&\
    \ ($num % 10) % 2 != 0 && ($num % 100) / 10 % 2 != 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\necho specialFilter(array(15, -73,\
    \ 14, -15)) . PHP_EOL;\necho specialFilter(array(33, -2, -3, 45, 21, 109)) . PHP_EOL;",
  "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif (abs($num) > 10) {\n\t\t\t$num\
    \ = abs($num);\n\t\t\t$first = $num % 10;\n\t\t\t$last = (int)($num / 10);\n\t\
    \t\tif ($first % 2 !== 0 and $last % 2 !== 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn $count;\n}\necho specialFilter(array(15, -73, 14, -15));",
  "\t$c = 0;\n\tforeach ($nums as $n) {\n\t\tif ($n > 10 && $n % 2 && floor($n / 10)\
    \ % 2) {\n\t\t\t$c++;\n\t\t}\n\t}\n\treturn $c;\n}\n\necho specialFilter(array(15,\
    \ -73, 14, -15));\necho \"\\n\";\necho specialFilter(array(33, -2, -3, 45, 21,\
    \ 109));\necho \"\\n\";", "    $count = 0;\n    foreach ($nums as $num) {\n  \
    \      if ($num > 10) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\n$nums = array(15, -73, 14, -15);\necho specialFilter($nums);", "    $finalCount\
    \ = 0;\n    foreach ($nums as $num) {\n        $firstDigit = intval($num / abs($num));\n\
    \        $lastDigit = $num % 10;\n        if ($num > 10 && $firstDigit % 2 !=\
    \ 0 && $lastDigit % 2 != 0) {\n            $finalCount++;\n        }\n    }\n\
    \    return $finalCount;\n}\necho specialFilter(array(15, -73, 14, -15));\necho\
    \ \"<br>\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));", "    $count\
    \ = 0;\n    foreach ($nums as $num) {\n        $first = $num % 10;\n        $last\
    \ = intval($num / 10);\n        if ($first % 2 == 1 && $last % 2 == 1 && $num\
    \ > 10) {\n            $count += 1;\n        }\n    }\n    return $count;\n}",
  "\t$total = 0;\n\tforeach ($nums as $num) {\n\t\tif (abs($num) >= 10) {\n\t\t\t\
    $digits = str_split(abs($num));\n\t\t\tif ($digits[0] % 2 == 1 && $digits[count($digits)\
    \ - 1] % 2 == 1) {\n\t\t\t\t$total += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn $total;\n\
    }", "    // Write your code here\n    $count = 0;\n    foreach ($nums as $num)\
    \ {\n        if ($num > 10) {\n            $first = substr($num, 0, 1);\n    \
    \        $last = substr($num, -1);\n            if ($first % 2 != 0 && $last %\
    \ 2 != 0) {\n                $count++;\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\n$nums = array(15, -73, 14, -15);\necho specialFilter($nums);\n",
  "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 10) {\n    \
    \        $first = (int) $num / 10;\n            $last = $num % 10;\n         \
    \   if ($first % 2 == 1 && $last % 2 == 1) {\n                $count++;\n    \
    \        }\n        }\n    }\n    return $count;\n}\n", "\treturn 0;\n}\n", " \
    \   $nums_arr = [];\n    foreach ($nums as $number) {\n        if ($number > 10)\
    \ {\n            $first_digit = substr($number, 0, 1);\n            $last_digit\
    \ = substr($number, -1);\n            if (($first_digit % 2) != 0 && ($last_digit\
    \ % 2) != 0) {\n                $nums_arr[] = $number;\n            }\n      \
    \  }\n    }\n    return count($nums_arr);\n}\n\n$special_arr = [15, -73, 14, -15];\n\
    print specialFilter($special_arr) . PHP_EOL;\n\n$special_arr = [33, -2, -3, 45,\
    \ 21, 109];\nprint specialFilter($special_arr) . PHP_EOL;", "    // Write your\
    \ code here\n}", "\t$numCount = 0;\n\tforeach ($nums as $num) {\n\t\t$first_digit\
    \ = substr($num, 0, 1);\n\t\t$last_digit = substr($num, -1);\n\t\tif ($num > 10\
    \ && $first_digit % 2 == 1 && $last_digit % 2 == 1) {\n\t\t\t$numCount++;\n\t\t\
    }\n\t}\n\treturn $numCount;\n}\n", "\t$temp = array();\n\tforeach ($nums as $num)\
    \ {\n\t\t$test = abs($num);\n\t\t$str = strval($test);\n\t\tif ($str[0] % 2 !=\
    \ 0 && $str[strlen($str) - 1] % 2 != 0 && $test > 10) {\n\t\t\tarray_push($temp,\
    \ $num);\n\t\t}\n\t}\n\treturn count($temp);\n}\n", "    $result = array();\n\
    \    foreach ($nums as $num) {\n        if (isOddAndGreaterThanTen($num)) {\n\
    \            $result[] = $num;\n        }\n    }\n    return count($result);\n\
    }\n", "\t$result = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\
    \t$string = strval($num);\n\t\t\tif (in_array($string[0], array(1, 3, 5, 7, 9))\
    \ && in_array($string[strlen($string) - 1], array(1, 3, 5, 7, 9))) {\n\t\t\t\t\
    $result++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\n", "    $count = 0;\n \
    \   foreach ($nums as $num) {\n        if (abs($num) > 10 && ($num % 2 == 1) &&\
    \ ($num > 0 ? \n                $num % 10 : abs($num) % 10) % 2 == 1) {\n    \
    \        $count++;\n        }\n    }\n    return $count;\n}\necho specialFilter(array(15,\
    \ -73, 14, -15)) . \"\\n\";\necho specialFilter(array(33, -2, -3, 45, 21, 109))\
    \ . \"\\n\";", "\t// code goes here\n\tforeach ($nums as $key => $value) {\n\t\
    \t$firs_digit = $value[0];\n\t\t$lenght = strlen($value);\n\t\t$last_digit = $value[$lenght-1];\n\
    \t\t$is_first_odd = $firs_digit % 2 == 1;\n\t\t$is_last_odd = $last_digit % 2\
    \ == 1;\n\t\tif($value > 10 && $is_first_odd && $is_last_odd){\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}", "    $result = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        if ($nums[$i] > 10) {\n            $numStr = strval($nums[$i]);\n\
    \            if (in_array($numStr[0], array('1', '3', '5', '7', '9')) && in_array($numStr[strlen($numStr)\
    \ - 1], array('1', '3', '5', '7', '9'))) {\n                $result++;\n     \
    \       }\n        }\n    }\n    return $result;\n}\n", "    $result = 0;\n  \
    \  foreach ($nums as $num) {\n        if (($num > 10) && (($num % 10) % 2 != 0)\
    \ && (($num / 100) % 2 != 0)) {\n            $result++;\n        }\n    }\n  \
    \  return $result;\n}\n", "\t$nums = array_filter($nums, \"filter\");\n\t$c =\
    \ 0;\n\tforeach ($nums as $value) {\n\t\t$c++;\n\t}\n\treturn $c;\n}\n", "   \
    \ $count = 0;\n    foreach ($nums as $num) {\n        if (abs($num) > 10) {\n\
    \            $lastDigit = abs($num) % 10;\n            $firstDigit = (int) (abs($num)\
    \ / pow(10, floor(log10(abs($num)))));\n            if ($lastDigit % 2 == 1 &&\
    \ $firstDigit % 2 == 1) {\n                $count++;\n            }\n        }\n\
    \    }\n    return $count;\n}\n$nums = array(15, -73, 14, -15);\necho \"Input:\
    \ [\";\nforeach ($nums as $num) {\n    echo $num . \", \";\n}\necho \"]\\n\";\n\
    echo \"Output: \" . specialFilter($nums) . \"\\n\";", "    // code here\n}", " \
    \   // your code here\n}", "  // Code here\n}", "\t$filtered = array_filter($nums,\
    \ function($n) {\n\t\tif ($n > 10) {\n\t\t\t$str_n = strval($n);\n\t\t\tif (strlen($str_n)\
    \ < 2) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t$first = substr($str_n, 0, 1);\n\
    \t\t\t$last = substr($str_n, -1);\n\t\t\tif ($first % 2 == 1 && $last % 2 == 1)\
    \ {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t});\n\treturn\
    \ count($filtered);\n}\n\necho specialFilter(array(15, -73, 14, -15)) . \"<br>\"\
    ;\necho specialFilter(array(33, -2, -3, 45, 21, 109)) . \"<br>\";", "    $result\
    \ = 0;\n    foreach ($nums as $num) {\n        if ($num >= 10) {\n           \
    \ $firstDigit = floor($num / 10);\n            $lastDigit = $num % 10;\n     \
    \       if ($firstDigit % 2 !== 0 && $lastDigit % 2 !== 0) {\n               \
    \ $result++;\n            }\n        }\n    }\n    return $result;\n}\n\necho\
    \ specialFilter(array(15, -73, 14, -15));\necho PHP_EOL;\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109));\necho PHP_EOL;", "\t$counter = 0;\n\tforeach ($nums as\
    \ $num) {\n\t\tif ($num > 10 && isOdd(firstDigit($num)) && isOdd(lastDigit($num)))\
    \ {\n\t\t\t$counter++;\n\t\t}\n\t}\n\treturn $counter;\n}\n", "  $num = 0;\n \
    \ foreach ($nums as $i) {\n    if ($i > 10 && (substr($i, 0, 1) % 2 != 0) && (substr($i,\
    \ -1) % 2 != 0)) {\n      $num++;\n    }\n  }\n  return $num;\n}\n", "\t$count\
    \ = 0;\n\tforeach ($nums as $num) {\n\t\t$digits = str_split($num);\n\t\tif ($num\
    \ > 10 && (end($digits) % 2 !== 0) && ($digits[0] % 2 !== 0)) {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}\n", "  $count = 0;\n  foreach ($nums as $num)\
    \ {\n    if (abs($num) > 10 && $num % 2 != 0) {\n      $count++;\n    }\n  }\n\
    \  return $count;\n}\n\n$array1 = array(15, -73, 14, -15);\n$array2 = array(33,\
    \ -2, -3, 45, 21, 109);\n\necho \"Input array: \";\necho \"<pre>\";\nprint_r($array1);\n\
    echo \"</pre>\";\necho \"Output: \" . specialFilter($array1) . \"<br>\";\n\necho\
    \ \"Input array: \";\necho \"<pre>\";\nprint_r($array2);\necho \"</pre>\";\necho\
    \ \"Output: \" . specialFilter($array2) . \"<br>\";", "    $count = 0;\n    foreach\
    \ ($nums as $num) {\n        if ($num > 10) {\n            $fDigit = floor($num\
    \ / 10);\n            $lDigit = $num % 10;\n            if ($fDigit % 2 != 0 &&\
    \ $lDigit % 2 != 0) {\n                $count++;\n            }\n        }\n \
    \   }\n    return $count;\n}\necho specialFilter(array(15, -73, 14, -15)) . \"\
    \\n\";\necho specialFilter(array(33, -2, -3, 45, 21, 109)) . \"\\n\";\n", "  $count\
    \ = 0;\n  foreach ($nums as $num) {\n    $s = (string)$num;\n    if ($num > 10\
    \ && $s[0] % 2 !== 0 && $s[strlen($s) - 1] % 2 !== 0) {\n      $count++;\n   \
    \ }\n  }\n  return $count;\n}\n", "    $matches = array_filter($nums, function($number)\
    \ {\n        $number_string = strval($number);\n        $first_digit = $number_string[0];\n\
    \        $last_digit = $number_string[strlen($number_string) - 1];\n        return\
    \ $number > 10 && $first_digit % 2 && $last_digit % 2;\n    });\n    return count($matches);\n\
    }\n$filtered = specialFilter(array(15, -73, 14, -15));\necho '<pre>';\nprint_r($filtered);\n\
    echo '</pre>';\n\n$filtered2 = specialFilter(array(33, -2, -3, 45, 21, 109));\n\
    echo '<pre>';\nprint_r($filtered2);\necho '</pre>';", "\t$filtered = [];\n\tforeach\
    \ ($nums as $num) {\n\t\tif ($num > 10 && isOdd($num) && isOdd(lastDigit($num)))\
    \ {\n\t\t\t$filtered[] = $num;\n\t\t}\n\t}\n\treturn count($filtered);\n}\n",
  "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif (strlen($num) > 1) {\n\t\t\t\
    $first = $num % 10;\n\t\t\t$last = intval($num / pow(10, strlen($num) - 1));\n\
    \t\t\tif ($num > 10 && $first % 2 !== 0 && $last % 2 !== 0) {\n\t\t\t\t$count++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n$nums = array(15, -73, 14, -15);\necho\
    \ specialFilter($nums);", "  $count = 0;\n  foreach ($nums as $num) {\n    if\
    \ ($num > 10 && $num % 2 != 0 && $num < -10 && $num % 2 != 0) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\n$count = specialFilter(array(15, -73, 14,\
    \ -15));\n\necho $count;\n", "  $count = 0;\n  foreach ($nums as $num) {\n   \
    \ $str = strval($num);\n    if ($num > 10 && strlen($str) > 1 &&\n      is_numeric($str[0])\
    \ && is_numeric($str[strlen($str) - 1]) &&\n      intval($str[0]) % 2 !== 0 &&\
    \ intval($str[strlen($str) - 1]) % 2 !== 0) {\n      $count++;\n    }\n  }\n \
    \ return $count;\n}\n\n$nums = array(15, -73, 14, -15);\n$nums2 = array(33, -2,\
    \ -3, 45, 21, 109);\necho specialFilter($nums) . \"\\n\";\necho specialFilter($nums2)\
    \ . \"\\n\";", "\t$found = 0;\n\tforeach ($nums as $num) {\n\t\tif (abs($num)\
    \ > 10 && abs($num) % 2 != 0)\n\t\t\t$found++;\n\t}\n\treturn $found;\n}\n\nif\
    \ ($argc > 1) {\n\tif (is_numeric($argv[1])) {\n\t\t$nums = range(0, $argv[1]);\n\
    \t\tshuffle($nums);\n\t\techo \"Input: \" . implode(\", \", $nums) . \"\\n\";\n\
    \t\techo \"Output: \" . specialFilter($nums) . \"\\n\";\n\t} else {\n\t\techo\
    \ \"Input is not numeric\\n\";\n\t}\n} else {\n\techo \"Please provide input\\\
    n\";\n}", "\t$newArr = [];\n\tforeach ($nums as $n) {\n\t\t$strNum = (string)$n;\n\
    \t\tif ($n > 10 && $strNum[0] % 2 !== 0 && $strNum[strlen($strNum) - 1] % 2 !==\
    \ 0) {\n\t\t\t$newArr[] = $n;\n\t\t}\n\t}\n\treturn count($newArr);\n}\n", " \
    \   $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 10 && $num\
    \ % 2 === 1 && \n            ($num % 10) % 2 === 1 &&\n            intval($num\
    \ / 10) % 2 === 1) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n", "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t\
    $digits = str_split($num);\n\t\t\tif ($digits[0] % 2 == 1 && $digits[count($digits)\
    \ - 1] % 2 == 1) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n\
    }\n$nums = array(15, -73, 14, -15);\necho specialFilter($nums) . \"<br>\";\n$nums\
    \ = array(33, -2, -3, 45, 21, 109);\necho specialFilter($nums) . \"<br>\";", " \
    \   $count = 0;\n    foreach ($nums as $num) {\n        $digits = (string)$num;\n\
    \        if ($num > 10 && $digits[0] % 2 !== 0 && $digits[strlen($digits) - 1]\
    \ % 2 !== 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n", "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\t$numStr = (string) $num;\n\
    \t\tif ($num > 10 && (is_numeric($numStr[0]) && $numStr[0] % 2 == 1) && (is_numeric($numStr[strlen($numStr)\
    \ - 1]) && $numStr[strlen($numStr) - 1] % 2 == 1)) {\n\t\t\t$count++;\n\t\t}\n\
    \t}\n\treturn $count;\n}\n", "    $count = 0;\n    foreach ($nums as $num) {\n\
    \        if ($num > 10 && is_numeric($num)) {\n            $str = (string) $num;\n\
    \            if ($str[0] % 2 != 0 && $str[strlen($str) - 1] % 2 != 0) {\n    \
    \            $count++;\n            }\n        }\n    }\n    return $count;\n\
    }\n\necho specialFilter(array(15, -73, 14, -15)).'<br>';\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109));", "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif\
    \ ($num > 10 && (abs($num) % 10) % 2 == 1 && ($num / 100) % 2 == 1) {\n\t\t\t\
    $count++;\n\t\t}\n\t}\n\treturn $count;\n}\necho specialFilter(array(15, -73,\
    \ 14, -15));\necho \"\\n\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));",
  "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\t$first = $num[0];\n\t\t$last =\
    \ $num[strlen($num) - 1];\n\t\tif (($num > 10) && ($first % 2 != 0) && ($last\
    \ % 2 != 0)) {\n\t\t\t$count += 1;\n\t\t}\n\t}\n\treturn $count;\n}", "\t$count\
    \ = 0;\n\tfor ($i = 0; $i < count($nums); $i++) {\n\t\tif ($nums[$i] > 10 && ($nums[$i]\
    \ / 10) % 2 == 1 && $nums[$i] % 2 == 1) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n", "    return array_reduce($nums, function($carry, $item) {\n \
    \       if($item > 10 && $item % 2 == 1 && strlen($item) > 1 && ($item % 10) %\
    \ 2 == 1) {\n            $carry++;\n        }\n        return $carry;\n    },\
    \ 0);\n}\n$test_array = array(15, -73, 14, -15);\necho specialFilter($test_array)\
    \ . \"\\n\";\n$test_array = array(33, -2, -3, 45, 21, 109);\necho specialFilter($test_array)\
    \ . \"\\n\";\n", "\t$counter = 0;\n\tforeach ($nums as $num) {\n\t\tif ((abs($num)\
    \ > 10) && ((abs($num) % 10) % 2 != 0) && ($num < 0 ? $num % 10 == 9 : $num %\
    \ 10 == 1)) {\n\t\t\t$counter++;\n\t\t}\n\t}\n\treturn $counter;\n}\n", "\t$count\
    \ = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 10 && $num % 2 !== 0 && $num\
    \ % 5 !== 0) {\n\t\t\t$count += 1;\n\t\t}\n\t}\n\treturn $count;\n}", "\t$count\
    \ = 0;\n\tforeach ($nums as $num) {\n\t\t$num = strval($num);\n\t\tif ($num >\
    \ 10 && isOdd($num[0]) && isOdd($num[strlen($num) - 1])) {\n\t\t\t$count++;\n\t\
    \t}\n\t}\n\treturn $count;\n}", "    $n = 0;\n    foreach ($nums as $num) {\n\
    \        if ($num > 10) {\n            $first = $num % 10;\n            $last\
    \ = ($num - $first) / 10;\n            if (($first % 2 === 1) && ($last % 2 ===\
    \ 1)) {\n                $n++;\n            }\n        }\n    }\n    return $n;\n\
    }\n", "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 10 && isOdd($num)\
    \ && isOdd($num % 10)) {\n      $count++;\n    }\n  }\n  return $count;\n}\n",
  "  \n  $filtered_nums = array_filter($nums, function($num) {\n    $num_str = strval($num);\n\
    \    $first_digit = $num_str[0];\n    $last_digit = $num_str[strlen($num_str)\
    \ - 1];\n    return (strlen($num_str) > 1 &&\n            $num > 10 &&\n     \
    \       is_numeric($first_digit) &&\n            is_numeric($last_digit) &&\n\
    \            $first_digit % 2 != 0 &&\n            $last_digit % 2 != 0);\n  });\n\
    \  \n  return count($filtered_nums);\n}\n\necho specialFilter(array(15, -73, 14,\
    \ -15)) . \"\\n\";\necho specialFilter(array(33, -2, -3, 45, 21, 109)) . \"\\\
    n\";\n", "    $n=0;\n    foreach ($nums as $num) {\n        if($num > 10 && $num%2!=0\
    \ && ($num%10==1 || $num%10==3 || $num%10==5 || $num%10==7 || $num%10==9))\n \
    \           $n++;\n    }\n    return $n;\n}\n\nprint_r(specialFilter(array(15,\
    \ -73, 14, -15)));\nprint_r(specialFilter(array(33, -2, -3, 45, 21, 109)));",
  "    // Code here\n    $count = 0;\n    foreach ($nums as $i) {\n        if ($i\
    \ > 10) {\n            $i = strval($i);\n            if (strlen($i) == 1) {\n\
    \                if ($i % 2 == 1) {\n                    $count++;\n         \
    \       }\n            } else {\n                if ($i[0] % 2 == 1 && $i[strlen($i)\
    \ - 1] % 2 == 1) {\n                    $count++;\n                }\n       \
    \     }\n        }\n    }\n    return $count;\n}\n\necho specialFilter(array(15,\
    \ -73, 14, -15));\necho \"<br>\";\necho specialFilter(array(33, -2, -3, 45, 21,\
    \ 109));", "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 10 && abs($num)\
    \ % 2 == 1) {\n\t\t\t$count += 1;\n\t\t}\n\t}\n\treturn $count;\n}\n", "    $count\
    \ = 0;\n    foreach ($nums as $n) {\n        if ($n > 10) {\n            $n_str\
    \ = strval($n);\n            if (((int) $n_str[0] % 2 != 0) && ((int) $n_str[strlen($n_str)\
    \ - 1] % 2 != 0)) {\n                $count++;\n            }\n        }\n   \
    \ }\n    return $count;\n}\n$nums = array(15, -73, 14, -15);\necho specialFilter($nums);\n\
    echo \"\\n\";\n$nums = array(33, -2, -3, 45, 21, 109);\necho specialFilter($nums);\n\
    echo \"\\n\";", "\t$result = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num >=\
    \ 10) {\n\t\t\t$str = (string) $num;\n\t\t\tif (strlen($str) > 1) {\n\t\t\t\t\
    if (strpos('13579', $str[0]) !== false && strpos('13579', $str[strlen($str) -\
    \ 1]) !== false) {\n\t\t\t\t\t$result++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\n", "    $counter = 0;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        if ($nums[$i] > 10 && isLastDigitOdd($nums[$i]) && isFirstDigitOdd($nums[$i]))\
    \ {\n            $counter++;\n        }\n    }\n    return $counter;\n}", "  \
    \  $filtered = [];\n    $count = 0;\n    foreach ($nums as $num) {\n        $filtered[]\
    \ = $num;\n    }\n    for ($i = 0; $i < count($filtered); $i++) {\n        if\
    \ ($filtered[$i] > 10) {\n            $numToStr = strval($filtered[$i]);\n   \
    \         $length = strlen($numToStr);\n            $lastDigit = $numToStr[$length\
    \ - 1];\n            $firstDigit = $numToStr[0];\n            if ($lastDigit %\
    \ 2 != 0 && $firstDigit % 2 != 0) {\n                $count++;\n            }\n\
    \        }\n    }\n    return $count;\n}\necho specialFilter(array(15, -73, 14,\
    \ -15));\necho \"\\n\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));",
  "\t$counter = 0;\n\tforeach ($nums as $n) {\n\t\tif ($n > 10) {\n\t\t\t$first =\
    \ floor($n / 10);\n\t\t\t$last = $n % 10;\n\t\t\tif ($first % 2 != 0 && $last\
    \ % 2 != 0) {\n\t\t\t\t$counter++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $counter;\n\
    }\n\nprint_r(specialFilter(array(15, -73, 14, -15)));\nprint_r(specialFilter(array(33,\
    \ -2, -3, 45, 21, 109)));\n", "    $count = 0;\n    foreach ($nums as $num) {\n\
    \        if ($num > 10) {\n            $first = substr($num, 0, 1);\n        \
    \    $last = substr($num, -1);\n            if ($first % 2 !== 0 && $last % 2\
    \ !== 0) {\n                $count++;\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\n$a = array(15, -73, 14, -15);\nprint specialFilter($a);\nprint\
    \ \"\\n\";\n$b = array(33, -2, -3, 45, 21, 109);\nprint specialFilter($b);\nprint\
    \ \"\\n\";", "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\t$num = strval($num);\n\
    \t\tif ($num >= 10 && is_numeric($num) && $num[0] % 2 != 0 && $num[strlen($num)\
    \ - 1] % 2 != 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}", "    $counter\
    \ = 0;\n    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 == 1\
    \ && $num % 10 == 1) {\n            $counter++;\n        }\n    }\n    return\
    \ $counter;\n}\n", "\t$a = array_filter($nums, function($val) {\n\t\tif (strlen($val)\
    \ < 2) return false;\n\t\t$first = (int)substr($val, 0, 1);\n\t\t$last = (int)substr($val,\
    \ -1);\n\t\tif ($first % 2 !== 0 && $last % 2 !== 0 && $val > 10) return true;\n\
    \t\treturn false;\n\t});\n\treturn count($a);\n}\n\n$arr = array(15, -73, 14,\
    \ -15);\nprint specialFilter($arr);\nprint \"\\n\";\n\n$arr = array(33, -2, -3,\
    \ 45, 21, 109);\nprint specialFilter($arr);\nprint \"\\n\";\n", "  $count = 0;\n\
    \  foreach ($nums as $num) {\n    $str_num = (string) $num;\n    if (strlen($str_num)\
    \ < 2) {\n      continue;\n    }\n    if ($num > 10 && $str_num[0] % 2 !== 0 &&\
    \ $str_num[strlen($str_num) - 1] % 2 !== 0) {\n      $count++;\n    }\n  }\n \
    \ return $count;\n}\n", "    $result = 0;\n    foreach ($nums as $item) {\n  \
    \      if (strlen($item) > 2 && $item > 10) {\n            $firstDigit = $item[0];\n\
    \            $lastDigit = $item[strlen($item) - 1];\n            if ($firstDigit\
    \ % 2 != 0 && $lastDigit % 2 != 0) {\n                $result++;\n           \
    \ }\n        }\n    }\n    return $result;\n}\necho specialFilter(array(15, -73,\
    \ 14, -15));\necho \"<br>\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));",
  "    $n=0;\n    foreach ($nums as $key => $value) {\n        if (($value>10)&&(($value%10==1)||($value%10==3)||($value%10==5)||($value%10==7)||($value%10==9)))\
    \ {\n            $n=$n+1;\n        }\n    }\n    return $n;\n}", "\t$count = 0;\n\
    \tforeach ($nums as $n) {\n\t\tif ($n > 10) {\n\t\t\t$n = (string)$n;\n\t\t\t\
    if (strlen($n) > 1) {\n\t\t\t\tif ($n[0] % 2 == 1 && $n[strlen($n) - 1] % 2 ==\
    \ 1) {\n\t\t\t\t\t$count++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n\
    }\n$nums = array(15, -73, 14, -15);\nprint_r(specialFilter($nums) . PHP_EOL);\n\
    $nums = array(33, -2, -3, 45, 21, 109);\nprint_r(specialFilter($nums) . PHP_EOL);",
  "    $count = 0;\n    foreach ($nums as $num) {\n        if (strlen($num) > 1) {\n\
    \            $n1 = substr($num, 0, 1);\n            $n2 = substr($num, -1);\n\
    \            if ($n1 % 2 !== 0 && $n2 % 2 !== 0 && $num > 10) {\n            \
    \    $count++;\n            }\n        }\n    }\n    return $count;\n}\necho specialFilter(array(15,\
    \ -73, 14, -15));\necho '<br>';\necho specialFilter(array(33, -2, -3, 45, 21,\
    \ 109));\n", "\t$elements = 0;\n\tforeach ($nums as $num) {\n\t\t$last = $num\
    \ % 10;\n\t\t$first = ($num - $last) / 10;\n\t\tif ($num > 10 && $last % 2 ==\
    \ 1 && $first % 2 == 1) {\n\t\t\t$elements++;\n\t\t}\n\t}\n\treturn $elements;\n\
    }\n", "    $numCount = 0;\n    foreach ($nums as $num) {\n        $first = substr($num,\
    \ 0, 1);\n        $last = substr($num, -1);\n        if ($num > 10 && $first %\
    \ 2 != 0 && $last % 2 != 0) {\n            $numCount++;\n        }\n    }\n  \
    \  return $numCount;\n}", "\t$result = 0;\n\tforeach ($nums as $num) {\n\t\tif\
    \ ($num > 10) {\n\t\t\t$first = substr($num, 0, 1);\n\t\t\t$last = substr($num,\
    \ -1);\n\t\t\tif ($first % 2 == 1 && $last % 2 == 1) {\n\t\t\t\t$result++;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn $result;\n}\n", "  $count = 0;\n  for ($i = 0; $i\
    \ < count($nums); $i++) {\n    if ($nums[$i] > 10 && $nums[$i] % 2 != 0 && $nums[$i]\
    \ < 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\necho specialFilter(array(15,\
    \ -73, 14, -15));\necho \"<br />\";\necho specialFilter(array(33, -2, -3, 45,\
    \ 21, 109));\necho \"<br />\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\n\
    echo \"<br />\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\necho \"\
    <br />\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\necho \"<br />\"\
    ;\necho specialFilter(array(33, -2, -3, 45, 21, 109));\necho \"<br />\";\necho\
    \ specialFilter(array(33, -2, -3, 45, 21, 109));\necho \"<br />\";\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109));\necho \"<br />\";\necho specialFilter(array(33, -2, -3,\
    \ 45, 21, 109));\necho \"<br />\";\necho specialFilter(array(33, -2, -3, 45, 21,\
    \ 109));\necho \"<br />\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\n\
    echo \"<br />\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\necho \"\
    <br />\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\necho \"<br />\"\
    ;\necho specialFilter(array(33, -2, -3, 45, 21, 109));\necho \"<br />\";\necho\
    \ specialFilter(array(33, -2, -3, 45, 21, 109));\necho \"<br />\";\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109));\necho \"<br />\";\n", "  $count = 0;\n  foreach ($nums\
    \ as $num) {\n    if ($num > 10 && isFirstAndLastDigitOdd($num)) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n", "\t$filterNum = 0;\n\tforeach ($nums as $num)\
    \ {\n\t\tif ($num > 10 && ((int)$num % 2 != 0) && ((int)substr($num, 0, 1) % 2\
    \ != 0) && ((int)substr($num, -1) % 2 != 0)) {\n\t\t\t$filterNum++;\n\t\t}\n\t\
    }\n\treturn $filterNum;\n}\n\necho specialFilter(array(15, -73, 14, -15));\necho\
    \ specialFilter(array(33, -2, -3, 45, 21, 109));", "\t$count = 0;\n\tforeach ($nums\
    \ as $num) {\n\t\tif ($num > 10) {\n\t\t\t$firstDigit = (int) substr($num, 0,\
    \ 1);\n\t\t\t$lastDigit = (int) substr($num, -1);\n\t\t\tif ($firstDigit % 2 !=\
    \ 0 && $lastDigit % 2 != 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n", "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif (($num >\
    \ 10) && ($num % 2 == 1) && ($num % 10 == 1)) {\n\t\t\t$count += 1;\n\t\t}\n\t\
    }\n\treturn $count;\n}", "    // Your code here\n    $count = 0;\n    foreach\
    \ ($nums as $num) {\n        if ($num > 10) {\n            $lastDigit = $num %\
    \ 10;\n            $firstDigit = intval($num / 10);\n            if ($lastDigit\
    \ % 2 != 0 && $firstDigit % 2 != 0) {\n                $count++;\n           \
    \ }\n        }\n    }\n    return $count;\n}\n\n$tests = [\n    [15, -73, 14,\
    \ -15],\n    [33, -2, -3, 45, 21, 109],\n    [10, 34, -1, 102, 1010, 0, 1, 3,\
    \ 5, 7, 9],\n    [100, 99, 98, 97, 96, 90, 60, -1, -3, -5, -7, -9],\n    [10,\
    \ 1, 10, 10, 1, 10, 10, 1, 10, 10],\n    [101, 11, 111, 1, 111, 101, 1, 11, 11,\
    \ 1],\n    [1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1],\n    [12, 13, 14, 15, -12,\
    \ -13, -14, -15],\n    [10, 10, 10, 10, 10, 10, 10, 10],\n    [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10],\n    [10, 9, 8, 7, 6, 5, 4, 3, 2, 1],\n    [15, 15, 15, 15,\
    \ 15, 15, 15, 15],\n    [100, 100, 100, 100, 100, 100, 100, 100],\n    [0, 0,\
    \ 0, 0, 0, 0, 0, 0],\n    [11, 33, 55, 77, 99, 111, 101, 91, 81, 71, 61, 51, 41,\
    \ 31, 21, 13, 11],\n    [55, 33, 11, 77, 55, 33, 11, 77, 55, 33, 11, 77, 55, 33,\
    \ 11, 77, 55, 33, 11, 77],\n    [111, 101, 91,", "    // Write your code here\n\
    \    return 0;\n}", "    $count = 0;\n    foreach ($nums as $num) {\n        if\
    \ ($num > 10 && strlen($num) >= 2) {\n            $last = $num % 10;\n       \
    \     $first = strlen($num) - strlen(strrchr($num, \"\"));\n            $first\
    \ = floor($num / pow(10, $first));\n            if ($first % 2 != 0 && $last %\
    \ 2 != 0) {\n                $count++;\n            }\n        }\n    }\n    return\
    \ $count;\n}", "}\n", "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num\
    \ > 10 &&\n\t\t\t$num % 2 != 0 &&\n\t\t\t$num % 10 != 0) {\n\t\t\t$count++;\n\t\
    \t}\n\t}\n\treturn $count;\n}\n", "\t$count = 0;\n\tforeach ($nums as $num) {\n\
    \t\tif ($num > 10 && abs($num) > 10) {\n\t\t\t$str = strval($num);\n\t\t\tif (intval($str[0])\
    \ % 2 != 0 && intval($str[strlen($str) - 1]) % 2 != 0) {\n\t\t\t\t$count++;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn $count;\n}\necho specialFilter(array(15, -73, 14,\
    \ -15));\necho \"<br>\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));",
  "  // your code here\n}\n", "  $ctr = 0;\n  foreach ($nums as $num) {\n    if ($num\
    \ > 10) {\n      $first_digit = substr($num, 0, 1);\n      $last_digit = substr($num,\
    \ -1);\n      if ($first_digit % 2 != 0 && $last_digit % 2 != 0) {\n        $ctr\
    \ += 1;\n      }\n    }\n  }\n  return $ctr;\n}\n", "  $filtered = array_filter($nums,\
    \ function($num) {\n    return ($num > 10) && (abs($num) % 2 == 1);\n  });\n \
    \ return count($filtered);\n}", "\t// YOUR CODE HERE\n\t$count = 0;\n\tfor ($i\
    \ = 0; $i < count($nums); $i++) {\n\t\t$current = strval($nums[$i]);\n\t\tif ($nums[$i]\
    \ > 10 && $current[0] % 2 != 0 && $current[strlen($current) - 1] % 2 != 0) {\n\
    \t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}", "    $new_nums = array();\n\
    \    foreach ($nums as $n) {\n        if ($n > 10 && isFirstLastOdd($n)) {\n \
    \           $new_nums[] = $n;\n        }\n    }\n    return count($new_nums);\n\
    }\n", "    // your code here\n}", "\t$new = array();\n\tforeach ($nums as $value)\
    \ {\n\t\tif ($value > 10) {\n\t\t\tif ($value % 2 == 1) {\n\t\t\t\tif (substr($value,\
    \ 0, 1) % 2 == 1) {\n\t\t\t\t\t$new[] = $value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn count($new);\n}\n", "\n}\n\n$nums = array(15, -73, 14, -15);\necho\
    \ specialFilter($nums) . PHP_EOL;\n$nums = array(33, -2, -3, 45, 21, 109);\necho\
    \ specialFilter($nums) . PHP_EOL;", "\t$count = 0;\n\tforeach ($nums as $n) {\n\
    \t\t$digits = str_split($n);\n\t\tif (count($digits) > 1) {\n\t\t\tif ($digits[0]\
    \ % 2 != 0 && $digits[count($digits) - 1] % 2 != 0 && $n > 10) {\n\t\t\t\t$count++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\necho specialFilter(array(15, -73, 14,\
    \ -15)) . PHP_EOL;\necho specialFilter(array(33, -2, -3, 45, 21, 109)) . PHP_EOL;",
  "\n}\n", "    return array_reduce($nums, function($carry, $num) {\n        if ($num\
    \ > 10 && $num % 2 != 0 && ($num[0] % 2 != 0 && $num[strlen($num) - 1] % 2 !=\
    \ 0)) {\n            $carry++;\n        }\n        return $carry;\n    }, 0);\n\
    }\necho specialFilter(array(15, -73, 14, -15));\necho \"<br>\";\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109));", "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif\
    \ ($num > 10 && strlen($num) > 1) {\n\t\t\t$str = (string)$num;\n\t\t\tif (substr($str,\
    \ 0, 1) % 2 == 1 && substr($str, -1) % 2 == 1) {\n\t\t\t\t$count++;\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn $count;\n}\n\necho specialFilter(array(15, -73, 14, -15));\n\
    echo \"<br>\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));", "    $greater_than_10\
    \ = array_filter($nums, function($num) {\n        return $num > 10;\n    });\n\
    \    $num_greater_than_10 = count($greater_than_10);\n    $unique_nums = array_unique($greater_than_10);\n\
    \    $num_unique_nums = count($unique_nums);\n    $last_and_first_odd = array_filter($unique_nums,\
    \ function($num) {\n        $last_digit = $num % 10;\n        $first_digit = substr($num,\
    \ 0, 1);\n        if($last_digit % 2 == 1 && $first_digit % 2 == 1) {\n      \
    \      return $num;\n        }\n    });\n    $num_last_and_first_odd = count($last_and_first_odd);\n\
    \    return $num_last_and_first_odd;\n}\n\necho specialFilter(array(15, -73, 14,\
    \ -15));\necho \"<br>\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));",
  "  $count = 0;\n  foreach ($nums as $num) {\n    $n = abs($num);\n    if ($n > 10\
    \ && $n % 2 != 0 && ($n / (10 ** (strlen($n) - 1))) % 2 != 0) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n", "\t$total = 0;\n\tforeach ($nums as $num)\
    \ {\n\t\t$first = substr($num, 0, 1);\n\t\t$last = substr($num, -1);\n\t\tif ($num\
    \ > 10 && $first % 2 != 0 && $last % 2 != 0) {\n\t\t\t$total++;\n\t\t}\n\t}\n\t\
    return $total;\n}\n", "    $count = 0;\n    foreach ($nums as $n) {\n        if\
    \ ($n > 10) {\n            $d1 = (int)substr($n, 0, 1);\n            $d2 = (int)substr($n,\
    \ -1);\n            if ($d1 % 2 != 0 && $d2 % 2 != 0) {\n                $count++;\n\
    \            }\n        }\n    }\n    return $count;\n}\n\necho specialFilter(array(15,\
    \ -73, 14, -15));", "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num\
    \ > 10 && ($num % 2 != 0) && (isFirstOrLastDigitOdd($num))) {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}\n", "\t$count = 0;\n\tforeach ($nums as $num)\
    \ {\n\t\t$firstDigit = (int) floor($num / 10);\n\t\t$lastDigit = $num % 10;\n\t\
    \tif ($num > 10 && ($firstDigit % 2 == 1 || $lastDigit % 2 == 1)) {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}\n", "\t$count = 0;\n\tforeach ($nums as $num)\
    \ {\n\t\tif (abs($num) > 10) {\n\t\t\t$num = abs($num);\n\t\t\t$first_digit =\
    \ $num % 10;\n\t\t\t$num /= 10;\n\t\t\twhile ($num > 10) {\n\t\t\t\t$num /= 10;\n\
    \t\t\t}\n\t\t\t$last_digit = $num;\n\t\t\tif ($first_digit % 2 != 0 && $last_digit\
    \ % 2 != 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n",
  "\t$greater = 0;\n\t$results = 0;\n\tfor ($i = 0; $i < count($nums); $i++) {\n\t\
    \tif ($nums[$i] > 10) {\n\t\t\t$greater++;\n\t\t}\n\t}\n\tfor ($i = 0; $i < count($nums);\
    \ $i++) {\n\t\tif ($nums[$i] > 10) {\n\t\t\t$firstDigit = floor($nums[$i] / 10);\n\
    \t\t\t$lastDigit = $nums[$i] % 10;\n\t\t\tif ($firstDigit % 2 != 0 && $lastDigit\
    \ % 2 != 0) {\n\t\t\t\t$results++;\n\t\t\t}\n\t\t}\n\t}\n\techo $results;\n}\n\
    specialFilter(array(33, -2, -3, 45, 21, 109));\necho \"<br>\";\nspecialFilter(array(15,\
    \ -73, 14, -15));\n", "    return count(array_filter($nums, function($n) {\n \
    \       return $n > 10 && strlen($n) > 1 && $n % 2 != 0;\n    }));\n}\n\necho\
    \ specialFilter(array(15, -73, 14, -15)); // 1\necho specialFilter(array(33, -2,\
    \ -3, 45, 21, 109)); // 2", "  $greaterThanTen = array_filter($nums, function($num)\
    \ {\n    return $num > 10;\n  });\n  return array_reduce($greaterThanTen, function($sum,\
    \ $num) {\n    if ($num < 0) {\n      $num = -1 * $num;\n    }\n    if ($num %\
    \ 10 === 1 || $num % 10 === 3 || $num % 10 === 5 || $num % 10 === 7 || $num %\
    \ 10 === 9) {\n      $sum++;\n    }\n    return $sum;\n  }, 0);\n}\n", "  $count\
    \ = 0;\n  foreach ($nums as $num) {\n    $first_digit = substr($num, 0, 1);\n\
    \    $last_digit = substr($num, -1);\n    if (($num > 10) && ($first_digit % 2\
    \ != 0) && ($last_digit % 2 != 0)) {\n      $count++;\n    }\n  }\n  return $count;\n\
    }\n\n$nums = array(15, -73, 14, -15);\necho specialFilter($nums) . PHP_EOL;",
  "    $total = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($nums[$i]\
    \ > 10) {\n            $str = strval($nums[$i]);\n            if ($str[0] % 2\
    \ != 0 && $str[strlen($str) - 1] % 2 != 0) {\n                $total++;\n    \
    \        }\n        }\n    }\n    return $total;\n}\n\necho specialFilter(array(15,\
    \ -73, 14, -15)) . \"\\n\";\necho specialFilter(array(33, -2, -3, 45, 21, 109))\
    \ . \"\\n\";", "    $count = 0;\n    foreach ($nums as $num) {\n        if (abs($num)\
    \ > 10 && $num % 2 != 0) {\n            $temp = $num;\n            while ($temp\
    \ > 0) {\n                $first = $temp % 10;\n                $last = $temp\
    \ % 10;\n                $temp = (int)($temp / 10);\n            }\n         \
    \   if ($first % 2 != 0 && $last % 2 != 0) {\n                $count++;\n    \
    \        }\n        }\n    }\n    return $count;\n}\n$arr = array(15, -73, 14,\
    \ -15);\n$arr2 = array(33, -2, -3, 45, 21, 109);\necho specialFilter($arr) . PHP_EOL;\n\
    echo specialFilter($arr2) . PHP_EOL;", "\t$count = 0;\n\tforeach ($nums as $num)\
    \ {\n\t\tif ($num > 10) {\n\t\t\t$firstDigit = substr($num, 0, 1);\n\t\t\t$lastDigit\
    \ = substr($num, -1);\n\t\t\tif ($firstDigit % 2 !== 0 && $lastDigit % 2 !== 0)\
    \ {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n", "    $count\
    \ = 0;\n    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 == 1\
    \ && $num % 10 % 2 == 1) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nclass specialFilterTest extends PHPUnit_Framework_TestCase {\n\
    \    public function testSpecialFilter() {\n        $this->assertEquals(1, specialFilter(array(15,\
    \ -73, 14, -15)));\n        $this->assertEquals(2, specialFilter(array(33, -2,\
    \ -3, 45, 21, 109)));\n    }\n}\n\n$t = new specialFilterTest();\n$t->testSpecialFilter();",
  "    $greater_than_10 = 0;\n    foreach ($nums as $num) {\n        if ($num > 10)\
    \ {\n            $greater_than_10++;\n        }\n    }\n    return $greater_than_10;\n\
    }\n", "    //$odd_num = [];\n    //foreach ($nums as $num) {\n        //if (strlen($num)\
    \ >= 2 && ($num % 2 == 1) && (int)$num[0] % 2 == 1 && (int)$num[-1] % 2 == 1)\
    \ {\n            //$odd_num[] = $num;\n        //}\n    //}\n    $odd_num = array_filter($nums,\
    \ function($num) {\n        return strlen($num) >= 2 && ($num % 2 == 1) && (int)$num[0]\
    \ % 2 == 1 && (int)$num[-1] % 2 == 1;\n    });\n    return count($odd_num);\n\
    }\necho specialFilter(array(15, -73, 14, -15));\necho \"\\n\";\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109));\necho \"\\n\";", "\t$count = 0;\n\tforeach ($nums as\
    \ $num) {\n\t\tif ($num < 10 || $num % 2 == 0) {\n\t\t\tcontinue;\n\t\t}\n\t\t\
    $first = getFirstDigit($num);\n\t\t$last = getLastDigit($num);\n\t\tif ($first\
    \ % 2 == 1 && $last % 2 == 1) {\n\t\t\t$count += 1;\n\t\t}\n\t}\n\treturn $count;\n\
    }\n", "\t$greater_than_10 = array_filter($nums, function($num) {\n\t\treturn $num\
    \ > 10;\n\t});\n\t$odd_first_and_last = array_filter($greater_than_10, function($num)\
    \ {\n\t\treturn $num % 2 == 1 && ($num % 10 == 1 || $num % 10 == 3 || $num % 10\
    \ == 5 || $num % 10 == 7 || $num % 10 == 9);\n\t});\n\treturn count($odd_first_and_last);\n\
    }\n", "\t$evenCount = 0;\n\tforeach ($nums as $n) {\n\t\tif ($n > 10) {\n\t\t\t\
    $lastDigit = $n % 10;\n\t\t\t$firstDigit = $n;\n\t\t\twhile ($firstDigit >= 10)\
    \ {\n\t\t\t\t$firstDigit = (int)($firstDigit / 10);\n\t\t\t}\n\t\t\t// echo $lastDigit\
    \ . \" \" . $firstDigit . \" \";\n\t\t\tif ($lastDigit % 2 != 0 && $firstDigit\
    \ % 2 != 0) {\n\t\t\t\t$evenCount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $evenCount;\n\
    }\necho specialFilter(array(15, -73, 14, -15)) . \"<br>\";\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109)) . \"<br>\";", "    $result = 0;\n    $length = count($nums);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $num = $nums[$i];\n        if\
    \ ($num > 10) {\n            $lastDigit = $num % 10;\n            $firstDigit\
    \ = ($num - $lastDigit) / 10;\n            if ($lastDigit % 2 === 1 && $firstDigit\
    \ % 2 === 1) {\n                $result += 1;\n            }\n        }\n    }\n\
    \    return $result;\n}\n", "    $count = 0;\n    foreach ($nums as $n) {\n  \
    \      if (abs($n) > 10 && $n % 2 != 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n", "\t$specialNum = 0;\n\tforeach ($nums as $key\
    \ => $num) {\n\t\tif ($num > 10) {\n\t\t\t$lastNum = substr($num, -1);\n\t\t\t\
    $firstNum = substr($num, 0, 1);\n\t\t\tif ($lastNum % 2 != 0) {\n\t\t\t\tif ($firstNum\
    \ % 2 != 0) {\n\t\t\t\t\t$specialNum++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ $specialNum;\n}\n$nums = array(15, -73, 14, -15);\necho specialFilter($nums)\
    \ . PHP_EOL;\n$nums2 = array(33, -2, -3, 45, 21, 109);\necho specialFilter($nums2)\
    \ . PHP_EOL;\n", "  // Your code here...\n}", "  $count = 0;\n  foreach ($nums\
    \ as $num) {\n    if (strlen($num) > 1 && $num > 10) {\n      $first = $num[0];\n\
    \      $last = $num[strlen($num) - 1];\n      if ($first % 2 != 0 && $last % 2\
    \ != 0) {\n        $count++;\n      }\n    }\n  }\n  return $count;\n}\n", "\t\
    $result = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$numStr\
    \ = (string)$num;\n\t\t\tif (strlen($numStr) > 1) {\n\t\t\t\tif (strpos(\"13579\"\
    , $numStr[0]) !== false \n\t\t\t\t\t&& strpos(\"13579\", $numStr[strlen($numStr)\
    \ - 1]) !== false) {\n\t\t\t\t\t$result++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\
    return $result;\n}\n$result = specialFilter(array(15, -73, 14, -15));\necho $result;\n\
    echo \"<br>\";\n$result = specialFilter(array(33, -2, -3, 45, 21, 109));\necho\
    \ $result;", "    $count = 0;\n    foreach ($nums as $num) {\n        $numStr\
    \ = (string) $num;\n        if ($num > 10 &&\n            $numStr[0] % 2 == 1\
    \ &&\n            $numStr[strlen($numStr) - 1] % 2 == 1) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "\n}", "\t// Write your code here\n\
    }", "    $count = 0;\n    foreach ($nums as $num) {\n        $firstDigit = substr($num,\
    \ 0, 1);\n        $lastDigit = substr($num, -1);\n        if ($num > 10 && ($firstDigit\
    \ % 2 == 1) && ($lastDigit % 2 == 1)) {\n            $count++;\n        }\n  \
    \  }\n    return $count;\n}\n\necho specialFilter(array(15, -73, 14, -15));\n\
    echo \"<br>\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));", "\t$count\
    \ = 0;\n\tfor ($i = 0; $i < count($nums); $i++) {\n\t\tif ($nums[$i] > 10) {\n\
    \t\t\t$temp = $nums[$i];\n\t\t\tif ($temp % 2 != 0) {\n\t\t\t\t$count++;\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn $count;\n}\n\n$my_array = array(15, -73, 14, -15);\n\
    echo specialFilter($my_array);\n", "  $result = 0;\n  foreach ($nums as $num)\
    \ {\n    if (strlen($num) > 1 && abs($num) > 10) {\n      $first = $num[0];\n\
    \      $last = substr($num, -1);\n      if ($first % 2 !== 0 && $last % 2 !==\
    \ 0) {\n        $result++;\n      }\n    }\n  }\n  return $result;\n}\n", "  \
    \  $counter = 0;\n    foreach ($nums as $num) {\n        if ($num > 10) {\n  \
    \          $firstDigit = intval($num / 10);\n            $lastDigit = $num % 10;\n\
    \            if ($firstDigit % 2 != 0 && $lastDigit % 2 != 0) {\n            \
    \    $counter++;\n            }\n        }\n    }\n    return $counter;\n}\n\n\
    $arr1 = array(15, -73, 14, -15);\n$arr2 = array(33, -2, -3, 45, 21, 109);\necho\
    \ specialFilter($arr1) . PHP_EOL;\necho specialFilter($arr2) . PHP_EOL;", "  \
    \  $output = [];\n    foreach ($nums as $num) {\n        if ($num > 10) {\n  \
    \          if ($num % 2 != 0 && $num[0] % 2 != 0 && $num[strlen($num) - 1] % 2\
    \ != 0) {\n                $output[] = $num;\n            }\n        }\n    }\n\
    \    return count($output);\n}\n", "\t$l = $nums[0];\n\t$r = $nums[count($nums)\
    \ - 1];\n\t$l1 = (int)$l;\n\t$r1 = (int)$r;\n\t$count = 0;\n\t$count1 = 0;\n\t\
    if ($l1 > 10 && $r1 > 10) {\n\t\t$count1++;\n\t}\n\tif ($l1 % 2 != 0 && $r1 %\
    \ 2 != 0) {\n\t\t$count++;\n\t}\n\techo $count1 * $count;\n}\nspecialFilter(array(15,\
    \ -73, 14, -15));", "   $count = 0;\n   foreach ($nums as $num) {\n      if ($num\
    \ > 10 && ($num % 2 != 0)) {\n         $count++;\n      }\n   }\n   return $count;\n\
    }", "    $result = array();\n    foreach ($nums as $num) {\n        if ($num >\
    \ 10) {\n            $temp = $num;\n            $first = floor($temp / 10);\n\
    \            $last = $temp % 10;\n            if ($first % 2 === 1 || $last %\
    \ 2 === 1) {\n                $result[] = $num;\n            }\n        }\n  \
    \  }\n    return count($result);\n}", "  $count = 0;\n  foreach ($nums as $num)\
    \ {\n    if ($num > 10) {\n      $num_array = str_split($num);\n      if ($num_array[0]\
    \ % 2 != 0 && $num_array[count($num_array) - 1] % 2 != 0) {\n        $count++;\n\
    \      }\n    }\n  }\n  return $count;\n}\necho specialFilter(array(15, -73, 14,\
    \ -15));\necho \"\\n\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\n\
    echo \"\\n\";", "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num\
    \ > 10 && $num % 2 == 1 && ($num % 10) % 2 == 1) {\n            $count++;\n  \
    \      }\n    }\n    return $count;\n}\n", "\t$nums = array_filter($nums, function($n)\
    \ { return $n > 10; });\n\t$nums = array_filter($nums, function($n) { return $n\
    \ % 2 != 0; });\n\t$nums = array_filter($nums, function($n) { return $n % 10 %\
    \ 2 != 0; });\n\treturn count($nums);\n}\n\nprint specialFilter(array(15, -73,\
    \ 14, -15));\nprint specialFilter(array(33, -2, -3, 45, 21, 109));", "  $result\
    \ = 0;\n  foreach ($nums as $num) {\n    if (abs($num) > 10) {\n      $digit1\
    \ = (int) ($num / 10);\n      $digit2 = $num % 10;\n      if ($digit1 % 2 != 0\
    \ && $digit2 % 2 != 0) {\n        $result++;\n      }\n    }\n  }\n  return $result;\n\
    }\n", "    $numElemsOver10 = 0;\n    foreach ($nums as $num) {\n        if ($num\
    \ > 10) {\n            $numString = (string)$num;\n            if (strlen($numString)\
    \ > 1) {\n                $firstDigit = (int)$numString[0];\n                $lastDigit\
    \ = (int)$numString[strlen($numString) - 1];\n                if ($firstDigit\
    \ % 2 != 0 && $lastDigit % 2 != 0) {\n                    $numElemsOver10++;\n\
    \                }\n            }\n        }\n    }\n    return $numElemsOver10;\n\
    }\n\n$nums1 = array(15, -73, 14, -15);\n$nums2 = array(33, -2, -3, 45, 21, 109);\n\
    echo specialFilter($nums1);\necho \"\\n\";\necho specialFilter($nums2);\necho\
    \ \"\\n\";", "    $count = 0;\n    foreach ($nums as $num) {\n        if (abs($num)\
    \ >= 10) {\n            $lastDigit = $num % 10;\n            $num = abs($num);\n\
    \            while ($num >= 10) {\n                $num = $num / 10;\n       \
    \     }\n            $firstDigit = $num;\n            if ($firstDigit % 2 == 1\
    \ && $lastDigit % 2 == 1) {\n                $count++;\n            }\n      \
    \  }\n    }\n    return $count;\n}\n\n$nums = array(15, -73, 14, -15);\necho specialFilter($nums)\
    \ . \"\\n\";\n\n$nums = array(33, -2, -3, 45, 21, 109);\necho specialFilter($nums)\
    \ . \"\\n\";", "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 10)\
    \ {\n\t\t\t$num = strval($num);\n\t\t\tif (substr($num, 0, 1) % 2 == 1 && substr($num,\
    \ -1) % 2 == 1) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n\
    }\necho specialFilter(array(15, -73, 14, -15));", "\t\n}", "    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 != 0 && ($num\
    \ % 10) % 2 != 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\necho specialFilter(array(15, -73, 14, -15));\necho \"\\n\";\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109));\necho \"\\n\";", "}\n", "  $count = 0;\n  foreach ($nums\
    \ as $num) {\n    if ($num > 10 && $num % 2 != 0 && $num % 10 != 0) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\necho specialFilter(array(15, -73, 14, -15))\
    \ . \"\\n\";\necho specialFilter(array(33, -2, -3, 45, 21, 109)) . \"\\n\";",
  "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 10) {\n      $last =\
    \ $num % 10;\n      $first = (int) ($num / pow(10, floor(log10($num))));\n   \
    \   if ($last % 2 !== 0 && $first % 2 !== 0) {\n        $count++;\n      }\n \
    \   }\n  }\n  return $count;\n}\n", "  $count = 0;\n  foreach ($nums as $num)\
    \ {\n    $len = strlen((string) $num);\n    if ($num > 10 && $num[0] % 2 != 0\
    \ && $num[$len - 1] % 2 != 0) {\n      $count++;\n    }\n  }\n  return $count;\n\
    }\n\necho specialFilter(array(15, -73, 14, -15)) . PHP_EOL;\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109)) . PHP_EOL;", "\t$new_nums = array();\n\tforeach ($nums\
    \ as $num) {\n\t\tif ($num > 10) {\n\t\t\t$first = $num % 10;\n\t\t\t$last = ($num\
    \ % 100) / 10;\n\t\t\tif ($first % 2 != 0 && $last % 2 != 0) {\n\t\t\t\t$new_nums[]\
    \ = $num;\n\t\t\t}\n\t\t}\n\t}\n\treturn count($new_nums);\n}\necho \"The number\
    \ of elements in the array that are greater than 10 and both first and last digits\
    \ of a number are odd is \" . specialFilter(array(15, -73, 14, -15)) . \"<br>\"\
    ;\necho \"The number of elements in the array that are greater than 10 and both\
    \ first and last digits of a number are odd is \" . specialFilter(array(33, -2,\
    \ -3, 45, 21, 109)) . \"<br>\";", "  foreach ($nums as $num) {\n    if ($num >\
    \ 10) {\n      $firstDigit = substr($num, 0, 1);\n      $lastDigit = substr($num,\
    \ -1);\n      if ($firstDigit % 2 == 1 && $lastDigit % 2 == 1) {\n        $result[]\
    \ = $num;\n      }\n    }\n  }\n  if (!empty($result)) {\n    return count($result);\n\
    \  } else {\n    return 0;\n  }\n}\n", "\t$result = 0;\n\tforeach ($nums as $num)\
    \ {\n\t\t$first = (int) strval($num)[0];\n\t\t$last = (int) strval($num)[strlen(strval($num))\
    \ - 1];\n\t\tif ($num > 10 && $first % 2 != 0 && $last % 2 != 0) {\n\t\t\t$result++;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n\n$nums = array(15, -73, 14, -15);\necho specialFilter($nums);\n\
    echo \"\\n\";\n\n$nums = array(33, -2, -3, 45, 21, 109);\necho specialFilter($nums);\n\
    echo \"\\n\";", "  $count = 0;\n  foreach ($nums as $num) {\n    if (is_numeric($num)\
    \ && strlen($num) > 1) {\n      $firstDigit = (int)$num[0];\n      $lastDigit\
    \ = (int)$num[strlen($num) - 1];\n      if ($firstDigit % 2 == 1 && $lastDigit\
    \ % 2 == 1 && $num > 10) {\n        $count++;\n      }\n    }\n  }\n  return $count;\n\
    }\n\necho specialFilter(array(15, -73, 14, -15));\necho \"\\n\";\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109));\necho \"\\n\";\necho specialFilter(array(1, -1, 100,\
    \ -100));\necho \"\\n\";\necho specialFilter(array(0, 33, -2, -3, 45, 21, 109));\n\
    echo \"\\n\";", "  $count = 0;\n  for ($i = 0; $i < count($nums); $i++) {\n  \
    \  if ($nums[$i] > 10) {\n      $firstDigit = substr($nums[$i], 0, 1);\n     \
    \ $lastDigit = substr($nums[$i], -1);\n      if ($firstDigit % 2 != 0 && $lastDigit\
    \ % 2 != 0) {\n        $count += 1;\n      }\n    }\n  }\n  return $count;\n}\n",
  "\t$cnt = 0;\n\tfor ($i = 0; $i < count($nums); $i++) {\n\t\tif ($nums[$i] > 10\
    \ && $nums[$i] % 2 == 1) {\n\t\t\t$k = (int) ($nums[$i] / 10);\n\t\t\tif ($k %\
    \ 2 == 1) {\n\t\t\t\t$cnt++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $cnt;\n}\n", "   \
    \ $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 10 && $num %\
    \ 2 !== 0 && $num[0] % 2 !== 0 && $num[strlen($num) - 1] % 2 !== 0) {\n      \
    \      $count += 1;\n        }\n    }\n    return $count;\n}\n\necho specialFilter(array(15,\
    \ -73, 14, -15));", "    $filter = create_function('$n', 'return $n > 10 && $n\
    \ % 2 == 1 && ($n % 10) % 2 == 1;');\n    return count(array_filter($nums, $filter));\n\
    }\n", "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 10 &&\
    \ $num % 2 != 0 && \n            ($num % 10) % 2 != 0 && \n            ($num /\
    \ 10) % 2 != 0) {\n            $count += 1;\n        }\n    }\n    return $count;\n\
    }\n", "\t// INSERT YOUR CODE HERE\n}\n", "  $result = 0;\n  for ($i = 0; $i <\
    \ count($nums); $i++) {\n    if ($nums[$i] > 10) {\n      $oddDigits = array();\n\
    \      $firstDigit = floor($nums[$i] / 10);\n      $lastDigit = $nums[$i] % 10;\n\
    \      if ($firstDigit % 2 == 1 || $firstDigit % 2 == -1) {\n        array_push($oddDigits,\
    \ $firstDigit);\n      }\n      if ($lastDigit % 2 == 1 || $lastDigit % 2 == -1)\
    \ {\n        array_push($oddDigits, $lastDigit);\n      }\n      if (count($oddDigits)\
    \ == 2) {\n        $result++;\n      }\n    }\n  }\n  return $result;\n}\n", "\t\
    $count = 0;\n\t$flipped_nums = array_reverse($nums);\n\tforeach ($nums as $num)\
    \ {\n\t\tif ($num > 10) {\n\t\t\tif ($num % 2 !== 0 && $flipped_nums[0] % 2 !==\
    \ 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\tarray_shift($flipped_nums);\n\t\
    }\n\treturn $count;\n}\n\necho specialFilter(array(15, -73, 14, -15)) . \"\\n\"\
    ;\necho specialFilter(array(33, -2, -3, 45, 21, 109)) . \"\\n\";\n", "    $arr\
    \ = [];\n    foreach ($nums as $n) {\n        if ($n > 10 && (($n % 10) % 2 ==\
    \ 1) && ($n / (10 ** (strlen($n) - 1)) % 2 == 1)) {\n            $arr[] = $n;\n\
    \        }\n    }\n    return count($arr);\n}\n\nprint(specialFilter(array(15,\
    \ -73, 14, -15)) . \"\\n\");\nprint(specialFilter(array(33, -2, -3, 45, 21, 109))\
    \ . \"\\n\");", "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num\
    \ > 10) {\n            $strNum = (string)$num;\n            if (strlen($strNum)\
    \ >= 2) {\n                if ($strNum[0] % 2 !== 0 && $strNum[strlen($strNum)\
    \ - 1] % 2 !== 0) {\n                    $count++;\n                }\n      \
    \      }\n        }\n    }\n    return $count;\n}", "    $arr = array();\n   \
    \ foreach ($nums as $num) {\n        if ($num > 10) {\n            $first = substr($num,\
    \ 0, 1);\n            $last = substr($num, -1);\n            if (($first % 2 !=\
    \ 0) && ($last % 2 != 0)) {\n                $arr[] = $num;\n            }\n \
    \       }\n    }\n    $arr_size = count($arr);\n    echo $arr_size;\n}\n$nums\
    \ = array(15, -73, 14, -15);\nspecialFilter($nums);\necho \"<br>\";\n$nums = array(33,\
    \ -2, -3, 45, 21, 109);\nspecialFilter($nums);", "\t$cnt = 0;\n\tforeach ($nums\
    \ as $num) {\n\t\t$num = abs($num);\n\t\t$first = $num % 10;\n\t\t$last = $num;\n\
    \t\twhile ($last >= 10) {\n\t\t\t$last /= 10;\n\t\t}\n\t\tif ($num > 10 && $first\
    \ % 2 != 0 && $last % 2 != 0) {\n\t\t\t$cnt++;\n\t\t}\n\t}\n\treturn $cnt;\n}\n",
  "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\t$numStr = strval($num);\n\t\tif\
    \ (strlen($numStr) <= 1) {\n\t\t\tcontinue;\n\t\t}\n\t\t$firstDigit = intval($numStr[0]);\n\
    \t\t$lastDigit = intval($numStr[strlen($numStr) - 1]);\n\t\tif ($firstDigit %\
    \ 2 !== 0 && $lastDigit % 2 !== 0 && $num > 10) {\n\t\t\t$count++;\n\t\t}\n\t\
    }\n\treturn $count;\n}\n", "\n}\n", "    $count = 0;\n    foreach ($nums as $num)\
    \ {\n        if (abs($num) > 10 && $num % 2 == 1) {\n            $last_digit =\
    \ abs($num) % 10;\n            $first_digit = (int) (abs($num) / pow(10, floor(log10(abs($num)))));\n\
    \            if ($last_digit % 2 == 1 && $first_digit % 2 == 1) {\n          \
    \      $count++;\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ specialFilter(array(15, -73, 14, -15)).PHP_EOL;\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109)).PHP_EOL;", "  $count = 0;\n  foreach ($nums as $num) {\n\
    \    if ($num > 10) {\n      $firstDigit = substr($num, 0, 1);\n      $lastDigit\
    \ = substr($num, -1);\n      if ($firstDigit % 2 != 0 && $lastDigit % 2 != 0)\
    \ {\n        $count++;\n      }\n    }\n  }\n  return $count;\n}\n\necho specialFilter(array(15,\
    \ -73, 14, -15)) . \"\\n\";\necho specialFilter(array(33, -2, -3, 45, 21, 109))\
    \ . \"\\n\";", '}', "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num\
    \ > 10 && isNumberSpecial($num)) {\n      $count++;\n    }\n  }\n  return $count;\n\
    }\n", "  $cnt = 0;\n  foreach ($nums as $num) {\n    if ($num > 10) {\n      $str\
    \ = (string) $num;\n      if (strlen($str) < 2) {\n        $cnt++;\n      } else\
    \ {\n        $first = $str[0];\n        $last = $str[strlen($str) - 1];\n    \
    \    if (($first % 2 == 1) && ($last % 2 == 1)) {\n          $cnt++;\n       \
    \ }\n      }\n    }\n  }\n  return $cnt;\n}\n", "    $count = 0;\n    foreach\
    \ ($nums as $num) {\n        $digits = str_split($num);\n        if ($num > 10\
    \ && count($digits) > 1 && $digits[0] % 2 == 1 && $digits[count($digits) - 1]\
    \ % 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo specialFilter(array(15, -73, 14, -15)) . \"\\n\";\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109)) . \"\\n\";", "\t$count = 0;\n\tforeach ($nums as $num)\
    \ {\n\t\tif ($num > 10) {\n\t\t\t$first = substr($num, 0, 1);\n\t\t\t$last = substr($num,\
    \ -1);\n\t\t\tif (($first % 2 == 1) && ($last % 2 == 1)) {\n\t\t\t\t$count++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n\necho specialFilter(array(15, -73,\
    \ 14, -15));\necho PHP_EOL;\necho specialFilter(array(33, -2, -3, 45, 21, 109));\n\
    echo PHP_EOL;", "    $returnArr = [];\n    foreach ($nums as $item) {\n      \
    \  if ($item > 10) {\n            if ($item < 0) {\n                $item = abs($item);\n\
    \            }\n            $firstLastDigits = [];\n            $firstLastDigits[]\
    \ = $item % 10;\n            while ($item > 10) {\n                $item = $item\
    \ / 10;\n            }\n            $firstLastDigits[] = $item;\n            if\
    \ (($firstLastDigits[0] % 2 !== 0) && ($firstLastDigits[1] % 2 !== 0)) {\n   \
    \             $returnArr[] = $item;\n            }\n        }\n    }\n    return\
    \ count($returnArr);\n}\necho specialFilter(array(15, -73, 14, -15));\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109));", "    $special_nums = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $first_digit = substr($nums[$i], 0, 1);\n        $last_digit\
    \ = substr($nums[$i], -1);\n        if ($nums[$i] > 10 && $first_digit % 2 !=\
    \ 0 && $last_digit % 2 != 0) {\n            $special_nums++;\n        }\n    }\n\
    \    return $special_nums;\n}", "    $result = array();\n    foreach ($nums as\
    \ $num) {\n        $num = (string) abs($num);\n        if (strlen($num) > 1 &&\
    \ \n            (int) $num[0] % 2 !== 0 &&\n            (int) $num[strlen($num)\
    \ - 1] % 2 !== 0) {\n            $result[] = $num;\n        }\n    }\n    return\
    \ count($result);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

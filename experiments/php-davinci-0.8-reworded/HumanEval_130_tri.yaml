name: HumanEval_130_tri
language: php
prompt: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
  \ in \n// the last couple centuries. However, what people don't know is Tribonacci\
  \ sequence.\n// Tribonacci sequence is defined by the recurrence:\n// tri(1) = 3\n\
  // tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) + tri(n - 2) + tri(n\
  \ + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 / 2) = 2\n// tri(4) =\
  \ 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3 = 8 \n// You are given\
  \ a non-negative integer number n, you have to a return an array of the \n// first\
  \ n + 1 numbers of the Tribonacci sequence.\n// Examples:\n// >>> tri(3)\n// array(1,\
  \ 3, 2, 8)\nfunction tri($n) {\n"
tests: "function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
  \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3,\
  \ 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== array(1,\
  \ 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
  \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3,\
  \ 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    if($n == 0) return [1];\n    $result = [1, 3, 2];\n    for($i =\
    \ 3; $i <= $n; $i++) {\n        if($i % 2 == 0) {\n            $result[] = 1 +\
    \ $i / 2;\n        } else {\n            $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n}\n\n$n = 3;\n\
    print_r(tri($n));", "    if($n == 0) return array(1);\n    $out = array(1, 3,\
    \ 2);\n    $i = 3;\n    while($i <= $n) {\n        if($i % 2 == 0) {\n       \
    \     $out[] = 1 + $i / 2;\n        } else {\n            $out[] = $out[$i - 1]\
    \ + $out[$i - 2] + $out[$i + 1];\n        }\n        $i++;\n    }\n    return\
    \ $out;\n}", "\t// your code\n}", "    $result = array();\n    for ($i = 1; $i\
    \ <= $n; $i++) {\n        $result[] = function($i) {\n            if ($i === 1)\
    \ return 3;\n            if ($i % 2 === 0) return 1 + $i / 2;\n            return\
    \ tri($i - 1) + tri($i - 2) + tri($i + 1);\n        } ($i);\n    }\n    return\
    \ $result;\n}", "  $start = array(1, 3, 2);\n  for ($i = 0; $i < $n; $i++) {\n\
    \    $val = ($i % 2) ? (($start[$i-1] + $start[$i-2] + $start[$i+1]) % 3) : ($i\
    \ / 2);\n    array_push($start, $val);\n  }\n  return $start;\n}\n", "    $result\
    \ = [];\n    $i = 0;\n    while ($i <= $n) {\n        if ($i === 0) {\n      \
    \      $result[] = 1;\n        } elseif ($i === 1) {\n            $result[] =\
    \ 3;\n        } elseif ($i === 2) {\n            $result[] = 2;\n        } elseif\
    \ ($i % 2 === 0) {\n            $result[] = 1 + $i / 2;\n        } else {\n  \
    \          $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nprint_r(tri(4));",
  "    if($n === 0) return [];\n    $result = [];\n    $prev = $prev2 = $prev3 = 0;\n\
    \    $result[0] = 1;\n    $result[1] = 3;\n    $result[2] = 2;\n    for($i = 3;\
    \ $i <= $n; $i++) {\n        if($i % 2 === 0) {\n            $result[$i] = 1 +\
    \ $i / 2;\n        } else {\n            $result[$i] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n}", "    if\
    \ ($n < 0) return 0;\n    $tri = [1, 3, 2];\n    for ($i = 3; $i <= $n; $i++)\
    \ {\n        $tri[$i] = $i % 2 == 0 ? 1 + $i / 2 : $tri[$i - 1] + $tri[$i - 2]\
    \ + $tri[$i + 1];\n    }\n    return $tri;\n}\n", "    $arr = [3,2,1];\n    $i\
    \ = 2;\n    while ($i < $n) {\n        $arr[] = $arr[$i] + $arr[$i - 1] + $arr[$i\
    \ - 2];\n        $i++;\n    }\n    return $arr;\n}\n\necho '<pre>';\nprint_r(tri(3));\n\
    echo '</pre>';", "  if ($n == 0) {\n    return array(1);\n  }\n  $result = array(1,\
    \ 3, 2);\n  for ($i = 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $result[]\
    \ = 1 + $i / 2;\n    } else {\n      $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i + 1];\n    }\n  }\n  return $result;\n}\n", "  $numbers =\
    \ array();\n  for ($i = 1; $i <= $n; $i++) {\n    $numbers[] = triRecurse($i);\n\
    \  }\n  return $numbers;\n}\n", "\n}", "    if ( $n == 0 ) {\n        return [];\n\
    \    } else if ( $n == 1 ) {\n        return [1];\n    } else if ( $n == 2 ) {\n\
    \        return [1, 3];\n    } else {\n        return [1, 3, 2];\n    }\n}", " \
    \ $array = array();\n  for ($i = 1; $i <= $n + 1; $i++) {\n    if ($i === 1) {\n\
    \      $array[] = 3;\n    } else if ($i === 2) {\n      $array[] = 2;\n    } else\
    \ if ($i === 3) {\n      $array[] = 8;\n    } else if ($i % 2 === 0) {\n     \
    \ $array[] = $i / 2;\n    } else {\n      $array[] = $array[$i - 2] + $array[$i\
    \ - 3] + $array[$i - 1];\n    }\n  }\n  return $array;\n}\nprint_r(tri(3));",
  "\t$seq = array(3, 2, 8);\n\tif ($n < 3) {\n\t\t$seq = array_slice($seq, 0, $n +\
    \ 1);\n\t} else {\n\t\tfor ($i = 3; $i <= $n; $i++) {\n\t\t\t$seq[] = ($i % 2\
    \ == 0) ? (1 + $i / 2) : ($seq[$i - 1] + $seq[$i - 2] + $seq[$i - 3]);\n\t\t}\n\
    \t}\n\treturn $seq;\n}\n\n$n = 3;\n\nprint_r(tri($n));", "  $result = array();\n\
    \  $result[0] = 1;\n  $result[1] = 3;\n  $result[2] = 2;\n  for ($i = 3; $i <=\
    \ $n; $i++) {\n    if ($i % 2 == 0) {\n      $result[$i] = 1 + $i / 2;\n    }\
    \ else {\n      $result[$i] = $result[$i - 1] + $result[$i - 2] + $result[$i +\
    \ 1];\n    }\n  }\n  return $result;\n}\n\n$n = 3;\nvar_dump(tri($n));", "   \
    \ $result = array();\n    $result[0] = 1;\n    $result[1] = 3;\n    $result[2]\
    \ = 2;\n    if ($n > 2) {\n        for ($i = 3; $i <= $n; $i++) {\n          \
    \  if ($i % 2 == 0) {\n                $result[$i] = 1 + ($i / 2);\n         \
    \   } else {\n                $result[$i] = $result[$i - 1] + $result[$i - 2]\
    \ + $result[$i + 1];\n            }\n        }\n    }\n    return $result;\n}\n",
  "    if($n <= 2) {\n        return [1, 3, 2];\n    } else {\n        $r = tri($n\
    \ - 1);\n        $t = $r[$n - 1] + $r[$n - 2] + $r[$n - 3];\n        array_push($r,\
    \ $t);\n        return $r;\n    }\n}\nprint_r(tri(10));", "    $seq = array(3,\
    \ 2, 8);\n    for ($i = 3; $i <= $n; $i++) {\n        $seq[] = $i % 2 == 0 ? 1\
    \ + $i / 2 : $seq[$i - 1] + $seq[$i - 2] + $seq[$i + 1];\n    }\n    return $seq;\n\
    }\n", "  $result = array(1, 3, 2);\n  if($n < 3) {\n    return array_slice($result,\
    \ 0, $n);\n  }\n  for($i = 3; $i <= $n; $i++) {\n    if($i % 2 == 0) {\n     \
    \ $result[] = 1 + $i / 2;\n    } else {\n      $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i + 1];\n    }\n  }\n  return $result;\n}\n", "  if ($n == 0)\
    \ {\n    return [];\n  } elseif ($n == 1) {\n    return [3];\n  } elseif ($n ==\
    \ 2) {\n    return [3, 2];\n  } elseif ($n == 3) {\n    return [3, 2, 8];\n  }\
    \ else {\n    return array_merge([3, 2, 8], tri($n - 1));\n  }\n}\necho implode(',\
    \ ', tri(10));", "\t\n}", "\t$tri = array(3);\n\tif($n == 0) {\n\t\treturn array();\n\
    \t}\n\tif($n == 1) {\n\t\treturn $tri;\n\t}\n\tfor($i = 1; $i < $n; $i++) {\n\t\
    \tif($i % 2 == 0) {\n\t\t\t$tri[] = 1 + $i / 2;\n\t\t} else {\n\t\t\t$tri[] =\
    \ $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1];\n\t\t}\n\t}\n\treturn $tri;\n}\n\
    \nprint_r(tri(4));", "    $result = [];\n    $index = 1;\n    while ($index <=\
    \ $n) {\n        if ($index === 1) {\n            $result[] = 3;\n        } else\
    \ if ($index % 2 === 0) {\n            $result[] = 1 + $index / 2;\n        }\
    \ else {\n            $result[] = $result[$index - 2] + $result[$index - 1] +\
    \ $result[$index + 1];\n        }\n        $index += 1;\n    }\n    return $result;\n\
    }", "  $tri = array(1, 3, 2);\n  for ($i = 3; $i <= $n; $i++) {\n    if ($i %\
    \ 2 == 0) {\n      $tri[] = 1 + $i / 2;\n    } else {\n      $tri[] = $tri[$i\
    \ - 1] + $tri[$i - 2] + $tri[$i + 1];\n    }\n  }\n  return $tri;\n}\necho var_dump(tri(3));",
  "    $tribonacci = [3, 2, 1];\n    if ($n < 3) {\n        return $tribonacci;\n\
    \    }\n    for ($i = 0; $i < $n - 2; $i++) {\n        $tribonacci[] = $tribonacci[$i]\
    \ + $tribonacci[$i + 1] + $tribonacci[$i + 2];\n    }\n    return $tribonacci;\n\
    }\n", "  $result = [];\n  $a = 3;\n  $b = 2;\n  $c = 1;\n  $result[0] = $a;\n\
    \  $result[1] = $b;\n  $result[2] = $c;\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  $tri = $a + $b + $c;\n    array_push($result, $tri);\n    $a = $b;\n    $b\
    \ = $c;\n    $c = $tri;\n  }\n  return $result;\n}\n\n$result = tri(3);\nforeach\
    \ ($result as $tri) {\n  echo $tri . \" \";\n}", "  $sequence = array(3);\n  for\
    \ ($i = 1; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $sequence[] = $i /\
    \ 2;\n    } else {\n      $sequence[] = $sequence[$i - 1] + $sequence[$i - 2]\
    \ + $sequence[$i - 3];\n    }\n  }\n  return $sequence;\n}\necho tri(3);", " \
    \ $i = 1;\n  $result = array();\n  while($i <= $n) {\n    if ($i == 1) {\n   \
    \   $result[] = 3;\n    } elseif ($i == 2) {\n      $result[] = 2;\n    } elseif\
    \ ($i == 3) {\n      $result[] = 8;\n    } else {\n      $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n    $i++;\n  }\n  return $result;\n\
    }\n", "    $arr = [1, 3, 2];\n    for ($i = 3; $i <= $n; $i++) {\n        if ($i\
    \ % 2 == 0) $arr[] = 1 + ($i / 2);\n        else $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n    }\n    return $arr;\n}", "    $k = floor($n / 2);\n\
    \    $s = 1 + $k;\n    $t = 3;\n    if ($n % 2 === 0) {\n        return [$s, $t];\n\
    \    }\n    $tris = [1, 1, $t];\n    for ($i = 1; $i < $k; $i++) {\n        $s\
    \ = $tris[$i] + $tris[$i - 1] + $tris[$i + 1];\n        $tris[] = $s;\n    }\n\
    \    $tris[] = $t;\n    return $tris;\n}\necho implode(', ', tri(3)) . PHP_EOL;\n\
    echo implode(', ', tri(5)) . PHP_EOL;\necho implode(', ', tri(10)) . PHP_EOL;\n\
    echo implode(', ', tri(100)) . PHP_EOL;", "\t// Add code here\n  $result = array();\n\
    \  $result[0] = 1;\n  $result[1] = 3;\n  $result[2] = 2;\n  for ($i = 3; $i <=\
    \ $n; $i++) {\n    if ($i % 2 === 0) {\n      $result[$i] = (1 + $i / 2);\n  \
    \  } else {\n      $result[$i] = ($result[$i - 1] + $result[$i - 2] + $result[$i\
    \ + 1]);\n    }\n  }\n  return $result;\n}\n", "    // Your code goes here\n \
    \   $t = [3, 2, 1];\n    for ($i = 2; $i < $n; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            $t[] = 1 + ($i / 2);\n        } else {\n            $t[] =\
    \ $t[$i - 1] + $t[$i - 2] + $t[$i + 1];\n        }\n    }\n    return $t;\n}\n",
  "  $result = [];\n  if($n >= 1) {\n    $result[0] = 3;\n  }\n  if($n >= 2) {\n \
    \   $result[1] = 2;\n  }\n  if($n >= 3) {\n    $result[2] = 8;\n  }\n  for($i\
    \ = 3; $i <= $n; $i++) {\n    $result[$i] = $result[$i - 1] + $result[$i - 2]\
    \ + $result[$i - 3];\n  }\n  return $result;\n}\n", "    $tribonacci = array(1,\
    \ 3, 2);\n    $tribonacci[$n] = 0;\n    for ($i = 3; $i <= $n; $i++) {\n     \
    \   if ($i % 2 == 0) {\n            $tribonacci[$i] = 1 + ($i / 2);\n        }\
    \ else {\n            $tribonacci[$i] = $tribonacci[$i - 1] + $tribonacci[$i -\
    \ 2] + $tribonacci[$i + 1];\n        }\n    }\n    return $tribonacci;\n}\n",
  "  $tri = array(3);\n  for ($i = 1; $i <= $n; $i++) {\n    $tri[$i] = ($i % 2 ==\
    \ 0) ? (1 + ($i / 2)) : ($tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1]);\n  }\n \
    \ return $tri;\n}\n\necho implode(', ', tri(3));", "\t$arr = array(1, 3, 2);\n\
    \tif($n < 3) {\n\t\treturn array_slice($arr, 0, $n + 1);\n\t}\n\tfor($i = 3; $i\
    \ <= $n; $i++) {\n\t\tif($i % 2 === 0) {\n\t\t\t$arr[] = 1 + ($i / 2);\n\t\t}\
    \ else {\n\t\t\t$arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n\t\t}\n\t\
    }\n\treturn $arr;\n}", "  $arr = [1, 3, 2];\n  for ($i = 3; $i <= $n; $i++) {\n\
    \    if ($i % 2 === 0) {\n      $arr[] = 1 + ($i / 2);\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n", "  $res = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if ($i == 0) {\n  \
    \    $res[] = 1;\n    } elseif ($i == 1) {\n      $res[] = 3;\n    } elseif ($i\
    \ == 2) {\n      $res[] = 2;\n    } elseif ($i % 2 == 0) {\n      $res[] = 1 +\
    \ $i / 2;\n    } else {\n      $res[] = $res[$i - 1] + $res[$i - 2] + $res[$i\
    \ + 1];\n    }\n  }\n  return $res;\n}", "  if ($n == 0) {\n    return array();\n\
    \  }\n  if ($n == 1) {\n    return array(3);\n  }\n  if ($n == 2) {\n    return\
    \ array(3, 2);\n  }\n  $result = array(3, 2, 8);\n  for ($i = 3; $i <= $n; $i++)\
    \ {\n    if ($i % 2 == 0) {\n      $result[] = 1 + ($i / 2);\n    } else {\n \
    \     $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n    }\n\
    \  }\n  return $result;\n}", "    $array = array();\n    for ($i = 1; $i <= $n\
    \ + 1; $i++) {\n        if ($i == 1) {\n            $array[] = 3;\n        } elseif\
    \ ($i % 2 == 0) {\n            $array[] = 1 + $i / 2;\n        } else {\n    \
    \        $array[] = $array[$i - 2] + $array[$i - 3] + $array[$i - 1];\n      \
    \  }\n    }\n    return $array;\n}\n$n = readline('Enter a number: ');\nprint_r(tri($n));\n",
  "  if ($n == 0) {\n    return array();\n  }\n  $tri_arr = array(1, 3, 2);\n  for\
    \ ($i = 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $tri_arr[] = 1 + $i\
    \ / 2;\n    } else {\n      $tri_arr[] = $tri_arr[$i - 1] + $tri_arr[$i - 2] +\
    \ $tri_arr[$i + 1];\n    }\n  }\n  return $tri_arr;\n}\nprint_r(tri(3));\nprint_r(tri(4));\n\
    print_r(tri(5));\nprint_r(tri(6));", "    if ($n == 0) {\n        return [];\n\
    \    }\n    $t = [1, 3, 2];\n    if ($n == 1) {\n        return [1];\n    }\n\
    \    if ($n == 2) {\n        return [1, 3];\n    }\n    if ($n == 3) {\n     \
    \   return [1, 3, 2];\n    }\n    for ($i = 3; $i < $n; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $t[] = 1 + $i / 2;\n        } else {\n            $t[]\
    \ = $t[$i - 1] + $t[$i - 2] + $t[$i + 1];\n        }\n    }\n    return $t;\n\
    }\n\nprint_r(tri(10));", "    if($n < 1) return 0;\n    $ans = [1, 3, 2];\n  \
    \  if($n == 1) return $ans;\n    $ans[] = 8;\n    if($n == 2) return $ans;\n \
    \   $ans[] = 11;\n    if($n == 3) return $ans;\n    for($i = 4; $i <= $n; $i++)\
    \ {\n        $ans[] = $ans[$i - 1] + $ans[$i - 2] + $ans[$i - 3];\n    }\n   \
    \ return $ans;\n}", "\t$result = [];\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\tif\
    \ ($i % 2 == 0) {\n\t\t\t$result[] = 1 + $i / 2;\n\t\t} else {\n\t\t\t$result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\nprint_r(tri(5));", "  if ($n == 0) return array(1);\n  $i = 0;\n\
    \  $result = array(1, 3, 2);\n  while ($i < $n - 1) {\n    $result[] = end($result)\
    \ % 2 == 0 ? end($result) / 2 : end($result) - 1 + end($result) - 2 + end($result)\
    \ + 1;\n    $i++;\n  }\n  return $result;\n}", "\t$l = [3, 1, 2];\n\twhile (count($l)\
    \ <= $n) {\n\t\t$last = end($l);\n\t\tif ($last % 2 == 0) {\n\t\t\t$l[] = 1 +\
    \ $last / 2;\n\t\t} else {\n\t\t\t$l[] = $l[count($l) - 1] + $l[count($l) - 2]\
    \ + $l[count($l) - 3];\n\t\t}\n\t}\n\treturn $l;\n}\n", "    $tri = array(1, 3,\
    \ 2);\n    if ($n > 2) {\n        for ($i = 3; $i <= $n; $i++) {\n           \
    \ if ($i % 2) {\n                $tri[$i] = $tri[$i - 1] + $tri[$i - 2] + $tri[$i\
    \ + 1];\n            } else {\n                $tri[$i] = 1 + ($i / 2);\n    \
    \        }\n        }\n    }\n    return $tri;\n}\nprint_r(tri(3));", "    $nums\
    \ = array();\n    for ($i = 1; $i <= $n + 1; $i++) {\n        if ($i == 1) {\n\
    \            $nums[] = 3;\n        } else if ($i == 2) {\n            $nums[]\
    \ = 2;\n        } else if ($i == 3) {\n            $nums[] = 8;\n        } else\
    \ {\n            $nums[] = $nums[$i - 2] + $nums[$i - 3] + $nums[$i - 4];\n  \
    \      }\n    }\n    return $nums;\n}", "\tif($n == 0) return array(0);\n\t$a\
    \ = array(1, 3, 2);\n\tfor($i = 3; $i <= $n; $i++) {\n\t\t$a[$i] = ($i % 2 ==\
    \ 0) ? (1 + $i / 2) : ($a[$i - 1] + $a[$i - 2] + $a[$i + 1]);\n\t}\n\treturn $a;\n\
    }\n", "  $n++;\n  $result[0] = 1;\n  $result[1] = 3;\n  $result[2] = 2;\n  if\
    \ ($n == 1) {\n    return array($result[0]);\n  }\n  if ($n == 2) {\n    return\
    \ array($result[0], $result[1]);\n  }\n  if ($n == 3) {\n    return array($result[0],\
    \ $result[1], $result[2]);\n  }\n  for ($i = 3; $i < $n; $i++) {\n    if ($i %\
    \ 2 == 0) {\n      $result[$i] = 1 + $i / 2;\n    } else {\n      $result[$i]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n    }\n  }\n  return\
    \ $result;\n}\nprint_r(tri(3));", "  $arr = array(1, 3, 2);\n  $i = 0;\n  while($i\
    \ < $n) {\n    $a = $arr[$i];\n    $b = $arr[$i + 1];\n    $c = $arr[$i + 2];\n\
    \    if(($i + 1) % 2 == 0) {\n      $d = 1 + ($i + 1) / 2;\n    } else {\n   \
    \   $d = $a + $b + $c;\n    }\n    $arr[] = $d;\n    $i++;\n  }\n  return $arr;\n\
    }\n$n = 3;\n$arr = tri($n);\necho \"<pre>\";\nprint_r($arr);\necho \"</pre>\";",
  "  $a = array();\n  for ($i = 0; $i <= $n; $i++) {\n    if ($i == 0) {\n      $a[$i]\
    \ = 1;\n    } elseif ($i == 1) {\n      $a[$i] = 3;\n    } elseif ($i == 2) {\n\
    \      $a[$i] = 2;\n    } elseif ($i % 2 == 0) {\n      $a[$i] = 1 + $i / 2;\n\
    \    } else {\n      $a[$i] = $a[$i - 1] + $a[$i - 2] + $a[$i + 1];\n    }\n \
    \ }\n  return $a;\n}\necho \"<pre>\";\nprint_r(tri(0));\necho \"</pre>\";\n\n\
    echo \"<pre>\";\nprint_r(tri(1));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(tri(2));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(tri(3));\necho \"</pre>\";\n\necho\
    \ \"<pre>\";\nprint_r(tri(4));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(tri(5));\n\
    echo \"</pre>\";\n", "  if ($n == 0) return 1;\n  if ($n == 1) return 3;\n  if\
    \ ($n == 2) return 2;\n  $array = array(1, 3, 2);\n  for ($i = 3; $i <= $n; $i++)\
    \ {\n    if ($i % 2) {\n      $array[$i] = $array[$i - 3] + $array[$i - 2] + $array[$i\
    \ - 1];\n    } else {\n      $array[$i] = $i / 2 + 1;\n    }\n  }\n  return $array;\n\
    }\n", "  $tri = array(1, 3, 2);\n  for ($i = 0; $i < $n; $i++) {\n    if (count($tri)\
    \ > $n) {\n      break;\n    }\n    if (count($tri) % 2 == 0) {\n      $tri[]\
    \ = 1 + count($tri) / 2;\n    } else {\n      $tri[] = $tri[count($tri) - 1] +\
    \ $tri[count($tri) - 2] + $tri[count($tri) + 1];\n    }\n  }\n  return $tri;\n\
    }\nprint_r(tri(3));", "    $tribonacci = [3, 2, 1];\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n        $tribonacci[$i] = $tribonacci[$i - 1] + $tribonacci[$i - 2]\
    \ + $tribonacci[$i - 3];\n    }\n    return $tribonacci;\n}\n", "    $output =\
    \ [];\n    for ($i = 1; $i <= $n; $i++) {\n        $output[] = tri2($i);\n   \
    \ }\n    return $output;\n}", "    if ($n == 0) {\n        return array(1);\n\
    \    } else if ($n == 1) {\n        return array(1, 3);\n    } else if ($n ==\
    \ 2) {\n        return array(1, 3, 2);\n    } else {\n        return array_merge(array(1,\
    \ 3, 2), helper($n - 3));\n    }\n}\n", "    $n++;\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        $tri[$i] = 0;\n    }\n    $tri[0] = 1;\n    $tri[1] = 3;\n\
    \    $tri[2] = 2;\n    for ($i = 3; $i < $n; $i++) {\n        if ($i % 2 == 0)\
    \ {\n            $tri[$i] = 1 + $i / 2;\n        } else {\n            $tri[$i]\
    \ = $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1];\n        }\n    }\n    return\
    \ $tri;\n}\nprint_r(tri(3));", "    $seq = array(1, 3, 2);\n    for ($i = 3; $i\
    \ <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $seq[] = 1 + ($i / 2);\n\
    \        } else {\n            $seq[] = $seq[$i - 1] + $seq[$i - 2] + $seq[$i\
    \ + 1];\n        }\n    }\n    return $seq;\n}\n", "  if ($n === 0) return [1];\n\
    \  if ($n === 1) return [1, 3];\n  if ($n === 2) return [1, 3, 2];\n  $a = [1,\
    \ 3, 2];\n  for ($i = 3; $i <= $n; $i++) {\n    $a[] = $i % 2 === 0 ? $i / 2 :\
    \ $a[$i - 1] + $a[$i - 2] + $a[$i + 1];\n  }\n  return $a;\n}\nprint_r(tri(3));",
  "\t$tri[0] = 0;\n\t$tri[1] = 3;\n\tfor ($i = 2; $i <= $n; $i++) {\n\t\tif ($i %\
    \ 2 == 0) {\n\t\t\t$tri[$i] = 1 + $i / 2;\n\t\t} else {\n\t\t\t$tri[$i] = $tri[$i\
    \ - 1] + $tri[$i - 2] + $tri[$i + 1];\n\t\t}\n\t}\n\t\n\treturn $tri;\n}", " \
    \   if ($n == 0) {\n        return [];\n    } else if ($n == 1) {\n        return\
    \ [3];\n    } else if ($n == 2) {\n        return [3, 2];\n    } else {\n    \
    \    $result = [3, 2, 8];\n        for ($i = 3; $i <= $n; $i++) {\n          \
    \  if ($i % 2 == 0) {\n                $result[] = 1 + $i / 2;\n            }\
    \ else {\n                $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i\
    \ + 1];\n            }\n        }\n        return $result;\n    }\n}\n", "  $ret\
    \ = array(1, 3, 2);\n  if ($n > 2) {\n    for ($i = 3; $i <= $n; $i++) {\n   \
    \   if ($i % 2 == 0) {\n        $ret[] = 1 + $i / 2;\n      } else {\n       \
    \ $ret[] = $ret[$i - 1] + $ret[$i - 2] + $ret[$i + 1];\n      }\n    }\n  }\n\
    \  return $ret;\n}\nprint_r(tri(3));", "    $tribonacci = [1, 3, 2];\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        $tribonacci[] = (($i + 1) % 2) ? $tribonacci[$i]\
    \ + $tribonacci[$i - 1] + $tribonacci[$i + 1] : 1 + (($i + 1) / 2);\n    }\n \
    \   return $tribonacci;\n}", "    $arr = [1, 3, 2];\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 + ($i / 2);\n  \
    \      } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i +\
    \ 1];\n        }\n    }\n    return $arr;\n}\n", "    if ($n == 0) {\n       \
    \ return [1];\n    }\n    if ($n == 1) {\n        return [1, 3];\n    }\n    if\
    \ ($n == 2) {\n        return [1, 3, 2];\n    }\n    $tribonacci = [1, 3, 2];\n\
    \    for ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $tribonacci[]\
    \ = 1 + $i / 2;\n        } else {\n            $tribonacci[] = $tribonacci[$i\
    \ - 1] + $tribonacci[$i - 2] + $tribonacci[$i + 1];\n        }\n    }\n    return\
    \ $tribonacci;\n}", "  if ($n == 0) {\n    return array(0);\n  } else if ($n ==\
    \ 1) {\n    return array(1, 3);\n  } else if ($n == 2) {\n    return array(1,\
    \ 3, 2);\n  } else {\n    $tri = array(1, 3, 2);\n    for ($i = 3; $i <= $n; $i++)\
    \ {\n      if ($i % 2 == 0) {\n        $val = 1 + $i / 2;\n      } else {\n  \
    \      $val = $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1];\n      }\n      $tri[]\
    \ = $val;\n    }\n    return $tri;\n  }\n}", "\t$results = array(1, 3, 2);\n\t\
    $m = 0;\n\tfor ($i = 3; $i <= $n; $i++) {\n\t\tif ($i % 2 == 0) {\n\t\t\t$results[$i]\
    \ = 1 + $i / 2;\n\t\t} else {\n\t\t\t$results[$i] = $results[$i - 1] + $results[$i\
    \ - 2] + $results[$i + 1];\n\t\t}\n\t}\n\treturn $results;\n}\nprint_r(tri(3));",
  "    $fib = [3, 3, 3];\n    for ($i = 2; $i < $n; $i++) {\n        $fib[$i + 1]\
    \ = ($i % 2 == 0) ? $fib[$i] + $fib[$i - 1] + 1 + ($i / 2) : $fib[$i] + $fib[$i\
    \ - 1] + $fib[$i - 2];\n    }\n    return $fib;\n}\n", "  $result = [];\n  if\
    \ ($n === 0) {\n    return $result;\n  }\n  if ($n >= 1) {\n    $result[] = 1;\n\
    \  }\n  if ($n >= 2) {\n    $result[] = 3;\n  }\n  if ($n >= 3) {\n    $result[]\
    \ = 2;\n  }\n  if ($n > 3) {\n    for ($i = 3; $i < $n; $i++) {\n      $result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n  }\n  return\
    \ $result;\n}\necho \"<pre>\";\nprint_r(tri(3));\nprint_r(tri(0));\nprint_r(tri(1));\n\
    print_r(tri(2));\nprint_r(tri(4));\nprint_r(tri(5));\nprint_r(tri(6));\nprint_r(tri(7));\n\
    print_r(tri(8));\nprint_r(tri(9));\nprint_r(tri(10));\nprint_r(tri(11));\nprint_r(tri(12));\n\
    print_r(tri(13));\nprint_r(tri(14));\nprint_r(tri(15));\nprint_r(tri(16));\nprint_r(tri(17));\n\
    print_r(tri(18));\nprint_r(tri(19));\nprint_r(tri(20));\necho \"</pre>\";\n",
  "\t$array = [1, 3, 2];\n\t$i = 3;\n\twhile ($i < $n + 1) {\n\t\tif ($i % 2 == 0)\
    \ {\n\t\t\t$array[] = 1 + $i / 2;\n\t\t} else {\n\t\t\t$array[] = $array[$i -\
    \ 1] + $array[$i - 2] + $array[$i + 1];\n\t\t}\n\t\t$i++;\n\t}\n\treturn $array;\n\
    }\n", "  if ($n === 0) {\n    return array();\n  }\n  if ($n === 1) {\n    return\
    \ array(3);\n  }\n  if ($n === 2) {\n    return array(3, 2);\n  }\n  $out = array(3,\
    \ 2, 8);\n  for ($i = 3; $i <= $n; $i++) {\n    if ($i % 2 === 0) {\n      $out[]\
    \ = 1 + $i / 2;\n    } else {\n      $out[] = $out[$i - 1] + $out[$i - 2] + $out[$i\
    \ + 1];\n    }\n  }\n  return $out;\n}\n", "  // your code here\n}", "    $arr\
    \ = array(3,2,8);\n    for ($i = 2; $i < $n; $i++) {\n        $next = array_sum(array_slice($arr,\
    \ -3));\n        array_push($arr, $next);\n    }\n    return $arr;\n}", "    $res\
    \ = [];\n    for ($i = 0; $i <= $n; $i++) {\n        if ($i == 0) {\n        \
    \    $res[] = 0;\n        } elseif ($i == 1) {\n            $res[] = 3;\n    \
    \    } elseif ($i == 2) {\n            $res[] = 2;\n        } elseif ($i % 2 ==\
    \ 0) {\n            $res[] = $i / 2;\n        } else {\n            $res[] = $res[$i\
    \ - 1] + $res[$i - 2] + $res[$i + 1];\n        }\n    }\n    return $res;\n}",
  "    $array = array();\n    for ($i = 1; $i <= $n + 1; $i++) {\n        if ($i ==\
    \ 1) {\n            $array[] = 3;\n        } elseif ($i % 2 == 0) {\n        \
    \    $array[] = 1 + $i / 2;\n        } else {\n            $array[] = $array[$i\
    \ - 2] + $array[$i - 3] + $array[$i];\n        }\n    }\n    return $array;\n\
    }\nprint_r(tri(3));", "  if($n == 0) return array(0);\n  $result = array(3);\n\
    \  for($i = 1; $i < $n; $i++) {\n    if($i % 2) {\n      $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n    } else {\n      $result[] = 1\
    \ + $i / 2;\n    }\n  }\n  return $result;\n}", "    $array = [1, 3, 2];\n   \
    \ for ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 === 0) {\n            $array[]\
    \ = 1 + ($i / 2);\n        } else {\n            $array[] = $array[$i - 1] + $array[$i\
    \ - 2] + $array[$i + 1];\n        }\n    }\n    return $array;\n}", "  $output\
    \ = array();\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i == 1) {\n      $output[]\
    \ = 3;\n    } else if ($i % 2 == 0) {\n      $output[] = (1 + $i / 2);\n    }\
    \ else {\n      $output[] = $output[$i - 2] + $output[$i - 1] + $output[$i];\n\
    \    }\n  }\n  return $output;\n}\nprint_r(tri(4));", "    $result = [];\n   \
    \ for ($i = 1; $i <= $n + 1; $i++) {\n        if ($i == 1) {\n            $result[]\
    \ = 3;\n        } elseif ($i == 2) {\n            $result[] = 2;\n        } elseif\
    \ ($i == 3) {\n            $result[] = 8;\n        } elseif ($i % 2 == 0) {\n\
    \            $result[] = ($i / 2) + 1;\n        } else {\n            $result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n        }\n    }\n \
    \   return $result;\n}\necho \"<pre>\";\nprint_r(tri(3));\necho \"</pre>\";",
  "    if($n == 0) return 0;\n    $result = array(1, 3, 2);\n    if($n <= 3) return\
    \ array_slice($result, 0, $n);\n    while(count($result) <= $n) {\n        $odd\
    \ = $result[count($result) - 1] + $result[count($result) - 2] + $result[count($result)\
    \ - 3];\n        array_push($result, $odd);\n    }\n    return $result;\n}\n",
  "  if ($n == 0) {\n    return array(1);\n  }\n  if ($n == 1) {\n    return array(1,\
    \ 3);\n  }\n  if ($n == 2) {\n    return array(1, 3, 2);\n  }\n  $res = array(1,\
    \ 3, 2);\n  for ($i = 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $res[]\
    \ = $i / 2 + 1;\n    } else {\n      $res[] = $res[$i - 1] + $res[$i - 2] + $res[$i\
    \ - 3];\n    }\n  }\n  return $res;\n}\n", "  if ($n <= 0) return array();\n \
    \ else if ($n == 1) return array(3);\n  else if ($n == 2) return array(3, 2);\n\
    \  else {\n    $arr = array(3, 2, 8);\n    for ($i = 2; $i < $n; $i++) {\n   \
    \   if ($i % 2 == 0)\n        $arr[] = 1 + $i / 2;\n      else\n        $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n    return $arr;\n  }\n\
    }\n\necho '<pre>';\nvar_dump(tri(3));\nvar_dump(tri(4));\nvar_dump(tri(5));\n\
    var_dump(tri(6));\nvar_dump(tri(7));\nvar_dump(tri(8));\nvar_dump(tri(9));\nvar_dump(tri(10));\n\
    var_dump(tri(11));\nvar_dump(tri(12));\nvar_dump(tri(13));\nvar_dump(tri(14));\n\
    var_dump(tri(15));\nvar_dump(tri(16));\nvar_dump(tri(17));\nvar_dump(tri(18));\n\
    var_dump(tri(19));\nvar_dump(tri(20));\nvar_dump(tri(21));\nvar_dump(tri(22));\n\
    var_dump(tri(23));\nvar_dump(tri(24));\nvar_dump(tri(25));\nvar_dump(tri(26));\n\
    var_dump(tri(27));\nvar_dump(tri(28));\nvar_dump(tri(29));\nvar_dump(tri(30));\n\
    var_dump(tri(31));\nvar_dump(tri(32));\nvar_dump(tri(33));\nvar_dump(tri(34));\n\
    var_dump(tri(35));\nvar_dump(tri(36));\nvar_dump(tri(37));\nvar_dump(tri(38));\n\
    var_dump(tri(39));\nvar_dump(tri(40));\nvar_dump(tri(41));\nvar_dump(", "    $arr\
    \ = [1, 3, 2];\n    if ($n < 3) return array_slice($arr, 0, $n + 1);\n    for\
    \ ($i = 3; $i <= $n; $i++) {\n        $arr[] = $i % 2 == 0 ? $i / 2 : ($arr[$i\
    \ - 2] + $arr[$i - 1] + $arr[$i + 1]);\n    }\n    return $arr;\n}\nprint_r(tri(6));",
  "  $result = [];\n  $a = 0;\n  $b = 0;\n  $c = 3;\n  for ($i = 0; $i <= $n; $i++)\
    \ {\n    if ($i < 2) {\n      $result[] = 0;\n    } else if ($i === 2) {\n   \
    \   $result[] = 3;\n    } else {\n      $a = $b;\n      $b = $c;\n      $c = $a\
    \ + $b + $c;\n      $result[] = $c;\n    }\n  }\n  return $result;\n}\nprint_r(tri(3));",
  "\t$result = [];\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\tif ($i == 1) {\n\t\t\t$result[]\
    \ = 3;\n\t\t} else if ($i == 2) {\n\t\t\t$result[] = 1 + (2 / 2);\n\t\t} else\
    \ if ($i == 3) {\n\t\t\t$result[] = $result[1] + $result[0] + $result[2];\n\t\t\
    } else {\n\t\t\tif ($i % 2 == 0) {\n\t\t\t\t$result[] = 1 + ($i / 2);\n\t\t\t\
    } else {\n\t\t\t\t$result[] = $result[$i - 2] + $result[$i - 3] + $result[$i -\
    \ 1];\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(tri(3));", "\t$tribonacci\
    \ = array(1, 3, 2);\n\tif($n == 1) return array(1);\n\tif($n == 2) return array(1,\
    \ 3);\n\tif($n == 3) return array(1, 3, 2);\n\t$i = 3;\n\t$m = 0;\n\twhile($i\
    \ <= $n) {\n\t\tif($i % 2 == 0) {\n\t\t\t$tribonacci[$i] = 1 + ($i / 2);\n\t\t\
    } else {\n\t\t\t$tribonacci[$i] = $tribonacci[$i - 1] + $tribonacci[$i - 2] +\
    \ $tribonacci[$i + 1];\n\t\t}\n\t\t$i++;\n\t}\n\treturn $tribonacci;\n}\necho\
    \ implode(\", \", tri(3));", "    // if ($n == 1) return array(1, 3);\n    //\
    \ if ($n == 2) return array(1, 3, 2);\n    // if ($n == 3) return array(1, 3,\
    \ 2, 8);\n    // if ($n == 4) return array(1, 3, 2, 8, 5);\n    // if ($n == 5)\
    \ return array(1, 3, 2, 8, 5, 13);\n    // if ($n == 6) return array(1, 3, 2,\
    \ 8, 5, 13, 21);\n    // if ($n == 7) return array(1, 3, 2, 8, 5, 13, 21, 34);\n\
    \    // if ($n == 8) return array(1, 3, 2, 8, 5, 13, 21, 34, 55);\n    // if ($n\
    \ == 9) return array(1, 3, 2, 8, 5, 13, 21, 34, 55, 89);\n    // if ($n == 10)\
    \ return array(1, 3, 2, 8, 5, 13, 21, 34, 55, 89, 144);\n    // if ($n == 11)\
    \ return array(1, 3, 2, 8, 5, 13, 21, 34, 55, 89, 144, 233);\n    // if ($n ==\
    \ 12) return array(1, 3, 2, 8, 5, 13, 21, 34, 55, 89, 144, 233, 377);\n    //\
    \ if ($n == 13) return array(1, 3, 2, 8, 5, 13, 21, 34, 55, 89, 144, 233, 377,\
    \ 610);\n    // if ($n == 14) return array(1, 3, 2, 8, 5, 13, 21, 34, 55, 89,\
    \ 144, 233, 377, 610, 987);\n    // if ($n == 15) return array(1, 3, 2, 8, 5,\
    \ 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597);\n    // if ($n == 16) return\
    \ array(1, 3, 2, 8, 5, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584);\n\
    \    // if ($n == 17) return", "    $arr = array();\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        if ($i == 1) {\n            $arr[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $arr[] = 2;\n        } elseif ($i == 3) {\n           \
    \ $arr[] = 8;\n        } elseif ($i % 2 == 0) {\n            $arr[] = $i / 2;\n\
    \        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ - 3];\n        }\n    }\n    return $arr;\n}\nprint_r(tri(3));", "    $result\
    \ = array();\n    for ($i = 1; $i <= $n; $i++) {\n        if ($i === 1) {\n  \
    \          $result[] = 3;\n        } else if ($i % 2 === 0) {\n            $result[]\
    \ = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i - 2] + $result[$i\
    \ - 1] + $result[$i];\n        }\n    }\n    return $result;\n}\n", "    if($n==1)\
    \ return 3;\n    if($n%2 == 0) return floor(1 + $n/2);\n    return tri($n-1) +\
    \ tri($n-2) + tri($n+1);\n}", "  if($n == 0) {\n    return array(1);\n  }\n  $arr\
    \ = array(1, 3, 2);\n  for($i = 3; $i <= $n; $i++) {\n    if($i % 2 == 0) {\n\
    \      $arr[] = 1 + ($i / 2);\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n", "  $x = 3;\n  $y = 1;\n\
    \  $z = 2;\n  $a = array($x, $y, $z);\n  for ($i = 2; $i < $n; $i++) {\n    $t\
    \ = $x + $y + $z;\n    $a[] = $t;\n    $x = $y;\n    $y = $z;\n    $z = $t;\n\
    \  }\n  return $a;\n}\n$n = 3;\nprint_r(tri($n));", "    $arr = array();\n   \
    \ $arr[0] = 1;\n    $arr[1] = 3;\n    for ($i = 2; $i <= $n; $i++) {\n       \
    \ if ($i % 2 == 0) {\n            $arr[$i] = 1 + ($i / 2);\n        } else {\n\
    \            $arr[$i] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n        }\n\
    \    }\n    return $arr;\n}\nprint_r(tri(3));", "  // your code\n}", "  $res =\
    \ [];\n  if ($n > 0) {\n    $res = [1, 3, 2];\n    for ($i = 3; $i <= $n; $i++)\
    \ {\n      if ($i % 2 === 0) {\n        $res[] = 1 + $i / 2;\n      } else {\n\
    \        $res[] = $res[$i - 1] + $res[$i - 2] + $res[$i + 1];\n      }\n    }\n\
    \  }\n  return $res;\n}\n", "  // tri(1) = 3\n  // tri(n) = 1 + n / 2, if n is\
    \ even.\n  // tri(n) =  tri(n - 1) + tri(n - 2) + tri(n + 1), if n is odd.\n \
    \ // F = 1, 1, 2, 4, 7, 13, 24, 44, 81, 149, 274, 504, 927, 1705, 3136, 5768,\
    \ 10609, 19513, 35890, 66012, 121415, 223317, 410744, 755476, 1389537, 2555757,\
    \ 4700770, 8646064, 15902591, 29249425, 53798080, 98950096, 181997601, 334745777,\
    \ 615693474, 1132436852, 2082876103\n\n  // Initialize an array of the first 5\
    \ numbers of the Tribonacci sequence\n  $arr = [1, 1, 2, 4, 7];\n  // if $n =\
    \ 0, return an empty array\n  if ($n == 0) {\n    return [];\n  }\n  // if $n\
    \ = 1, return an array with the first number of the Tribonacci sequence\n  if\
    \ ($n == 1) {\n    return [1];\n  }\n  // for $n > 1, return an array with the\
    \ first $n + 1 numbers of the Tribonacci sequence\n  for ($i = 0; $i < $n; $i++)\
    \ {\n    $arr[] = $arr[$i] + $arr[$i + 1] + $arr[$i + 2];\n  }\n  return $arr;\n\
    }\n", "  if ($n === 0) {\n    return [];\n  }\n  if ($n === 1) {\n    return [3];\n\
    \  }\n  $res = [3, 1, 2];\n  for ($i = 2; $i < $n; $i++) {\n    $res[] = ($i %\
    \ 2) ? $res[$i] + $res[$i - 1] + $res[$i + 1] : 1 + ($i / 2);\n  }\n  return $res;\n\
    }", "\n}\n$a = array('foo', 'bar', 'baz');\narray_walk($a, 'print');\narray_walk($a,\
    \ function ($value, $key) {\n  print \"$key: $value\\n\";\n});", "  $arr = [3,\
    \ 2, 1];\n  if ($n < 3) {\n    array_splice($arr, $n);\n    return $arr;\n  }\n\
    \  for ($i = 0; $i < $n - 2; $i++) {\n    $arr[] = $arr[$i] + $arr[$i + 1] + $arr[$i\
    \ + 2];\n  }\n  return $arr;\n}", "    $result = array();\n    for ($i = 1; $i\
    \ <= $n + 1; $i++) {\n        if ($i == 1) {\n            $result[] = 3;\n   \
    \     } elseif ($i % 2 == 0) {\n            $result[] = 1 + $i / 2;\n        }\
    \ else {\n            $result[] = $result[$i - 2] + $result[$i - 3] + $result[$i\
    \ - 1];\n        }\n    }\n    return $result;\n}\nprint_r(tri(4));", "  $res\
    \ = array(3);\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n    \
    \  $res[] = 1 + $i / 2;\n    } else {\n      $res[] = $res[$i - 1] + $res[$i -\
    \ 2] + $res[$i + 1];\n    }\n  }\n  return $res;\n}\n\nprint_r(tri(3));\n", " \
    \   return array_map(\n        function($n) {\n            if ($n < 2) {\n   \
    \             return 3;\n            }\n            return tri($n - 1) + tri($n\
    \ - 2) + tri($n + 1);\n        },\n        range(0, $n)\n    );\n}\n", "    //\
    \ Your code here\n}\n", "    $result = array();\n    for ($i = 1; $i <= $n + 1;\
    \ $i++) {\n        if ($i == 1) {\n            $result[] = 3;\n        } else\
    \ if ($i % 2 == 0) {\n            $result[] = 1 + $i / 2;\n        } else {\n\
    \            $result[] = $result[$i - 2] + $result[$i - 3] + $result[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\nprint_r(tri(3));", "  $ret = [];\n\
    \  for ($i = 0; $i <= $n; $i++) {\n    if ($i == 0) {\n      $ret[] = 1;\n   \
    \ } elseif ($i == 1) {\n      $ret[] = 3;\n    } elseif ($i == 2) {\n      $ret[]\
    \ = 2;\n    } elseif ($i % 2 == 0) {\n      $ret[] = 1 + $i / 2;\n    } else {\n\
    \      $ret[] = $ret[$i - 1] + $ret[$i - 2] + $ret[$i + 1];\n    }\n  }\n  return\
    \ $ret;\n}\necho var_export(tri(3), true) . \"\\n\"; // array(1, 3, 2, 8)\necho\
    \ var_export(tri(5), true) . \"\\n\"; // array(1, 3, 2, 8, 5, 11)\n", "    $result\
    \ = [];\n    $tribonacci = function($n) use (&$tribonacci, &$result) {\n     \
    \   if (isset($result[$n])) {\n            return $result[$n];\n        }\n  \
    \      if ($n === 1) {\n            return 3;\n        }\n        if ($n % 2 ===\
    \ 0) {\n            return 1 + $n / 2;\n        }\n        return $tribonacci($n\
    \ - 1) + $tribonacci($n - 2) + $tribonacci($n + 1);\n    };\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $result[$i] = $tribonacci($i);\n    }\n    return\
    \ $result;\n}", "\n}\n", "\t$result = [];\n\t\n\t$result[0] = 1;\n\t$result[1]\
    \ = 3;\n\t$result[2] = 2;\n\t$result[3] = 8;\n\t\n\tfor ($i = 4; $i <= $n; $i++)\
    \ {\n\t\tif ($i % 2 == 0) {\n\t\t\t$result[$i] = 1 + $i / 2;\n\t\t} else {\n\t\
    \t\t$result[$i] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\t\t}\n\
    \t}\n\t\n\treturn $result;\n}\n\nprint_r(tri(3));", "    $tribArr = array(1, 3,\
    \ 2);\n    for ($i = 2; $i < $n; $i++) {\n        if ($i % 2 == 0) {\n       \
    \     $tribArr[] = 1 + $i / 2;\n        } else {\n            $tribArr[] = $tribArr[$i\
    \ - 1] + $tribArr[$i - 2] + $tribArr[$i + 1];\n        }\n    }\n    return $tribArr;\n\
    }\n", "  $triArr = array(1 => 3);\n  for ($i = 2; $i <= $n; $i++) {\n    if ($i\
    \ % 2 == 0) {\n      $triArr[$i] = 1 + ($i / 2);\n    } else {\n      $triArr[$i]\
    \ = $triArr[$i - 1] + $triArr[$i - 2] + $triArr[$i + 1];\n    }\n  }\n  return\
    \ $triArr;\n}\n", "\t$tri = [3, 1, 2];\n\tif ($n == 0) {\n\t\treturn [];\n\t}\n\
    \tif ($n == 1) {\n\t\treturn [3];\n\t}\n\tif ($n == 2) {\n\t\treturn [3, 1];\n\
    \t}\n\tfor ($i = 0; $i < $n - 2; $i++) {\n\t\tif ($i % 2 == 0) {\n\t\t\t$tri[]\
    \ = 1 + ($i + 2) / 2;\n\t\t} else {\n\t\t\t$tri[] = $tri[$i] + $tri[$i - 1] +\
    \ $tri[$i + 1];\n\t\t}\n\t}\n\treturn $tri;\n}\n", "    if ($n == 0) return [1];\n\
    \    if ($n == 1) return [1, 3];\n    if ($n == 2) return [1, 3, 2];\n    $fib\
    \ = [1, 3, 2];\n    for ($i = 2; $i < $n; $i++) {\n        $fib[] = $fib[$i] +\
    \ $fib[$i - 1] + $fib[$i - 2];\n    }\n    return $fib;\n}\n", "    $tri = [3,\
    \ 2, 1];\n    for ($i = 3; $i <= $n; $i++) {\n        $tri[$i] = $tri[$i - 1]\
    \ + $tri[$i - 2] + $tri[$i - 3];\n    }\n    return $tri;\n}\necho \"<pre>\";\n\
    print_r(tri(3));\necho \"</pre>\";", "  $sequence = [1, 3, 2];\n  for ($i = 3;\
    \ $i <= $n; $i++) {\n    if ($i % 2 === 0) {\n      $sequence[] = 1 + $i / 2;\n\
    \    } else {\n      $sequence[] = $sequence[$i - 1] + $sequence[$i - 2] + $sequence[$i\
    \ + 1];\n    }\n  }\n  return $sequence;\n}\n", "  $sequence = array(1, 3, 2);\n\
    \  if ($n <= 3) {\n    return array_slice($sequence, 0, $n + 1);\n  }\n  for ($i\
    \ = 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $sequence[] = 1 + $i /\
    \ 2;\n    } else {\n      $sequence[] = $sequence[$i - 1] + $sequence[$i - 2]\
    \ + $sequence[$i + 1];\n    }\n  }\n  return $sequence;\n}", "    if ($n == 0)\
    \ {\n        return array(1);\n    }\n    if ($n == 1) {\n        return array(1,\
    \ 3);\n    }\n    if ($n == 2) {\n        return array(1, 3, 2);\n    }\n    $arr\
    \ = array(1, 3, 2);\n    for ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            $arr[] = 1 + $i / 2;\n        } else {\n            $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n        }\n    }\n    return\
    \ $arr;\n}\nprint_r(tri(10));", "    $result = array();\n    for ($i = 1; $i <=\
    \ $n + 1; $i++) {\n        if ($i == 1) {\n            $result[] = 3;\n      \
    \  } elseif ($i % 2 == 0) {\n            $result[] = 1 + ($i / 2);\n        }\
    \ else {\n            $result[] = $result[$i - 2] + $result[$i - 3] + $result[$i];\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = array();\n    if\
    \ ($n == 0) {\n        return $result;\n    }\n    if ($n == 1) {\n        $result[]\
    \ = 3;\n        return $result;\n    }\n    $result[] = 3;\n    $result[] = 2;\n\
    \    $result[] = 8;\n    for ($i = 3; $i < $n; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            $result[] = 1 + $i / 2;\n        } else {\n            $result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n \
    \   return $result;\n}\necho \"<pre>\";\nprint_r(tri(3));\necho \"</pre>\";",
  "    $r = array(1, 3, 2);\n    if ($n < 3) {\n        return array_slice($r, 0,\
    \ $n + 1);\n    }\n    while ($n-- > 2) {\n        $x = array_shift($r);\n   \
    \     $r[count($r)] = $x + $r[count($r) - 1] + $r[count($r) - 2];\n    }\n   \
    \ return $r;\n}\n\n$n = 9;\n", "    $results = [1, 3, 2];\n    for ($i = 3; $i\
    \ <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $results[] = 1 + $i\
    \ / 2;\n        } else {\n            $results[] = $results[$i - 1] + $results[$i\
    \ - 2] + $results[$i + 1];\n        }\n    }\n    return $results;\n}", "    $array\
    \ = array();\n    for ($i = 1; $i <= $n; $i++) {\n        if($i == 1)\n      \
    \      $array[] = 3;\n        else if($i % 2 == 0)\n            $array[] = 1 +\
    \ $i / 2;\n        else\n            $array[] = $array[$i - 2] + $array[$i - 1]\
    \ + $array[$i + 1];\n    }\n    return $array;\n}", "    $a = 0;\n    $b = 1;\n\
    \    $c = 1;\n    $r = [$c];\n    for ($i = 0; $i < $n; $i++) {\n        $a =\
    \ $b;\n        $b = $c;\n        $c = $a + $b + $c;\n        $r[] = $c;\n    }\n\
    \    return $r;\n}\nprint_r(tri(4));", "    $result = [];\n    for ($i = 1; $i\
    \ <= $n + 1; $i++) {\n        $num = 0;\n        if ($i == 1) {\n            $num\
    \ = 3;\n        } elseif ($i % 2 === 0) {\n            $num = 1 + ($i / 2);\n\
    \        } else {\n            $num = tri($i - 1) + tri($i - 2) + tri($i + 1);\n\
    \        }\n        $result[] = $num;\n    }\n    return $result;\n}\nvar_dump(tri(3));\n\
    var_dump(tri(2));\nvar_dump(tri(1));\n", "    $a = [3, 1, 2];\n    $i = 3;\n \
    \   if ($n <= 2) return [3, 1, 2];\n    while ($i <= $n) {\n        if ($i % 2\
    \ == 0) {\n            $a[] = 1 + ($i / 2);\n        } else {\n            $a[]\
    \ = $a[$i - 1] + $a[$i - 2] + $a[$i + 1];\n        }\n        $i++;\n    }\n \
    \   return $a;\n}\nprint_r(tri(3));", "    $result = [];\n    $result[0] = 3;\n\
    \    $result[1] = 1;\n    $result[2] = 2;\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        if ($i % 2 === 0) {\n            $result[$i] = 1 + $i / 2;\n        }\
    \ else {\n            $result[$i] = $result[$i - 1] + $result[$i - 2] + $result[$i\
    \ + 1];\n        }\n    }\n    return $result;\n}\necho \"<pre>\";\nprint_r(tri(3));\n\
    echo \"</pre>\";", "\t$tribonacci = array(1, 3, 2);\n\t$i = 3;\n\t$num = 8;\n\t\
    while($i < $n) {\n\t\tif($i % 2 == 0) {\n\t\t\t$num = 1 + $i / 2;\n\t\t} else\
    \ {\n\t\t\t$num = $tribonacci[$i - 1] + $tribonacci[$i - 2] + $tribonacci[$i +\
    \ 1];\n\t\t}\n\t\t$tribonacci[] = $num;\n\t\t$i++;\n\t}\n\tprint_r($tribonacci);\n\
    }\ntri(5);", "    if ($n < 1) return [];\n    $arr = [3];\n    $arr[] = 1 + $n\
    \ / 2;\n    $i = 2;\n    while ($i <= $n) {\n        $val = tri($i - 1) + tri($i\
    \ - 2) + tri($i + 1);\n        $arr[] = $val;\n        $i++;\n    }\n    return\
    \ $arr;\n}", "  // your code here\n  $res = array();\n  for ($i = 1; $i <= $n;\
    \ $i++) {\n    if ($i == 1) {\n      $res[] = 3;\n    } else if ($i == 2) {\n\
    \      $res[] = 2;\n    } else if ($i == 3) {\n      $res[] = 8;\n    } else {\n\
    \      $res[] = $res[$i - 2] + $res[$i - 3] + $res[$i - 4];\n    }\n  }\n  return\
    \ $res;\n}", "    $base = [3, 2, 1];\n    if($n == 0) return [1];\n    if($n <\
    \ 3) return $base;\n    $res = [];\n    for($i = 0; $i <= $n; $i++){\n       \
    \ if($i < 3) {\n            $res[] = $base[$i];\n        } else {\n          \
    \  $res[] = $res[$i - 1] + $res[$i - 2] + $res[$i - 3];\n        }\n    }\n  \
    \  return $res;\n}", "    if ($n == 0) {\n        return array(1);\n    }\n  \
    \  if ($n == 1) {\n        return array(1, 3);\n    }\n    if ($n == 2) {\n  \
    \      return array(1, 3, 2);\n    }\n    $t = array(1, 3, 2);\n    for ($i =\
    \ 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $t[] = 1 + $i\
    \ / 2;\n        } else {\n            $t[] = $t[$i - 1] + $t[$i - 2] + $t[$i +\
    \ 1];\n        }\n    }\n    return $t;\n}\n", "    if ($n === 0) {\n        return\
    \ [];\n    }\n    if ($n === 1) {\n        return [3];\n    }\n    if ($n ===\
    \ 2) {\n        return [3, 2];\n    }\n    $arr = [];\n    $arr[0] = 3;\n    $arr[1]\
    \ = 2;\n    $arr[2] = 8;\n    $i = 3;\n    while ($i <= $n) {\n        $arr[$i]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n        $i++;\n    }\n    return\
    \ $arr;\n}\n\n$result = tri(4);\nprint_r($result);\necho \"<br/>\";\n\n$result\
    \ = tri(5);\nprint_r($result);\necho \"<br/>\";\n\n$result = tri(7);\nprint_r($result);\n\
    echo \"<br/>\";", "    $tribonacci = array(1, 3, 2);\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n        if ($i % 2 == 0) {\n            $tribonacci[$i] = 1 + ($i /\
    \ 2);\n        } else {\n            $tribonacci[$i] = $tribonacci[$i - 1] + $tribonacci[$i\
    \ - 2] + $tribonacci[$i + 1];\n        }\n    }\n    return $tribonacci;\n}\n\n\
    echo '<pre>';\nprint_r(tri(3));\nprint_r(tri(7));\nprint_r(tri(0));\nprint_r(tri(1));\n\
    echo '</pre>';", "\t$arr = [1, 3, 2];\n\t$result = [];\n\tfor ($i = 0; $i <= $n;\
    \ $i++) {\n\t\tif (count($arr) == ($n + 1)) {\n\t\t\tbreak;\n\t\t}\n\t\tif ($i\
    \ % 2 == 0) {\n\t\t\t$result[$i] = 1 + $i / 2;\n\t\t} else {\n\t\t\t$result[$i]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n\t\t}\n\t\t$arr = $result;\n\t\
    }\n\treturn $result;\n}\n", "    $tri = [1, 3, 2];\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n        if ($i % 2 == 0) {\n            $tri[] = $i / 2 + 1;\n    \
    \    } else {\n            $tri[] = $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1];\n\
    \        }\n    }\n    return $tri;\n}\necho tri(5);", "  $a = array(3);\n  $i\
    \ = 0;\n  while ($i < $n) {\n    $a[$i + 1] = $i % 2 == 0 ? 1 + $i / 2 : $a[$i\
    \ - 1] + $a[$i - 2] + $a[$i + 1];\n    $i++;\n  }\n  return $a;\n}\necho '<pre>';\n\
    var_dump(tri(3));\necho '</pre>';", "    if($n == 0) {\n        return array(0);\n\
    \    }\n    $tri = array(1, 3, 2);\n    for($i = 3; $i <= $n; $i++) {\n      \
    \  if($i % 2 == 0) {\n            $tri[$i] = 1 + ($i / 2);\n        } else {\n\
    \            $tri[$i] = $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1];\n        }\n\
    \    }\n    return $tri;\n}\nprint_r(tri(3));", "    $result = array();\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        if ($i == 1) {\n            $result[] =\
    \ 3;\n        } else if ($i % 2 == 0) {\n            $result[] = 1 + $i / 2;\n\
    \        } else {\n            $result[] = $result[$i - 2] + $result[$i - 1] +\
    \ $result[$i];\n        }\n    }\n    return $result;\n}\nprint_r(tri(4));", " \
    \   // TODO\n}", "  if ($n == 0) {\n    return 0;\n  }\n  if ($n == 1) {\n   \
    \ return 3;\n  }\n  if ($n == 2) {\n    return 2;\n  }\n  if ($n % 2 == 0) {\n\
    \    return 1 + $n / 2;\n  }\n  else {\n    return tri($n - 1) + tri($n - 2) +\
    \ tri($n + 1);\n  }\n}", "  if ($n == 0) return [1];\n  $result = [1, 3, 2];\n\
    \  $x = 4;\n  while ($x <= $n) {\n    $result[] = $x % 2 == 0 ? $x / 2 : $result[$x\
    \ - 1] + $result[$x - 2] + $result[$x - 3];\n    $x++;\n  }\n  return $result;\n\
    }\nprint_r(tri(3));", "  $tribonacci = [];\n  $start = 0;\n  for ($i = 0; $i <=\
    \ $n; $i++) {\n    $tribonacci[$i] = tribonacci($start);\n    $start++;\n  }\n\
    \  return $tribonacci;\n}\n", "\t$arr = [1, 3, 2];\n\t$i = 3;\n\twhile ($i <=\
    \ $n) {\n\t\tif ($i % 2 == 0) {\n\t\t\t$arr[] = 1 + $i / 2;\n\t\t} else {\n\t\t\
    \t$arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n\t\t}\n\t\t$i++;\n\t}\n\
    \treturn $arr;\n}\necho tri(3);", "    $arr[] = 1;\n    $arr[] = 3;\n    $arr[]\
    \ = 2;\n    $arr[] = 8;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i ==\
    \ 0) {\n            $arr[] = 3;\n        } else if ($i % 2 == 0) {\n         \
    \   $arr[] = 1 + $i / 2;\n        } else {\n            $arr[] = $arr[$i] + $arr[$i\
    \ - 1] + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\necho implode(\"\
    \\n\", tri(3));", "  if($n == 0) return array(1);\n  $r = array(1, 3, 2);\n  for($i\
    \ = 3; $i <= $n; $i++) {\n    $r[] = $i % 2 == 0 ? 1 + ($i / 2) : $r[$i - 1] +\
    \ $r[$i - 2] + $r[$i + 1];\n  }\n  return $r;\n}\n", "    $arr = array();\n  \
    \  for ($i = 1; $i <= $n + 1; $i++) {\n        if ($i == 1) {\n            $arr[]\
    \ = 3;\n        } elseif ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n \
    \       } else {\n            $arr[] = $arr[$i - 2] + $arr[$i - 3] + $arr[$i -\
    \ 1];\n        }\n    }\n    return $arr;\n}\nprint_r(tri(3));", "  $results =\
    \ [];\n  $results[0] = 1;\n  $results[1] = 3;\n  $results[2] = 2;\n  for ($i =\
    \ 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $results[$i] = 1 + $i /\
    \ 2;\n    } else {\n      $results[$i] = $results[$i - 1] + $results[$i - 2] +\
    \ $results[$i + 1];\n    }\n  }\n  return $results;\n}", "    if ($n == 0) {\n\
    \        return [1];\n    }\n    if ($n == 1) {\n        return [1, 3];\n    }\n\
    \    if ($n == 2) {\n        return [1, 3, 2];\n    }\n    $result = [1, 3, 2];\n\
    \    for ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = 1 + ($i / 2);\n        } else {\n            $result[] = $result[$i - 1] +\
    \ $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n", "\tif ($n === 0) {\n\t\treturn array(1);\n\t}\n\tif ($n === 1) {\n\t\treturn\
    \ array(1, 3);\n\t}\n\tif ($n === 2) {\n\t\treturn array(1, 3, 2);\n\t}\n\t$result\
    \ = array(1, 3, 2);\n\tfor ($i = 3; $i <= $n; $i++) {\n\t\tif ($i % 2 == 0) {\n\
    \t\t\t$result[] = 1 + ($i / 2);\n\t\t} else {\n\t\t\t$result[] = $result[$i -\
    \ 1] + $result[$i - 2] + $result[$i + 1];\n\t\t}\n\t}\n\treturn $result;\n}",
  "    if ($n == 0) return [0];\n    if ($n == 1) return [0, 3];\n    if ($n == 2)\
    \ return [0, 3, 1];\n    $arr = [0, 3, 1];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $arr[] = floor(1 + $i / 2);\n       \
    \ } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n\
    \        }\n    }\n    return $arr;\n}\nprint_r(tri(4));", "  $arr = array();\n\
    \  $arr[0] = 1;\n  $arr[1] = 3;\n  $arr[2] = 2;\n  for ($i = 3; $i <= $n; $i++)\
    \ {\n    if ($i % 2 == 0) {\n      $arr[$i] = 1 + $i / 2;\n    } else {\n    \
    \  $arr[$i] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return\
    \ $arr;\n}\n\necho json_encode(tri(3));", "    $result = [];\n    for ($i = 1;\
    \ $i <= $n + 1; $i++) {\n        if ($i == 1) {\n            $result[] = 3;\n\
    \        } elseif ($i % 2 == 0) {\n            $result[] = 1 + $i / 2;\n     \
    \   } else {\n            $result[] = $result[$i - 2] + $result[$i - 3] + $result[$i];\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = array();\n    for\
    \ ($i = 1; $i <= $n + 1; $i++) {\n        if ($i == 1) {\n            $result[]\
    \ = 3;\n        } else if ($i % 2 == 0) {\n            $result[] = 1 + ($i / 2);\n\
    \        } else {\n            $result[] = $result[$i - 2] + $result[$i - 3] +\
    \ $result[$i - 1];\n        }\n    }\n    return $result;\n}\n", "    if ($n ==\
    \ 0) {\n        return array(1);\n    }\n    if ($n == 1) {\n        return array(1,\
    \ 3);\n    }\n    if ($n == 2) {\n        return array(1, 3, 2);\n    }\n    $arr\
    \ = array(1, 3, 2);\n    for ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            $arr[] = 1 + $i / 2;\n        } else {\n            $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n        }\n    }\n    return\
    \ $arr;\n}\n\nvar_dump(tri(1));\nvar_dump(tri(2));\nvar_dump(tri(3));\nvar_dump(tri(4));\n\
    var_dump(tri(6));\nvar_dump(tri(8));\nvar_dump(tri(10));\n", "    // TODO: here's\
    \ the code.\n    if ($n == 0) {\n        return [0];\n    }\n    $result = [1,\
    \ 3, 2];\n    if ($n <= 3) {\n        return array_slice($result, 0, $n + 1);\n\
    \    }\n    for ($i = 3; $i < $n; $i++) {\n        $val = 0;\n        if ($i %\
    \ 2 == 0) {\n            $val = 1 + ($i / 2);\n        } else {\n            $val\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n        $result[]\
    \ = $val;\n    }\n    return $result;\n}\n\nvar_dump(tri(2));\n", "\tif($n <=\
    \ 0) return array();\n\t$a = array(1, 3, 2);\n\tif($n == 1) return array_slice($a,\
    \ 0, 1);\n\tif($n == 2) return array_slice($a, 0, 2);\n\tif($n == 3) return $a;\n\
    \t$i = 3;\n\twhile($i <= $n) {\n\t\tif($i % 2 == 0) $a[] = 1 + $i / 2;\n\t\telse\
    \ $a[] = $a[$i - 1] + $a[$i - 2] + $a[$i + 1];\n\t\t$i++;\n\t}\n\treturn $a;\n\
    }\necho \"<pre>\";\nprint_r(tri(3));\necho \"</pre>\";", "\t$arr = array(1, 3,\
    \ 2);\n\t\n\tfor ($i = 3; $i <= $n; $i++) {\n\t\tif ($i % 2 == 0) {\n\t\t\t$arr[]\
    \ = 1 + $i / 2;\n\t\t} else {\n\t\t\t$arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n\t\t}\n\t}\n\t\n\treturn $arr;\n}\n\nprint_r(tri(3));", "  $arr = [3,\
    \ 2, 1];\n  $i = 0;\n  while ($i < $n) {\n    $arr[] = $arr[$i] + $arr[$i + 1]\
    \ + $arr[$i + 2];\n    $i++;\n  }\n  return $arr;\n}\nprint_r(tri(3));", "\tif($n\
    \ == 0) return [0];\n\t$seq = [1,3,2];\n\t$i = 3;\n\twhile($i < $n + 1) {\n\t\t\
    $val = 1 + $i / 2;\n\t\tif($i % 2 == 0) {\n\t\t\t$seq[] = $val;\n\t\t} else {\n\
    \t\t\t$seq[] = $seq[$i - 1] + $seq[$i - 2] + $seq[$i + 1];\n\t\t}\n\t\t$i++;\n\
    \t}\n\treturn $seq;\n}\n", "\tif($n == 0) return 0;\n\tif($n == 1) return 1;\n\
    \tif($n == 2) return 1;\n\tif($n % 2 == 0) return 1 + $n / 2;\n\treturn tri($n\
    \ - 1) + tri($n - 2) + tri($n + 1);\n}", "  $res = array(1, 3, 2);\n  for ($i\
    \ = 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $res[] = 1 + ($i / 2);\n\
    \    } else {\n      $res[] = $res[$i - 1] + $res[$i - 2] + $res[$i + 1];\n  \
    \  }\n  }\n  return $res;\n}\n", "\t$arr = array(3, 2, 8);\n\tfor ($i = 0; $i\
    \ < $n; $i++) {\n\t\t$arr[] = ($i + 1) % 2 ? $arr[count($arr) - 1] + $arr[count($arr)\
    \ - 2] + $arr[count($arr) - 3] : ($i + 1) / 2;\n\t}\n\treturn $arr;\n}\nprint_r(tri(2));",
  "    $tri = array(1, 3, 2);\n    if ($n == 0) {\n        return array(1);\n    }\
    \ elseif ($n == 1) {\n        return array(1, 3);\n    } elseif ($n == 2) {\n\
    \        return array(1, 3, 2);\n    } else {\n        while (count($tri) < $n\
    \ + 1) {\n            $tri[count($tri)] = $tri[count($tri) - 3] + $tri[count($tri)\
    \ - 2] + $tri[count($tri) - 1];\n        }\n        return $tri;\n    }\n}", " \
    \   if ($n <= 0) {\n        return [1];\n    }\n    $result = [1, 3, 2];\n   \
    \ for ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 === 0) {\n            $result[]\
    \ = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n}\necho '<pre>';\n\
    print_r(tri(3));\necho '</pre>';", "    // Write your code here\n}\n", "\n}\n",
  "  $arr = [1, 3, 2];\n  if ($n < 3) {\n    return $arr;\n  }\n  for ($i = 3; $i\
    \ <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else\
    \ {\n      $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n\
    \  return $arr;\n}\n", "    $arr = array();\n    for ($i = 1; $i <= $n + 1; $i++)\
    \ {\n        if ($i == 1) {\n            $arr[] = 3;\n        } else if ($i %\
    \ 2 == 0) {\n            $arr[] = $i / 2;\n        } else {\n            $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n        }\n    }\n    return\
    \ $arr;\n}\n\nprint_r(tri(3));", "\t$tris = array(1, 3, 2);\n\tfor ($i = 0; $i\
    \ < $n - 2; $i++) {\n\t\t$tris[] = $tris[$i] + $tris[$i + 1] + $tris[$i + 2];\n\
    \t}\n\treturn $tris;\n}\nprint_r(tri(10));", "\t$arr = array(1, 3, 2);\n\tfor\
    \ ($i = 3; $i <= $n; $i++) {\n\t\tif ($i % 2 === 0) {\n\t\t\t$arr[] = $i / 2;\n\
    \t\t} else {\n\t\t\t$arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n\t\t\
    }\n\t}\n\treturn $arr;\n}\necho \"<pre>\";\nprint_r(tri(7));\necho \"</pre>\";",
  "\t// Write your code here\n}\n", "  if ($n == 0) return array(1);\n  if ($n ==\
    \ 1) return array(1, 3);\n  if ($n == 2) return array(1, 3, 2);\n  $arr = array(1,\
    \ 3, 2);\n  for ($i = 2; $i < $n; $i++) {\n    if ($i % 2 == 0) {\n      $val\
    \ = 1 + ($i / 2);\n    } else {\n      $val = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n    }\n    $arr[] = $val;\n  }\n  return $arr;\n}\n", "\t$arr = array(1,\
    \ 3, 2);\n\tfor ($i = 3; $i <= $n; $i++) {\n\t\tif ($i % 2 == 0) {\n\t\t\t$arr[]\
    \ = 1 + $i / 2;\n\t\t} else {\n\t\t\t$arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n\t\t}\n\t}\n\treturn $arr;\n}\nprint_r(tri(3));", "    $result = [];\n\
    \    if($n == 1) {\n        $result[] = 3;\n    }\n    else if($n == 2) {\n  \
    \      $result[] = 3;\n        $result[] = 2;\n    }\n    else if($n == 3) {\n\
    \        $result[] = 3;\n        $result[] = 2;\n        $result[] = 8;\n    }\n\
    \    else {\n        $result[] = 3;\n        $result[] = 2;\n        $result[]\
    \ = 8;\n        $n -= 3;\n        while($n--) {\n            $last = array_pop($result);\n\
    \            $secondLast = array_pop($result);\n            $thirdLast = array_pop($result);\n\
    \            if($last % 2 == 0) {\n                $result[] = $thirdLast;\n \
    \               $result[] = $secondLast;\n                $result[] = $last +\
    \ 1 + ($last / 2);\n            }\n            else {\n                $result[]\
    \ = $thirdLast;\n                $result[] = $secondLast;\n                $result[]\
    \ = $last + $secondLast + $thirdLast;\n            }\n        }\n    }\n    return\
    \ $result;\n}", "    $arr = array(1, 3, 2);\n    if ($n < 3) {\n        return\
    \ array_slice($arr, 0, $n + 1);\n    }\n    for ($i = 3; $i <= $n; $i++) {\n \
    \       if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else {\n\
    \            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n        }\n\
    \    }\n    return $arr;\n}", "\t$arr = array(1, 3, 2);\n\t$i = 3;\n\twhile ($i\
    \ <= $n) {\n\t\tif ($i % 2 == 0) {\n\t\t\t$arr[] = 1 + $i / 2;\n\t\t} else {\n\
    \t\t\t$arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n\t\t}\n\t\t$i++;\n\
    \t}\n\treturn $arr;\n}\n\necho \"<pre>\";\nprint_r(tri(7));\necho \"</pre>\";",
  "  $tribonacci = array(1, 3, 2);\n  if ($n > 2) {\n    for ($i = 3; $i <= $n; $i++)\
    \ {\n      if ($i % 2 == 0) {\n        $tribonacci[$i] = 1 + ($i / 2);\n     \
    \ } else {\n        $tribonacci[$i] = $tribonacci[$i - 1] + $tribonacci[$i - 2]\
    \ + $tribonacci[$i + 1];\n      }\n    }\n  }\n  return $tribonacci;\n}\necho\
    \ \"tri(3)\\n\";\nprint_r(tri(3));\necho \"tri(2)\\n\";\nprint_r(tri(2));\necho\
    \ \"tri(4)\\n\";\nprint_r(tri(4));\necho \"tri(8)\\n\";\nprint_r(tri(8));\necho\
    \ \"tri(10)\\n\";\nprint_r(tri(10));\necho \"tri(12)\\n\";\nprint_r(tri(12));\n\
    echo \"tri(20)\\n\";\nprint_r(tri(20));\necho \"tri(18)\\n\";\nprint_r(tri(18));\n\
    echo \"tri(24)\\n\";\nprint_r(tri(24));\necho \"tri(28)\\n\";\nprint_r(tri(28));",
  "  // $sum = 3;\n  // for ($i = 1; $i <= $n; $i++) {\n  //   $sum += $i;\n  // }\n\
    \  // return $sum;\n  $arr = [];\n  $arr[0] = 1;\n  $arr[1] = 3;\n  $arr[2] =\
    \ 2;\n  for ($i = 3; $i <= $n; $i++) {\n    $tri = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i - 3];\n    $arr[$i] = $tri;\n  }\n  return $arr;\n}\n\necho tri(6);",
  "    if ($n == 0) {\n        return [1];\n    } elseif ($n == 1) {\n        return\
    \ [1, 3];\n    } elseif ($n == 2) {\n        return [1, 3, 2];\n    } else {\n\
    \        $arr = tri($n - 1);\n        $new_item = 0;\n        if ($n % 2 == 0)\
    \ {\n            $new_item = $n / 2 + 1;\n        } else {\n            $new_item\
    \ = $arr[count($arr) - 1] + $arr[count($arr) - 2] + $arr[count($arr) - 3];\n \
    \       }\n        array_push($arr, $new_item);\n        return $arr;\n    }\n\
    }\n", "\treturn null;\n}\n", "\t$m = [3, 1, 2];\n\tfor ($i = 0; $i < $n; $i++)\
    \ {\n\t\tif ($i % 2 == 0)\n\t\t\t$m[] = $m[$i + 1] / 2 + 1;\n\t\telse\n\t\t\t\
    $m[] = $m[$i] + $m[$i - 1] + $m[$i + 1];\n\t}\n\treturn $m;\n}\n$test = tri(3);\n\
    var_dump($test);\n", "\t$seq = [3, 2, 1];\n\tif ($n < 3) {\n\t\t$seq = array_slice($seq,\
    \ 0, $n + 1);\n\t} else {\n\t\tfor ($i = 3; $i <= $n; $i++) {\n\t\t\tif ($i %\
    \ 2 == 0) {\n\t\t\t\t$seq[] = 1 + $i / 2;\n\t\t\t} else {\n\t\t\t\t$seq[] = $seq[$i\
    \ - 1] + $seq[$i - 2] + $seq[$i + 1];\n\t\t\t}\n\t\t}\n\t}\n\treturn $seq;\n}\n",
  "  $trib = [1, 3, 2];\n  for ($i = 3; $i <= $n; $i++) {\n    $trib[] = $i % 2 ===\
    \ 0 ? 1 + $i / 2 : $trib[$i - 1] + $trib[$i - 2] + $trib[$i + 1];\n  }\n  return\
    \ $trib;\n}\nprint_r(tri(3));\nprint_r(tri(6));\nprint_r(tri(7));\nprint_r(tri(8));\n\
    print_r(tri(9));\nprint_r(tri(10));\nprint_r(tri(11));\nprint_r(tri(12));\nprint_r(tri(13));\n\
    print_r(tri(14));\nprint_r(tri(15));\nprint_r(tri(16));\nprint_r(tri(17));\nprint_r(tri(18));\n\
    print_r(tri(19));\nprint_r(tri(20));\nprint_r(tri(21));\nprint_r(tri(22));\nprint_r(tri(23));\n\
    print_r(tri(24));\nprint_r(tri(25));\nprint_r(tri(26));\nprint_r(tri(27));\nprint_r(tri(28));\n\
    print_r(tri(29));\nprint_r(tri(30));\nprint_r(tri(31));\nprint_r(tri(32));\nprint_r(tri(33));\n\
    print_r(tri(34));\nprint_r(tri(35));\nprint_r(tri(36));\nprint_r(tri(37));\nprint_r(tri(38));\n\
    print_r(tri(39));\nprint_r(tri(40));\nprint_r(tri(41));\nprint_r(tri(42));\nprint_r(tri(43));\n\
    print_r(tri(44));\nprint_r(tri(45));\nprint_r(tri(46));\nprint_r(tri(47));\nprint_r(tri(48));\n\
    print_r(tri(49));\nprint_r(tri(50));\nprint_r(", "  // Write your code here\n}",
  "    $arr = array(1, 3, 2);\n    for ($i = 3; $i <= $n; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $arr[] = $i + $i / 2;\n        } else {\n         \
    \   $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n        }\n    }\n \
    \   return $arr;\n}\n", "    $res = [];\n    for ($i = 0; $i <= $n; $i++) {\n\
    \        if ($i === 0) {\n            $res[] = 0;\n        } elseif ($i === 1)\
    \ {\n            $res[] = 1;\n        } elseif ($i === 2) {\n            $res[]\
    \ = 1;\n        } else {\n            $res[] = $res[$i - 1] + $res[$i - 2] + $res[$i\
    \ - 3];\n        }\n    }\n    return $res;\n}\n", "  if ($n <= 0) return [];\n\
    \  if ($n == 1) return [3];\n  if ($n == 2) return [3, 2];\n  $result = [3, 2,\
    \ 8];\n  for ($i = 3; $i <= $n; $i++) {\n    $result[] = $i % 2 == 0 ? (1 + $i\
    \ / 2) : ($result[$i - 1] + $result[$i - 2] + $result[$i + 1]);\n  }\n  return\
    \ $result;\n}", "  $seq = array(1, 3, 2);\n  for ($i = 0; $i < $n; $i++) {\n \
    \   $seq[] = ($i % 2 == 0) ? $seq[$i] / 2 + 1 : $seq[$i - 1] + $seq[$i - 2] +\
    \ $seq[$i + 1];\n  }\n  return $seq;\n}\nprint_r(tri(2));", "  if ($n == 0) return\
    \ [];\n  if ($n == 1) return [1];\n  if ($n == 2) return [1, 3];\n  if ($n ==\
    \ 3) return [1, 3, 2];\n  $result = [1, 3, 2];\n  for ($i = 0; $i < $n - 3; $i++)\
    \ {\n    $t = $result[$i] + $result[$i + 1] + $result[$i + 2];\n    array_push($result,\
    \ $t);\n  }\n  return $result;\n}\n", "\t$result = array();\n\tif ($n == 0) {\n\
    \t\treturn $result;\n\t}\n\t$result[0] = 3;\n\tif ($n == 1) {\n\t\treturn $result;\n\
    \t}\n\t$result[1] = 1;\n\tif ($n == 2) {\n\t\treturn $result;\n\t}\n\t$result[2]\
    \ = 2;\n\tfor ($i = 3; $i <= $n; $i++) {\n\t\tif ($i % 2 == 0) {\n\t\t\t$result[$i]\
    \ = 1 + $i / 2;\n\t\t} else {\n\t\t\t$result[$i] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i + 1];\n\t\t}\n\t}\n\treturn $result;\n}\n", "    if ($n ==\
    \ 0) return [1];\n    if ($n == 1) return [1, 3];\n    if ($n == 2) return [1,\
    \ 3, 2];\n    $result = [1, 3, 2];\n    for ($i = 3; $i <= $n; $i++) {\n     \
    \   if ($i % 2 == 0) {\n            $x = 1 + ($i / 2);\n            $result[]\
    \ = $x;\n        } else {\n            $n1 = $result[$i - 1];\n            $n2\
    \ = $result[$i - 2];\n            $n3 = $result[$i + 1];\n            $x = $n1\
    \ + $n2 + $n3;\n            $result[] = $x;\n        }\n    }\n    return $result;\n\
    }\necho \"<pre>\";\nprint_r(tri(3));\necho \"</pre>\";", "    // Fill in your\
    \ code here!\n    $seq = [3, 2, 1];\n    for ($i = 3; $i <= $n; $i++) {\n    \
    \    $seq[] = $seq[$i - 1] + $seq[$i - 2] + $seq[$i - 3];\n    }\n    return $seq;\n\
    }\n", "\t$arr = array(1, 3, 2);\n\t$flag = 3;\n\t$sum = 0;\n\tif ($n == 0) {\n\
    \t\t$arr = array();\n\t} else if ($n == 1) {\n\t\t$arr = array(1);\n\t} else if\
    \ ($n == 2) {\n\t\t$arr = array(1, 3);\n\t} else if ($n == 3) {\n\t\t$arr = array(1,\
    \ 3, 2);\n\t} else {\n\t\tfor ($i = 3; $i < $n; $i++) {\n\t\t\t$flag++;\n\t\t\t\
    if ($flag % 2 == 0) {\n\t\t\t\t$sum = 1 + $flag / 2;\n\t\t\t} else {\n\t\t\t\t\
    $sum = $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n\t\t\t}\n\t\t\tarray_push($arr,\
    \ $sum);\n\t\t}\n\t}\n\treturn $arr;\n}\n\nprint_r(tri(3));", "    // your code\
    \ here!\n}", "    $result = array();\n    for ($i = 1; $i <= $n + 1; $i++) {\n\
    \        if ($i == 1) {\n            $result[] = 3;\n        } else if ($i % 2\
    \ == 0) {\n            $result[] = 1 + ($i / 2);\n        } else {\n         \
    \   $result[] = $result[$i - 2] + $result[$i - 3] + $result[$i];\n        }\n\
    \    }\n    return $result;\n}\n\necho print_r(tri(3), true);", "  $sequence =\
    \ [3, 2, 1];\n  if ($n == 0) {\n    return [1];\n  }\n  if ($n == 1) {\n    return\
    \ [1, 3];\n  }\n  if ($n == 2) {\n    return [1, 3, 2];\n  }\n  for ($i = 3; $i\
    \ <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $sequence[] = 1 + $i / 2;\n  \
    \  } else {\n      $sequence[] = $sequence[$i - 1] + $sequence[$i - 2] + $sequence[$i\
    \ + 1];\n    }\n  }\n  return $sequence;\n}\nprint_r(tri(3));", "    $array =\
    \ array();\n    for ($i = 1; $i <= $n; $i++) {\n        if($i == 1) {\n      \
    \      $array[] = 3;\n        }\n        else if($i == 2) {\n            $array[]\
    \ = 2;\n        }\n        else if($i == 3) {\n            $array[] = 8;\n   \
    \     }\n        else {\n            $array[] = $array[$i - 2] + $array[$i - 3]\
    \ + $array[$i - 4];\n        }\n    }\n    return $array;\n}\nprint_r(tri(3));\n",
  "  $result = array();\n  for ($i = 1; $i <= $n + 1; $i++) {\n    if ($i == 1) {\n\
    \      $result[] = 3;\n    } else if ($i % 2 == 0) {\n      $result[] = 1 + $i\
    \ / 2;\n    } else {\n      $result[] = $result[$i - 2] + $result[$i - 3] + $result[$i];\n\
    \    }\n  }\n  return $result;\n}\necho var_dump(tri(3));\necho var_dump(tri(4));\n\
    echo var_dump(tri(5));\necho var_dump(tri(6));\necho var_dump(tri(7));\necho var_dump(tri(8));\n\
    echo var_dump(tri(9));", "  if ($n == 0) {\n    return [];\n  }\n  if ($n == 1)\
    \ {\n    return [3];\n  }\n  if ($n == 2) {\n    return [3, 2];\n  }\n  $arr =\
    \ [3, 2, 8];\n  for ($i = 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n     \
    \ $arr[] = 1 + $i / 2;\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i -\
    \ 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

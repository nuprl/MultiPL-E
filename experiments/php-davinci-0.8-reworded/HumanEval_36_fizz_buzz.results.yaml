language: php
name: HumanEval_36_fizz_buzz
results:
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 11; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $num = $i;\n            while ($num) {\n   \
    \             if ($num % 10 == 7) {\n                    $count++;\n         \
    \       }\n                $num = (int)($num / 10);\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $div_count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n            $str = (string)$i;\n            for ($j =\
    \ 0; $j < strlen($str); $j++) {\n                if ($str[$j] == '7') {\n    \
    \                $div_count++;\n                }\n            }\n        }\n\
    \    }\n    return $div_count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    // base case\n    if ($n <= 0) {\n        return 0;\n    }\n    // recursive\
    \ case\n    if ($n % 11 == 0 || $n % 13 == 0) {\n        return numberOfSevens($n)\
    \ + fizz_buzz($n - 1);\n    } else {\n        return fizz_buzz($n - 1);\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function numberOfSevens()\
    \ in /tmp/tmpspufwcr0.php:16\nStack trace:\n#0 /tmp/tmpspufwcr0.php(18): fizz_buzz(44)\n\
    #1 /tmp/tmpspufwcr0.php(18): fizz_buzz(45)\n#2 /tmp/tmpspufwcr0.php(18): fizz_buzz(46)\n\
    #3 /tmp/tmpspufwcr0.php(18): fizz_buzz(47)\n#4 /tmp/tmpspufwcr0.php(18): fizz_buzz(48)\n\
    #5 /tmp/tmpspufwcr0.php(18): fizz_buzz(49)\n#6 /tmp/tmpspufwcr0.php(23): fizz_buzz(50)\n\
    #7 /tmp/tmpspufwcr0.php(27): candidate(50)\n#8 /tmp/tmpspufwcr0.php(37): test()\n\
    #9 {main}\n  thrown in /tmp/tmpspufwcr0.php on line 16\n"
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $i = $n;\n    $j = 0;\n    while ($i > 0) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $str = (string)$i;\n            $count = substr_count($str,\
    \ '7');\n            $j += $count;\n        }\n        $i--;\n    }\n    return\
    \ $j;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp44psfnwu.php:28\n\
    Stack trace:\n#0 /tmp/tmp44psfnwu.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp44psfnwu.php\
    \ on line 28\n"
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif (($i % 11 === 0 || $i % 13\
    \ === 0) && strpos($i, '7') !== false) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyl183c47.php:25\n\
    Stack trace:\n#0 /tmp/tmpyl183c47.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpyl183c47.php\
    \ on line 25\n"
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $counter = 0;\n    for ($i = 0; $i < $n; $i++){\n        if ($i % 11 == 0\
    \ || $i % 13 == 0){\n            $counter += substr_count($i, '7');\n        }\n\
    \    }\n    return $counter;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $cnt = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n      $s = strval($i);\n      for ($j = 0; $j < strlen($s); $j++) {\n\
    \        if ($s[$j] == \"7\") {\n          $cnt++;\n        }\n      }\n    }\n\
    \  }\n  return $cnt;\n}\n\necho fizz_buzz(50);\necho \"\\n\";\necho fizz_buzz(78);\n\
    echo \"\\n\";\necho fizz_buzz(79);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    2

    3

    '
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $i = (string)$i;\n            $count += substr_count($i,\
    \ '7');\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $total = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $total += substr_count((string)$i, \"7\");\n\
    \        }\n    }\n    return $total;\n}\n\nfunction candidate(...$args) {\n \
    \   return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $sum = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 ==\
    \ 0) {\n\t\t\t$sum += substr_count((string)$i, \"7\");\n\t\t}\n\t}\n\treturn $sum;\n\
    }\n\necho fizz_buzz(50) . \"\\n\";\necho fizz_buzz(78) . \"\\n\";\necho fizz_buzz(79)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    2

    3

    '
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $c = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i\
    \ % 13 == 0) {\n            $c += count_digit_7s($i);\n        }\n    }\n    return\
    \ $c;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_digit_7s()\
    \ in /tmp/tmpxv6jr7yt.php:13\nStack trace:\n#0 /tmp/tmpxv6jr7yt.php(20): fizz_buzz(50)\n\
    #1 /tmp/tmpxv6jr7yt.php(24): candidate(50)\n#2 /tmp/tmpxv6jr7yt.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxv6jr7yt.php on line 13\n"
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\n\necho fizz_buzz(50).\"\\n\";\necho fizz_buzz(78).\"\
    \\n\";\necho fizz_buzz(79).\"\\n\";\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    2

    3

    '
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $res = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n      $res += substr_count($i, '7');\n    }\n  }\n  return $res;\n\
    }\n\n$a = fizz_buzz(50);\necho '<pre>';\nvar_dump($a);\necho '</pre>';\n\n$a =\
    \ fizz_buzz(78);\necho '<pre>';\nvar_dump($a);\necho '</pre>';\n\n$a = fizz_buzz(79);\n\
    echo '<pre>';\nvar_dump($a);\necho '</pre>';\nfunction candidate(...$args) {\n\
    \    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '<pre>int(0)

    </pre><pre>int(2)

    </pre><pre>int(3)

    </pre>'
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  $n = strval($n);\n  $last = $n[strlen($n) - 1];\n  for ($i =\
    \ 0; $i < strlen($n); $i++) {\n    if ($n[$i] == 7) {\n      $count++;\n    }\n\
    \  }\n  if ($last == '7') {\n    return $count - 1;\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5jkl1239.php:30\n\
    Stack trace:\n#0 /tmp/tmp5jkl1239.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5jkl1239.php\
    \ on line 30\n"
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0) {\n   \
    \   if (strstr($i, \"7\")) {\n        $count++;\n      }\n    }\n    if ($i %\
    \ 13 == 0) {\n      if (strstr($i, \"7\")) {\n        $count++;\n      }\n   \
    \ }\n  }\n  return $count;\n}\n\necho fizz_buzz(50) . PHP_EOL;\necho fizz_buzz(78)\
    \ . PHP_EOL;\necho fizz_buzz(79) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n1\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm2r9d4iy.php:35\n\
    Stack trace:\n#0 /tmp/tmpm2r9d4iy.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpm2r9d4iy.php\
    \ on line 35\n"
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    if ($n < 7) {\n        return 0;\n    }\n    $count = 0;\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n           \
    \ $str = (string)$i;\n            $str = str_split($str);\n            $str =\
    \ array_count_values($str);\n            if (array_key_exists('7', $str)) {\n\
    \                $count += $str['7'];\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\necho fizz_buzz(50);\necho fizz_buzz(78);\necho fizz_buzz(79);\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "033\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysyw8mvi.php:36\n\
    Stack trace:\n#0 /tmp/tmpysyw8mvi.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpysyw8mvi.php\
    \ on line 36\n"
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tif (strstr($i, '7') && ($i %\
    \ 11 == 0 || $i % 13 == 0)) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy_oncvn5.php:25\n\
    Stack trace:\n#0 /tmp/tmpy_oncvn5.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpy_oncvn5.php\
    \ on line 25\n"
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if (($i % 11 == 0\
    \ || $i % 13 == 0) && strpos((string)$i, '7') !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu8uem0n7.php:24\n\
    Stack trace:\n#0 /tmp/tmpu8uem0n7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpu8uem0n7.php\
    \ on line 24\n"
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $temp = $i;\n      while ($temp != 0) {\n        if ($temp\
    \ % 10 == 7) $count++;\n        $temp = (int)($temp / 10);\n      }\n    }\n \
    \ }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $sum = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n      $str = \"$i\";\n      for ($j = 0; $j < strlen($str); $j++) {\n\
    \        if ($str[$j] == 7) {\n          $sum += 1;\n        }\n      }\n    }\n\
    \  }\n  return $sum;\n}\necho fizz_buzz(50);\necho \"<br>\";\necho fizz_buzz(78);\n\
    echo \"<br>\";\necho fizz_buzz(79);\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 0<br>2<br>3
  timestamp: 1659824447

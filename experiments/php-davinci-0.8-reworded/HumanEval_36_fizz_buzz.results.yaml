language: php
name: HumanEval_36_fizz_buzz
results:
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 11; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $num = $i;\n            while ($num) {\n   \
    \             if ($num % 10 == 7) {\n                    $count++;\n         \
    \       }\n                $num = (int)($num / 10);\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $div_count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n            $str = (string)$i;\n            for ($j =\
    \ 0; $j < strlen($str); $j++) {\n                if ($str[$j] == '7') {\n    \
    \                $div_count++;\n                }\n            }\n        }\n\
    \    }\n    return $div_count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    // base case\n    if ($n <= 0) {\n        return 0;\n    }\n    // recursive\
    \ case\n    if ($n % 11 == 0 || $n % 13 == 0) {\n        return numberOfSevens($n)\
    \ + fizz_buzz($n - 1);\n    } else {\n        return fizz_buzz($n - 1);\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function numberOfSevens()\
    \ in /tmp/tmpspufwcr0.php:16\nStack trace:\n#0 /tmp/tmpspufwcr0.php(18): fizz_buzz(44)\n\
    #1 /tmp/tmpspufwcr0.php(18): fizz_buzz(45)\n#2 /tmp/tmpspufwcr0.php(18): fizz_buzz(46)\n\
    #3 /tmp/tmpspufwcr0.php(18): fizz_buzz(47)\n#4 /tmp/tmpspufwcr0.php(18): fizz_buzz(48)\n\
    #5 /tmp/tmpspufwcr0.php(18): fizz_buzz(49)\n#6 /tmp/tmpspufwcr0.php(23): fizz_buzz(50)\n\
    #7 /tmp/tmpspufwcr0.php(27): candidate(50)\n#8 /tmp/tmpspufwcr0.php(37): test()\n\
    #9 {main}\n  thrown in /tmp/tmpspufwcr0.php on line 16\n"
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $i = $n;\n    $j = 0;\n    while ($i > 0) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $str = (string)$i;\n            $count = substr_count($str,\
    \ '7');\n            $j += $count;\n        }\n        $i--;\n    }\n    return\
    \ $j;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp44psfnwu.php:28\n\
    Stack trace:\n#0 /tmp/tmp44psfnwu.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp44psfnwu.php\
    \ on line 28\n"
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif (($i % 11 === 0 || $i % 13\
    \ === 0) && strpos($i, '7') !== false) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyl183c47.php:25\n\
    Stack trace:\n#0 /tmp/tmpyl183c47.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpyl183c47.php\
    \ on line 25\n"
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $counter = 0;\n    for ($i = 0; $i < $n; $i++){\n        if ($i % 11 == 0\
    \ || $i % 13 == 0){\n            $counter += substr_count($i, '7');\n        }\n\
    \    }\n    return $counter;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $cnt = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n      $s = strval($i);\n      for ($j = 0; $j < strlen($s); $j++) {\n\
    \        if ($s[$j] == \"7\") {\n          $cnt++;\n        }\n      }\n    }\n\
    \  }\n  return $cnt;\n}\n\necho fizz_buzz(50);\necho \"\\n\";\necho fizz_buzz(78);\n\
    echo \"\\n\";\necho fizz_buzz(79);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    2

    3

    '
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $i = (string)$i;\n            $count += substr_count($i,\
    \ '7');\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $total = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $total += substr_count((string)$i, \"7\");\n\
    \        }\n    }\n    return $total;\n}\n\nfunction candidate(...$args) {\n \
    \   return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $sum = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 ==\
    \ 0) {\n\t\t\t$sum += substr_count((string)$i, \"7\");\n\t\t}\n\t}\n\treturn $sum;\n\
    }\n\necho fizz_buzz(50) . \"\\n\";\necho fizz_buzz(78) . \"\\n\";\necho fizz_buzz(79)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    2

    3

    '
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $c = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i\
    \ % 13 == 0) {\n            $c += count_digit_7s($i);\n        }\n    }\n    return\
    \ $c;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_digit_7s()\
    \ in /tmp/tmpxv6jr7yt.php:13\nStack trace:\n#0 /tmp/tmpxv6jr7yt.php(20): fizz_buzz(50)\n\
    #1 /tmp/tmpxv6jr7yt.php(24): candidate(50)\n#2 /tmp/tmpxv6jr7yt.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxv6jr7yt.php on line 13\n"
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\n\necho fizz_buzz(50).\"\\n\";\necho fizz_buzz(78).\"\
    \\n\";\necho fizz_buzz(79).\"\\n\";\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    2

    3

    '
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $res = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n      $res += substr_count($i, '7');\n    }\n  }\n  return $res;\n\
    }\n\n$a = fizz_buzz(50);\necho '<pre>';\nvar_dump($a);\necho '</pre>';\n\n$a =\
    \ fizz_buzz(78);\necho '<pre>';\nvar_dump($a);\necho '</pre>';\n\n$a = fizz_buzz(79);\n\
    echo '<pre>';\nvar_dump($a);\necho '</pre>';\nfunction candidate(...$args) {\n\
    \    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '<pre>int(0)

    </pre><pre>int(2)

    </pre><pre>int(3)

    </pre>'
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  $n = strval($n);\n  $last = $n[strlen($n) - 1];\n  for ($i =\
    \ 0; $i < strlen($n); $i++) {\n    if ($n[$i] == 7) {\n      $count++;\n    }\n\
    \  }\n  if ($last == '7') {\n    return $count - 1;\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5jkl1239.php:30\n\
    Stack trace:\n#0 /tmp/tmp5jkl1239.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5jkl1239.php\
    \ on line 30\n"
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0) {\n   \
    \   if (strstr($i, \"7\")) {\n        $count++;\n      }\n    }\n    if ($i %\
    \ 13 == 0) {\n      if (strstr($i, \"7\")) {\n        $count++;\n      }\n   \
    \ }\n  }\n  return $count;\n}\n\necho fizz_buzz(50) . PHP_EOL;\necho fizz_buzz(78)\
    \ . PHP_EOL;\necho fizz_buzz(79) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n1\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm2r9d4iy.php:35\n\
    Stack trace:\n#0 /tmp/tmpm2r9d4iy.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpm2r9d4iy.php\
    \ on line 35\n"
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    if ($n < 7) {\n        return 0;\n    }\n    $count = 0;\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n           \
    \ $str = (string)$i;\n            $str = str_split($str);\n            $str =\
    \ array_count_values($str);\n            if (array_key_exists('7', $str)) {\n\
    \                $count += $str['7'];\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\necho fizz_buzz(50);\necho fizz_buzz(78);\necho fizz_buzz(79);\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "033\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysyw8mvi.php:36\n\
    Stack trace:\n#0 /tmp/tmpysyw8mvi.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpysyw8mvi.php\
    \ on line 36\n"
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tif (strstr($i, '7') && ($i %\
    \ 11 == 0 || $i % 13 == 0)) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy_oncvn5.php:25\n\
    Stack trace:\n#0 /tmp/tmpy_oncvn5.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpy_oncvn5.php\
    \ on line 25\n"
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if (($i % 11 == 0\
    \ || $i % 13 == 0) && strpos((string)$i, '7') !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu8uem0n7.php:24\n\
    Stack trace:\n#0 /tmp/tmpu8uem0n7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpu8uem0n7.php\
    \ on line 24\n"
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $temp = $i;\n      while ($temp != 0) {\n        if ($temp\
    \ % 10 == 7) $count++;\n        $temp = (int)($temp / 10);\n      }\n    }\n \
    \ }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $sum = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n      $str = \"$i\";\n      for ($j = 0; $j < strlen($str); $j++) {\n\
    \        if ($str[$j] == 7) {\n          $sum += 1;\n        }\n      }\n    }\n\
    \  }\n  return $sum;\n}\necho fizz_buzz(50);\necho \"<br>\";\necho fizz_buzz(78);\n\
    echo \"<br>\";\necho fizz_buzz(79);\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 0<br>2<br>3
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $number = 0;\n    $number_str = \"\";\n    $number_str_arr = [];\n    $counter\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n            $number++;\n            $number_str = $number . \"\";\n\
    \            $number_str_arr = str_split($number_str);\n            for ($j =\
    \ 0; $j < count($number_str_arr); $j++) {\n                if ($number_str_arr[$j]\
    \ == \"7\") {\n                    $counter++;\n                }\n          \
    \  }\n        }\n    }\n    return $counter;\n}\necho fizz_buzz(50);\necho \"\
    <br>\";\necho fizz_buzz(78);\necho \"<br>\";\necho fizz_buzz(79);\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br>1<br>1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2p90m8su.php:38\n\
    Stack trace:\n#0 /tmp/tmp2p90m8su.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp2p90m8su.php\
    \ on line 38\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\necho fizz_buzz(50);\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0'
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $str = $i . '';\n      for ($j = 0; $j < strlen($str); $j++)\
    \ {\n        if ($str[$j] == '7') {\n          $count++;\n        }\n      }\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $sevens = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $sevens += substr_count((string)$i, '7');\n    }\n  }\n  return\
    \ $sevens;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n  \
    \  return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $counter = 0;\n    for ($i = 11; $i < $n; $i++) {\n        if ($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n            $digits = str_split($i);\n            foreach\
    \ ($digits as $digit) {\n                if ($digit == 7) {\n                \
    \    $counter++;\n                }\n            }\n        }\n    }\n    return\
    \ $counter;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $start = 1;\n\t$numSevens = 0;\n\twhile($start < $n) {\n\t\tif($start % 11 ==\
    \ 0 || $start % 13 == 0) {\n\t\t\t// echo $start . \"<br>\";\n\t\t\t$numSevens\
    \ += containsSeven($start);\n\t\t}\n\t\t$start++;\n\t}\n\treturn $numSevens;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function containsSeven()\
    \ in /tmp/tmplhmy3nrd.php:15\nStack trace:\n#0 /tmp/tmplhmy3nrd.php(23): fizz_buzz(50)\n\
    #1 /tmp/tmplhmy3nrd.php(27): candidate(50)\n#2 /tmp/tmplhmy3nrd.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmplhmy3nrd.php on line 15\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13\
    \ == 0) {\n\t\t\t$str = (string)$i;\n\t\t\tfor ($j = 0; $j < strlen($str); $j++)\
    \ {\n\t\t\t\tif ($str[$j] == 7) {\n\t\t\t\t\t$count++;\n\t\t\t\t}\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $num = (string)$i;\n      for ($j = 0; $j < strlen($num);\
    \ $j++) {\n        if ($num[$j] == 7) {\n          $count++;\n        }\n    \
    \  }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $times = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $digit = $i;\n            while ($digit > 0)\
    \ {\n                if ($digit % 10 == 7) {\n                    $times++;\n\
    \                }\n                $digit = floor($digit / 10);\n           \
    \ }\n        }\n    }\n    return $times;\n}\nfunction candidate(...$args) {\n\
    \    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    if($n < 8) {\n\t\treturn 0;\n\t}\n\t$count = 0;\n\tfor($i = 8; $i < $n; $i++)\
    \ {\n\t\tif($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count += contains_seven($i);\n\
    \t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function contains_seven()\
    \ in /tmp/tmp7tjqsj2y.php:16\nStack trace:\n#0 /tmp/tmp7tjqsj2y.php(23): fizz_buzz(50)\n\
    #1 /tmp/tmp7tjqsj2y.php(27): candidate(50)\n#2 /tmp/tmp7tjqsj2y.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7tjqsj2y.php on line 16\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $number_of_occurrences = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if\
    \ ($i % 11 == 0 || $i % 13 == 0) {\n            $number_of_occurrences += substr_count((string)$i,\
    \ \"7\");\n        }\n    }\n    return $number_of_occurrences;\n}\n\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  if (!is_numeric($n)) {\n    return 0;\n  }\n  if ($n < 0) {\n    return 0;\n\
    \  }\n  $count = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if (($i % 11 === 0)\
    \ || ($i % 13 === 0)) {\n      $count += substr_count($i, 7);\n    }\n  }\n  return\
    \ $count;\n}\n\necho fizz_buzz(50);\necho fizz_buzz(78);\necho fizz_buzz(79);\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '023'
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $result = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if (is_divisible($i,\
    \ 11) || is_divisible($i, 13)) {\n            $result += count_seven($i);\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_divisible()\
    \ in /tmp/tmpw5m83czm.php:12\nStack trace:\n#0 /tmp/tmpw5m83czm.php(20): fizz_buzz(50)\n\
    #1 /tmp/tmpw5m83czm.php(24): candidate(50)\n#2 /tmp/tmpw5m83czm.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpw5m83czm.php on line 12\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  if ($n % 11 == 0 || $n % 13 == 0) {\n    $arr = str_split($n);\n    $count\
    \ = 0;\n    foreach ($arr as $num) {\n      if ($num == 7) {\n        $count++;\n\
    \      }\n    }\n    return $count;\n  }\n  return 0;\n}\n\nprint fizz_buzz(50)\
    \ . \"\\n\";\nprint fizz_buzz(78) . \"\\n\";\nprint fizz_buzz(79) . \"\\n\";\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n1\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpje6dvi5_.php:32\n\
    Stack trace:\n#0 /tmp/tmpje6dvi5_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpje6dvi5_.php\
    \ on line 32\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += count_seven($i);\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_seven()\
    \ in /tmp/tmpmv1lxpxy.php:13\nStack trace:\n#0 /tmp/tmpmv1lxpxy.php(20): fizz_buzz(50)\n\
    #1 /tmp/tmpmv1lxpxy.php(24): candidate(50)\n#2 /tmp/tmpmv1lxpxy.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpmv1lxpxy.php on line 13\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 11; $i < $n; $i += 2) {\n        if (in_array($i\
    \ % 100, [77, 99])) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx0x_kio7.php:25\n\
    Stack trace:\n#0 /tmp/tmpx0x_kio7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpx0x_kio7.php\
    \ on line 25\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 11; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $num_str = (string)$i;\n            for ($j\
    \ = 0; $j < strlen($num_str); $j++) {\n                if ($num_str[$j] == '7')\
    \ {\n                    $count++;\n                }\n            }\n       \
    \ }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\n\n$result = fizz_buzz(50);\nprint_r($result);\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0'
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if (($i % 11 == 0\
    \ || $i % 13 == 0) && strpos($i, '7') !== false) {\n            $count++;\n  \
    \      }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n   \
    \ return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_geok4i.php:25\n\
    Stack trace:\n#0 /tmp/tmph_geok4i.php(34): test()\n#1 {main}\n  thrown in /tmp/tmph_geok4i.php\
    \ on line 25\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $ctr = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n      $arr = str_split($i);\n      foreach ($arr as $key => $value)\
    \ {\n        if ($value == 7) {\n          $ctr++;\n        }\n      }\n    }\n\
    \  }\n  return $ctr;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $ct = 0;\n    $N = (int) ($n / 11);\n    $remainder = 0;\n    if ($n % 11\
    \ != 0) {\n        $N++;\n        $remainder = 11 - ($n % 11);\n    }\n    for\
    \ ($i = 1; $i <= $N; $i++) {\n        $num = 11 * $i;\n        $num += $remainder;\n\
    \        if ($num > $n) {\n            break;\n        }\n        if ($num % 13\
    \ == 0) {\n            $ct += count_sevens($num);\n        }\n    }\n    return\
    \ $ct;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_sevens()\
    \ in /tmp/tmpkq7l9b8z.php:24\nStack trace:\n#0 /tmp/tmpkq7l9b8z.php(31): fizz_buzz(78)\n\
    #1 /tmp/tmpkq7l9b8z.php(36): candidate(78)\n#2 /tmp/tmpkq7l9b8z.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmpkq7l9b8z.php on line 24\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    if(!$n) {\n\t\treturn null;\n\t}\n\t\n\t$sum = 0;\n\tfor($i = 0; $i < $n; $i++)\
    \ {\n\t\tif($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$sum += substr_count((string)$i,\
    \ '7');\n\t\t}\n\t}\n\t\n\treturn $sum;\n}\n\nvar_dump(fizz_buzz(50));\nvar_dump(fizz_buzz(78));\n\
    var_dump(fizz_buzz(79));\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'int(0)

    int(2)

    int(3)

    '
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $res = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif (($i % 11 == 0) || ($i % 13\
    \ == 0)) {\n\t\t\t$res += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn\
    \ $res;\n}\n\nvar_dump(fizz_buzz(50));\nvar_dump(fizz_buzz(78));\nvar_dump(fizz_buzz(79));\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'int(0)

    int(2)

    int(3)

    '
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $sum = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if (in_array($i % 11, [0, 7])\
    \ || in_array($i % 13, [0, 7])) {\n      $sum += substr_count((string)$i, '7');\n\
    \    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd81qwtsq.php:24\n\
    Stack trace:\n#0 /tmp/tmpd81qwtsq.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpd81qwtsq.php\
    \ on line 24\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13\
    \ == 0) {\n\t\t\t$s = strval($i);\n\t\t\tfor ($j = 0; $j < strlen($s); $j++) {\n\
    \t\t\t\tif ($s[$j] == 7) $count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $c = 0;\n    for ($i = 11; $i < $n; $i += 11) {\n        $c += (substr_count((string)$i,\
    \ '7'));\n    }\n    for ($i = 13; $i < $n; $i += 13) {\n        $c += (substr_count((string)$i,\
    \ '7'));\n    }\n    return $c;\n}\n\necho fizz_buzz(50) . PHP_EOL;\necho fizz_buzz(78)\
    \ . PHP_EOL;\necho fizz_buzz(79) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n2\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppni7y2ef.php:33\n\
    Stack trace:\n#0 /tmp/tmppni7y2ef.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppni7y2ef.php\
    \ on line 33\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            if (strpos($i, '7') !== false) {\n         \
    \       $count++;\n            }\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptff2qwza.php:27\n\
    Stack trace:\n#0 /tmp/tmptff2qwza.php(36): test()\n#1 {main}\n  thrown in /tmp/tmptff2qwza.php\
    \ on line 27\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $total = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $total += substr_count($i, '7');\n        }\n\
    \    }\n    return $total;\n}\n\nprint(fizz_buzz(50) . \"\\n\");\nprint(fizz_buzz(78)\
    \ . \"\\n\");\nprint(fizz_buzz(79) . \"\\n\");\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    2

    3

    '
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $answer = 0;\n    $seven = 7;\n    $eleven = 11;\n    $thirteen = 13;\n \
    \   for ($i = 0; $i < $n; $i++) {\n        if ($i % $eleven == 0 || $i % $thirteen\
    \ == 0) {\n            $number = \"$i\";\n            if (strpos($number, (string)$seven)\
    \ !== false) {\n                $answer++;\n            }\n        }\n    }\n\
    \    return $answer;\n}\n\necho fizz_buzz(50);\nfunction candidate(...$args) {\n\
    \    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxemp6knz.php:32\n\
    Stack trace:\n#0 /tmp/tmpxemp6knz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpxemp6knz.php\
    \ on line 32\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $cnt = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if (($i % 11 == 0)\
    \ || ($i % 13 == 0)) {\n            $str = strval($i);\n            for ($j =\
    \ 0; $j < strlen($str); $j++) {\n                if ($str[$j] == '7') {\n    \
    \                $cnt++;\n                }\n            }\n        }\n    }\n\
    \    return $cnt;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  for ($i = 1; $i < $n; $i++) {\n    if ($i % (11*13) == 0) {\n      echo \"\
    fizzbuzz\" . PHP_EOL;\n    } elseif ($i % 11 == 0) {\n      echo \"fizz\" . PHP_EOL;\n\
    \    } elseif ($i % 13 == 0) {\n      echo \"buzz\" . PHP_EOL;\n    } else {\n\
    \      echo $i . PHP_EOL;\n    }\n  }\n}\nfizz_buzz(50);\nfizz_buzz(78);\nfizz_buzz(79);\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n2\n3\n4\n5\n6\n7\n8\n9\n10\nfizz\n12\nbuzz\n14\n15\n16\n17\n18\n19\n\
    20\n21\nfizz\n23\n24\n25\nbuzz\n27\n28\n29\n30\n31\n32\nfizz\n34\n35\n36\n37\n\
    38\nbuzz\n40\n41\n42\n43\nfizz\n45\n46\n47\n48\n49\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\
    10\nfizz\n12\nbuzz\n14\n15\n16\n17\n18\n19\n20\n21\nfizz\n23\n24\n25\nbuzz\n27\n\
    28\n29\n30\n31\n32\nfizz\n34\n35\n36\n37\n38\nbuzz\n40\n41\n42\n43\nfizz\n45\n\
    46\n47\n48\n49\n50\n51\nbuzz\n53\n54\nfizz\n56\n57\n58\n59\n60\n61\n62\n63\n64\n\
    buzz\nfizz\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\nfizz\n1\n2\n3\n4\n5\n6\n7\n\
    8\n9\n10\nfizz\n12\nbuzz\n14\n15\n16\n17\n18\n19\n20\n21\nfizz\n23\n24\n25\nbuzz\n\
    27\n28\n29\n30\n31\n32\nfizz\n34\n35\n36\n37\n38\nbuzz\n40\n41\n42\n43\nfizz\n\
    45\n46\n47\n48\n49\n50\n51\nbuzz\n53\n54\nfizz\n56\n57\n58\n59\n60\n61\n62\n63\n\
    64\nbuzz\nfizz\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\nfizz\nbuzz\n1\n2\n3\n\
    4\n5\n6\n7\n8\n9\n10\nfizz\n12\nbuzz\n14\n15\n16\n17\n18\n19\n20\n21\nfizz\n23\n\
    24\n25\nbuzz\n27\n28\n29\n30\n31\n32\nfizz\n34\n35\n36\n37\n38\nbuzz\n40\n41\n\
    42\n43\nfizz\n45\n46\n47\n48\n49\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp1j2aahw3.php:31\nStack trace:\n#0 /tmp/tmp1j2aahw3.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmp1j2aahw3.php on line 31\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  // your code here\n  $str = '';\n  for ($i = 1; $i < $n; $i++) {\n    if ($i\
    \ % 11 == 0 || $i % 13 == 0) $str .= (string)$i;\n  }\n  return substr_count($str,\
    \ '7');\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: -1
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $cnt = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $num = $i;\n            while ($num > 0) {\n  \
    \              if ($num % 10 == 7) $cnt++;\n                $num /= 10;\n    \
    \        }\n        }\n    }\n    return $cnt;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 1.1 to int loses precision in /tmp/tmp05zht585.php
    on line 15


    Deprecated: Implicit conversion from float 0.11000000000000001 to int loses precision
    in /tmp/tmp05zht585.php on line 15


    Deprecated: Implicit conversion from float 0.011000000000000001 to int loses precision
    in /tmp/tmp05zht585.php on line 15


    Deprecated: Implicit conversion from float 0.0011 to int loses precision in /tmp/tmp05zht585.php
    on line 15


    Deprecated: Implicit conversion from float 0.00011 to int loses precision in /tmp/tmp05zht585.php
    on line 15


    Deprecated: Implicit conversion from float 1.1E-5 to int loses precision in /tmp/tmp05zht585.php
    on line 15


    Deprecated: Implicit conversion from float 1.1E-6 to int loses precision in /tmp/tmp05zht585.php
    on line 15


    Deprecated: Implicit conversion from float 1.1E-7 to int loses precision in /tmp/tmp05zht585.php
    on line 15


    Deprecated: Implicit conversion from float 1.1000000000000001E-8 to int loses
    precision in /tmp/tmp05zht585.php on line 15


    Deprecated: Implicit conversion from float 1.1000000000000001E-9 to int loses
    precision in /tmp/tmp05zht585.php on line 15


    Deprecated: Implicit conversion from float 1.1000000000000001E-10 to int loses
    precision in /tmp/tmp05zht585.php on line 15


    Deprecated: Implicit conversion from float 1.1E-11 to int loses precision in /tmp/tmp05zht585.php
    on line 15


    Deprecated: Implicit conversion from float 1.1000000000000002E-12 to int loses
    precision in /tmp/tmp05zht585.php on line 15


    Deprecated: Implicit conversion from float 1.1000000000000001E-13 to int loses
    precision in /tmp/tmp05zht585.php on line 15


    Deprecated: Implicit conversion from float 1.1E-14 to int loses precision in /tmp/tmp05zht585.php
    on line 15


    Deprecated: Implicit conversion from float 1.1000000000000001E-15 to int loses
    precision in /tmp/tmp05zht585.php on line 15


    Deprecated: Implicit conversion from float 1.1000000000000001E-16 to int loses
    precision in /tmp/tmp05zht585.php on line 15


    Deprecated: Implicit conversion from float 1.100000000000'
  timestamp: 1660028951
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    if (!is_int($n)) {\n\t\treturn false;\n\t}\n\tif ($n < 11) {\n\t\treturn 0;\n\t\
    }\n\t$value = 0;\n\t$tmp = 11;\n\t$seven_count = 1;\n\twhile ($tmp < $n) {\n\t\
    \t$tmp = $tmp * 10 + 7;\n\t\t$seven_count++;\n\t}\n\tfor ($i = 0; $i < $seven_count;\
    \ $i++) {\n\t\t$value += intval($n / (7 * (10 ** $i))) - intval($n / (70 * (10\
    \ ** $i)));\n\t}\n\treturn $value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsmbkqq0w.php:34\n\
    Stack trace:\n#0 /tmp/tmpsmbkqq0w.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpsmbkqq0w.php\
    \ on line 34\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    // Your code here\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8jhwg7v.php:18\n\
    Stack trace:\n#0 /tmp/tmpv8jhwg7v.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpv8jhwg7v.php\
    \ on line 18\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $return = 0;\n    for ($i = 7; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            if (strstr($i, '7')) {\n                $return++;\n\
    \            }\n        }\n    }\n    return $return;\n}\n\necho fizz_buzz(50);\n\
    echo \"\\n\";\necho fizz_buzz(78);\necho \"\\n\";\necho fizz_buzz(79);\necho \"\
    \\n\";\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n1\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyur6xcdo.php:33\n\
    Stack trace:\n#0 /tmp/tmpyur6xcdo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpyur6xcdo.php\
    \ on line 33\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $c = 0;\n    $digits = [];\n    while ($n > 0) {\n        array_push($digits,\
    \ $n % 10);\n        $n = floor($n / 10);\n    }\n    for ($i = 0; $i < count($digits);\
    \ $i++) {\n        if ($digits[$i] == 7) {\n            $c++;\n        }\n   \
    \ }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt3qut8vw.php:30\n\
    Stack trace:\n#0 /tmp/tmpt3qut8vw.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt3qut8vw.php\
    \ on line 30\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $i = 1;\n\t$arr = [];\n\twhile($i < $n) {\n\t\tif($i % 11 == 0 || $i % 13 == 0)\
    \ {\n\t\t\t$arr[] = $i;\n\t\t}\n\t\t$i++;\n\t}\n\t$count = 0;\n\tforeach($arr\
    \ as $num) {\n\t\t$numStr = (string)$num;\n\t\tfor($i = 0; $i < strlen($numStr);\
    \ $i++) {\n\t\t\tif($numStr[$i] == 7) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn $count;\n}\necho \"fizz_buzz(50): \" . fizz_buzz(50) . \"\\n\";\n\
    echo \"fizz_buzz(78): \" . fizz_buzz(78) . \"\\n\";\necho \"fizz_buzz(79): \"\
    \ . fizz_buzz(79) . \"\\n\";\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'fizz_buzz(50): 0

    fizz_buzz(78): 2

    fizz_buzz(79): 3

    '
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $counter = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n            if (strpos($i, '7') !== false) {\n       \
    \         $counter++;\n            }\n        }\n    }\n    return $counter;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm8qutmqc.php:27\n\
    Stack trace:\n#0 /tmp/tmpm8qutmqc.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpm8qutmqc.php\
    \ on line 27\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    if ($n <= 0) {\n\t\treturn 0;\n\t}\n\n\tif ($n <= 6) {\n\t\treturn 0;\n\t}\n\n\
    \t$count = 0;\n\tif ($n % 13 == 0) {\n\t\tif ($n > 13) {\n\t\t\t$count += fizz_buzz($n\
    \ - 13);\n\t\t}\n\t\t$count += intval(substr($n, -1, 1) == 7);\n\t} elseif ($n\
    \ % 11 == 0) {\n\t\tif ($n > 11) {\n\t\t\t$count += fizz_buzz($n - 11);\n\t\t\
    }\n\t\t$count += intval(substr($n, -1, 1) == 7);\n\t} else {\n\t\t$count += fizz_buzz($n\
    \ - 1);\n\t}\n\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_j2s2f6c.php:42\n\
    Stack trace:\n#0 /tmp/tmp_j2s2f6c.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp_j2s2f6c.php\
    \ on line 42\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    $arr = [];\n    for ($i = 1; $i < $n; $i++) {\n        if\
    \ ($i % 11 == 0 || $i % 13 == 0) {\n            $arr[] = $i;\n        }\n    }\n\
    \    $str = implode($arr);\n    for ($i = 0; $i < strlen($str); $i++) {\n    \
    \    if ($str[$i] == 7) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $counter = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if (\n      (($i % 11 ==\
    \ 0) || ($i % 13 == 0)) &&\n      strpos($i, \"7\") !== false\n    ) {\n     \
    \ $counter++;\n    }\n  }\n  return $counter;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30ev_ec4.php:28\n\
    Stack trace:\n#0 /tmp/tmp30ev_ec4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp30ev_ec4.php\
    \ on line 28\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $fizz = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $fizz = $fizz + substr_count($i, 7);\n        }\n\
    \    }\n    return $fizz;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    //check if $n is a positive integer\n    if (!filter_var($n, FILTER_VALIDATE_INT,\
    \ array(\"options\" => array(\"min_range\"=>1)))) {\n        return 'INVALID';\n\
    \    }\n    $divisible_by_11 = $divisible_by_13 = 0;\n    $divisible_by_11_and_13\
    \ = 0;\n    $sevens = $n - 1;\n    while ($sevens >= 0) {\n        if ($sevens\
    \ % 11 == 0) {\n            $divisible_by_11++;\n        }\n        if ($sevens\
    \ % 13 == 0) {\n            $divisible_by_13++;\n        }\n        if ($sevens\
    \ % 11 == 0 && $sevens % 13 == 0) {\n            $divisible_by_11_and_13++;\n\
    \        }\n        $sevens--;\n    }\n    $sum = $divisible_by_11 + $divisible_by_13\
    \ - $divisible_by_11_and_13;\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvwadswk7.php:37\n\
    Stack trace:\n#0 /tmp/tmpvwadswk7.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpvwadswk7.php\
    \ on line 37\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tif (strpos($i, \"7\") !== false\
    \ && ($i % 11 == 0 || $i % 13 == 0)) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n\nfizz_buzz(50);\nfizz_buzz(78);\nfizz_buzz(79);\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplbvt2oo8.php:28\n\
    Stack trace:\n#0 /tmp/tmplbvt2oo8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplbvt2oo8.php\
    \ on line 28\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\n$n = 50;\necho fizz_buzz($n);\n\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0'
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $counter = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n            for ($j = 0; $j < strlen($i); $j++) {\n  \
    \              if ($i[$j] == 7) {\n                    $counter++;\n         \
    \       }\n            }\n        }\n    }\n    return $counter;\n}\n$n = 50;\n\
    fizz_buzz($n);\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: Trying to access array offset on value of type int in /tmp/tmp0fpg076t.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmp0fpg076t.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmp0fpg076t.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmp0fpg076t.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmp0fpg076t.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmp0fpg076t.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmp0fpg076t.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmp0fpg076t.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmp0fpg076t.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmp0fpg076t.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmp0fpg076t.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmp0fpg076t.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmp0fpg076t.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmp0fpg076t.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmp0fpg076t.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmp0fpg076t.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmp0fpg076t.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmp0fpg076t.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmp0fpg076t.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmp0fpg076t.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmp0fpg076t.php
    on line 14


    Warning: Trying to access array'
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $result = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $result += substr_count((string)$i, '7');\n    }\n  }\n  return\
    \ $result;\n}\necho fizz_buzz(50);\necho \"\\n\";\necho fizz_buzz(78);\necho \"\
    \\n\";\necho fizz_buzz(79);\necho \"\\n\";\nfunction candidate(...$args) {\n \
    \   return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    2

    3

    '
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif (preg_match('/7/', $i) &&\
    \ ($i % 11 == 0 || $i % 13 == 0)) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n\
    }\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr31ufaov.php:24\n\
    Stack trace:\n#0 /tmp/tmpr31ufaov.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpr31ufaov.php\
    \ on line 24\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $total = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $total += substr_count($i, '7');\n        }\n\
    \    }\n    return $total;\n}\n\necho fizz_buzz(50) . \"\\n\";\necho fizz_buzz(78)\
    \ . \"\\n\";\necho fizz_buzz(79) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    2

    3

    '
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 7; $i < $n; $i++) {\n        if (($i % 11 ===\
    \ 0) || ($i % 13 === 0)) {\n            $count += (strpos(strval($i), '7') ===\
    \ false) ? 0 : 1;\n        }\n    }\n    return $count;\n}\n\necho fizz_buzz(50)\
    \ . PHP_EOL;\necho fizz_buzz(78) . PHP_EOL;\necho fizz_buzz(79) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n1\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsvq2voh2.php:28\n\
    Stack trace:\n#0 /tmp/tmpsvq2voh2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpsvq2voh2.php\
    \ on line 28\n"
  timestamp: 1660028946
- exit_code: -1
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $res = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if (($i % 11 == 0)\
    \ || ($i % 13 == 0)) {\n            while ($i > 0) {\n                if ($i %\
    \ 10 == 7) {\n                    $res++;\n                }\n               \
    \ $i = intval($i / 10);\n            }\n        }\n    }\n    return $res;\n}\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028951
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\necho fizz_buzz(79) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '3

    '
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count($i, '7');\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \   if(is_int($n) && $n >= 0){\n        if($n < 11){\n            return 0;\n\
    \        }elseif($n < 13){\n            return 1;\n        }else{\n          \
    \  $n2 = ($n - 11) / 2;\n            $n3 = ($n - 13) / 2;\n            return\
    \ $n2 + $n3 + 1;\n        }\n   }else{\n       return 'Input must be positive\
    \ integer.';\n   }\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr7ezka15.php:30\n\
    Stack trace:\n#0 /tmp/tmpr7ezka15.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpr7ezka15.php\
    \ on line 30\n"
  timestamp: 1660028946
- exit_code: -1
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $result = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if (in_array($i\
    \ % 11, [0, 7]) || in_array($i % 13, [0, 7])) {\n            while ($i > 0) {\n\
    \                if ($i % 10 == 7) {\n                    $result++;\n       \
    \         }\n                $i = (int)($i / 10);\n            }\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028951
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $fizz=0;\n  for ($i=0; $i < $n; $i++) {\n    if ($i%11==0 || $i%13==0) {\n\
    \      if(strpos((string)$i, '7')!==false){\n        $fizz++;\n      }\n    }\n\
    \  }\n  return $fizz;\n}\necho fizz_buzz(50).\"\\n\";\necho fizz_buzz(78).\"\\\
    n\";\necho fizz_buzz(79).\"\\n\";\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n1\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0onqjrfm.php:29\n\
    Stack trace:\n#0 /tmp/tmp0onqjrfm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp0onqjrfm.php\
    \ on line 29\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $result = 0;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tif (is_multiple($i, 11) ||\
    \ is_multiple($i, 13)) {\n\t\t\t$result += count_seven($i);\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_multiple()\
    \ in /tmp/tmpvfomaoyz.php:12\nStack trace:\n#0 /tmp/tmpvfomaoyz.php(19): fizz_buzz(50)\n\
    #1 /tmp/tmpvfomaoyz.php(23): candidate(50)\n#2 /tmp/tmpvfomaoyz.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpvfomaoyz.php on line 12\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $rv = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 ==\
    \ 0) {\n\t\t\tif (strpos($i, '7') !== false) {\n\t\t\t\t$rv++;\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn $rv;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmploesymuj.php:26\n\
    Stack trace:\n#0 /tmp/tmploesymuj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmploesymuj.php\
    \ on line 26\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    // your code here\n\treturn 0;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkrbey5k0.php:20\n\
    Stack trace:\n#0 /tmp/tmpkrbey5k0.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkrbey5k0.php\
    \ on line 20\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $sum = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $num = strval($i);\n            $sum += substr_count($num,\
    \ '7');\n        }\n    }\n    return $sum;\n}\n\necho fizz_buzz(50);\necho \"\
    \\n\";\necho fizz_buzz(78);\necho \"\\n\";\necho fizz_buzz(79);\necho \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    2

    3

    '
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $result = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $result += substr_count((string)$i, '7');\n    }\n  }\n  return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $arr = array();\n    $i = 0;\n    while ($i < $n) {\n        if ($i % 11\
    \ == 0) {\n            array_push($arr, $i);\n        } elseif ($i % 13 == 0)\
    \ {\n            array_push($arr, $i);\n        }\n        $i++;\n    }\n    $sum\
    \ = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        $str = (string)$arr[$i];\n\
    \        for ($j = 0; $j < strlen($str); $j++) {\n            if ($str[$j] ==\
    \ '7') {\n                $sum++;\n            }\n        }\n    }\n    return\
    \ $sum;\n}\n\necho fizz_buzz(50);\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0'
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if (strpos((string)$i,\
    \ '7') !== false && ($i % 11 == 0 || $i % 13 == 0)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\necho fizz_buzz(50) . \"\\n\";\necho\
    \ fizz_buzz(78) . \"\\n\";\necho fizz_buzz(79) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n1\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp45dkachl.php:27\n\
    Stack trace:\n#0 /tmp/tmp45dkachl.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp45dkachl.php\
    \ on line 27\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $i_str = (string)$i;\n      for ($j = 0; $j < strlen($i_str);\
    \ $j++) {\n        if ($i_str[$j] == 7) {\n          $count++;\n        }\n  \
    \    }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n  \
    \  return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: -1
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $number = $i;\n            while ($number !=\
    \ 0) {\n                $digit = $number % 10;\n                if ($digit ==\
    \ 7) {\n                    $count++;\n                }\n                $number\
    \ = $number / 10;\n            }\n        }\n    }\n    return $count;\n}\n\n\
    echo fizz_buzz(50);\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 1.1 to int loses precision in /tmp/tmpxxrpn6u9.php
    on line 15


    Deprecated: Implicit conversion from float 0.11000000000000001 to int loses precision
    in /tmp/tmpxxrpn6u9.php on line 15


    Deprecated: Implicit conversion from float 0.011000000000000001 to int loses precision
    in /tmp/tmpxxrpn6u9.php on line 15


    Deprecated: Implicit conversion from float 0.0011 to int loses precision in /tmp/tmpxxrpn6u9.php
    on line 15


    Deprecated: Implicit conversion from float 0.00011 to int loses precision in /tmp/tmpxxrpn6u9.php
    on line 15


    Deprecated: Implicit conversion from float 1.1E-5 to int loses precision in /tmp/tmpxxrpn6u9.php
    on line 15


    Deprecated: Implicit conversion from float 1.1E-6 to int loses precision in /tmp/tmpxxrpn6u9.php
    on line 15


    Deprecated: Implicit conversion from float 1.1E-7 to int loses precision in /tmp/tmpxxrpn6u9.php
    on line 15


    Deprecated: Implicit conversion from float 1.1000000000000001E-8 to int loses
    precision in /tmp/tmpxxrpn6u9.php on line 15


    Deprecated: Implicit conversion from float 1.1000000000000001E-9 to int loses
    precision in /tmp/tmpxxrpn6u9.php on line 15


    Deprecated: Implicit conversion from float 1.1000000000000001E-10 to int loses
    precision in /tmp/tmpxxrpn6u9.php on line 15


    Deprecated: Implicit conversion from float 1.1E-11 to int loses precision in /tmp/tmpxxrpn6u9.php
    on line 15


    Deprecated: Implicit conversion from float 1.1000000000000002E-12 to int loses
    precision in /tmp/tmpxxrpn6u9.php on line 15


    Deprecated: Implicit conversion from float 1.1000000000000001E-13 to int loses
    precision in /tmp/tmpxxrpn6u9.php on line 15


    Deprecated: Implicit conversion from float 1.1E-14 to int loses precision in /tmp/tmpxxrpn6u9.php
    on line 15


    Deprecated: Implicit conversion from float 1.1000000000000001E-15 to int loses
    precision in /tmp/tmpxxrpn6u9.php on line 15


    Deprecated: Implicit conversion from float 1.1000000000000001E-16 to int loses
    precision in /tmp/tmpxxrpn6u9.php on line 15


    Deprecated: Implicit conversion from float 1.100000000000'
  timestamp: 1660028951
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13\
    \ == 0) {\n\t\t\t$num = $i;\n\t\t\twhile ($num != 0) {\n\t\t\t\tif ($num % 10\
    \ == 7) {\n\t\t\t\t\t$count++;\n\t\t\t\t}\n\t\t\t\t$num = floor($num / 10);\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n\necho fizz_buzz(50) . PHP_EOL;\necho\
    \ fizz_buzz(78) . PHP_EOL;\necho fizz_buzz(79) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    2

    3

    '
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if (($i % 11 == 0\
    \ || $i % 13 == 0) && contains7($i)) {\n            $count++;\n        }\n   \
    \ }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function contains7() in\
    \ /tmp/tmpnd1b8dxr.php:12\nStack trace:\n#0 /tmp/tmpnd1b8dxr.php(20): fizz_buzz(50)\n\
    #1 /tmp/tmpnd1b8dxr.php(24): candidate(50)\n#2 /tmp/tmpnd1b8dxr.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpnd1b8dxr.php on line 12\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count($i, 7);\n        }\n\
    \    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $sum = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n      $sum += substr_count(strval($i), '7');\n    }\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $i = $j = $k = 0;\n    $count = 0;\n    for ($i; $i < $n; $i++) {\n     \
    \   if ($i % 11 == 0 || $i % 13 == 0) {\n            for ($j = 0; $j < strlen($i);\
    \ $j++) {\n                if (substr($i, $j, 1) == 7) {\n                   \
    \ $count++;\n                }\n            }\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13\
    \ == 0) {\n\t\t\t$count += count_digit($i, 7);\n\t\t}\n\t}\n\treturn $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_digit()\
    \ in /tmp/tmpiadyt4fs.php:13\nStack trace:\n#0 /tmp/tmpiadyt4fs.php(20): fizz_buzz(50)\n\
    #1 /tmp/tmpiadyt4fs.php(24): candidate(50)\n#2 /tmp/tmpiadyt4fs.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpiadyt4fs.php on line 13\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  if (!is_int($n)) {\n    return \"Please input an integer!\";\n  }\n  if ($n\
    \ <= 0) {\n    return \"Please input a positive integer!\";\n  }\n  $count = 0;\n\
    \  for ($i = 1; $i < $n; $i++) {\n    if (($i % 11 == 0) || ($i % 13 == 0)) {\n\
    \      $c = $i;\n      while ($c > 0) {\n        if ($c % 10 == 7) {\n       \
    \   $count++;\n        }\n        $c = floor($c / 10);\n      }\n    }\n  }\n\
    \  return $count;\n}\n\necho fizz_buzz(50) . \"<br />\";\necho fizz_buzz(78) .\
    \ \"<br />\";\necho fizz_buzz(79) . \"<br />\";\necho fizz_buzz(100) . \"<br />\"\
    ;\necho fizz_buzz(\"a\") . \"<br />\";\necho fizz_buzz(0) . \"<br />\";\necho\
    \ fizz_buzz(-1) . \"<br />\";\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 0<br />2<br />3<br />3<br />Please input an integer!<br />Please input a
    positive integer!<br />Please input a positive integer!<br />
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n  \
    \  return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $counter = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if (($i % 11 === 0) ||\
    \ ($i % 13 === 0)) {\n      $arr = str_split($i);\n      for ($k = 0; $k < count($arr);\
    \ $k++) {\n        if ($arr[$k] === '7') {\n          $counter++;\n        }\n\
    \      }\n    }\n  }\n  return $counter;\n}\n\nprint fizz_buzz(50);\nprint fizz_buzz(78);\n\
    print fizz_buzz(79);\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '023'
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    // Write your code here\n    // To print results to the standard output you\
    \ can use print\n    // Example: print \"Hello world!\";\n    $count=0;\n    for($i=0;$i<$n;$i++){\n\
    \        if($i%11==0 || $i%13==0){\n            $temp = $i;\n            while($temp){\n\
    \                if($temp%10==7){\n                    $count++;\n           \
    \     }\n                $temp = (int)($temp/10);\n            }\n        }\n\
    \    }\n    print $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgdskg49r.php:33\n\
    Stack trace:\n#0 /tmp/tmpgdskg49r.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpgdskg49r.php\
    \ on line 33\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $string = strval($i);\n            for ($j =\
    \ 0; $j < strlen($string); $j++) {\n                if ($string[$j] == '7') {\n\
    \                    $count++;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\necho fizz_buzz(50) . \"\\n\";\necho fizz_buzz(78)\
    \ . \"\\n\";\necho fizz_buzz(79) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    2

    3

    '
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $str = strval($i);\n            for ($j = 0;\
    \ $j < strlen($str); $j++) {\n                if ($str[$j] == '7') {\n       \
    \             $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $result = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $num_str = (string)$i;\n            for ($j\
    \ = 0; $j < strlen($num_str); $j++) {\n                if ($num_str[$j] == '7')\
    \ {\n                    $result++;\n                }\n            }\n      \
    \  }\n    }\n    return $result;\n}\necho fizz_buzz(50);\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0'
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  // Your code here\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrtq1yaw.php:17\n\
    Stack trace:\n#0 /tmp/tmpwrtq1yaw.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwrtq1yaw.php\
    \ on line 17\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    if ($n < 1) {\n        return -1;\n    }\n    $count = 0;\n    for ($i =\
    \ 1; $i < $n; $i++) {\n        if (($i % 11 === 0) || ($i % 13 === 0)) {\n   \
    \         $count += substr_count($i, '7');\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $r = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if (($i % 11 == 0 ||\
    \ $i % 13 == 0) && (strpos((string)$i, '7') !== false)) {\n            $r++;\n\
    \        }\n    }\n    return $r;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_nuwhud.php:25\n\
    Stack trace:\n#0 /tmp/tmpu_nuwhud.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpu_nuwhud.php\
    \ on line 25\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $numbers = range(1, $n);\n\t$fizzBuzzNumbers = array_filter($numbers, function($number)\
    \ {\n\t\treturn ($number % 11 == 0 || $number % 13 == 0);\n\t});\n\t$fizzBuzzNumbers\
    \ = implode('', $fizzBuzzNumbers);\n\t$countOfSevens = substr_count($fizzBuzzNumbers,\
    \ '7');\n\treturn $countOfSevens;\n}\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgze6hqb6.php:24\n\
    Stack trace:\n#0 /tmp/tmpgze6hqb6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpgze6hqb6.php\
    \ on line 24\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $i = 0;\n  $count = 0;\n  $buzz = false;\n  $fizz = false;\n  while ($i < $n)\
    \ {\n    if ($i % 11 == 0 || $i % 13 == 0) {\n      $buzz = substr_count($i, '7');\n\
    \      $fizz = substr_count($i, '7');\n      $count += $buzz + $fizz;\n    }\n\
    \    $i++;\n  }\n  return $count;\n}\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8u60m3oy.php:30\n\
    Stack trace:\n#0 /tmp/tmp8u60m3oy.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8u60m3oy.php\
    \ on line 30\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 7; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, \"7\");\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if (($i % 11 == 0)\
    \ || ($i % 13 == 0)) {\n            $str = strval($i);\n            $sum += substr_count($str,\
    \ '7');\n        }\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n\
    \    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n  \
    \  return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $sum = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $check_digit = $i;\n            while ($check_digit\
    \ != 0) {\n                if ($check_digit % 10 == 7) {\n                   \
    \ $sum++;\n                }\n                $check_digit = intval($check_digit\
    \ / 10);\n            }\n        }\n    }\n    return $sum;\n}\n\necho fizz_buzz(50);\n\
    echo fizz_buzz(78);\necho fizz_buzz(79);\nfunction candidate(...$args) {\n   \
    \ return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '023'
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    if (!is_int($n)) {\n\t\treturn false;\n\t}\n\t$count = 0;\n\tfor ($i = 0; $i <\
    \ $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count += substr_count((string)$i,\
    \ '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $count += substr_count(strval($i), '7');\n    }\n  }\n  return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: -1
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $result = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            while ($i != 0) {\n                if ($i %\
    \ 10 == 7) $result++;\n                $i /= 10;\n            }\n        }\n \
    \   }\n    return $result;\n}\n\necho fizz_buzz(78);\necho \"\\n\";\necho fizz_buzz(79);\n\
    echo \"\\n\";\necho fizz_buzz(50);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 1.1 to int loses precision in /tmp/tmpzj53dof0.php
    on line 14


    Deprecated: Implicit conversion from float 0.11000000000000001 to int loses precision
    in /tmp/tmpzj53dof0.php on line 14


    Deprecated: Implicit conversion from float 0.011000000000000001 to int loses precision
    in /tmp/tmpzj53dof0.php on line 14


    Deprecated: Implicit conversion from float 0.0011 to int loses precision in /tmp/tmpzj53dof0.php
    on line 14


    Deprecated: Implicit conversion from float 0.00011 to int loses precision in /tmp/tmpzj53dof0.php
    on line 14


    Deprecated: Implicit conversion from float 1.1E-5 to int loses precision in /tmp/tmpzj53dof0.php
    on line 14


    Deprecated: Implicit conversion from float 1.1E-6 to int loses precision in /tmp/tmpzj53dof0.php
    on line 14


    Deprecated: Implicit conversion from float 1.1E-7 to int loses precision in /tmp/tmpzj53dof0.php
    on line 14


    Deprecated: Implicit conversion from float 1.1000000000000001E-8 to int loses
    precision in /tmp/tmpzj53dof0.php on line 14


    Deprecated: Implicit conversion from float 1.1000000000000001E-9 to int loses
    precision in /tmp/tmpzj53dof0.php on line 14


    Deprecated: Implicit conversion from float 1.1000000000000001E-10 to int loses
    precision in /tmp/tmpzj53dof0.php on line 14


    Deprecated: Implicit conversion from float 1.1E-11 to int loses precision in /tmp/tmpzj53dof0.php
    on line 14


    Deprecated: Implicit conversion from float 1.1000000000000002E-12 to int loses
    precision in /tmp/tmpzj53dof0.php on line 14


    Deprecated: Implicit conversion from float 1.1000000000000001E-13 to int loses
    precision in /tmp/tmpzj53dof0.php on line 14


    Deprecated: Implicit conversion from float 1.1E-14 to int loses precision in /tmp/tmpzj53dof0.php
    on line 14


    Deprecated: Implicit conversion from float 1.1000000000000001E-15 to int loses
    precision in /tmp/tmpzj53dof0.php on line 14


    Deprecated: Implicit conversion from float 1.1000000000000001E-16 to int loses
    precision in /tmp/tmpzj53dof0.php on line 14


    Deprecated: Implicit conversion from float 1.100000000000'
  timestamp: 1660028951
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $num_7s = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $num_7s += substr_count($i, 7);\n        }\n\
    \    }\n    return $num_7s;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n  \
    \  return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if (($i % 11 == 0\
    \ || $i % 13 == 0) && substr_count($i, '7') > 0) {\n            $count += substr_count($i,\
    \ '7');\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $num_sevens = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n      $i_str = strval($i);\n      for ($j = 0; $j < strlen($i_str);\
    \ $j++) {\n        if ($i_str[$j] == '7') {\n          $num_sevens++;\n      \
    \  }\n      }\n    }\n  }\n  return $num_sevens;\n}\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $digits = str_split($n);\n\t$res = 0;\n\t$mod = 11 * 13;\n\tforeach ($digits as\
    \ $digit) {\n\t\tif ($digit == 7) {\n\t\t\t$res++;\n\t\t}\n\t}\n\treturn $res;\n\
    }\n\nvar_dump(fizz_buzz(50));\nvar_dump(fizz_buzz(78));\nvar_dump(fizz_buzz(79));\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "int(0)\nint(1)\nint(1)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpniuf7xfg.php:30\nStack trace:\n#0 /tmp/tmpniuf7xfg.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmpniuf7xfg.php on line 30\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $sum = 0;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tif (divisible($i, 11) || divisible($i,\
    \ 13)) {\n\t\t\t$numbers = explode(\"\", $i);\n\t\t\tforeach ($numbers as $number)\
    \ {\n\t\t\t\tif ($number == 7) {\n\t\t\t\t\t$sum++;\n\t\t\t\t}\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn $sum;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function divisible() in\
    \ /tmp/tmp_h85q0hb.php:12\nStack trace:\n#0 /tmp/tmp_h85q0hb.php(25): fizz_buzz(50)\n\
    #1 /tmp/tmp_h85q0hb.php(29): candidate(50)\n#2 /tmp/tmp_h85q0hb.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_h85q0hb.php on line 12\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $count += substr_count($i, '7');\n    }\n  }\n  return $count;\n\
    }\n\necho fizz_buzz(50) . \"\\n\";\necho fizz_buzz(78) . \"\\n\";\necho fizz_buzz(79)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    2

    3

    '
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $divisible = array('11', '13');\n    $count = 0;\n    for ($i = 1; $i < $n;\
    \ $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n            $count +=\
    \ substr_count((string)$i, '7');\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    // Write your code here\n    // To print results to the standard output you\
    \ can use print\n    // Example: print \"Hello world!\";\n    //fizzbuzz(50)\n\
    \    $arr =array();\n    $num = 0;\n    for($i=0;$i<$n;$i++){\n        $arr[$i]\
    \ = $i;\n    }\n    foreach($arr as $val){\n        if($val%11==0 || $val%13==0){\n\
    \            $int = (string)$val;\n            $len = strlen($int);\n        \
    \    for($j=0;$j<$len;$j++){\n                if($int[$j]=='7'){\n           \
    \         $num++;\n                }\n            }\n        }\n    }\n    print\
    \ $num;\n}\n\nfizz_buzz(50);\nfizz_buzz(78);\nfizz_buzz(79);\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0230\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz4badcit.php:42\n\
    Stack trace:\n#0 /tmp/tmpz4badcit.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpz4badcit.php\
    \ on line 42\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    //your code here\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0imt71pt.php:18\n\
    Stack trace:\n#0 /tmp/tmp0imt71pt.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp0imt71pt.php\
    \ on line 18\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $counter = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i\
    \ % 13 == 0) {\n      $counter += substr_count($i, '7');\n    }\n  }\n  return\
    \ $counter;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $cnt = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $cnt += substr_count((string)$i, '7');\n      \
    \  }\n    }\n    return $cnt;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            if (substr_count($i, 7) != 0) {\n          \
    \      $count++;\n            }\n        }\n    }\n    return $count;\n}\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoalb5xmx.php:26\n\
    Stack trace:\n#0 /tmp/tmpoalb5xmx.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpoalb5xmx.php\
    \ on line 26\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      if (strpos($i, '7') !== false) {\n        $count++;\n    \
    \  }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplbsl_5li.php:27\n\
    Stack trace:\n#0 /tmp/tmplbsl_5li.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplbsl_5li.php\
    \ on line 27\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count($i, 7);\n        }\n\
    \    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $counter = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if (($i % 11 ==\
    \ 0 || $i % 13 == 0) && strstr($i, '7')) {\n            $counter++;\n        }\n\
    \    }\n    return $counter;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmv_ktf1q.php:25\n\
    Stack trace:\n#0 /tmp/tmpmv_ktf1q.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmv_ktf1q.php\
    \ on line 25\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    // \u4F55\u500B\u3042\u308B\u304B\u30AB\u30A6\u30F3\u30C8\u3059\u308B\u3084\
    \u3064\n    $count = 0;\n    // 1\u301C$n\u307E\u3067\u7E70\u308A\u8FD4\u3059\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        // \u5272\u308A\u5207\u308C\u308B\
    \u6570\u5B57\u3092\u8ABF\u3079\u308B\n        if ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n            // \u6570\u5B57\u304B\u3089\u6587\u5B57\u5217\u306B\u5909\u63DB\
    \n            $numStr = (string)$i;\n            // \u6587\u5B57\u5217\u306E\u4E2D\
    \u306B7\u304C\u3044\u304F\u3064\u3042\u308B\u304B\u8ABF\u3079\u308B\n        \
    \    for ($j = 0; $j < strlen($numStr); $j++) {\n                if ($numStr[$j]\
    \ == 7) {\n                    $count++;\n                }\n            }\n \
    \       }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprh_x3k_x.php:34\n\
    Stack trace:\n#0 /tmp/tmprh_x3k_x.php(43): test()\n#1 {main}\n  thrown in /tmp/tmprh_x3k_x.php\
    \ on line 34\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if (($i % 11 ===\
    \ 0 || $i % 13 === 0) && strpos($i, '7') !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2282oib.php:25\n\
    Stack trace:\n#0 /tmp/tmpv2282oib.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpv2282oib.php\
    \ on line 25\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 11; $i < $n; $i++) {\n    if (strpos((string)$i, '7')\
    \ && ($i % 11 == 0 || $i % 13 == 0)) {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2w2m8il.php:25\n\
    Stack trace:\n#0 /tmp/tmpv2w2m8il.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpv2w2m8il.php\
    \ on line 25\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $out = 0;\n  for ($i = 7; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n      $i = strval($i);\n      for ($j = 0; $j < strlen($i); $j++) {\n\
    \        if ($i[$j] == 7) {\n          $out++;\n        }\n      }\n    }\n  }\n\
    \  return $out;\n}\necho fizz_buzz(50) . \"\\n\";\necho fizz_buzz(78) . \"\\n\"\
    ;\necho fizz_buzz(79) . \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    2

    3

    '
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $x = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 ==\
    \ 0) {\n      $x += substr_count((string)$i, '7');\n    }\n  }\n  return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $total = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13\
    \ == 0) {\n\t\t\t$total += substr_count($i, 7);\n\t\t}\n\t}\n\treturn $total;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $num = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 ==\
    \ 0) {\n\t\t\t$num += (substr_count((string)$i, '7'));\n\t\t}\n\t}\n\treturn $num;\n\
    }\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $digits = str_split(strval($n));\n\t$digit_7_count = 0;\n\tforeach ($digits as\
    \ $digit) {\n\t\tif ($digit == 7) {\n\t\t\t$digit_7_count++;\n\t\t}\n\t}\n\treturn\
    \ $digit_7_count;\n}\n\necho fizz_buzz(50) . PHP_EOL;\necho fizz_buzz(78) . PHP_EOL;\n\
    echo fizz_buzz(79) . PHP_EOL;\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr8moqqug.php:29\n\
    Stack trace:\n#0 /tmp/tmpr8moqqug.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpr8moqqug.php\
    \ on line 29\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $a = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if (($i % 11 == 0) ||\
    \ ($i % 13 == 0)) {\n            $str = (string)$i;\n            $j = strpos($str,\
    \ \"7\");\n            while ($j != false) {\n                $a++;\n        \
    \        $j = strpos($str, \"7\", $j + 1);\n            }\n        }\n    }\n\
    \    return $a;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmploihlog5.php:30\n\
    Stack trace:\n#0 /tmp/tmploihlog5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmploihlog5.php\
    \ on line 30\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    if(!is_int($n)) {\n        return 'n is not an integer';\n    }\n    if($n\
    \ < 0) {\n        return 'n is negative';\n    }\n    $total_count = 0;\n    $count\
    \ = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($i % 11 == 0 || $i % 13 ==\
    \ 0) {\n            $count = count_sevens($i);\n            $total_count += $count;\n\
    \        }\n    }\n    return $total_count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_sevens()\
    \ in /tmp/tmpnt190q8k.php:20\nStack trace:\n#0 /tmp/tmpnt190q8k.php(28): fizz_buzz(50)\n\
    #1 /tmp/tmpnt190q8k.php(32): candidate(50)\n#2 /tmp/tmpnt190q8k.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpnt190q8k.php on line 20\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 11; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13\
    \ == 0) {\n\t\t\t$num = \"$i\";\n\t\t\t$count += substr_count($num, '7');\n\t\t\
    }\n\t}\n\treturn $count;\n}\n\n$n = 50;\necho fizz_buzz($n) . \"\\n\";\n\n$n =\
    \ 78;\necho fizz_buzz($n) . \"\\n\";\n\n$n = 79;\necho fizz_buzz($n) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    2

    3

    '
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $i_str = (string)$i;\n            for ($j =\
    \ 0; $j < strlen($i_str); $j++) {\n                if ($i_str[$j] == 7) {\n  \
    \                  $count++;\n                }\n            }\n        }\n  \
    \  }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $total = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $total += substr_count($i, '7');\n        }\n\
    \    }\n    return $total;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $x = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0)\
    \ {\n\t\t\tif (strpos($i, '7') !== false) {\n\t\t\t\t$x += 1;\n\t\t\t}\n\t\t}\n\
    \t}\n\treturn $x;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps1uuy20p.php:26\n\
    Stack trace:\n#0 /tmp/tmps1uuy20p.php(35): test()\n#1 {main}\n  thrown in /tmp/tmps1uuy20p.php\
    \ on line 26\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $match = 0;\n  for ($i = 11; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $num = (string)$i;\n      $match += substr_count($num, '7');\n\
    \    }\n  }\n  return $match;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13\
    \ == 0) {\n\t\t\t$count += substr_count(strval($i), \"7\");\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\necho fizz_buzz(78);\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '2'
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $cnt = 0;\n\tfor ($i = 11; $i < $n; $i += 11) {\n\t\t$cnt += substr_count($i,\
    \ '7');\n\t}\n\tfor ($i = 13; $i < $n; $i += 13) {\n\t\t$cnt += substr_count($i,\
    \ '7');\n\t}\n\treturn $cnt;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpirf109ec.php:30\n\
    Stack trace:\n#0 /tmp/tmpirf109ec.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpirf109ec.php\
    \ on line 30\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 or $i % 13\
    \ == 0) {\n\t\t\tif (strpos((string)$i, '7') !== false) {\n\t\t\t\t$count++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7uygrcu9.php:27\n\
    Stack trace:\n#0 /tmp/tmp7uygrcu9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7uygrcu9.php\
    \ on line 27\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $cnt = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 ||\
    \ $i % 13 == 0) {\n            $str = (string)$i;\n            for ($j = 0; $j\
    \ < strlen($str); $j++) {\n                if ($str[$j] == '7') {\n          \
    \          $cnt++;\n                }\n            }\n        }\n    }\n    return\
    \ $cnt;\n}\n\necho fizz_buzz(50);\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0'
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count=0;\n    for($i=1;$i<$n;$i++){\n        if(($i%11==0) || ($i%13==0)){\n\
    \            $count += substr_count($i, '7');\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $digit = (string)$i;\n      $count += substr_count($digit,\
    \ \"7\");\n    }\n  }\n  return $count;\n}\nfunction candidate(...$args) {\n \
    \   return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    // Your code here\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8zd16gpj.php:17\n\
    Stack trace:\n#0 /tmp/tmp8zd16gpj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8zd16gpj.php\
    \ on line 17\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count((string)$i, '7');\n \
    \       }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $counter = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 ==\
    \ 0 || $i % 13 == 0) {\n            $num = $i;\n            while ($num != 0)\
    \ {\n                if ($num % 10 == 7) {\n                    $counter++;\n\
    \                }\n                $num = floor($num / 10);\n            }\n\
    \        }\n    }\n    return $counter;\n}\n\necho fizz_buzz(50);\necho \"<br>\"\
    ;\necho fizz_buzz(78);\necho \"<br>\";\necho fizz_buzz(79);\necho \"<br>\";\n\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 0<br>2<br>3<br>
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $arr = array_map('strval', range(0, $n));\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value % 11 === 0 || $value % 13 === 0) {\n      $arr[$key] = 1;\n\
    \    } else {\n      $arr[$key] = 0;\n    }\n  }\n  $result = implode('', $arr);\n\
    \  $count = substr_count($result, '7');\n  return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi168wfty.php:28\n\
    Stack trace:\n#0 /tmp/tmpi168wfty.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpi168wfty.php\
    \ on line 28\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    // Write your code here\n\t// To print results to the standard output you can\
    \ use print\n\t// Example: print \"Hello world!\";\n\t$total = 0;\n\tfor ($i =\
    \ 7; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$total +=\
    \ substr_count((string)$i, \"7\");\n\t\t}\n\t}\n\tprint $total;\n}\n\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6r3jxqzi.php:27\n\
    Stack trace:\n#0 /tmp/tmp6r3jxqzi.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6r3jxqzi.php\
    \ on line 27\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if (($i % 11 == 0)\
    \ || ($i % 13 == 0)) {\n            if (strpos($i, '7') != false) {\n        \
    \        $count++;\n            }\n        }\n    }\n    return $count;\n}\n\n\
    echo fizz_buzz(50);\necho fizz_buzz(78);\necho fizz_buzz(79);\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqim6r33q.php:30\n\
    Stack trace:\n#0 /tmp/tmpqim6r33q.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqim6r33q.php\
    \ on line 30\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $result = 0;\n\tfor ($i = 0; $i < $n; $i++){\n\t\tif ($i % 11 == 0 || $i % 13\
    \ == 0){\n\t\t\t$array = str_split($i);\n\t\t\tforeach ($array as $digit){\n\t\
    \t\t\tif ($digit == 7){\n\t\t\t\t\t$result++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn $result;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $result = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $result += substr_count($i, 7);\n        }\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if (($i % 11 == 0) || ($i\
    \ % 13 == 0)) {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if (($i % 11 == 0\
    \ || $i % 13 == 0) && strpos($i, '7') !== false) {\n            $count++;\n  \
    \      }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n   \
    \ return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptncdjb26.php:25\n\
    Stack trace:\n#0 /tmp/tmptncdjb26.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptncdjb26.php\
    \ on line 25\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  if (!is_int($n)) {\n    return \"Invalid input\";\n  }\n  $count = 0;\n  for\
    \ ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0) {\n      $count\
    \ += num_7($i);\n    }\n  }\n  return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function num_7() in /tmp/tmp1o37o7gz.php:16\n\
    Stack trace:\n#0 /tmp/tmp1o37o7gz.php(22): fizz_buzz(50)\n#1 /tmp/tmp1o37o7gz.php(26):\
    \ candidate(50)\n#2 /tmp/tmp1o37o7gz.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp1o37o7gz.php\
    \ on line 16\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $str = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $str .= (string)$i;\n        }\n    }\n    $arr\
    \ = explode(\"7\", $str);\n    return count($arr) - 1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $str = '';\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13\
    \ == 0) {\n      $str .= $i;\n    }\n  }\n  return substr_count($str, 7);\n}\n\
    echo fizz_buzz(50);\necho fizz_buzz(78);\necho fizz_buzz(79);\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '023'
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  if(!is_int($n)) {\n    throw new InvalidArgumentException(\"Argument n was\
    \ not a integer\");\n  }\n  if($n < 0) {\n    throw new InvalidArgumentException(\"\
    Argument n was below zero\");\n  }\n  if($n == 0) {\n    return 0;\n  }\n  $n_string\
    \ = strval($n);\n  $count = 0;\n  $multiples = [];\n  $divisors = [11, 13];\n\
    \  foreach($divisors as $divisor) {\n    $multiples = array_merge($multiples,\
    \ generate_multiples($divisor, $n));\n  }\n  $multiples = array_unique($multiples);\n\
    \  foreach($multiples as $multiple) {\n    $count += substr_count($multiple, \"\
    7\");\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function generate_multiples()\
    \ in /tmp/tmp5ocrpptd.php:24\nStack trace:\n#0 /tmp/tmp5ocrpptd.php(34): fizz_buzz(50)\n\
    #1 /tmp/tmp5ocrpptd.php(38): candidate(50)\n#2 /tmp/tmp5ocrpptd.php(48): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5ocrpptd.php on line 24\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count($i, '7');\n        }\n\
    \    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if (($i % 11 == 0\
    \ || $i % 13 == 0) && strpos($i, \"7\") !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\necho fizz_buzz(50) . \"\\n\";\necho\
    \ fizz_buzz(78) . \"\\n\";\necho fizz_buzz(79) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n1\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzhrs2a6f.php:28\n\
    Stack trace:\n#0 /tmp/tmpzhrs2a6f.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzhrs2a6f.php\
    \ on line 28\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 0; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $string_of_num = strval($i);\n      $len = strlen($string_of_num);\n\
    \      for ($j = 0; $j < $len; $j++) {\n        if ($string_of_num[$j] == 7) {\n\
    \          $count++;\n        }\n      }\n    }\n  }\n  return $count;\n}\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count($i, 7);\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    if ($n <= 70) {\n        return 0;\n    }\n    if ($n <= 77) {\n        return\
    \ 1;\n    }\n    if ($n <= 99) {\n        return 2;\n    }\n    return 0;\n}\n\
    \nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgwx6o1lr.php:29\n\
    Stack trace:\n#0 /tmp/tmpgwx6o1lr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpgwx6o1lr.php\
    \ on line 29\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $output = '';\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 11 == 0 || $i\
    \ % 13 == 0) {\n      $output .= strval($i);\n    }\n  }\n  return substr_count($output,\
    \ '7');\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp68aamwm.php:25\n\
    Stack trace:\n#0 /tmp/tmpp68aamwm.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpp68aamwm.php\
    \ on line 25\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if (strpos((string)$i,\
    \ '7') !== false) {\n            if ($i % 11 == 0 || $i % 13 == 0) {\n       \
    \         $sum += 1;\n            }\n        }\n    }\n    return $sum;\n}\n\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr46wjjwv.php:27\n\
    Stack trace:\n#0 /tmp/tmpr46wjjwv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpr46wjjwv.php\
    \ on line 27\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    if ($n < 0) return NULL;\n    $count = 0;\n    for ($i = 1; $i < $n; $i++)\
    \ {\n        if (($i % 11 == 0) || ($i % 13 == 0)) {\n            if (strpos($i,\
    \ '7') !== false) $count++;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmempzafc.php:26\n\
    Stack trace:\n#0 /tmp/tmpmempzafc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmempzafc.php\
    \ on line 26\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $return = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if (in_array($i\
    \ % 11, [0, 7]) || in_array($i % 13, [0, 7])) {\n            $return += substr_count((string)$i,\
    \ '7');\n        }\n    }\n    return $return;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_rtnjij0.php:24\n\
    Stack trace:\n#0 /tmp/tmp_rtnjij0.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp_rtnjij0.php\
    \ on line 24\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $total = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $arr = str_split($i);\n            foreach ($arr\
    \ as $digit) {\n                if ($digit == 7) {\n                    $total++;\n\
    \                }\n            }\n        }\n    }\n    return $total;\n}\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    // Write your code here\n\t// To print results to the standard output you can\
    \ use print\n\t// Example: print \"Hello world!\";\n\t$arr = array();\n\tfor($i=1;$i<$n;$i++){\n\
    \t\tif($i%11==0||$i%13==0){\n\t\t\t$arr[] = $i;\n\t\t}\n\t}\n\t\n\t$cnt = 0;\n\
    \tfor($j=0;$j<count($arr);$j++){\n\t\tif(strpos($arr[$j],'7')!==false){\n\t\t\t\
    $cnt++;\n\t\t}\n\t}\n\t\n\tprint $cnt;\n}\n\nfizz_buzz(79);\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "20\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8gyb9_h8.php:36\n\
    Stack trace:\n#0 /tmp/tmp8gyb9_h8.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8gyb9_h8.php\
    \ on line 36\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $result = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if (in_array($i\
    \ % 11, [0, 7]) || in_array($i % 13, [0, 7])) {\n            $result += substr_count($i,\
    \ '7');\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpipvoi1gq.php:23\n\
    Stack trace:\n#0 /tmp/tmpipvoi1gq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpipvoi1gq.php\
    \ on line 23\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $match = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if (($i % 11 ===\
    \ 0) || ($i % 13 === 0)) {\n            $match += substr_count((string)$i, \"\
    7\");\n        }\n    }\n    return $match;\n}\necho fizz_buzz(50) . PHP_EOL;\n\
    echo fizz_buzz(78) . PHP_EOL;\necho fizz_buzz(79) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    2

    3

    '
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if (($i % 11 == 0) || ($i\
    \ % 13 == 0)) {\n      $num = number_format($i);\n      $num = (string)$num;\n\
    \      if ($num[strlen($num) - 1] == 7) {\n        $count++;\n      }\n    }\n\
    \  }\n  return $count;\n}\necho fizz_buzz(50);\nfunction candidate(...$args) {\n\
    \    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4w93zbzk.php:29\n\
    Stack trace:\n#0 /tmp/tmp4w93zbzk.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4w93zbzk.php\
    \ on line 29\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 7; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13\
    \ == 0) {\n\t\t\t$count += (int)$i;\n\t\t}\n\t}\n\treturn $count;\n}\necho fizz_buzz(50);\n\
    echo fizz_buzz(78);\necho fizz_buzz(79);\nfunction candidate(...$args) {\n   \
    \ return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "188503581\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi4iurk3c.php:26\n\
    Stack trace:\n#0 /tmp/tmpi4iurk3c.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi4iurk3c.php\
    \ on line 26\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $result = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $number = $i;\n            while ($number >\
    \ 0) {\n                if ($number % 10 == 7) {\n                    $result++;\n\
    \                }\n                $number = floor($number / 10);\n         \
    \   }\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if (($i % 11 == 0 || $i %\
    \ 13 == 0) && strpos($i, \"7\") !== false) {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp37pttt0j.php:25\n\
    Stack trace:\n#0 /tmp/tmp37pttt0j.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp37pttt0j.php\
    \ on line 25\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $counter = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 ==\
    \ 0 or $i % 13 == 0) {\n            if (strpos($i, '7') !== false) {\n       \
    \         $counter++;\n            }\n        }\n    }\n    return $counter;\n\
    }\n\necho fizz_buzz(50);\necho fizz_buzz(78);\necho fizz_buzz(79);\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "012\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7xap2g8a.php:30\n\
    Stack trace:\n#0 /tmp/tmp7xap2g8a.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7xap2g8a.php\
    \ on line 30\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $res = 0;\n    for ($i = 11; $i < $n; $i += 11) {\n        $res += substr_count((string)$i,\
    \ '7');\n    }\n    for ($i = 13; $i < $n; $i += 13) {\n        $res += substr_count((string)$i,\
    \ '7');\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeq5sprd9.php:30\n\
    Stack trace:\n#0 /tmp/tmpeq5sprd9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpeq5sprd9.php\
    \ on line 30\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $num = $i;\n            while ($num != 0) {\n\
    \                if ($num % 10 == 7) {\n                    $count++;\n      \
    \          }\n                $num = (int)($num / 10);\n            }\n      \
    \  }\n    }\n    return $count;\n}\n\necho fizz_buzz(50) . PHP_EOL;\necho fizz_buzz(78)\
    \ . PHP_EOL;\necho fizz_buzz(79) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    2

    3

    '
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tif (($i % 11 == 0) || ($i %\
    \ 13 == 0)) {\n\t\t\t$count += substr_count($i, 7);\n\t\t}\n\t}\n\treturn $count;\n\
    }\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13\
    \ == 0) {\n\t\t\t$count += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n\necho fizz_buzz(50) . \"\\n\";\necho fizz_buzz(78) . \"\\n\";\n\
    echo fizz_buzz(79) . \"\\n\";\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    2

    3

    '
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $number = $i;\n      while ($number > 0) {\n        if ($number\
    \ % 10 == 7) {\n          $count++;\n        }\n        $number = intval($number\
    \ / 10);\n      }\n    }\n  }\n  return $count;\n}\n\necho fizz_buzz(50);\necho\
    \ fizz_buzz(78);\necho fizz_buzz(79);\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '023'
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $count += substr_count($i, '7');\n        }\n\
    \    }\n    return $count;\n}\n\necho fizz_buzz(50);\necho \"\\n\";\necho fizz_buzz(78);\n\
    echo \"\\n\";\necho fizz_buzz(79);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    2

    3

    '
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  $i = 7;\n  $j = 77;\n  while($i < $n) {\n    if($i % 11 == 0\
    \ || $i % 13 == 0) {\n      $count++;\n    }\n    $i += $j;\n  }\n  return $count;\n\
    }\n\n$n = 51;\necho 'Input: ' . $n . PHP_EOL;\necho 'Output: ' . fizz_buzz($n)\
    \ . PHP_EOL;\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Input: 51\nOutput: 0\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp1x5yldna.php:32\nStack trace:\n#0 /tmp/tmp1x5yldna.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmp1x5yldna.php on line 32\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $numbers_array = array();\n    $numbers_array[] = 0;\n    for ($i = 1; $i\
    \ < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n            $numbers_array[]\
    \ = $i;\n        }\n    }\n    $number_of_times = 0;\n    for ($i = 0; $i < count($numbers_array);\
    \ $i++) {\n        $number_of_times += substr_count($numbers_array[$i], '7');\n\
    \    }\n    return $number_of_times;\n}\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $list = array();\n    for ($i = 1; $i < $n; $i++) {\n        if (($i % 11\
    \ == 0) || ($i % 13 == 0))\n            $list[] = $i;\n    }\n    $sevens = 0;\n\
    \    foreach ($list as $n) {\n        while ($n > 0) {\n            if ($n % 10\
    \ == 7)\n                $sevens++;\n            $n = (int)($n / 10);\n      \
    \  }\n    }\n    return $sevens;\n}\n$n = 50;\necho fizz_buzz($n);\necho \"\\\
    n\";\n$n = 78;\necho fizz_buzz($n);\necho \"\\n\";\n$n = 79;\necho fizz_buzz($n);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    2

    3

    '
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  if($n < 70) return 0;\n  $sum = 0;\n  for($i = 70; $i < $n; $i++) {\n    if($i\
    \ % 11 == 0 || $i % 13 == 0) {\n      $num_arr = str_split($i);\n      $sum +=\
    \ array_count_values($num_arr)['7'];\n    }\n  }\n  return $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tmp/tmpizicg97l.php on line 15


    Warning: Undefined array key 7 in /tm'
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i %\
    \ 13 == 0) {\n      $count += substr_count((string)$i, '7');\n    }\n  }\n  return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $result = 0;\n    for ($i = 7; $i < $n; $i += 11) {\n        if ($i % 13\
    \ === 0) {\n            $result++;\n        }\n    }\n    return $result;\n}\n\
    \necho fizz_buzz(78);\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps1s20dz1.php:26\n\
    Stack trace:\n#0 /tmp/tmps1s20dz1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmps1s20dz1.php\
    \ on line 26\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\t\
    $count = 0;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13\
    \ == 0) {\n\t\t\tif (strpos($i, '7') !== false) {\n\t\t\t\t$count++;\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobo5j1cx.php:27\n\
    Stack trace:\n#0 /tmp/tmpobo5j1cx.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpobo5j1cx.php\
    \ on line 27\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $n = (int)$n;\n    $occurrences = 0;\n    for ($i = 1; $i < $n; $i++) {\n\
    \        if ($i % 11 == 0 || $i % 13 == 0) {\n            $occurrences += substr_count((string)$i,\
    \ '7');\n        }\n    }\n    return $occurrences;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $result = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if (strpos($i, \"\
    7\") !== false && $i % 11 == 0 || $i % 13 == 0) {\n            $result++;\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp56ls88dh.php:24\n\
    Stack trace:\n#0 /tmp/tmp56ls88dh.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp56ls88dh.php\
    \ on line 24\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            if (strpos($i, \"7\") !== false) {\n       \
    \         $count++;\n            }\n        }\n    }\n    return $count;\n}\n\n\
    echo fizz_buzz(78);\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6pwmux4.php:28\n\
    Stack trace:\n#0 /tmp/tmpg6pwmux4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpg6pwmux4.php\
    \ on line 28\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $pattern = '/[^7]*(7)[^7]*/';\n    $sum = 0;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        if (fmod($i, 11) == 0 || fmod($i, 13) == 0) {\n            $match\
    \ = [];\n            $sum += count(preg_match_all($pattern, $i, $match));\n  \
    \      }\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, int given in /tmp/tmpqnijdu3z.php:15\nStack trace:\n\
    #0 /tmp/tmpqnijdu3z.php(21): fizz_buzz(50)\n#1 /tmp/tmpqnijdu3z.php(25): candidate(50)\n\
    #2 /tmp/tmpqnijdu3z.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpqnijdu3z.php\
    \ on line 15\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>>\
    \ fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz($n) {\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0\
    \ || $i % 13 == 0) {\n            $s = (string)$i;\n            $count += substr_count($s,\
    \ '7');\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946

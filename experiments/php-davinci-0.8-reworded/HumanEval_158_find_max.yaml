name: HumanEval_158_find_max
language: php
prompt: "<?php\n// Write a function that accepts an array of strings.\n// The array\
  \ contains different words. Return the word with maximum number\n// of unique characters.\
  \ If multiple strings have maximum number of unique\n// characters, return the one\
  \ which comes first in lexicographical order.\n// >>> find_max(array(\"name\", \"\
  of\", \"string\"))\n// \"string\"\n// >>> find_max(array(\"name\", \"enam\", \"\
  game\"))\n// \"enam\"\n// >>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n// \"\
  aaaaaaa\"\nfunction find_max($words) {\n"
tests: "function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
  string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"cba\"))\
  \ !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"gonna\"\
  , \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"))\
  \ !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $max = 0;\n    $res = '';\n    foreach ($words as $word) {\n  \
    \      $letters = str_split($word);\n        $count = count(array_unique($letters));\n\
    \        if ($count > $max) {\n            $max = $count;\n            $res =\
    \ $word;\n        }\n    }\n    return $res;\n}\n", "  $max_string = \"\";\n \
    \ $max_count = 0;\n  foreach ($words as $word) {\n    if (count_unique_characters($word)\
    \ > $max_count) {\n      $max_string = $word;\n      $max_count = count_unique_characters($word);\n\
    \    }\n  }\n  return $max_string;\n}", "  $max = 0;\n  $maxIndex = 0;\n  for\
    \ ($i = 0; $i < count($words); $i++) {\n    $unique = 0;\n    $unique_arr = array();\n\
    \    for ($j = 0; $j < strlen($words[$i]); $j++) {\n      if (!in_array($words[$i][$j],\
    \ $unique_arr)) {\n        $unique_arr[] = $words[$i][$j];\n        $unique++;\n\
    \      }\n    }\n    if ($unique > $max) {\n      $max = $unique;\n      $maxIndex\
    \ = $i;\n    }\n  }\n  return $words[$maxIndex];\n}\n", "  // Write your code\
    \ here\n  // To print results to the standard output you can use print\n  // Example:\
    \ print \"Hello world!\";\n  $max_count = 0;\n  $result = \"\";\n  foreach ($words\
    \ as $word) {\n    $count = count_unique_characters($word);\n    if ($count >\
    \ $max_count) {\n      $max_count = $count;\n      $result = $word;\n    }\n \
    \ }\n  return $result;\n}\n", "\t$max_count = 0;\n\t$max_word = '';\n\tforeach\
    \ ($words as $word) {\n\t\t$count = count_unique_characters($word);\n\t\tif ($count\
    \ > $max_count) {\n\t\t\t$max_count = $count;\n\t\t\t$max_word = $word;\n\t\t\
    }\n\t}\n\treturn $max_word;\n}", "\t$max = 0;\n\t$res = '';\n\tforeach ($words\
    \ as $word) {\n\t\t$count = count_chars($word, 1);\n\t\tif (count($count) > $max)\
    \ {\n\t\t\t$max = count($count);\n\t\t\t$res = $word;\n\t\t}\n\t}\n\treturn $res;\n\
    }\n", "\t$str_length = $words[0];\n\t$str_size = strlen($str_length);\n\t$new_str\
    \ = \"\";\n\tfor ($i = 0; $i < count($words); $i++) {\n\t\t$current_length = strlen($words[$i]);\n\
    \t\tif ($current_length > $str_size) {\n\t\t\t$str_size = $current_length;\n\t\
    \t\t$str_length = $words[$i];\n\t\t}\n\t}\n\treturn $str_length;\n}\n\nprint_r(find_max(array(\"\
    name\", \"of\", \"string\")) . PHP_EOL);\nprint_r(find_max(array(\"name\", \"\
    enam\", \"game\")) . PHP_EOL);\nprint_r(find_max(array(\"aaaaaaa\", \"bb\", \"\
    cc\")) . PHP_EOL);\n", "\t$max = '';\n\t$max_unique = 0;\n\tforeach ($words as\
    \ $word) {\n\t\t$unique = strlen(unique_chars($word));\n\t\tif ($unique > $max_unique)\
    \ {\n\t\t\t$max = $word;\n\t\t\t$max_unique = $unique;\n\t\t}\n\t}\n\treturn $max;\n\
    }\n", "  $words = array_map(function($str) {\n    return array(\n      'string'\
    \ => $str,\n      'count' => count(array_flip(str_split($str)))\n    );\n  },\
    \ $words);\n  usort($words, function($a, $b) {\n    if ($a['count'] === $b['count'])\
    \ {\n      return strcmp($a['string'], $b['string']);\n    }\n    return $a['count']\
    \ < $b['count'];\n  });\n  return $words[0]['string'];\n}\n$tests = array(\n \
    \ array(\"name\", \"of\", \"string\"),\n  array(\"name\", \"enam\", \"game\"),\n\
    \  array(\"aaaaaaa\", \"bb\", \"cc\")\n);\nforeach ($tests as $test) {\n  echo\
    \ find_max($test) . \"\\n\";\n}", "\t$max_word = $words[0];\n\t$max_num_unique_chars\
    \ = count_unique_chars($max_word);\n\tforeach ($words as $word) {\n\t\t$num_unique_chars\
    \ = count_unique_chars($word);\n\t\tif ($num_unique_chars > $max_num_unique_chars)\
    \ {\n\t\t\t$max_word = $word;\n\t\t\t$max_num_unique_chars = $num_unique_chars;\n\
    \t\t}\n\t}\n\treturn $max_word;\n}\n", "    $max = 0;\n    $temp = 0;\n    $answer\
    \ = \"\";\n    for ($i = 0; $i < count($words); $i++) {\n        $temp = count_chars($words[$i],\
    \ 1);\n        if (count($temp) > $max) {\n            $max = count($temp);\n\
    \            $answer = $words[$i];\n        }\n    }\n    return $answer;\n}\n",
  "    $word = \"\";\n    $maxChars = 0;\n    foreach ($words as $w) {\n        $arr\
    \ = str_split($w);\n        $unique = 0;\n        $used = array();\n        foreach\
    \ ($arr as $char) {\n            if (!in_array($char, $used)) {\n            \
    \    $unique++;\n                $used[] = $char;\n            }\n        }\n\
    \        if ($unique > $maxChars) {\n            $maxChars = $unique;\n      \
    \      $word = $w;\n        }\n    }\n    return $word;\n}", "  $unique = array();\n\
    \  $max = 0;\n  $max_key = 0;\n  foreach ($words as $key => $value) {\n    $unique[$key]\
    \ = str_split($value);\n    $unique[$key] = array_unique($unique[$key]);\n   \
    \ $unique[$key] = count($unique[$key]);\n    if ($unique[$key] > $max) {\n   \
    \   $max = $unique[$key];\n      $max_key = $key;\n    }\n  }\n  return $words[$max_key];\n\
    }\n", "\t$max_word = \"\";\n\t$max_count = 0;\n\tforeach ($words as $word) {\n\
    \t\t$count = count_unique_chars($word);\n\t\tif ($count > $max_count) {\n\t\t\t\
    $max_count = $count;\n\t\t\t$max_word = $word;\n\t\t}\n\t}\n\treturn $max_word;\n\
    }", "  $max_unique_chars = 0;\n  $max_unique_char_word = '';\n  foreach ($words\
    \ as $word) {\n    $unique_chars = str_split(implode('', array_unique(str_split($word))));\n\
    \    $num_unique_chars = count($unique_chars);\n    if ($num_unique_chars > $max_unique_chars)\
    \ {\n      $max_unique_chars = $num_unique_chars;\n      $max_unique_char_word\
    \ = $word;\n    } else if ($num_unique_chars == $max_unique_chars) {\n      if\
    \ ($word < $max_unique_char_word) {\n        $max_unique_char_word = $word;\n\
    \      }\n    }\n  }\n  return $max_unique_char_word;\n}\n", "  $max = 0;\n  $result\
    \ = '';\n  foreach ($words as $word) {\n    $letter_count = count_unique_letters($word);\n\
    \    if ($letter_count > $max) {\n      $max = $letter_count;\n      $result =\
    \ $word;\n    }\n  }\n  return $result;\n}\n", "    $word_max = '';\n    foreach\
    \ ($words as $word) {\n        $char_arr = str_split($word);\n        $max_chars\
    \ = array_unique($char_arr);\n        if (count($max_chars) > count($word_max))\
    \ {\n            $word_max = $word;\n        }\n    }\n    return $word_max;\n\
    }\n", "  $max_count = 0;\n  $max_word = '';\n  foreach ($words as $word) {\n \
    \   $word_count = count_unique_chars($word);\n    if ($word_count > $max_count)\
    \ {\n      $max_count = $word_count;\n      $max_word = $word;\n    }\n  }\n \
    \ return $max_word;\n}\n", "    $max_word = '';\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n$arr = array(\"name\", \"of\", \"\
    string\");\necho find_max($arr);", "  $current_word = $words[0];\n  $count = 0;\n\
    \  $max_count = 0;\n  $max_word = $current_word;\n  $pos = 0;\n  $length = strlen($current_word);\n\
    \  for ($i = 0; $i < count($words); $i++) {\n    if ($current_word == $words[$i])\
    \ {\n      continue;\n    }\n    $current_word = $words[$i];\n    $count = 0;\n\
    \    $pos = 0;\n    $length = strlen($current_word);\n    while ($pos < $length)\
    \ {\n      if (strpos($current_word, $current_word[$pos], $pos + 1) === false)\
    \ {\n        $count++;\n      }\n      $pos++;\n    }\n    if ($count > $max_count)\
    \ {\n      $max_count = $count;\n      $max_word = $current_word;\n    }\n  }\n\
    \  return $max_word;\n}\n\n$words = array(\"name\", \"of\", \"string\");\n$result\
    \ = find_max($words);\necho $result . \"\\n\";\n\n$words = array(\"name\", \"\
    enam\", \"game\");\n$result = find_max($words);\necho $result . \"\\n\";\n\n$words\
    \ = array(\"aaaaaaa\", \"bb\", \"cc\");\n$result = find_max($words);\necho $result\
    \ . \"\\n\";"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

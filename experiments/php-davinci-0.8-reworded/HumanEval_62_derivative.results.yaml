language: php
name: HumanEval_62_derivative
results:
- exit_code: 255
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    if ($n == 1) {\n        return array(0);\n    }\n    $ys\
    \ = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpssp_uib1.php:30\n\
    Stack trace:\n#0 /tmp/tmpssp_uib1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpssp_uib1.php\
    \ on line 30\n"
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $newXs = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $newXs[]\
    \ = $i * $xs[$i];\n    }\n    return $newXs;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ if(!is_array($xs)) {\n        return \"error\";\n    }\n    if(count($xs) ==\
    \ 0) {\n        return array();\n    }\n    $ys = array();\n    for($i = 1; $i\
    \ < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return $ys;\n\
    }\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i\
    \ * $xs[$i];\n    }\n    return $ys;\n}\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $len = count($xs);\n    $ret = array();\n    for ($i = 1; $i < $len; $i++) {\n\
    \        $ret[] = $i * $xs[$i];\n    }\n    return $ret;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $length = count($xs);\n    $result = array();\n    for ($i = 1; $i < $length;\
    \ $i++) {\n        $result[] = $i * $xs[$i];\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $m = count($xs);\n    $dxs = array();\n    for ($i = 1; $i < $m; $i++) {\n \
    \       $dxs[] = $i * $xs[$i];\n    }\n    return $dxs;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 255
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$r\
    \ = array();\n\t$i = 0;\n\tforeach ($xs as $x) {\n\t\t$r[] = $x * $i;\n\t\t$i++;\n\
    \t}\n\treturn $r;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpispiu13i.php:24\n\
    Stack trace:\n#0 /tmp/tmpispiu13i.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpispiu13i.php\
    \ on line 24\n"
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$k\
    \ = count($xs);\n\t$result = array();\n\tfor ($i = 1; $i < $k; $i++) {\n\t\t$result[]\
    \ = $i * $xs[$i];\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i\
    \ * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n  \
    \  return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $derivative = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $derivative[]\
    \ = $i * $xs[$i];\n    }\n    return $derivative;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 255
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    $last = count($xs) - 1;\n    $last2 = $last - 1;\n    for\
    \ ($i = 0; $i < $last2; $i++) {\n        $y = $i + 1;\n        $ys[$i] = $y *\
    \ $xs[$i + 1];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvapbifun.php:25\n\
    Stack trace:\n#0 /tmp/tmpvapbifun.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpvapbifun.php\
    \ on line 25\n"
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $len = count($xs);\n    $new_xs = array();\n    for ($i = 1; $i < $len; $i++)\
    \ {\n        $new_xs[] = $i * $xs[$i];\n    }\n    return $new_xs;\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ if (count($xs) <= 1) return array();\n    $ys = array();\n    for ($i = 1; $i\
    \ < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return $ys;\n\
    }\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ for ($i = 0; $i < count($xs) - 1; $i++) {\n        $xs[$i] = $xs[$i + 1] * ($i\
    \ + 1);\n    }\n    array_pop($xs);\n    return $xs;\n}\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $result = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $result[]\
    \ = $i * $xs[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $result = array();\n    $n = count($xs);\n    for ($i = 1; $i < $n; $i++) {\n\
    \        $result[] = $i * $xs[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $res = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $res[] =\
    \ $i * $xs[$i];\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$len\
    \ = count($xs);\n\tif($len <= 1) {\n\t\treturn array();\n\t}\n\t$derivative =\
    \ array();\n\tfor($i = 1; $i < $len; $i++) {\n\t\t$derivative[] = $i * $xs[$i];\n\
    \t}\n\treturn $derivative;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    $n = count($xs);\n    for ($i = 1; $i < $n; $i++) {\n  \
    \      $ys[] = $i * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    $newn = $n - 1;\n    if ($newn < 0) {\n        return\
    \ [];\n    }\n    $newxs = [];\n    for ($i = 0; $i < $newn; $i++) {\n       \
    \ $newxs[$i] = $xs[$i + 1] * ($i + 1);\n    }\n    return $newxs;\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ if (count($xs) <= 1) {\n        return array();\n    }\n    $result = array();\n\
    \    $i = 0;\n    foreach ($xs as $x) {\n        if ($i) {\n            $result[]\
    \ = $i * $x;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i\
    \ * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n  \
    \  return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $result = array();\n    $deg = count($xs) - 1;\n    for ($i = 0; $i < $deg;\
    \ $i++) {\n        $result[] = ($i + 1) * $xs[$i + 1];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ for ($i = 1; $i < count($xs); $i++) {\n        $xs[$i - 1] = $i * $xs[$i];\n\
    \    }\n    array_pop($xs);\n    return $xs;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ if (count($xs) <= 1) {\n        return array();\n    }\n    $ys = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n  \
    \  }\n    return $ys;\n}\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $result = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $result[]\
    \ = $i * $xs[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ if (count($xs) < 2) {\n        return array();\n    }\n    $result = array();\n\
    \    $n = count($xs);\n    for ($i = 1; $i < $n; $i++) {\n        $result[] =\
    \ $i * $xs[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $result = array();\n    $n = count($xs);\n    for ($i = 1; $i < $n; $i++) {\n\
    \        $result[] = $i * $xs[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ if (!$xs) {\n        return $xs;\n    }\n    $ys = [];\n    for ($i = 0; $i\
    \ < count($xs); $i++) {\n        if ($i > 0) {\n            $ys[] = $i * $xs[$i];\n\
    \        }\n    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $len = count($xs);\n    $output = array();\n    for ($i = 1; $i < $len; $i++)\
    \ {\n        $output[] = $i * $xs[$i];\n    }\n    return $output;\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i\
    \ * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n  \
    \  return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $res = array();\n    foreach($xs as $i => $x) {\n        if ($i > 0)\n     \
    \       $res[] = $i * $x;\n    }\n    return $res;\n}\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    $n = count($xs);\n    for ($i = 1; $i < $n; $i++) {\n  \
    \      $ys[] = $i * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $xs = array_slice($xs, 1);\n    foreach ($xs as $i => $x)\n        $xs[$i] *=\
    \ $i + 1;\n    return $xs;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ // Your code here\n    if(!is_array($xs)){\n        throw new Exception(\"Wrong\
    \ parameter\");\n    }\n    if(count($xs) === 0){\n        return array();\n \
    \   }\n    $ys = array();\n    $i = 1;\n    foreach($xs as $key => $x){\n    \
    \    if($key === 0){\n            continue;\n        }\n        $ys[] = $i * $x;\n\
    \        $i++;\n    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ for ($i = 1; $i < count($xs); $i++) {\n        $xs[$i - 1] = $i * $xs[$i];\n\
    \    }\n    array_pop($xs);\n    return $xs;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$size\
    \ = count($xs);\n\t$result = array();\n\tfor ($i = 1; $i < $size; $i++) {\n\t\t\
    $result[] = $i * $xs[$i];\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i\
    \ * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n  \
    \  return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$len\
    \ = count($xs);\n\t$res = array();\n\tfor ($i = 1; $i < $len; $i++) {\n\t\t$res[]\
    \ = $i * $xs[$i];\n\t}\n\treturn $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i\
    \ * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n  \
    \  return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $len = count($xs);\n    $result = array();\n    for ($i = 1; $i < $len; $i++)\
    \ {\n        $result[] = $i * $xs[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 255
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    if ($n == 1) {\n        return array(0);\n    }\n    for\
    \ ($i = 0; $i < $n - 1; $i++) {\n        $xs[$i] = $xs[$i + 1] * ($i + 1);\n \
    \   }\n    array_pop($xs);\n    return $xs;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw0pbl9y7.php:30\n\
    Stack trace:\n#0 /tmp/tmpw0pbl9y7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpw0pbl9y7.php\
    \ on line 30\n"
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ // $xs length should be at least 2\n    // PS: Could be done with a list comprehension,\n\
    \    // but I don't think PHP supports those.\n    // Example: $d = [$xs[i] *\
    \ i for i in range(1, len($xs))]\n    $d = array();\n    for ($i = 1; $i < count($xs);\
    \ $i++) {\n        $d[] = $xs[$i] * $i;\n    }\n    return $d;\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ if(count($xs) === 0) {\n        return array();\n    }\n    $res = array();\n\
    \    for($i = 1; $i < count($xs); $i++) {\n        $res[] = $i * $xs[$i];\n  \
    \  }\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$ys\
    \ = array();\n\tfor ($i = 1; $i < count($xs); $i++) {\n\t\t$ys[] = $i * $xs[$i];\n\
    \t}\n\treturn $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ret = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ret[] =\
    \ $i * $xs[$i];\n    }\n    return $ret;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $len = count($xs);\n    if ($len <= 1) return array();\n    $res = array();\n\
    \    for ($i = 1; $i < $len; $i++) {\n        $res[] = $i * $xs[$i];\n    }\n\
    \    return $res;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $r = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $r[] = $i\
    \ * $xs[$i];\n    }\n    return $r;\n}\n\nfunction candidate(...$args) {\n   \
    \ return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    $result = array();\n    for ($i = 1; $i < $n; $i++) {\n\
    \        $result[] = $i * $xs[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i\
    \ * $xs[$i];\n    }\n    return $ys;\n}\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ if(count($xs) == 0) {\n        return $xs;\n    }\n    array_shift($xs);\n \
    \   for($i = 0; $i < count($xs); $i += 1) {\n        $xs[$i] *= $i + 1;\n    }\n\
    \    return $xs;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $l = count($xs);\n    $res = array();\n    for ($i = 1; $i < $l; $i++) {\n \
    \       $res[] = $i * $xs[$i];\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$n\
    \ = count($xs);\n\t$ret = array();\n\tfor ($i = 1; $i < $n; $i++) {\n\t\t$ret[]\
    \ = $i * $xs[$i];\n\t}\n\treturn $ret;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$res\
    \ = array();\n\tfor ($i = 1; $i < count($xs); $i++) {\n\t\t$res[] = $i * $xs[$i];\n\
    \t}\n\treturn $res;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $result = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $result[]\
    \ = $i * $xs[$i];\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $deriv = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $deriv[]\
    \ = $i * $xs[$i];\n    }\n    return $deriv;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$result\
    \ = array();\n\tfor ($i = 1; $i < count($xs); $i++) {\n\t\t$result[] = $i * $xs[$i];\n\
    \t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    $exp = 1;\n    for ($i = 1; $i < count($xs); $i++) {\n \
    \       $ys[] = $exp * $xs[$i];\n        $exp++;\n    }\n    return $ys;\n}\n\n\
    function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = [];\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$n\
    \ = count($xs);\n\t$ys = array();\n\tfor ($i = 1; $i < $n; $i++) {\n\t\t$ys[]\
    \ = $i * $xs[$i];\n\t}\n\treturn $ys;\n}\n\nfunction candidate(...$args) {\n \
    \   return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $len = count($xs);\n    if ($len < 2) return array();\n    $der = array();\n\
    \    for ($i = 1; $i < $len; $i++) {\n        $der[] = $i * $xs[$i];\n    }\n\
    \    return $der;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $rs = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $rs[] = $i\
    \ * $xs[$i];\n    }\n    return $rs;\n}\n\nfunction candidate(...$args) {\n  \
    \  return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $r = array();\n    $n = count($xs);\n    for ($i = 1; $i < $n; $i++) {\n   \
    \     $r[] = $i * $xs[$i];\n    }\n    return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $result = array();\n    $degree = count($xs) - 1;\n    for ($i = 0; $i < $degree;\
    \ $i++) {\n        $result[] = ($i + 1) * $xs[$i + 1];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $result = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $result[]\
    \ = $i * $xs[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ // Your code goes here.\n    $ret = [];\n    for ($i = 1; $i < count($xs); $i++)\
    \ {\n        $ret[] = $xs[$i] * $i;\n    }\n    return $ret;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 255
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t//\
    \ PUT YOUR CODE HERE\n\t$derivativeArr = array();\n\t// Any derivative of a constant\
    \ is zero\n\tif (count($xs) == 1) {\n\t\treturn 0;\n\t}\n\t// Loop through the\
    \ array, multiplying by the exponent and adding to a new array\n\tfor ($i = 1;\
    \ $i < count($xs); $i++) {\n\t\t$derivativeArr[] = $xs[$i] * $i;\n\t}\n\treturn\
    \ $derivativeArr;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzyqo4knw.php:32\n\
    Stack trace:\n#0 /tmp/tmpzyqo4knw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzyqo4knw.php\
    \ on line 32\n"
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $xs_length = count($xs);\n    if ($xs_length == 0) {\n        return array();\n\
    \    }\n    $n = $xs_length - 1;\n    $derivative = array();\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $derivative[] = $i * $xs[$i];\n    }\n    return\
    \ $derivative;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\tif\
    \ (!is_array($xs)) {\n\t\techo \"error\\n\";\n\t\treturn;\n\t}\n\t$size = count($xs);\n\
    \t$ys = array();\n\tfor ($i = 1; $i < $size; $i++) {\n\t\t$ys[] = $i * $xs[$i];\n\
    \t}\n\treturn $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = [];\n    $n = count($xs);\n    for ($i = 1; $i < $n; $i++) {\n       \
    \ $ys[] = $i * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $size = count($xs);\n    $ys = array();\n    for ($i = 1; $i < $size; $i++)\
    \ {\n        $ys[] = $i * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ret = array();\n    if (!$xs) {\n        return $ret;\n    }\n    $len = count($xs);\n\
    \    for ($i = 1; $i < $len; $i++) {\n        $ret[] = $i * $xs[$i];\n    }\n\
    \    return $ret;\n}\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 255
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $len = count($xs);\n    $degree = $len - 1;\n    $ys = array();\n    for ($i\
    \ = 0; $i < $len - 1; $i++) {\n        $ys[] = $xs[$i] * ($degree - $i);\n   \
    \ }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkrxr_jyi.php:24\n\
    Stack trace:\n#0 /tmp/tmpkrxr_jyi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkrxr_jyi.php\
    \ on line 24\n"
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ret = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ret[] =\
    \ $i * $xs[$i];\n    }\n    return $ret;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    $res = array();\n    for ($i = 1; $i < $n; $i++) {\n \
    \       $res[] = $i * $xs[$i];\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $out_xs = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $out_xs[]\
    \ = $i * $xs[$i];\n    }\n    return $out_xs;\n}\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$r\
    \ = array();\n\tfor ($i = 1; $i < count($xs); $i++) {\n\t\t$r[] = $i * $xs[$i];\n\
    \t}\n\treturn $r;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ret = array();\n    $n = count($xs);\n    for ($i = 1; $i < $n; $i++) {\n \
    \       $ret[] = $i * $xs[$i];\n    }\n    return $ret;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $len = count($xs);\n    if ($len < 2) {\n        return array();\n    }\n  \
    \  $result = array();\n    for ($i = 1; $i < $len; $i++) {\n        $result[]\
    \ = $i * $xs[$i];\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 255
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $p = count($xs);\n    if ($p == 1) return array(0);\n    $ys = array();\n  \
    \  for ($i = 1; $i < $p; $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return\
    \ $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnylrwh63.php:28\n\
    Stack trace:\n#0 /tmp/tmpnylrwh63.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpnylrwh63.php\
    \ on line 28\n"
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $dxs = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $dxs[] =\
    \ $i * $xs[$i];\n    }\n    return $dxs;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ret = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ret[] =\
    \ $i * $xs[$i];\n    }\n    return $ret;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $newXs = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $newXs[]\
    \ = $i * $xs[$i];\n    }\n    return $newXs;\n}\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ds = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ds[] = $i\
    \ * $xs[$i];\n    }\n    return $ds;\n}\n\nfunction candidate(...$args) {\n  \
    \  return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $deg = count($xs) - 1;\n    $derivative = array();\n    for ($i = 0; $i < $deg;\
    \ $i++) {\n        $derivative[$i] = $xs[$i + 1] * ($i + 1);\n    }\n    return\
    \ $derivative;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $r = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $r[] = $i\
    \ * $xs[$i];\n    }\n    return $r;\n}\n\nfunction candidate(...$args) {\n   \
    \ return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $p = count($xs);\n    $ret = array();\n    for ($i = 1; $i < $p; $i++) {\n \
    \       $ret[] = $i * $xs[$i];\n    }\n    return $ret;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $i = 0;\n    $len = count($xs);\n    $result = array();\n    while ($i < $len\
    \ - 1) {\n        $result[] = $xs[$i + 1] * ($i + 1);\n        $i++;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 255
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    $n = count($xs);\n    if ($n == 0) {\n        return $ys;\n\
    \    }\n    $ys[] = $xs[1];\n    for ($i = 2; $i < $n; $i++) {\n        $ys[]\
    \ = $xs[$i] * $i;\n    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmp2lvwasm1.php on line 15\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp2lvwasm1.php:31\nStack\
    \ trace:\n#0 /tmp/tmp2lvwasm1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2lvwasm1.php\
    \ on line 31\n"
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$res\
    \ = array();\n\tfor ($i = 1; $i < count($xs); $i++) {\n\t\t$res[] = $i * $xs[$i];\n\
    \t}\n\treturn $res;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i\
    \ * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n  \
    \  return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$n\
    \ = count($xs);\n\t$dy = array();\n\tfor ($i = 1; $i < $n; $i++) {\n\t\t$dy[]\
    \ = $i * $xs[$i];\n\t}\n\treturn $dy;\n}\n\nfunction candidate(...$args) {\n \
    \   return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$n\
    \ = count($xs);\n\tif ($n < 2) {\n\t\treturn array();\n\t}\n\t$ys = array();\n\
    \tfor ($i = 1; $i < $n; $i++) {\n\t\t$ys[] = $i * $xs[$i];\n\t}\n\treturn $ys;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $result = array();\n    $degree = count($xs) - 1;\n    for ($i = 0; $i < $degree;\
    \ $i++) {\n        $result[] = ($i + 1) * $xs[$i + 1];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$n\
    \ = count($xs);\n\t$dxs = array();\n\tfor ($i = 1; $i < $n; $i++) {\n\t\t$dxs[]\
    \ = $i * $xs[$i];\n\t}\n\treturn $dxs;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$len\
    \ = count($xs);\n\t$out = array();\n\tfor ($i = 1; $i < $len; $i++) {\n\t\t$out[]\
    \ = $i * $xs[$i];\n\t}\n\treturn $out;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i\
    \ * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n  \
    \  return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $l = count($xs);\n    $result = array();\n    for ($i = 1; $i < $l; $i++) {\n\
    \        $result[] = $i * $xs[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    $n = count($xs);\n    for ($i = 1; $i < $n; $i++) {\n  \
    \      $ys[] = $i * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ds = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ds[] = $i\
    \ * $xs[$i];\n    }\n    return $ds;\n}\n\nfunction candidate(...$args) {\n  \
    \  return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ if (empty($xs)) {\n        return array();\n    }\n    $n = count($xs);\n  \
    \  $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $output = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $output[]\
    \ = $i * $xs[$i];\n    }\n    return $output;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $l = count($xs);\n    if ($l <= 1) {\n        return array();\n    }\n    $result\
    \ = array();\n    for ($i = 1; $i < $l; $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$ys\
    \ = array();\n\tfor ($i = 1; $i < count($xs); $i++) {\n\t\t$ys[] = $i * $xs[$i];\n\
    \t}\n\treturn $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$ans\
    \ = array();\n\t$n = count($xs);\n\tfor ($i = 1; $i < $n; $i++)\n\t\t$ans[] =\
    \ $i * $xs[$i];\n\treturn $ans;\n}\n\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $derivative = array();\n    if (count($xs) == 0) {\n        return $derivative;\n\
    \    }\n    for ($i = 1; $i < count($xs); $i++) {\n        $derivative[] = $i\
    \ * $xs[$i];\n    }\n    return $derivative;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$res\
    \ = array();\n\tfor ($i = 1; $i < count($xs); $i++) {\n\t\t$res[] = $i * $xs[$i];\n\
    \t}\n\treturn $res;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\tif\
    \ (count($xs) < 2) {\n\t\treturn array();\n\t}\n\t$ds = array();\n\tfor ($i =\
    \ 1; $i < count($xs); $i++) {\n\t\t$ds[] = $i * $xs[$i];\n\t}\n\treturn $ds;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $dxs = array();\n    $n = count($xs);\n    if ($n < 2) {\n        return $dxs;\n\
    \    }\n    $is = range(1, $n - 1);\n    foreach ($is as $i) {\n        $dxs[]\
    \ = $i * $xs[$i];\n    }\n    return $dxs;\n}\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ if (count($xs) < 2) {\n        return array();\n    }\n    $ys = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n  \
    \  }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ if (count($xs) == 0) {\n        return array();\n    }\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$len\
    \ = count($xs);\n\t$result = array();\n\tfor ($i = 1; $i < $len; $i++) {\n\t\t\
    $result[] = $i * $xs[$i];\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = [];\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ // The length of an array is the highest index plus one.\n    // If $xs is empty,\
    \ the length is zero.\n    $len = count($xs);\n    // The length of $ys will be\
    \ one less than the length of $xs,\n    // since the derivative has one less term.\n\
    \    $ys = array();\n    // For i from 1 to $len - 1, set $ys[i - 1] to $xs[i]\
    \ * i.\n    for ($i = 1; $i < $len; $i++) {\n        $ys[$i - 1] = $xs[$i] * $i;\n\
    \    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$result\
    \ = array();\n\t$n = count($xs);\n\tfor ($i = 1; $i < $n; $i++) {\n\t\t$result[]\
    \ = $i * $xs[$i];\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    $derivative = array();\n    for ($i = 1; $i < $n; $i++)\
    \ {\n        $derivative[] = $i * $xs[$i];\n    }\n    return $derivative;\n}\n\
    \nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 255
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ // TODO: Implement me\n    $degree = count($xs) - 1;\n    for ($i = 0; $i <\
    \ $degree; $i++) {\n        $xs[$i] = $xs[$i] * ($degree - $i);\n    }\n    unset($xs[$degree]);\n\
    \    return $xs;\n}\n\nvar_dump(derivative([1, 2, 3]));\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(2) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(2)\n}\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmppyykrso6.php:26\nStack trace:\n#0 /tmp/tmppyykrso6.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmppyykrso6.php on line 26\n"
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n  \
    \      $ys[] = $i * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $result = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $result[]\
    \ = $i * $xs[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $deriv = array();\n    $n = count($xs);\n    if ($n <= 1) {\n        return\
    \ $deriv;\n    }\n\n    for ($i = 1; $i < $n; $i++) {\n        $deriv[] = $i *\
    \ $xs[$i];\n    }\n    return $deriv;\n}\n\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 255
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    $derivative = array();\n    $prev = 0;\n    $curr = 0;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $prev = $curr;\n        $curr = $xs[$i];\n\
    \        $derivative[] = $i * $prev + $curr;\n    }\n    array_shift($derivative);\n\
    \    return $derivative;\n}\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphvdl5uix.php:27\n\
    Stack trace:\n#0 /tmp/tmphvdl5uix.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphvdl5uix.php\
    \ on line 27\n"
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $result = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $result[]\
    \ = $i * $xs[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$ret\
    \ = array();\n\t$n = count($xs);\n\tfor ($i = 1; $i < $n; $i++) {\n\t\t$ret[]\
    \ = $i * $xs[$i];\n\t}\n\treturn $ret;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$ys\
    \ = array();\n\t$i = 0;\n\tforeach ($xs as $x) {\n\t\tif ($i == 0) {\n\t\t\t$i++;\n\
    \t\t\tcontinue;\n\t\t}\n\t\t$ys[] = $i * $x;\n\t\t$i++;\n\t}\n\treturn $ys;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $result = array();\n    $deg = count($xs) - 1;\n    for ($i = 0; $i < $deg;\
    \ $i++) {\n        $result[] = ($i + 1) * $xs[$i + 1];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    $dx = array();\n    for ($i = 1; $i < $n; $i++) {\n  \
    \      $dx[] = $i * $xs[$i];\n    }\n    return $dx;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 255
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $k = count($xs);\n    $n = $k - 1;\n    $ys = array();\n    for ($i = 0; $i\
    \ < $k; $i++) {\n        $y = $xs[$i] * $n;\n        $n--;\n        if ($y !=\
    \ 0) {\n            $ys[] = $y;\n        }\n    }\n    return $ys;\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpim1o9_ih.php:28\n\
    Stack trace:\n#0 /tmp/tmpim1o9_ih.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpim1o9_ih.php\
    \ on line 28\n"
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = [];\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\nassert(derivative([1, 2, 3]) == [2, 6]);\nassert(derivative([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]);\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$n\
    \ = count($xs);\n\t$new_xs = array();\n\tfor ($i = 1; $i < $n; $i++) {\n\t\t$new_xs[]\
    \ = $i * $xs[$i];\n\t}\n\treturn $new_xs;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 255
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    if ($n == 1) return array(0);\n    $ys = array();\n  \
    \  for ($i = 1; $i < $n; $i++)\n        $ys[] = $i * $xs[$i];\n    return $ys;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ah3g5oo.php:27\n\
    Stack trace:\n#0 /tmp/tmp7ah3g5oo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp7ah3g5oo.php\
    \ on line 27\n"
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $len = count($xs);\n    $derivative = array();\n    for ($i = 1; $i < $len;\
    \ $i++) {\n        $derivative[] = $i * $xs[$i];\n    }\n    return $derivative;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $res = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $res[] =\
    \ $i * $xs[$i];\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    if ($n < 2) {\n        return array();\n    }\n    $result\
    \ = array();\n    for ($i = 1; $i < $n; $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ // Start with an empty output array.\n    $ys = array();\n    // Loop over all\
    \ elements of xs.\n    for ($i = 1; $i < count($xs); $i++) {\n        // When\
    \ i is 1, the coefficient of the derivative is i.\n        // When i is 2, the\
    \ coefficient of the derivative is 2i.\n        // And so on.\n        $ys[] =\
    \ $i * $xs[$i];\n    }\n    return $ys;\n}\nfunction candidate(...$args) {\n \
    \   return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    $n = count($xs);\n    for ($i = 1; $i < $n; $i++) {\n  \
    \      $ys[] = $i * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $res = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $res[] =\
    \ $i * $xs[$i];\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    $n = count($xs);\n    for ($i = 1; $i < $n; $i++) {\n  \
    \      $ys[] = $i * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    if ($n < 2) return array();\n    $res = array();\n   \
    \ for ($i = 1; $i < $n; $i++) {\n        $res[] = $i * $xs[$i];\n    }\n    return\
    \ $res;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i\
    \ * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n  \
    \  return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 255
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    $n = count($xs);\n    if ($n == 0) {\n        return $ys;\n\
    \    }\n    $ys[] = 0;\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i\
    \ * $xs[$i];\n    }\n    return $ys;\n}\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp45_1b6ti.php:26\n\
    Stack trace:\n#0 /tmp/tmp45_1b6ti.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp45_1b6ti.php\
    \ on line 26\n"
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    $result = array();\n    for ($i = 1; $i < $n; $i++) {\n\
    \        $result[] = $i * $xs[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    $ys = array();\n    for ($i = 1; $i < $n; $i++) {\n  \
    \      $ys[] = $i * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    $new_xs = array();\n    for ($i = 1; $i < $n; $i++) {\n\
    \        $new_xs[] = $i * $xs[$i];\n    }\n    return $new_xs;\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $len = count($xs);\n    $out = array();\n    for ($i = 1; $i < $len; $i++) {\n\
    \        $out[] = $i * $xs[$i];\n    }\n    return $out;\n}\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $result = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $result[]\
    \ = $i * $xs[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$res\
    \ = array();\n\tfor ($i = 1; $i < count($xs); $i++) {\n\t\t$res[] = $i * $xs[$i];\n\
    \t}\n\treturn $res;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $size = count($xs);\n    $ret = array();\n    for ($i = 1; $i < $size; $i++)\
    \ {\n        $ret[] = $i * $xs[$i];\n    }\n    return $ret;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $len = count($xs);\n    if ($len < 2) return [];\n    $ys = [];\n    for ($i\
    \ = 1; $i < $len; $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return $ys;\n\
    }\n$xs = [3, 1, 2, 4, 5];\nvar_dump(derivative($xs));\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "array(4) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(4)\n  [2]=>\n  int(12)\n\
    \  [3]=>\n  int(20)\n}\n"
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ if (count($xs) <= 1) {\n        return [];\n    }\n    $n = count($xs);\n  \
    \  $ys = [];\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$new\
    \ = array();\n\tfor ($i = 1; $i < count($xs); $i++) {\n\t\t$new[] = $i * $xs[$i];\n\
    \t}\n\treturn $new;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$result\
    \ = array();\n\t$len = count($xs);\n\tfor ($i = 1; $i < $len; $i++) {\n\t\t$result[]\
    \ = $i * $xs[$i];\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$count\
    \ = count($xs);\n\t$derivative = array();\n\tfor ($i = 1; $i < $count; $i++) {\n\
    \t\t$derivative[] = $i * $xs[$i];\n\t}\n\treturn $derivative;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$new_xs\
    \ = array();\n\t$order = count($xs);\n\tfor ($i = 1; $i < $order; $i++) {\n\t\t\
    $new_xs[] = $i * $xs[$i];\n\t}\n\treturn $new_xs;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $result = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $result[]\
    \ = $i * $xs[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 255
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    if ($n <= 1) {\n        return array();\n    }\n\n   \
    \ for ($i = 0; $i < $n - 1; $i++) {\n        $xs[$i] = $xs[$i] * ($n - $i - 1);\n\
    \    }\n    array_pop($xs);\n    return $xs;\n}\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplo05fznu.php:26\n\
    Stack trace:\n#0 /tmp/tmplo05fznu.php(33): test()\n#1 {main}\n  thrown in /tmp/tmplo05fznu.php\
    \ on line 26\n"
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ if (count($xs) < 2) return array();\n    $n = count($xs);\n    $res = array();\n\
    \    for ($i = 1; $i < $n; $i++) {\n        $res[] = $i * $xs[$i];\n    }\n  \
    \  return $res;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ for ($i = 0; $i < count($xs); $i++) {\n        $xs[$i] *= $i;\n    }\n    array_shift($xs);\n\
    \    return $xs;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = [];\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$ys\
    \ = [];\n\tfor ($i = 1; $i < count($xs); $i++) {\n\t\t$ys[] = $i * $xs[$i];\n\t\
    }\n\treturn $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$r\
    \ = array();\n\tfor ($i = 1; $i < count($xs); $i++) {\n\t\t$r[] = $i * $xs[$i];\n\
    \t}\n\treturn $r;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i\
    \ * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n  \
    \  return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$derivative\
    \ = array();\n\tfor ($i = 1; $i < count($xs); $i++) {\n\t\t$derivative[] = $i\
    \ * $xs[$i];\n\t}\n\treturn $derivative;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$result\
    \ = array();\n\tfor ($i = 1; $i < count($xs); $i++) {\n\t\t$result[] = $i * $xs[$i];\n\
    \t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ret = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ret[] =\
    \ $i * $xs[$i];\n    }\n    return $ret;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $res = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $res[] =\
    \ $i * $xs[$i];\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    $result = array();\n    for ($i = 1; $i < $n; $i++) {\n\
    \        $result[] = $i * $xs[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    $new_xs = array();\n    for ($i = 1; $i < $n; $i++) {\n\
    \        $new_xs[] = $i * $xs[$i];\n    }\n    return $new_xs;\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    $coeffs = array();\n    for ($i = 1; $i < $n; $i++) {\n\
    \        $coeffs[] = $i * $xs[$i];\n    }\n    return $coeffs;\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$ys\
    \ = [];\n\tfor ($i = 1; $i < count($xs); $i++) {\n\t\t$ys[] = $i * $xs[$i];\n\t\
    }\n\treturn $ys;\n}\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ if (count($xs) == 0) {\n        return array();\n    }\n    $result = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    $ret = array();\n    for ($i = 1; $i < $n; $i++) {\n \
    \       $ret[] = $i * $xs[$i];\n    }\n    return $ret;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 255
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $res = array();\n    $i = 0;\n    $n = count($xs);\n    while ($i < $n - 1)\
    \ {\n        $res[] = $xs[$i] * ($n - $i - 1);\n        $i++;\n    }\n    return\
    \ $res;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2uqp062v.php:25\n\
    Stack trace:\n#0 /tmp/tmp2uqp062v.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp2uqp062v.php\
    \ on line 25\n"
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    if ($n <= 1) {\n        return array();\n    }\n    $ys\
    \ = array();\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $len = count($xs);\n    $ys = array();\n    for ($i = 1; $i < $len; $i++) {\n\
    \        $ys[] = $i * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $newPolynomial = array();\n    $coefficientSize = count($xs);\n    for ($x =\
    \ 1; $x < $coefficientSize; $x++) {\n        $newPolynomial[] = $xs[$x] * $x;\n\
    \    }\n    return $newPolynomial;\n}\n\n$polynomial = array(3, 1, 2, 4, 5);\n\
    $derivative = derivative($polynomial);\nprint_r($derivative);\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 12\n    [3] => 20\n)\n"
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $result = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $result[]\
    \ = $i * $xs[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = [];\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 255
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\t$xs\
    \ = array_reverse($xs);\n\t$len = count($xs);\n\t$res = array();\n\tfor ($i =\
    \ 1; $i < $len; $i++) {\n\t\t$res[] = $xs[$i] * $i;\n\t}\n\treturn array_reverse($res);\n\
    }\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpceozp1qx.php:23\n\
    Stack trace:\n#0 /tmp/tmpceozp1qx.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpceozp1qx.php\
    \ on line 23\n"
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $result = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $result[]\
    \ = $i * $xs[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i\
    \ * $xs[$i];\n    }\n    return $ys;\n}\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i\
    \ * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n  \
    \  return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n\tif(count($xs)\
    \ < 2) return array();\n\t$result = array();\n\tfor($i = 1; $i < count($xs); $i++)\n\
    \t\t$result[] = $i * $xs[$i];\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ // calculate the derivative of a polynomial\n    $dx = [];\n    $i = 0;\n  \
    \  while ($i < count($xs) - 1) {\n        $dx[] = $xs[$i + 1] * ($i + 1);\n  \
    \      $i++;\n    }\n    return $dx;\n}\n\nfunction candidate(...$args) {\n  \
    \  return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $n = count($xs);\n    $y = array();\n    for ($i = 1; $i < $n; $i++) {\n   \
    \     $y[] = $i * $xs[$i];\n    }\n    return $y;\n}\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i\
    \ * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n  \
    \  return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $result = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $result[]\
    \ = $i * $xs[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ if (count($xs) === 0) {\n        return array();\n    }\n    $ys = array();\n\
    \    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n  \
    \  }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $c = count($xs);\n    if ($c < 2) {\n        return array();\n    }\n    $ys\
    \ = array();\n    for ($i = 1; $i < $c; $i++) {\n        $ys[] = $i * $xs[$i];\n\
    \    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $result = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $result[]\
    \ = $i * $xs[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $result = array();\n    $n = count($xs);\n    for ($i = 1; $i < $n; $i++) {\n\
    \        $result[] = $i * $xs[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $xs_len = count($xs);\n    $new = array();\n    for ($i = 1; $i < $xs_len; $i++)\
    \ {\n        $new[] = $i * $xs[$i];\n    }\n    return $new;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $result = array();\n    $size = count($xs);\n    for ($i = 1; $i < $size; $i++)\
    \ {\n        $result[] = $i * $xs[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $r = array();\n    $n = count($xs);\n    for ($i = 1; $i < $n; $i++) {\n   \
    \     $r[] = $i * $xs[$i];\n    }\n    return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $deriv = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $deriv[]\
    \ = $i * $xs[$i];\n    }\n    return $deriv;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i\
    \ * $xs[$i];\n    }\n    return $ys;\n}\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $dxs = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $dxs[] =\
    \ $i * $xs[$i];\n    }\n    return $dxs;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ret = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ret[] =\
    \ $i * $xs[$i];\n    }\n    return $ret;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ys = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i\
    \ * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n  \
    \  return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823601
- exit_code: 0
  program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative(array(3, 1, 2, 4, 5))\n// array(1, 4, 12, 20)\n// >>>\
    \ derivative(array(1, 2, 3))\n// array(2, 6)\nfunction derivative($xs) {\n   \
    \ $ret = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ret[] =\
    \ $i * $xs[$i];\n    }\n    return $ret;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978747
